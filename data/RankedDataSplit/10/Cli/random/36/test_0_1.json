{
    "bug_id": 36,
    "test_id": 0,
    "test_name": "org.apache.commons.cli.bug.BugCLI266Test.testOptionComparatorInsertedOrder",
    "test_body": "public void testOptionComparatorInsertedOrder() throws ParseException {\nCollection<Option> options = getOptions().getOptions();\nint i = 0;\nfor(Option o: options) {\nAssert.assertEquals(o.getOpt(), insertedOrder.get(i));\ni++;",
    "stack_trace": "junit.framework.AssertionFailedError: expected:<[p]> but was:<[x]>\nat org.junit.Assert.assertEquals(Assert.java:115)\nat org.junit.Assert.assertEquals(Assert.java:144)\nat org.apache.commons.cli.bug.BugCLI266Test.testOptionComparatorInsertedOrder(BugCLI266Test.java:39)",
    "covered_methods": [
        {
            "method_signature": "org.apache.commons.cli.Option$Builder:longOpt(Ljava/lang/String;)Lorg/apache/commons/cli/Option$Builder;",
            "method_body": "public Builder longOpt(final String longOpt)\nthis.longOpt = longOpt;\nreturn this;\n}",
            "method_id": 10
        },
        {
            "method_signature": "org.apache.commons.cli.Option:<init>(Lorg/apache/commons/cli/Option$Builder;)V",
            "method_body": "private Option(final Builder builder)\n{\nthis.argName = builder.argName;\nthis.description = builder.description;\nthis.longOpt = builder.longOpt;\nthis.numberOfArgs = builder.numberOfArgs;\nthis.opt = builder.opt;\nthis.optionalArg = builder.optionalArg;\nthis.required = builder.required;\nthis.type = builder.type;\nthis.valuesep = builder.valuesep;\n}",
            "method_id": 11
        },
        {
            "method_signature": "org.apache.commons.cli.OptionGroup:getOptions()Ljava/util/Collection;",
            "method_body": "public Collection<Option> getOptions()\nreturn optionMap.values();\n}",
            "method_id": 12
        },
        {
            "method_signature": "org.apache.commons.cli.Option$Builder:hasArg()Lorg/apache/commons/cli/Option$Builder;",
            "method_body": "public Builder hasArg()\nreturn hasArg(true);\n}",
            "method_id": 13
        },
        {
            "method_signature": "org.apache.commons.cli.Option$Builder:desc(Ljava/lang/String;)Lorg/apache/commons/cli/Option$Builder;",
            "method_body": "public Builder desc(final String description)\nthis.description = description;\nreturn this;\n}",
            "method_id": 14
        },
        {
            "method_signature": "org.apache.commons.cli.Option:isRequired()Z",
            "method_body": "public boolean isRequired()\nreturn required;\n}",
            "method_id": 15
        },
        {
            "method_signature": "org.apache.commons.cli.Option:setRequired(Z)V",
            "method_body": "public void setRequired(boolean required)\nthis.required = required;\n}",
            "method_id": 16
        },
        {
            "method_signature": "org.apache.commons.cli.Option:<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V",
            "method_body": "public static final int UNINITIALIZED = -1;\nprivate int numberOfArgs = UNINITIALIZED;\nprivate Class<?> type = String.class;\nprivate List<String> values = new ArrayList<String>();\n{\nthis.argName = builder.argName;\nthis.description = builder.description;\nthis.longOpt = builder.longOpt;\nthis.numberOfArgs = builder.numberOfArgs;\nthis.opt = builder.opt;\nthis.optionalArg = builder.optionalArg;\nthis.required = builder.required;\nthis.type = builder.type;\nthis.valuesep = builder.valuesep;\n}",
            "method_id": 17
        },
        {
            "method_signature": "org.apache.commons.cli.OptionValidator:validateOption(Ljava/lang/String;)V",
            "method_body": "static void validateOption(String opt) throws IllegalArgumentException\nif (opt == null)\nif (opt.length() == 1)\nchar ch = opt.charAt(0);\nif (!isValidOpt(ch))\n}\n}",
            "method_id": 18
        },
        {
            "method_signature": "org.apache.commons.cli.Option:getOpt()Ljava/lang/String;",
            "method_body": "public String getOpt()\nreturn opt;\n}",
            "method_id": 19
        }
    ]
}