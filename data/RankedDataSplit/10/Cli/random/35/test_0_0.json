{
    "bug_id": 35,
    "test_id": 0,
    "test_name": "org.apache.commons.cli.bug.BugCLI252Test.testExactOptionNameMatch",
    "test_body": "public void testExactOptionNameMatch() throws ParseException {\nnew DefaultParser().parse(getOptions(), new String[]{\"--prefix\"});\n}\n",
    "stack_trace": "org.apache.commons.cli.AmbiguousOptionException: Ambiguous option: '--prefix'  (could be: 'prefix', 'prefixplusplus')\nat org.apache.commons.cli.DefaultParser.handleLongOptionWithoutEqual(DefaultParser.java:398)\nat org.apache.commons.cli.DefaultParser.handleLongOption(DefaultParser.java:371)\nat org.apache.commons.cli.DefaultParser.handleToken(DefaultParser.java:239)\nat org.apache.commons.cli.DefaultParser.parse(DefaultParser.java:120)\nat org.apache.commons.cli.DefaultParser.parse(DefaultParser.java:76)\nat org.apache.commons.cli.DefaultParser.parse(DefaultParser.java:60)\nat org.apache.commons.cli.bug.BugCLI252Test.testExactOptionNameMatch(BugCLI252Test.java:10)",
    "covered_methods": [
        {
            "method_signature": "org.apache.commons.cli.DefaultParser:handleLongOptionWithoutEqual(Ljava/lang/String;)V",
            "method_body": "private void handleLongOptionWithoutEqual(String token) throws ParseException\nList<String> matchingOpts = options.getMatchingOptions(token);\nif (matchingOpts.isEmpty())\nelse if (matchingOpts.size() > 1)\nthrow new AmbiguousOptionException(token, matchingOpts);\n}",
            "method_id": 0
        },
        {
            "method_signature": "org.apache.commons.cli.AmbiguousOptionException:<init>(Ljava/lang/String;Ljava/util/Collection;)V",
            "method_body": "public AmbiguousOptionException(String option, Collection<String> matchingOptions)\nsuper(createMessage(option, matchingOptions), option);\nthis.matchingOptions = matchingOptions;\n}",
            "method_id": 1
        },
        {
            "method_signature": "org.apache.commons.cli.CommandLine:<init>()V",
            "method_body": "private static final long serialVersionUID = 1L;\nprivate final List<String> args = new LinkedList<String>();\nprivate final List<Option> options = new ArrayList<Option>();\n{\n}",
            "method_id": 2
        },
        {
            "method_signature": "org.apache.commons.cli.Option:builder()Lorg/apache/commons/cli/Option$Builder;",
            "method_body": "public static Builder builder()\nreturn builder(null);\n}",
            "method_id": 3
        },
        {
            "method_signature": "org.apache.commons.cli.Option:<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)V",
            "method_body": "public Option(String opt, String longOpt, boolean hasArg, String description)\n{\nOptionValidator.validateOption(opt);\nthis.opt = opt;\nthis.longOpt = longOpt;\nif (hasArg)\nthis.numberOfArgs = 1;\nthis.description = description;\n}",
            "method_id": 4
        },
        {
            "method_signature": "org.apache.commons.cli.OptionValidator:isValidOpt(C)Z",
            "method_body": "private static boolean isValidOpt(char c)\nreturn isValidChar(c) || c == '?' || c == '@';\n}",
            "method_id": 5
        },
        {
            "method_signature": "org.apache.commons.cli.Util:stripLeadingHyphens(Ljava/lang/String;)Ljava/lang/String;",
            "method_body": "static String stripLeadingHyphens(String str)\nif (str == null)\nif (str.startsWith(\"--\"))\nreturn str.substring(2, str.length());\n}",
            "method_id": 6
        },
        {
            "method_signature": "org.apache.commons.cli.Option:<init>(Lorg/apache/commons/cli/Option$Builder;)V",
            "method_body": "private Option(final Builder builder)\n{\nthis.argName = builder.argName;\nthis.description = builder.description;\nthis.longOpt = builder.longOpt;\nthis.numberOfArgs = builder.numberOfArgs;\nthis.opt = builder.opt;\nthis.optionalArg = builder.optionalArg;\nthis.required = builder.required;\nthis.type = builder.type;\nthis.valuesep = builder.valuesep;\n}",
            "method_id": 7
        },
        {
            "method_signature": "org.apache.commons.cli.Options:getOptionGroups()Ljava/util/Collection;",
            "method_body": "Collection<OptionGroup> getOptionGroups()\nreturn new HashSet<OptionGroup>(optionGroups.values());\n}",
            "method_id": 8
        },
        {
            "method_signature": "org.apache.commons.cli.OptionValidator:isValidChar(C)Z",
            "method_body": "private static boolean isValidChar(char c)\nreturn Character.isJavaIdentifierPart(c);\n}",
            "method_id": 9
        }
    ]
}