{
    "bug_id": 11,
    "test_id": 0,
    "test_name": "org.apache.commons.cli.HelpFormatterTest.testPrintOptionWithEmptyArgNameUsage",
    "test_body": "public void testPrintOptionWithEmptyArgNameUsage() {\nOption option = new Option(\"f\", true, null);\noption.setArgName(\"\");\noption.setRequired(true);\n265: Options options = new Options();\noptions.addOption(option);\n268: StringWriter out = new StringWriter();\n270: HelpFormatter formatter = new HelpFormatter();\nformatter.printUsage(new PrintWriter(out), 80, \"app\", options);\n273: assertEquals(\"usage: app -f\" + EOL, out.toString());\n}\n",
    "stack_trace": "junit.framework.ComparisonFailure: expected:<usage: app -f[]\n> but was:<usage: app -f[ <>]\n>\nat junit.framework.Assert.assertEquals(Assert.java:100)\nat junit.framework.Assert.assertEquals(Assert.java:107)\nat junit.framework.TestCase.assertEquals(TestCase.java:269)\nat org.apache.commons.cli.HelpFormatterTest.testPrintOptionWithEmptyArgNameUsage(HelpFormatterTest.java:273)",
    "covered_methods": [
        {
            "method_signature": "org.apache.commons.cli.OptionValidator:validateOption(Ljava/lang/String;)V",
            "method_body": "static void validateOption(String opt)\nif (opt == null)\nelse if (opt.length() == 1)\nchar ch = opt.charAt(0);\nif (!isValidOpt(ch))\n}\n}",
            "method_id": 10
        },
        {
            "method_signature": "org.apache.commons.cli.Option:<init>(Ljava/lang/String;ZLjava/lang/String;)V",
            "method_body": "public Option(String opt, boolean hasArg, String description)\nthis(opt, null, hasArg, description);\n}",
            "method_id": 11
        },
        {
            "method_signature": "org.apache.commons.cli.Option:getOpt()Ljava/lang/String;",
            "method_body": "public String getOpt()\nreturn this.opt;\n}",
            "method_id": 12
        },
        {
            "method_signature": "org.apache.commons.cli.HelpFormatter:rtrim(Ljava/lang/String;)Ljava/lang/String;",
            "method_body": "protected String rtrim(String s)\nif ((s == null) || (s.length() == 0))\nint pos = s.length();\nwhile ((pos > 0) && Character.isWhitespace(s.charAt(pos - 1)))\nreturn s.substring(0, pos);\n}",
            "method_id": 13
        },
        {
            "method_signature": "org.apache.commons.cli.Options:getOptionGroup(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/OptionGroup;",
            "method_body": "public OptionGroup getOptionGroup(Option opt)\nreturn (OptionGroup) optionGroups.get(opt.getKey());\n}",
            "method_id": 14
        },
        {
            "method_signature": "org.apache.commons.cli.Option:getArgName()Ljava/lang/String;",
            "method_body": "public String getArgName()\nreturn this.argName;\n}",
            "method_id": 15
        },
        {
            "method_signature": "org.apache.commons.cli.HelpFormatter:<init>()V",
            "method_body": "public static final int DEFAULT_WIDTH = 74;\npublic int defaultWidth = DEFAULT_WIDTH;\npublic int defaultLeftPad = DEFAULT_LEFT_PAD;\npublic int defaultDescPad = DEFAULT_DESC_PAD;\npublic String defaultSyntaxPrefix = DEFAULT_SYNTAX_PREFIX;\npublic String defaultNewLine = System.getProperty(\"line.separator\");\npublic String defaultOptPrefix = DEFAULT_OPT_PREFIX;\npublic String defaultLongOptPrefix = DEFAULT_LONG_OPT_PREFIX;\npublic String defaultArgName = DEFAULT_ARG_NAME;\nprotected Comparator optionComparator = new OptionComparator();\n}",
            "method_id": 16
        },
        {
            "method_signature": "org.apache.commons.cli.Option:hasArg()Z",
            "method_body": "public boolean hasArg()\nreturn (this.numberOfArgs > 0) || (numberOfArgs == UNLIMITED_VALUES);\n}",
            "method_id": 17
        },
        {
            "method_signature": "org.apache.commons.cli.Option:hasLongOpt()Z",
            "method_body": "public boolean hasLongOpt()\nreturn (this.longOpt != null);\n}",
            "method_id": 18
        },
        {
            "method_signature": "org.apache.commons.cli.HelpFormatter:getOptionComparator()Ljava/util/Comparator;",
            "method_body": "public Comparator getOptionComparator()\nreturn this.optionComparator;\n}",
            "method_id": 19
        }
    ]
}