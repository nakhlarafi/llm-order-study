{
    "bug_id": 39,
    "test_id": 1,
    "test_name": "org.apache.commons.cli.PatternOptionBuilderTest.testExistingFilePattern",
    "test_body": "public void testExistingFilePattern() throws Exception\n{\nfinal Options options = PatternOptionBuilder.parsePattern(\"g<\");\nfinal CommandLineParser parser = new PosixParser();\nfinal CommandLine line = parser.parse(options, new String[] { \"-g\", \"src/test/resources/existing-readable.file\" });\n168: final Object parsedReadableFileStream = line.getOptionObject(\"g\");\n170: assertNotNull(\"option g not parsed\", parsedReadableFileStream);\nassertTrue(\"option g not FileInputStream\", parsedReadableFileStream instanceof FileInputStream);\n}\n",
    "stack_trace": "junit.framework.AssertionFailedError: option g not FileInputStream\nat org.junit.Assert.fail(Assert.java:88)\nat org.junit.Assert.assertTrue(Assert.java:41)\nat org.apache.commons.cli.PatternOptionBuilderTest.testExistingFilePattern(PatternOptionBuilderTest.java:171)",
    "covered_methods": [
        {
            "method_signature": "org.apache.commons.cli.Option:equals(Ljava/lang/Object;)Z",
            "method_body": "public boolean equals(final Object o)\nif (this == o)\nreturn true;\n}",
            "method_id": 50
        },
        {
            "method_signature": "org.apache.commons.cli.CommandLine:getParsedOptionValue(Ljava/lang/String;)Ljava/lang/Object;",
            "method_body": "public Object getParsedOptionValue(final String opt) throws ParseException\nreturn getParsedOptionValue(resolveOption(opt));\n}",
            "method_id": 51
        },
        {
            "method_signature": "org.apache.commons.cli.CommandLine:getOptionValue(Lorg/apache/commons/cli/Option;)Ljava/lang/String;",
            "method_body": "public String getOptionValue(final Option option)\nif (option == null)\nfinal String[] values = getOptionValues(option);\nreturn (values == null) ? null : values[0];\n}",
            "method_id": 52
        },
        {
            "method_signature": "org.apache.commons.cli.PosixParser:flatten(Lorg/apache/commons/cli/Options;[Ljava/lang/String;Z)[Ljava/lang/String;",
            "method_body": "protected String[] flatten(final Options options, final String[] arguments, final boolean stopAtNonOption) throws ParseException\ninit();\nthis.options = options;\nfinal Iterator<String> iter = Arrays.asList(arguments).iterator();\nwhile (iter.hasNext())\nfinal String token = iter.next();\nif (\"-\".equals(token) || \"--\".equals(token))\nelse if (token.startsWith(\"--\"))\nelse if (token.startsWith(\"-\"))\nif (token.length() == 2 || options.hasOption(token))\nprocessOptionToken(token, stopAtNonOption);\nprocessNonOptionToken(token, stopAtNonOption);\ngobble(iter);\n}\nreturn tokens.toArray(new String[tokens.size()]);\n}",
            "method_id": 53
        },
        {
            "method_signature": "org.apache.commons.cli.CommandLine:<init>()V",
            "method_body": "protected CommandLine()\n{\n}",
            "method_id": 54
        },
        {
            "method_signature": "org.apache.commons.cli.Parser:processOption(Ljava/lang/String;Ljava/util/ListIterator;)V",
            "method_body": "protected void processOption(final String arg, final ListIterator<String> iter) throws ParseException\nfinal boolean hasOption = getOptions().hasOption(arg);\nif (!hasOption)\nfinal Option opt = (Option) getOptions().getOption(arg).clone();\nupdateRequiredOptions(opt);\nif (opt.hasArg())\nprocessArgs(opt, iter);\ncmd.addOption(opt);\n}",
            "method_id": 55
        },
        {
            "method_signature": "org.apache.commons.cli.Option:hasLongOpt()Z",
            "method_body": "public boolean hasLongOpt()\nreturn longOpt != null;\n}",
            "method_id": 56
        },
        {
            "method_signature": "org.apache.commons.cli.Options:getRequiredOptions()Ljava/util/List;",
            "method_body": "public List getRequiredOptions()\nreturn Collections.unmodifiableList(requiredOpts);\n}",
            "method_id": 57
        },
        {
            "method_signature": "org.apache.commons.cli.Options:getOptionGroups()Ljava/util/Collection;",
            "method_body": "Collection<OptionGroup> getOptionGroups()\nreturn new HashSet<OptionGroup>(optionGroups.values());\n}",
            "method_id": 58
        },
        {
            "method_signature": "org.apache.commons.cli.Option:getOpt()Ljava/lang/String;",
            "method_body": "public String getOpt()\nreturn opt;\n}",
            "method_id": 59
        }
    ]
}