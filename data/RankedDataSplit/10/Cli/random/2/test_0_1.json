{
    "bug_id": 2,
    "test_id": 0,
    "test_name": "org.apache.commons.cli.bug.BugCLI51Test.test",
    "test_body": "public void test() throws Exception\n{\nOptions options = buildCommandLineOptions();\nCommandLineParser parser = new PosixParser();\nString[] args = new String[] {\"-t\", \"-something\" };\nCommandLine commandLine;\ncommandLine = parser.parse( options, args );\nassertEquals(\"-something\", commandLine.getOptionValue( 't'));",
    "stack_trace": "org.apache.commons.cli.UnrecognizedOptionException: Unrecognized option: -o\nat org.apache.commons.cli.Parser.processOption(Parser.java:368)\nat org.apache.commons.cli.Parser.parse(Parser.java:185)\nat org.apache.commons.cli.Parser.parse(Parser.java:70)\nat org.apache.commons.cli.bug.BugCLI51Test.test(BugCLI51Test.java:40)",
    "covered_methods": [
        {
            "method_signature": "org.apache.commons.cli.UnrecognizedOptionException:<init>(Ljava/lang/String;)V",
            "method_body": "public UnrecognizedOptionException(String message)\nsuper(message);\n}",
            "method_id": 10
        },
        {
            "method_signature": "org.apache.commons.cli.Option:addValue(Ljava/lang/String;)V",
            "method_body": "void addValue(String value)\nswitch (numberOfArgs)\nprocessValue(value);\n}",
            "method_id": 11
        },
        {
            "method_signature": "org.apache.commons.cli.PosixParser:init()V",
            "method_body": "private void init()\neatTheRest = false;\ntokens.clear();\ncurrentOption = null;\n}",
            "method_id": 12
        },
        {
            "method_signature": "org.apache.commons.cli.Option:add(Ljava/lang/String;)V",
            "method_body": "private void add(String value)\nif ((numberOfArgs > 0) && (values.size() > (numberOfArgs - 1)))\nthrow new RuntimeException(\"Cannot add value, list full.\");\nthis.values.add(value);\n}",
            "method_id": 13
        },
        {
            "method_signature": "org.apache.commons.cli.Option:setArgName(Ljava/lang/String;)V",
            "method_body": "public void setArgName(String argName)\nthis.argName = argName;\n}",
            "method_id": 14
        },
        {
            "method_signature": "org.apache.commons.cli.OptionBuilder:<init>()V",
            "method_body": "private OptionBuilder()\n{\n}",
            "method_id": 15
        },
        {
            "method_signature": "org.apache.commons.cli.Options:<init>()V",
            "method_body": "public Options()\n{\n}",
            "method_id": 16
        },
        {
            "method_signature": "org.apache.commons.cli.Option:hasNoValues()Z",
            "method_body": "private boolean hasNoValues()\nreturn this.values.size() == 0;\n}",
            "method_id": 17
        },
        {
            "method_signature": "org.apache.commons.cli.OptionBuilder:hasArg()Lorg/apache/commons/cli/OptionBuilder;",
            "method_body": "public static OptionBuilder hasArg()\nOptionBuilder.numberOfArgs = 1;\nreturn instance;\n}",
            "method_id": 18
        },
        {
            "method_signature": "org.apache.commons.cli.Option:setValueSeparator(C)V",
            "method_body": "public void setValueSeparator(char sep)\nthis.valuesep = sep;\n}",
            "method_id": 19
        }
    ]
}