{
    "bug_id": 16,
    "test_id": 2,
    "test_name": "org.apache.commons.cli2.commandline.WriteableCommandLineImplTest.testGetOptions_Order",
    "test_body": null,
    "stack_trace": "junit.framework.AssertionFailedError: expected same:<[--help (-?,-h)|login <username>] [<target1> [<target2> ...]]> was not:<[--help (-?,-h)]>\nat junit.framework.Assert.fail(Assert.java:57)\nat junit.framework.Assert.failNotSame(Assert.java:325)\nat junit.framework.Assert.assertSame(Assert.java:288)\nat junit.framework.Assert.assertSame(Assert.java:296)\nat junit.framework.TestCase.assertSame(TestCase.java:465)\nat org.apache.commons.cli2.CommandLineTestCase.testGetOptions_Order(CommandLineTestCase.java:436)",
    "covered_methods": [
        {
            "method_signature": "org.apache.commons.cli2.util.HelpFormatter:<init>()V",
            "method_body": "public HelpFormatter() {\nthis(DEFAULT_GUTTER_LEFT, DEFAULT_GUTTER_CENTER, DEFAULT_GUTTER_RIGHT, DEFAULT_FULL_WIDTH);\n}",
            "method_id": 0
        },
        {
            "method_signature": "org.apache.commons.cli2.option.ArgumentImpl:defaultValues(Lorg/apache/commons/cli2/WriteableCommandLine;Lorg/apache/commons/cli2/Option;)V",
            "method_body": "public void defaultValues(final WriteableCommandLine commandLine,\ncommandLine.setDefaultValues(option, defaultValues);\n}",
            "method_id": 1
        },
        {
            "method_signature": "org.apache.commons.cli2.option.PropertyOption:getPreferredName()Ljava/lang/String;",
            "method_body": "public String getPreferredName() {\nreturn optionString;\n}",
            "method_id": 2
        },
        {
            "method_signature": "org.apache.commons.cli2.util.HelpFormatter:<clinit>()V",
            "method_body": "public static final int DEFAULT_FULL_WIDTH = 80;\nfinal Set fullUsage = new HashSet(DisplaySetting.ALL);\nfullUsage.remove(DisplaySetting.DISPLAY_ALIASES);\nfullUsage.remove(DisplaySetting.DISPLAY_GROUP_NAME);\nDEFAULT_FULL_USAGE_SETTINGS = Collections.unmodifiableSet(fullUsage);\nfinal Set lineUsage = new HashSet();\nlineUsage.add(DisplaySetting.DISPLAY_ALIASES);\nlineUsage.add(DisplaySetting.DISPLAY_GROUP_NAME);\nlineUsage.add(DisplaySetting.DISPLAY_PARENT_ARGUMENT);\nDEFAULT_LINE_USAGE_SETTINGS = Collections.unmodifiableSet(lineUsage);\nfinal Set displayUsage = new HashSet(DisplaySetting.ALL);\ndisplayUsage.remove(DisplaySetting.DISPLAY_PARENT_ARGUMENT);\nDEFAULT_DISPLAY_USAGE_SETTINGS = Collections.unmodifiableSet(displayUsage);\n}",
            "method_id": 3
        },
        {
            "method_signature": "org.apache.commons.cli2.option.ParentImpl:appendUsage(Ljava/lang/StringBuffer;Ljava/util/Set;Ljava/util/Comparator;)V",
            "method_body": "public void appendUsage(final StringBuffer buffer,\nfinal boolean displayArgument =\nfinal boolean displayChildren =\nif (displayArgument) {\nbuffer.append(' ');\nargument.appendUsage(buffer, helpSettings, comp);\nif (displayChildren) {\n}",
            "method_id": 4
        },
        {
            "method_signature": "org.apache.commons.cli2.option.DefaultOption:validate(Lorg/apache/commons/cli2/WriteableCommandLine;)V",
            "method_body": "public void validate(WriteableCommandLine commandLine)\nif (isRequired() && !commandLine.hasOption(this)) {\nsuper.validate(commandLine);\n}",
            "method_id": 5
        },
        {
            "method_signature": "org.apache.commons.cli2.option.ArgumentImpl:validate(Lorg/apache/commons/cli2/WriteableCommandLine;)V",
            "method_body": "public void validate(final WriteableCommandLine commandLine)\nvalidate(commandLine, this);\n}",
            "method_id": 6
        },
        {
            "method_signature": "org.apache.commons.cli2.option.Command:appendUsage(Ljava/lang/StringBuffer;Ljava/util/Set;Ljava/util/Comparator;)V",
            "method_body": "public void appendUsage(final StringBuffer buffer,\nfinal boolean optional =\nfinal boolean displayAliases = helpSettings.contains(DisplaySetting.DISPLAY_ALIASES);\nif (optional) {\nbuffer.append(preferredName);\nif (displayAliases && !aliases.isEmpty()) {\nsuper.appendUsage(buffer, helpSettings, comp);\nif (optional) {\n}",
            "method_id": 7
        },
        {
            "method_signature": "org.apache.commons.cli2.option.ArgumentImpl:defaults(Lorg/apache/commons/cli2/WriteableCommandLine;)V",
            "method_body": "public void defaults(final WriteableCommandLine commandLine) {\nsuper.defaults(commandLine);\ndefaultValues(commandLine, this);\n}",
            "method_id": 8
        },
        {
            "method_signature": "org.apache.commons.cli2.option.DefaultOption:getPreferredName()Ljava/lang/String;",
            "method_body": "public String getPreferredName() {\nreturn preferredName;\n}",
            "method_id": 9
        }
    ]
}