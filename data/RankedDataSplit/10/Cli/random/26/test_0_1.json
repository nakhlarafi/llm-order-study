{
    "bug_id": 26,
    "test_id": 0,
    "test_name": "org.apache.commons.cli.OptionBuilderTest.testBuilderIsResettedAlways",
    "test_body": "public void testBuilderIsResettedAlways() {\ntry\n{\nOptionBuilder.withDescription(\"JUnit\").create('\"');\nfail(\"IllegalArgumentException expected\");\n}\ncatch (IllegalArgumentException e)\n{\n// expected\n}\nassertNull(\"we inherited a description\", OptionBuilder.create('x').getDescription());\n166: try\n{\nOptionBuilder.withDescription(\"JUnit\").create();\nfail(\"IllegalArgumentException expected\");\n}\ncatch (IllegalArgumentException e)\n{\n// expected\n}\nassertNull(\"we inherited a description\", OptionBuilder.create('x').getDescription());\n}\n",
    "stack_trace": "junit.framework.AssertionFailedError: we inherited a description\nat junit.framework.Assert.fail(Assert.java:57)\nat junit.framework.Assert.assertTrue(Assert.java:22)\nat junit.framework.Assert.assertNull(Assert.java:277)\nat junit.framework.TestCase.assertNull(TestCase.java:447)\nat org.apache.commons.cli.OptionBuilderTest.testBuilderIsResettedAlways(OptionBuilderTest.java:164)",
    "covered_methods": [
        {
            "method_signature": "org.apache.commons.cli.Option:setType(Ljava/lang/Object;)V",
            "method_body": "public void setType(Object type)\nthis.type = type;\n}",
            "method_id": 10
        },
        {
            "method_signature": "org.apache.commons.cli.OptionBuilder:reset()V",
            "method_body": "private static void reset()\ndescription = null;\nargName = \"arg\";\nlongopt = null;\ntype = null;\nrequired = false;\nnumberOfArgs = Option.UNINITIALIZED;\noptionalArg = false;\nvaluesep = (char) 0;\n}",
            "method_id": 11
        },
        {
            "method_signature": "org.apache.commons.cli.OptionValidator:validateOption(Ljava/lang/String;)V",
            "method_body": "static void validateOption(String opt) throws IllegalArgumentException\nif (opt == null)\nelse if (opt.length() == 1)\nchar ch = opt.charAt(0);\nif (!isValidOpt(ch))\nthrow new IllegalArgumentException(\"illegal option value '\" + ch + \"'\");\n}\n}",
            "method_id": 12
        },
        {
            "method_signature": "org.apache.commons.cli.OptionValidator:isValidChar(C)Z",
            "method_body": "private static boolean isValidChar(char c)\nreturn Character.isJavaIdentifierPart(c);\n}",
            "method_id": 13
        },
        {
            "method_signature": "org.apache.commons.cli.OptionBuilder:<clinit>()V",
            "method_body": "private static String longopt;\nprivate static int numberOfArgs = Option.UNINITIALIZED;\nprivate static OptionBuilder instance = new OptionBuilder();\n{\n}",
            "method_id": 14
        },
        {
            "method_signature": "org.apache.commons.cli.OptionBuilder:<init>()V",
            "method_body": "private OptionBuilder()\n{\n}",
            "method_id": 15
        },
        {
            "method_signature": "org.apache.commons.cli.Option:setArgName(Ljava/lang/String;)V",
            "method_body": "public void setArgName(String argName)\nthis.argName = argName;\n}",
            "method_id": 16
        },
        {
            "method_signature": "org.apache.commons.cli.Option:setOptionalArg(Z)V",
            "method_body": "public void setOptionalArg(boolean optionalArg)\nthis.optionalArg = optionalArg;\n}",
            "method_id": 17
        },
        {
            "method_signature": "org.apache.commons.cli.Option:setValueSeparator(C)V",
            "method_body": "public void setValueSeparator(char sep)\nthis.valuesep = sep;\n}",
            "method_id": 18
        }
    ]
}