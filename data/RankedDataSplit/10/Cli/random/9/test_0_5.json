{
    "bug_id": 9,
    "test_id": 0,
    "test_name": "org.apache.commons.cli.ParseRequiredTest.testMissingRequiredOptions",
    "test_body": "public void testMissingRequiredOptions()\n{\nString[] args = new String[] { \"-a\" };\n122: _options.addOption( OptionBuilder.withLongOpt( \"cfile\" )\n.hasArg()\n.isRequired()\n.withDescription( \"set the value of [c]\" )\n.create( 'c' ) );\n128: try\n{\nCommandLine cl = parser.parse(_options,args);\nfail( \"exception should have been thrown\" );\n}\ncatch (MissingOptionException e)\n{\nassertEquals( \"Incorrect exception message\", \"Missing required options: b, c\", e.getMessage() );\n}",
    "stack_trace": "junit.framework.ComparisonFailure: Incorrect exception message expected:<... required options: b[, ]c> but was:<... required options: b[]c>\nat junit.framework.Assert.assertEquals(Assert.java:100)\nat junit.framework.TestCase.assertEquals(TestCase.java:261)\nat org.apache.commons.cli.ParseRequiredTest.testMissingRequiredOptions(ParseRequiredTest.java:135)",
    "covered_methods": [
        {
            "method_signature": "org.apache.commons.cli.MissingOptionException:<init>(Ljava/lang/String;)V",
            "method_body": "public MissingOptionException(String message)\nsuper(message);\n}",
            "method_id": 50
        },
        {
            "method_signature": "org.apache.commons.cli.Parser:parse(Lorg/apache/commons/cli/Options;[Ljava/lang/String;)Lorg/apache/commons/cli/CommandLine;",
            "method_body": "public CommandLine parse(Options options, String[] arguments)\nreturn parse(options, arguments, null, false);\n}",
            "method_id": 51
        },
        {
            "method_signature": "org.apache.commons.cli.Parser:getRequiredOptions()Ljava/util/List;",
            "method_body": "protected List getRequiredOptions() {\nreturn requiredOptions;\n}",
            "method_id": 52
        },
        {
            "method_signature": "org.apache.commons.cli.Options:<init>()V",
            "method_body": "public Options()\n{\n}",
            "method_id": 53
        }
    ]
}