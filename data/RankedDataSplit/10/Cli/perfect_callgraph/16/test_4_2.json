{
    "bug_id": 16,
    "test_id": 4,
    "test_name": "org.apache.commons.cli2.bug.BugCLI123Test.testSingleChildOption",
    "test_body": "public void testSingleChildOption() throws OptionException {\nCommandLine cl = parser.parse(new String[] { \"--child\", \"test\" });\nassertTrue(\"Child option not found\", cl.hasOption(childOption1));",
    "stack_trace": "org.apache.commons.cli2.OptionException: Missing option parentOptions\nat org.apache.commons.cli2.option.GroupImpl.validate(GroupImpl.java:274)\nat org.apache.commons.cli2.commandline.Parser.parse(Parser.java:104)\nat org.apache.commons.cli2.bug.BugCLI123Test.testSingleChildOption(BugCLI123Test.java:81)",
    "covered_methods": [
        {
            "method_signature": "org.apache.commons.cli2.option.OptionImpl:hashCode()I",
            "method_body": "public int hashCode() {\nint hashCode = getId();\nif (getPreferredName() != null) {\nhashCode = (hashCode * 37) + getPreferredName().hashCode();\nif (getDescription() != null) {\nhashCode = (hashCode * 37) + getDescription().hashCode();\nhashCode = (hashCode * 37) + getPrefixes().hashCode();\nhashCode = (hashCode * 37) + getTriggers().hashCode();\nreturn hashCode;\n}",
            "method_id": 20
        },
        {
            "method_signature": "org.apache.commons.cli2.option.OptionImpl:isRequired()Z",
            "method_body": "public boolean isRequired() {\nreturn required;\n}",
            "method_id": 21
        },
        {
            "method_signature": "org.apache.commons.cli2.option.OptionImpl:defaults(Lorg/apache/commons/cli2/WriteableCommandLine;)V",
            "method_body": "public void defaults(final WriteableCommandLine commandLine) {\n}",
            "method_id": 22
        },
        {
            "method_signature": "org.apache.commons.cli2.option.OptionImpl:checkPrefixes(Ljava/util/Set;)V",
            "method_body": "protected void checkPrefixes(final Set prefixes) {\nif (prefixes.isEmpty()) {\ncheckPrefix(prefixes, getPreferredName());\nthis.getTriggers();\nfor (final Iterator i = getTriggers().iterator(); i.hasNext();) {\ncheckPrefix(prefixes, (String) i.next());\n}",
            "method_id": 23
        },
        {
            "method_signature": "org.apache.commons.cli2.option.OptionImpl:checkPrefix(Ljava/util/Set;Ljava/lang/String;)V",
            "method_body": "private void checkPrefix(final Set prefixes,\nfor (final Iterator i = prefixes.iterator(); i.hasNext();) {\nString prefix = (String) i.next();\nif (trigger.startsWith(prefix)) {\nreturn;\n}\n}",
            "method_id": 24
        },
        {
            "method_signature": "org.apache.commons.cli2.option.ParentImpl:<init>(Lorg/apache/commons/cli2/Argument;Lorg/apache/commons/cli2/Group;Ljava/lang/String;IZ)V",
            "method_body": "protected ParentImpl(final Argument argument,\nsuper(id, required);\nthis.children = children;\nthis.argument = argument;\nthis.description = description;\n}",
            "method_id": 25
        },
        {
            "method_signature": "org.apache.commons.cli2.option.ParentImpl:process(Lorg/apache/commons/cli2/WriteableCommandLine;Ljava/util/ListIterator;)V",
            "method_body": "public void process(final WriteableCommandLine commandLine,\nif (argument != null) {\nhandleInitialSeparator(arguments, argument.getInitialSeparator());\nprocessParent(commandLine, arguments);\nif (argument != null) {\nargument.processValues(commandLine, arguments, this);\nif ((children != null) && children.canProcess(commandLine, arguments)) {\n}",
            "method_id": 26
        },
        {
            "method_signature": "org.apache.commons.cli2.option.ParentImpl:getPrefixes()Ljava/util/Set;",
            "method_body": "public Set getPrefixes() {\nreturn (children == null) ? Collections.EMPTY_SET : children.getPrefixes();\n}",
            "method_id": 27
        },
        {
            "method_signature": "org.apache.commons.cli2.option.ParentImpl:validate(Lorg/apache/commons/cli2/WriteableCommandLine;)V",
            "method_body": "public void validate(WriteableCommandLine commandLine)\nif (commandLine.hasOption(this)) {\nif (argument != null) {\nargument.validate(commandLine, this);\nif (children != null) {\n}",
            "method_id": 28
        },
        {
            "method_signature": "org.apache.commons.cli2.option.ParentImpl:getDescription()Ljava/lang/String;",
            "method_body": "public String getDescription() {\nreturn description;\n}",
            "method_id": 29
        }
    ]
}