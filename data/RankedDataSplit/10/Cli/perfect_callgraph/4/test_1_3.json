{
    "bug_id": 4,
    "test_id": 1,
    "test_name": "org.apache.commons.cli.OptionsTest.testMissingOptionException",
    "test_body": "public void testMissingOptionException() throws ParseException {\nOptions options = new Options();\noptions.addOption(OptionBuilder.isRequired().create(\"f\"));\ntry {\nnew PosixParser().parse(options, new String[0]);\nfail(\"Expected MissingOptionException to be thrown\");\n} catch (MissingOptionException e) {\nassertEquals(\"Missing required option: f\", e.getMessage());\n}",
    "stack_trace": "junit.framework.ComparisonFailure: expected:<[Missing required option: ]f> but was:<[]f>\nat junit.framework.Assert.assertEquals(Assert.java:100)\nat junit.framework.Assert.assertEquals(Assert.java:107)\nat junit.framework.TestCase.assertEquals(TestCase.java:269)\nat org.apache.commons.cli.OptionsTest.testMissingOptionException(OptionsTest.java:104)",
    "covered_methods": [
        {
            "method_signature": "org.apache.commons.cli.OptionBuilder:reset()V",
            "method_body": "private static void reset()\ndescription = null;\nargName = \"arg\";\nlongopt = null;\ntype = null;\nrequired = false;\nnumberOfArgs = Option.UNINITIALIZED;\noptionalArg = false;\nvaluesep = (char) 0;\n}",
            "method_id": 30
        },
        {
            "method_signature": "org.apache.commons.cli.OptionBuilder:isRequired()Lorg/apache/commons/cli/OptionBuilder;",
            "method_body": "public static OptionBuilder isRequired()\nOptionBuilder.required = true;\nreturn instance;\n}",
            "method_id": 31
        },
        {
            "method_signature": "org.apache.commons.cli.CommandLine:<init>()V",
            "method_body": "private List args = new LinkedList();\nprivate Set options = new HashSet();\n{\n}",
            "method_id": 32
        },
        {
            "method_signature": "org.apache.commons.cli.ParseException:<init>(Ljava/lang/String;)V",
            "method_body": "public ParseException(String message)\nsuper(message);\n}",
            "method_id": 33
        },
        {
            "method_signature": "org.apache.commons.cli.MissingOptionException:<init>(Ljava/lang/String;)V",
            "method_body": "public MissingOptionException(String message)\nsuper(message);\n}",
            "method_id": 34
        }
    ]
}