{
    "bug_id": 5,
    "test_id": 1,
    "test_name": "org.apache.commons.cli.bug.BugCLI133Test.testOrder",
    "test_body": "public void testOrder() throws ParseException {\nOption optionA = new Option(\"a\", \"first\");\nOptions opts = new Options();\nopts.addOption(optionA);\nPosixParser posixParser = new PosixParser();\nCommandLine line = posixParser.parse(opts, null);\nassertFalse(line.hasOption(null));\n}\n",
    "stack_trace": "java.lang.NullPointerException\nat org.apache.commons.cli.Util.stripLeadingHyphens(Util.java:36)\nat org.apache.commons.cli.CommandLine.resolveOption(CommandLine.java:166)\nat org.apache.commons.cli.CommandLine.hasOption(CommandLine.java:68)\nat org.apache.commons.cli.bug.BugCLI133Test.testOrder(BugCLI133Test.java:32)",
    "covered_methods": [
        {
            "method_signature": "org.apache.commons.cli.Util:stripLeadingHyphens(Ljava/lang/String;)Ljava/lang/String;",
            "method_body": "static String stripLeadingHyphens(String str)\nif (str.startsWith(\"--\"))\nreturn str.substring(2, str.length());\nelse if (str.startsWith(\"-\"))\nreturn str.substring(1, str.length());\n}",
            "method_id": 0
        },
        {
            "method_signature": "org.apache.commons.cli.Option:<init>(Ljava/lang/String;Ljava/lang/String;)V",
            "method_body": "public Option(String opt, String description)\nthis(opt, null, false, description);\n}",
            "method_id": 1
        },
        {
            "method_signature": "org.apache.commons.cli.OptionValidator:validateOption(Ljava/lang/String;)V",
            "method_body": "static void validateOption(String opt)\nif (opt == null)\nelse if (opt.length() == 1)\nchar ch = opt.charAt(0);\nif (!isValidOpt(ch))\n}\n}",
            "method_id": 2
        },
        {
            "method_signature": "org.apache.commons.cli.OptionValidator:isValidOpt(C)Z",
            "method_body": "private static boolean isValidOpt(char c)\nreturn (isValidChar(c) || (c == ' ') || (c == '?') || c == '@');\n}",
            "method_id": 3
        },
        {
            "method_signature": "org.apache.commons.cli.OptionValidator:isValidChar(C)Z",
            "method_body": "private static boolean isValidChar(char c)\nreturn Character.isJavaIdentifierPart(c);\n}",
            "method_id": 4
        },
        {
            "method_signature": "org.apache.commons.cli.Options:<init>()V",
            "method_body": "public Options()\n{\n}",
            "method_id": 5
        },
        {
            "method_signature": "org.apache.commons.cli.PosixParser:<init>()V",
            "method_body": "private ArrayList tokens = new ArrayList();\neatTheRest = false;\ntokens.clear();\ncurrentOption = null;\n}",
            "method_id": 6
        },
        {
            "method_signature": "org.apache.commons.cli.CommandLine:hasOption(Ljava/lang/String;)Z",
            "method_body": "public boolean hasOption(String opt)\nreturn options.contains( resolveOption(opt));\n}",
            "method_id": 7
        },
        {
            "method_signature": "org.apache.commons.cli.CommandLine:resolveOption(Ljava/lang/String;)Lorg/apache/commons/cli/Option;",
            "method_body": "private Option resolveOption( String opt )\nopt = Util.stripLeadingHyphens(opt);\n}",
            "method_id": 8
        },
        {
            "method_signature": "org.apache.commons.cli.Parser:parse(Lorg/apache/commons/cli/Options;[Ljava/lang/String;)Lorg/apache/commons/cli/CommandLine;",
            "method_body": "public CommandLine parse(Options options, String[] arguments)\nreturn parse(options, arguments, null, false);\n}",
            "method_id": 9
        }
    ]
}