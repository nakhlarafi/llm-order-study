{
    "bug_id": 33,
    "test_id": 0,
    "test_name": "org.apache.commons.cli.HelpFormatterTest.testIndentedHeaderAndFooter",
    "test_body": "public void testIndentedHeaderAndFooter()\n{\n// related to CLI-207\nOptions options = new Options();\nHelpFormatter formatter = new HelpFormatter();\nString header = \"  Header1\\n  Header2\";\nString footer = \"  Footer1\\n  Footer2\";\nStringWriter out = new StringWriter();\nformatter.printHelp(new PrintWriter(out), 80, \"foobar\", header, options, 2, 2, footer, true);\n441: assertEquals(\n\"usage: foobar\" + EOL +",
    "stack_trace": "junit.framework.ComparisonFailure: expected:<...e: foobar\nHeader1\n[  Header2\n\nFooter1\n]Footer2\n> but was:<...e: foobar\nHeader1\n[Header2\n\nFooter1\n]Footer2\n>\nat junit.framework.Assert.assertEquals(Assert.java:100)\nat junit.framework.Assert.assertEquals(Assert.java:107)\nat junit.framework.TestCase.assertEquals(TestCase.java:269)\nat org.apache.commons.cli.HelpFormatterTest.testIndentedHeaderAndFooter(HelpFormatterTest.java:441)",
    "covered_methods": [
        {
            "method_signature": "org.apache.commons.cli.HelpFormatter:printOptions(Ljava/io/PrintWriter;ILorg/apache/commons/cli/Options;II)V",
            "method_body": "public void printOptions(PrintWriter pw, int width, Options options,\nStringBuffer sb = new StringBuffer();\nrenderOptions(sb, width, options, leftPad, descPad);\npw.println(sb.toString());\n}",
            "method_id": 10
        },
        {
            "method_signature": "org.apache.commons.cli.HelpFormatter:printWrapped(Ljava/io/PrintWriter;ILjava/lang/String;)V",
            "method_body": "public void printWrapped(PrintWriter pw, int width, String text)\nprintWrapped(pw, width, 0, text);\n}",
            "method_id": 11
        },
        {
            "method_signature": "org.apache.commons.cli.HelpFormatter:renderOptions(Ljava/lang/StringBuffer;ILorg/apache/commons/cli/Options;II)Ljava/lang/StringBuffer;",
            "method_body": "protected StringBuffer renderOptions(StringBuffer sb, int width, Options options, int leftPad, int descPad)\nfinal String lpad = createPadding(leftPad);\nfinal String dpad = createPadding(descPad);\nint max = 0;\nList prefixList = new ArrayList();\nList optList = options.helpOptions();\nCollections.sort(optList, getOptionComparator());\nfor (Iterator i = optList.iterator(); i.hasNext();)\nint x = 0;\nfor (Iterator i = optList.iterator(); i.hasNext();)\nreturn sb;\n}",
            "method_id": 12
        },
        {
            "method_signature": "org.apache.commons.cli.HelpFormatter:renderWrappedText(Ljava/lang/StringBuffer;IILjava/lang/String;)Ljava/lang/StringBuffer;",
            "method_body": "protected StringBuffer renderWrappedText(StringBuffer sb, int width,\nint pos = findWrapPos(text, width, 0);\nif (pos == -1)\nsb.append(rtrim(text));\nreturn sb;\nsb.append(rtrim(text.substring(0, pos))).append(defaultNewLine);\nif (nextLineTabStop >= width)\nfinal String padding = createPadding(nextLineTabStop);\ntext = padding + text.substring(pos).trim();\npos = findWrapPos(text, width, 0);\nif (pos == -1)\nsb.append(text);\nreturn sb;\n}",
            "method_id": 13
        }
    ]
}