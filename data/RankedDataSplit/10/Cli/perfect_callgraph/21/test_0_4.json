{
    "bug_id": 21,
    "test_id": 0,
    "test_name": "org.apache.commons.cli2.bug.BugCLI150Test.testNegativeNumber",
    "test_body": "public void testNegativeNumber() throws OptionException\n{\nfinal DefaultOptionBuilder oBuilder = new DefaultOptionBuilder();\nfinal ArgumentBuilder aBuilder = new ArgumentBuilder();\nfinal GroupBuilder gBuilder = new GroupBuilder();\n46: final Argument numArg = aBuilder.withValidator(\nNumberValidator.getNumberInstance()).withMinimum(1)\n.withMaximum(1).create();\nfinal Option numOpt = oBuilder.withLongName(\"num\").withArgument(numArg)\n.create();\nfinal Group options = gBuilder.withOption(numOpt).create();\n53: final Parser parser = new Parser();\nparser.setGroup(options);\n56: CommandLine cl = parser.parse(new String[] {\n\"--num\", \"-42\"",
    "stack_trace": "org.apache.commons.cli2.OptionException: Unexpected -42 while processing --num\nat org.apache.commons.cli2.commandline.Parser.parse(Parser.java:99)\nat org.apache.commons.cli2.bug.BugCLI150Test.testNegativeNumber(BugCLI150Test.java:56)",
    "covered_methods": [
        {
            "method_signature": "org.apache.commons.cli2.option.OptionImpl:checkPrefixes(Ljava/util/Set;)V",
            "method_body": "protected void checkPrefixes(final Set prefixes) {\nif (prefixes.isEmpty()) {\ncheckPrefix(prefixes, getPreferredName());\nthis.getTriggers();\nfor (final Iterator i = getTriggers().iterator(); i.hasNext();) {\ncheckPrefix(prefixes, (String) i.next());\n}",
            "method_id": 40
        },
        {
            "method_signature": "org.apache.commons.cli2.option.OptionImpl:checkPrefix(Ljava/util/Set;Ljava/lang/String;)V",
            "method_body": "private void checkPrefix(final Set prefixes,\nfor (final Iterator i = prefixes.iterator(); i.hasNext();) {\nString prefix = (String) i.next();\nif (trigger.startsWith(prefix)) {\nreturn;\n}",
            "method_id": 41
        },
        {
            "method_signature": "org.apache.commons.cli2.option.ParentImpl:<init>(Lorg/apache/commons/cli2/Argument;Lorg/apache/commons/cli2/Group;Ljava/lang/String;IZ)V",
            "method_body": "protected ParentImpl(final Argument argument,\nsuper(id, required);\nthis.children = children;\nthis.argument = argument;\nthis.description = description;\n}",
            "method_id": 42
        },
        {
            "method_signature": "org.apache.commons.cli2.option.ParentImpl:process(Lorg/apache/commons/cli2/WriteableCommandLine;Ljava/util/ListIterator;)V",
            "method_body": "public void process(final WriteableCommandLine commandLine,\nif (argument != null) {\nhandleInitialSeparator(arguments, argument.getInitialSeparator());\nprocessParent(commandLine, arguments);\nif (argument != null) {\nargument.processValues(commandLine, arguments, this);\nif ((children != null) && children.canProcess(commandLine, arguments)) {\n}",
            "method_id": 43
        },
        {
            "method_signature": "org.apache.commons.cli2.option.ParentImpl:canProcess(Lorg/apache/commons/cli2/WriteableCommandLine;Ljava/lang/String;)Z",
            "method_body": "public boolean canProcess(final WriteableCommandLine commandLine,\nfinal Set triggers = getTriggers();\nif (argument != null) {\nfinal char separator = argument.getInitialSeparator();\nif (separator != NUL) {\nreturn triggers.contains(arg);\n}",
            "method_id": 44
        },
        {
            "method_signature": "org.apache.commons.cli2.option.ParentImpl:appendUsage(Ljava/lang/StringBuffer;Ljava/util/Set;Ljava/util/Comparator;)V",
            "method_body": "public void appendUsage(final StringBuffer buffer,\nfinal boolean displayArgument =\nfinal boolean displayChildren =\nif (displayArgument) {\nif (displayChildren) {\n}",
            "method_id": 45
        },
        {
            "method_signature": "org.apache.commons.cli2.option.ParentImpl:getDescription()Ljava/lang/String;",
            "method_body": "public String getDescription() {\nreturn description;\n}",
            "method_id": 46
        },
        {
            "method_signature": "org.apache.commons.cli2.option.ParentImpl:handleInitialSeparator(Ljava/util/ListIterator;C)V",
            "method_body": "private void handleInitialSeparator(final ListIterator arguments,\nfinal String newArgument = (String) arguments.next();\nfinal int initialIndex = newArgument.indexOf(separator);\nif (initialIndex > 0) {\narguments.previous();\n}",
            "method_id": 47
        },
        {
            "method_signature": "org.apache.commons.cli2.option.ParentImpl:defaults(Lorg/apache/commons/cli2/WriteableCommandLine;)V",
            "method_body": "public void defaults(final WriteableCommandLine commandLine) {\nsuper.defaults(commandLine);\nif (argument != null) {\nargument.defaultValues(commandLine, this);\nif (children != null) {\n}",
            "method_id": 48
        },
        {
            "method_signature": "org.apache.commons.cli2.option.DefaultOption:<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;Ljava/lang/String;Ljava/util/Set;Ljava/util/Set;ZLorg/apache/commons/cli2/Argument;Lorg/apache/commons/cli2/Group;I)V",
            "method_body": "public DefaultOption(final String shortPrefix,\nsuper(argument, children, description, id, required);\nthis.shortPrefix = shortPrefix;\nthis.burstEnabled = burstEnabled;\nthis.burstLength = shortPrefix.length() + 1;\nthis.preferredName = preferredName;\nthis.aliases =\nthis.burstAliases =\nfinal Set newTriggers = new HashSet();\nnewTriggers.add(preferredName);\nnewTriggers.addAll(this.aliases);\nnewTriggers.addAll(this.burstAliases);\nthis.triggers = Collections.unmodifiableSet(newTriggers);\nfinal Set newPrefixes = new HashSet(super.getPrefixes());\nnewPrefixes.add(shortPrefix);\nnewPrefixes.add(longPrefix);\nthis.prefixes = Collections.unmodifiableSet(newPrefixes);\ncheckPrefixes(newPrefixes);\n}",
            "method_id": 49
        }
    ]
}