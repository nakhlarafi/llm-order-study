{
    "bug_id": 3,
    "test_id": 0,
    "test_name": "org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate",
    "test_body": "public void testDoubleMetaphoneAlternate() {\nString value = null;\nfor (int i = 0; i < TEST_DATA.length; i++) {\nvalue = TEST_DATA[i][0];\nassertEquals(\"Test [\" + i + \"]=\" + value, TEST_DATA[i][2], doubleMetaphone.doubleMetaphone(value, true));\n}",
    "stack_trace": "junit.framework.ComparisonFailure: Test [19]=Angier expected:<AN[J]R> but was:<AN[K]R>\nat junit.framework.Assert.assertEquals(Assert.java:100)\nat junit.framework.TestCase.assertEquals(TestCase.java:261)\nat org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate(DoubleMetaphone2Test.java:84)",
    "covered_methods": [
        {
            "method_signature": "org.apache.commons.codec.language.DoubleMetaphone:handleS(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I",
            "method_body": "private int handleS(String value,\nif (contains(value, index - 1, 3, \"ISL\", \"YSL\")) {\n} else if (index == 0 && contains(value, index, 5, \"SUGAR\")) {\n} else if (contains(value, index, 2, \"SH\")) {\n} else if (contains(value, index, 3, \"SIO\", \"SIA\") || contains(value, index, 4, \"SIAN\")) {\n} else if ((index == 0 && contains(value, index + 1, 1, \"M\", \"N\", \"L\", \"W\")) || contains(value, index + 1, 1, \"Z\")) {\n} else if (contains(value, index, 2, \"SC\")) {\nif (index == value.length() - 1 && contains(value, index - 2,\nresult.append('S');\nindex = contains(value, index + 1, 1, \"S\", \"Z\") ? index + 2 : index + 1;\nreturn index;\n}",
            "method_id": 10
        },
        {
            "method_signature": "org.apache.commons.codec.language.DoubleMetaphone:handleD(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I",
            "method_body": "private int handleD(String value,\nif (contains(value, index, 2, \"DG\")) {\n} else if (contains(value, index, 2, \"DT\", \"DD\")) {\nresult.append('T');\nindex++;\nreturn index;\n}",
            "method_id": 11
        },
        {
            "method_signature": "org.apache.commons.codec.language.DoubleMetaphone:contains(Ljava/lang/String;IILjava/lang/String;)Z",
            "method_body": "private static boolean contains(String value, int start, int length,\nreturn contains(value, start, length,\n}",
            "method_id": 12
        },
        {
            "method_signature": "org.apache.commons.codec.language.DoubleMetaphone:handleP(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I",
            "method_body": "private int handleP(String value,\nif (charAt(value, index + 1) == 'H') {\nresult.append('P');\nindex = contains(value, index + 1, 1, \"P\", \"B\") ? index + 2 : index + 1;\nreturn index;\n}",
            "method_id": 13
        },
        {
            "method_signature": "org.apache.commons.codec.language.DoubleMetaphone:handleW(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I",
            "method_body": "private int handleW(String value,\nif (contains(value, index, 2, \"WR\")) {\nif (index == 0 && (isVowel(charAt(value, index + 1)) ||\n} else if ((index == value.length() - 1 && isVowel(charAt(value, index - 1))) ||\n} else if (contains(value, index, 4, \"WICZ\", \"WITZ\")) {\nindex++;\nreturn index;\n}",
            "method_id": 14
        },
        {
            "method_signature": "org.apache.commons.codec.language.DoubleMetaphone:handleC(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I",
            "method_body": "private int handleC(String value,\nif (conditionC0(value, index)) {  // very confusing, moved out\n} else if (index == 0 && contains(value, index, 6, \"CAESAR\")) {\n} else if (contains(value, index, 2, \"CH\")) {\n} else if (contains(value, index, 2, \"CZ\") &&\n} else if (contains(value, index + 1, 3, \"CIA\")) {\n} else if (contains(value, index, 2, \"CC\") &&\n} else if (contains(value, index, 2, \"CK\", \"CG\", \"CQ\")) {\nresult.append('K');\nindex += 2;\n} else if (contains(value, index, 2, \"CI\", \"CE\", \"CY\")) {\nresult.append('K');\nif (contains(value, index + 1, 2, \" C\", \" Q\", \" G\")) {\n} else if (contains(value, index + 1, 1, \"C\", \"K\", \"Q\") &&\nindex++;\nreturn index;\n}",
            "method_id": 15
        },
        {
            "method_signature": "org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult:append(C)V",
            "method_body": "public void append(char value) {\nappendPrimary(value);\nappendAlternate(value);\n}",
            "method_id": 16
        },
        {
            "method_signature": "org.apache.commons.codec.language.DoubleMetaphone:conditionL0(Ljava/lang/String;I)Z",
            "method_body": "private boolean conditionL0(String value, int index) {\nif (index == value.length() - 3 &&\n} else if ((contains(value, value.length() - 2, 2, \"AS\", \"OS\") ||\nreturn false;\n}",
            "method_id": 17
        },
        {
            "method_signature": "org.apache.commons.codec.language.DoubleMetaphone:handleT(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I",
            "method_body": "private int handleT(String value,\nif (contains(value, index, 4, \"TION\")) {\n} else if (contains(value, index, 3, \"TIA\", \"TCH\")) {\n} else if (contains(value, index, 2, \"TH\") || contains(value, index,\nresult.append('T');\nindex = contains(value, index + 1, 1, \"T\", \"D\") ? index + 2 : index + 1;\nreturn index;\n}",
            "method_id": 18
        },
        {
            "method_signature": "org.apache.commons.codec.language.DoubleMetaphone:handleH(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I",
            "method_body": "private int handleH(String value,\nif ((index == 0 || isVowel(charAt(value, index - 1))) &&\nindex++;\nreturn index;\n}",
            "method_id": 19
        }
    ]
}