{
    "bug_id": 3,
    "test_id": 0,
    "test_name": "org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate",
    "test_body": "public void testDoubleMetaphoneAlternate() {\nString value = null;\nfor (int i = 0; i < TEST_DATA.length; i++) {\nvalue = TEST_DATA[i][0];\nassertEquals(\"Test [\" + i + \"]=\" + value, TEST_DATA[i][2], doubleMetaphone.doubleMetaphone(value, true));\n}",
    "stack_trace": "junit.framework.ComparisonFailure: Test [19]=Angier expected:<AN[J]R> but was:<AN[K]R>\nat junit.framework.Assert.assertEquals(Assert.java:100)\nat junit.framework.TestCase.assertEquals(TestCase.java:261)\nat org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate(DoubleMetaphone2Test.java:84)",
    "covered_methods": [
        {
            "method_signature": "org.apache.commons.codec.language.DoubleMetaphone:contains(Ljava/lang/String;IILjava/lang/String;)Z",
            "method_body": "private static boolean contains(String value, int start, int length,\nreturn contains(value, start, length,\n}",
            "method_id": 10
        },
        {
            "method_signature": "org.apache.commons.codec.language.DoubleMetaphone:contains(Ljava/lang/String;II[Ljava/lang/String;)Z",
            "method_body": "protected static boolean contains(String value, int start, int length,\nboolean result = false;\nif (start >= 0 && start + length <= value.length()) {\nString target = value.substring(start, start + length);\nfor (int i = 0; i < criteria.length; i++) {\nif (target.equals(criteria[i])) {\nresult = true;\nbreak;\nreturn result;\n}",
            "method_id": 11
        },
        {
            "method_signature": "org.apache.commons.codec.language.DoubleMetaphone:isVowel(C)Z",
            "method_body": "private boolean isVowel(char ch) {\nreturn VOWELS.indexOf(ch) != -1;\n}",
            "method_id": 12
        },
        {
            "method_signature": "org.apache.commons.codec.language.DoubleMetaphone:contains(Ljava/lang/String;IILjava/lang/String;Ljava/lang/String;)Z",
            "method_body": "private static boolean contains(String value, int start, int length,\nreturn contains(value, start, length,\n}",
            "method_id": 13
        },
        {
            "method_signature": "org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult:append(CC)V",
            "method_body": "public void append(char primary, char alternate) {\nappendPrimary(primary);\nappendAlternate(alternate);\n}",
            "method_id": 14
        },
        {
            "method_signature": "org.apache.commons.codec.language.DoubleMetaphone:contains(Ljava/lang/String;IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z",
            "method_body": "private static boolean contains(String value, int start, int length,\nreturn contains(value, start, length,\n}",
            "method_id": 15
        },
        {
            "method_signature": "org.apache.commons.codec.language.DoubleMetaphone:contains(Ljava/lang/String;IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z",
            "method_body": "private static boolean contains(String value, int start, int length,\nreturn contains(value, start, length,\n}",
            "method_id": 16
        },
        {
            "method_signature": "org.apache.commons.codec.language.DoubleMetaphone:conditionL0(Ljava/lang/String;I)Z",
            "method_body": "private boolean conditionL0(String value, int index) {\nif (index == value.length() - 3 &&\n} else if ((contains(value, value.length() - 2, 2, \"AS\", \"OS\") ||\nreturn false;\n}",
            "method_id": 17
        },
        {
            "method_signature": "org.apache.commons.codec.language.DoubleMetaphone:conditionM0(Ljava/lang/String;I)Z",
            "method_body": "private boolean conditionM0(String value, int index) {\nif (charAt(value, index + 1) == 'M') {\nreturn contains(value, index - 1, 3, \"UMB\") &&\n}",
            "method_id": 18
        },
        {
            "method_signature": "org.apache.commons.codec.language.DoubleMetaphone$DoubleMetaphoneResult:getAlternate()Ljava/lang/String;",
            "method_body": "public String getAlternate() {\nreturn this.alternate.toString();\n}",
            "method_id": 19
        }
    ]
}