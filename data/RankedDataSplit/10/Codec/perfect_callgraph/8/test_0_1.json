{
    "bug_id": 8,
    "test_id": 0,
    "test_name": "org.apache.commons.codec.binary.Base64InputStreamTest.testCodec105",
    "test_body": "public void testCodec105() throws IOException {\nBase64InputStream in = new Base64InputStream(new Codec105ErrorInputStream(), true, 0, null);\nfor (int i = 0; i < 5; i++) {\nin.read();\n}",
    "stack_trace": "java.lang.ArrayIndexOutOfBoundsException: 2\nat org.apache.commons.codec.binary.Base64.encode(Base64.java:497)\nat org.apache.commons.codec.binary.Base64InputStream.read(Base64InputStream.java:173)\nat org.apache.commons.codec.binary.Base64InputStream.read(Base64InputStream.java:109)\nat org.apache.commons.codec.binary.Base64InputStreamTest.testCodec105(Base64InputStreamTest.java:58)",
    "covered_methods": [
        {
            "method_signature": "org.apache.commons.codec.binary.Base64:avail()I",
            "method_body": "int avail() {\nreturn buffer != null ? pos - readPos : 0;\n}",
            "method_id": 10
        },
        {
            "method_signature": "org.apache.commons.codec.binary.Base64:readResults([BII)I",
            "method_body": "int readResults(byte[] b, int bPos, int bAvail) {\nif (buffer != null) {\nint len = Math.min(avail(), bAvail);\nSystem.arraycopy(buffer, readPos, b, bPos, len);\nreadPos += len;\nif (readPos >= pos) {\nbuffer = null;\nreturn len;\n}",
            "method_id": 11
        },
        {
            "method_signature": "org.apache.commons.codec.binary.Base64:encode([BII)V",
            "method_body": "void encode(byte[] in, int inPos, int inAvail) {\nif (eof) {\nif (inAvail < 0) {\nfor (int i = 0; i < inAvail; i++) {\nif (buffer == null || buffer.length - pos < encodeSize) {\nresizeBuffer();\nmodulus = (++modulus) % 3;\nint b = in[inPos++];\nif (b < 0) {\nx = (x << 8) + b;\nif (0 == modulus) {\nbuffer[pos++] = encodeTable[(x >> 18) & MASK_6BITS];\nbuffer[pos++] = encodeTable[(x >> 12) & MASK_6BITS];\nbuffer[pos++] = encodeTable[(x >> 6) & MASK_6BITS];\n}",
            "method_id": 12
        },
        {
            "method_signature": "org.apache.commons.codec.binary.Base64:isBase64(B)Z",
            "method_body": "public static boolean isBase64(byte octet) {\nreturn octet == PAD || (octet >= 0 && octet < DECODE_TABLE.length && DECODE_TABLE[octet] != -1);\n}",
            "method_id": 13
        }
    ]
}