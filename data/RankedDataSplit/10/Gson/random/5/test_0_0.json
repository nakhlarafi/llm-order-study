{
    "bug_id": 5,
    "test_id": 0,
    "test_name": "com.google.gson.DefaultDateTypeAdapterTest.testDateDeserializationISO8601",
    "test_body": "public void testDateDeserializationISO8601() throws Exception {\nDefaultDateTypeAdapter adapter = new DefaultDateTypeAdapter();\nassertParsed(\"1970-01-01T00:00:00.000Z\", adapter);\nassertParsed(\"1970-01-01T00:00Z\", adapter);\nassertParsed(\"1970-01-01T00:00:00+00:00\", adapter);\nassertParsed(\"1970-01-01T01:00:00+01:00\", adapter);\nassertParsed(\"1970-01-01T01:00:00+01\", adapter);\n}\n",
    "stack_trace": "com.google.gson.JsonSyntaxException: 1970-01-01T01:00:00+01\nat com.google.gson.DefaultDateTypeAdapter.deserializeToDate(DefaultDateTypeAdapter.java:107)\nat com.google.gson.DefaultDateTypeAdapter.deserialize(DefaultDateTypeAdapter.java:84)\nat com.google.gson.DefaultDateTypeAdapterTest.assertParsed(DefaultDateTypeAdapterTest.java:168)\nat com.google.gson.DefaultDateTypeAdapterTest.testDateDeserializationISO8601(DefaultDateTypeAdapterTest.java:133)",
    "covered_methods": [
        {
            "method_signature": "com.google.gson.JsonPrimitive:isNumber()Z",
            "method_body": "public boolean isNumber() {\nreturn value instanceof Number;\n}",
            "method_id": 0
        },
        {
            "method_signature": "com.google.gson.internal.$Gson$Preconditions:checkArgument(Z)V",
            "method_body": "public static void checkArgument(boolean condition) {\nif (!condition) {\n}",
            "method_id": 1
        },
        {
            "method_signature": "com.google.gson.JsonPrimitive:getAsString()Ljava/lang/String;",
            "method_body": "public String getAsString() {\nif (isNumber()) {\n} else if (isBoolean()) {\nreturn (String) value;\n}",
            "method_id": 2
        },
        {
            "method_signature": "com.google.gson.DefaultDateTypeAdapter:<init>()V",
            "method_body": "DefaultDateTypeAdapter() {\nthis(DateFormat.getDateTimeInstance(DateFormat.DEFAULT, DateFormat.DEFAULT, Locale.US),\n}",
            "method_id": 3
        },
        {
            "method_signature": "com.google.gson.JsonParseException:<init>(Ljava/lang/String;Ljava/lang/Throwable;)V",
            "method_body": "public JsonParseException(String msg, Throwable cause) {\nsuper(msg, cause);\n}",
            "method_id": 4
        },
        {
            "method_signature": "com.google.gson.DefaultDateTypeAdapter:<init>(Ljava/text/DateFormat;Ljava/text/DateFormat;)V",
            "method_body": "DefaultDateTypeAdapter(DateFormat enUsFormat, DateFormat localFormat) {\nthis.enUsFormat = enUsFormat;\nthis.localFormat = localFormat;\n}",
            "method_id": 5
        },
        {
            "method_signature": "com.google.gson.JsonPrimitive:setValue(Ljava/lang/Object;)V",
            "method_body": "void setValue(Object primitive) {\nif (primitive instanceof Character) {\n$Gson$Preconditions.checkArgument(primitive instanceof Number\nthis.value = primitive;\n}",
            "method_id": 6
        },
        {
            "method_signature": "com.google.gson.internal.bind.util.ISO8601Utils:parseInt(Ljava/lang/String;II)I",
            "method_body": "private static int parseInt(String value, int beginIndex, int endIndex) throws NumberFormatException {\nif (beginIndex < 0 || endIndex > value.length() || beginIndex > endIndex) {\nint i = beginIndex;\nint result = 0;\nif (i < endIndex) {\ndigit = Character.digit(value.charAt(i++), 10);\nif (digit < 0) {\nresult = -digit;\nwhile (i < endIndex) {\ndigit = Character.digit(value.charAt(i++), 10);\nif (digit < 0) {\nresult *= 10;\nresult -= digit;\nreturn -result;\n}",
            "method_id": 7
        },
        {
            "method_signature": "com.google.gson.internal.bind.util.ISO8601Utils:indexOfNonDigit(Ljava/lang/String;I)I",
            "method_body": "private static int indexOfNonDigit(String string, int offset) {\nfor (int i = offset; i < string.length(); i++) {\nchar c = string.charAt(i);\nif (c < '0' || c > '9') return i;\n}",
            "method_id": 8
        },
        {
            "method_signature": "com.google.gson.DefaultDateTypeAdapter:deserialize(Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Ljava/util/Date;",
            "method_body": "public Date deserialize(JsonElement json, Type typeOfT, JsonDeserializationContext context)\nif (!(json instanceof JsonPrimitive)) {\nDate date = deserializeToDate(json);\nif (typeOfT == Date.class) {\nreturn date;\n}",
            "method_id": 9
        }
    ]
}