{
    "bug_id": 15,
    "test_id": 0,
    "test_name": "com.google.gson.stream.JsonWriterTest.testNonFiniteDoublesWhenLenient",
    "test_body": "public void testNonFiniteDoublesWhenLenient() throws IOException {\nStringWriter stringWriter = new StringWriter();\nJsonWriter jsonWriter = new JsonWriter(stringWriter);\njsonWriter.setLenient(true);\njsonWriter.beginArray();\njsonWriter.value(Double.NaN);\njsonWriter.value(Double.NEGATIVE_INFINITY);",
    "stack_trace": "java.lang.IllegalArgumentException: Numeric values must be finite, but was NaN\nat com.google.gson.stream.JsonWriter.value(JsonWriter.java:496)\nat com.google.gson.stream.JsonWriterTest.testNonFiniteDoublesWhenLenient(JsonWriterTest.java:222)",
    "covered_methods": [
        {
            "method_signature": "com.google.gson.stream.JsonWriter:value(D)Lcom/google/gson/stream/JsonWriter;",
            "method_body": "public JsonWriter value(double value) throws IOException {\nwriteDeferredName();\nif (Double.isNaN(value) || Double.isInfinite(value)) {\nthrow new IllegalArgumentException(\"Numeric values must be finite, but was \" + value);\n}",
            "method_id": 10
        }
    ]
}