{
    "bug_id": 7,
    "test_id": 1,
    "test_name": "com.google.gson.functional.MapTest.testMapDeserializationWithUnquotedIntegerKeys",
    "test_body": "public void testMapDeserializationWithUnquotedIntegerKeys() {\nType typeOfMap = new TypeToken<Map<Integer, String>>() {}.getType();\nMap<Integer, String> map = gson.fromJson(\"{123:\\\"456\\\"}\", typeOfMap);\nassertEquals(1, map.size());",
    "stack_trace": "com.google.gson.JsonSyntaxException: java.lang.IllegalStateException: Expected an int but was STRING at line 1 column 2 path $.\nat com.google.gson.Gson.fromJson(Gson.java:892)\nat com.google.gson.Gson.fromJson(Gson.java:845)\nat com.google.gson.Gson.fromJson(Gson.java:794)\nat com.google.gson.functional.MapTest.testMapDeserializationWithUnquotedIntegerKeys(MapTest.java:172)",
    "covered_methods": [
        {
            "method_signature": "com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper:<init>(Lcom/google/gson/Gson;Lcom/google/gson/TypeAdapter;Ljava/lang/reflect/Type;)V",
            "method_body": "TypeAdapterRuntimeTypeWrapper(Gson context, TypeAdapter<T> delegate, Type type) {\nthis.context = context;\nthis.delegate = delegate;\nthis.type = type;\n}",
            "method_id": 10
        },
        {
            "method_signature": "com.google.gson.Gson:<init>()V",
            "method_body": "public Gson() {\nthis(Excluder.DEFAULT, FieldNamingPolicy.IDENTITY,\n}",
            "method_id": 11
        },
        {
            "method_signature": "com.google.gson.internal.bind.JsonAdapterAnnotationTypeAdapterFactory:<init>(Lcom/google/gson/internal/ConstructorConstructor;)V",
            "method_body": "public JsonAdapterAnnotationTypeAdapterFactory(ConstructorConstructor constructorConstructor) {\nthis.constructorConstructor = constructorConstructor;\n}",
            "method_id": 12
        },
        {
            "method_signature": "com.google.gson.internal.Excluder:create(Lcom/google/gson/Gson;Lcom/google/gson/reflect/TypeToken;)Lcom/google/gson/TypeAdapter;",
            "method_body": "public <T> TypeAdapter<T> create(final Gson gson, final TypeToken<T> type) {\nClass<?> rawType = type.getRawType();\nfinal boolean skipSerialize = excludeClass(rawType, true);\nfinal boolean skipDeserialize = excludeClass(rawType, false);\nif (!skipSerialize && !skipDeserialize) {\nreturn null;\n}",
            "method_id": 13
        },
        {
            "method_signature": "com.google.gson.internal.bind.TypeAdapters:<clinit>()V",
            "method_body": "public static final TypeAdapterFactory ENUM_FACTORY = new TypeAdapterFactory() {\n};",
            "method_id": 14
        },
        {
            "method_signature": "com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter:<init>(Lcom/google/gson/internal/bind/MapTypeAdapterFactory;Lcom/google/gson/Gson;Ljava/lang/reflect/Type;Lcom/google/gson/TypeAdapter;Ljava/lang/reflect/Type;Lcom/google/gson/TypeAdapter;Lcom/google/gson/internal/ObjectConstructor;)V",
            "method_body": "public Adapter(Gson context, Type keyType, TypeAdapter<K> keyTypeAdapter,\nObjectConstructor<? extends Map<K, V>> constructor) {\nthis.keyTypeAdapter =\nthis.valueTypeAdapter =\nthis.constructor = constructor;\n}",
            "method_id": 15
        },
        {
            "method_signature": "com.google.gson.internal.bind.TypeAdapters$26:create(Lcom/google/gson/Gson;Lcom/google/gson/reflect/TypeToken;)Lcom/google/gson/TypeAdapter;",
            "method_body": "@Override public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> typeToken) {\nif (typeToken.getRawType() != Timestamp.class) {\nreturn null;\n}",
            "method_id": 16
        },
        {
            "method_signature": "com.google.gson.JsonSyntaxException:<init>(Ljava/lang/Throwable;)V",
            "method_body": "public JsonSyntaxException(Throwable cause) {\nsuper(cause);\n}",
            "method_id": 17
        },
        {
            "method_signature": "com.google.gson.internal.bind.ObjectTypeAdapter$1:create(Lcom/google/gson/Gson;Lcom/google/gson/reflect/TypeToken;)Lcom/google/gson/TypeAdapter;",
            "method_body": "@Override public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {\nif (type.getRawType() == Object.class) {\nreturn null;\n}",
            "method_id": 18
        },
        {
            "method_signature": "com.google.gson.reflect.TypeToken:getSuperclassTypeParameter(Ljava/lang/Class;)Ljava/lang/reflect/Type;",
            "method_body": "static Type getSuperclassTypeParameter(Class<?> subclass) {\nType superclass = subclass.getGenericSuperclass();\nif (superclass instanceof Class) {\nParameterizedType parameterized = (ParameterizedType) superclass;\nreturn $Gson$Types.canonicalize(parameterized.getActualTypeArguments()[0]);\n}",
            "method_id": 19
        }
    ]
}