{
    "bug_id": 12,
    "test_id": 0,
    "test_name": "com.google.gson.internal.bind.JsonTreeReaderTest.testSkipValue_filledJsonObject",
    "test_body": "public void testSkipValue_filledJsonObject() throws IOException {\nJsonObject jsonObject = new JsonObject();\nJsonArray jsonArray = new JsonArray();\njsonArray.add('c');\njsonArray.add(\"text\");\njsonObject.add(\"a\", jsonArray);\njsonObject.addProperty(\"b\", true);\njsonObject.addProperty(\"i\", 1);\njsonObject.add(\"n\", JsonNull.INSTANCE);\nJsonObject jsonObject2 = new JsonObject();\njsonObject2.addProperty(\"n\", 2L);\njsonObject.add(\"o\", jsonObject2);\njsonObject.addProperty(\"s\", \"text\");\nJsonTreeReader in = new JsonTreeReader(jsonObject);\nin.skipValue();\nassertEquals(JsonToken.END_DOCUMENT, in.peek());",
    "stack_trace": "java.lang.ArrayIndexOutOfBoundsException: -1\nat com.google.gson.internal.bind.JsonTreeReader.skipValue(JsonTreeReader.java:262)\nat com.google.gson.internal.bind.JsonTreeReaderTest.testSkipValue_filledJsonObject(JsonTreeReaderTest.java:47)",
    "covered_methods": [
        {
            "method_signature": "com.google.gson.internal.bind.JsonTreeReader:skipValue()V",
            "method_body": "@Override public void skipValue() throws IOException {\nif (peek() == JsonToken.NAME) {\npopStack();\npathNames[stackSize - 1] = \"null\";\n}",
            "method_id": 0
        },
        {
            "method_signature": "com.google.gson.JsonObject:<init>()V",
            "method_body": "private final LinkedTreeMap<String, JsonElement> members =\n}",
            "method_id": 1
        },
        {
            "method_signature": "com.google.gson.internal.LinkedTreeMap:<init>()V",
            "method_body": "public LinkedTreeMap() {\nthis((Comparator<? super K>) NATURAL_ORDER);\n}",
            "method_id": 2
        },
        {
            "method_signature": "com.google.gson.internal.LinkedTreeMap$Node:<init>()V",
            "method_body": "Node() {\nkey = null;\nnext = prev = this;\n}",
            "method_id": 3
        },
        {
            "method_signature": "com.google.gson.JsonArray:<init>()V",
            "method_body": "public JsonArray() {\nelements = new ArrayList<JsonElement>();\n}",
            "method_id": 4
        },
        {
            "method_signature": "com.google.gson.JsonPrimitive:setValue(Ljava/lang/Object;)V",
            "method_body": "void setValue(Object primitive) {\nif (primitive instanceof Character) {\nchar c = ((Character) primitive).charValue();\nthis.value = String.valueOf(c);\n} else {\n$Gson$Preconditions.checkArgument(primitive instanceof Number\nthis.value = primitive;\n}",
            "method_id": 5
        },
        {
            "method_signature": "com.google.gson.JsonPrimitive:isPrimitiveOrString(Ljava/lang/Object;)Z",
            "method_body": "private static boolean isPrimitiveOrString(Object target) {\nif (target instanceof String) {\nreturn true;\nClass<?> classOfPrimitive = target.getClass();\nfor (Class<?> standardPrimitive : PRIMITIVE_TYPES) {\nif (standardPrimitive.isAssignableFrom(classOfPrimitive)) {\nreturn true;\n}",
            "method_id": 6
        },
        {
            "method_signature": "com.google.gson.JsonArray:add(Ljava/lang/String;)V",
            "method_body": "public void add(String string) {\nelements.add(string == null ? JsonNull.INSTANCE : new JsonPrimitive(string));\n}",
            "method_id": 7
        },
        {
            "method_signature": "com.google.gson.JsonPrimitive:<init>(Ljava/lang/String;)V",
            "method_body": "public JsonPrimitive(String string) {\nsetValue(string);\n}",
            "method_id": 8
        },
        {
            "method_signature": "com.google.gson.internal.LinkedTreeMap:put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;",
            "method_body": "@Override public V put(K key, V value) {\nif (key == null) {\nNode<K, V> created = find(key, true);\nV result = created.value;\ncreated.value = value;\nreturn result;\n}",
            "method_id": 9
        }
    ]
}