{
    "bug_id": 12,
    "test_id": 0,
    "test_name": "com.google.gson.internal.bind.JsonTreeReaderTest.testSkipValue_filledJsonObject",
    "test_body": "public void testSkipValue_filledJsonObject() throws IOException {\nJsonObject jsonObject = new JsonObject();\nJsonArray jsonArray = new JsonArray();\njsonArray.add('c');\njsonArray.add(\"text\");\njsonObject.add(\"a\", jsonArray);\njsonObject.addProperty(\"b\", true);\njsonObject.addProperty(\"i\", 1);\njsonObject.add(\"n\", JsonNull.INSTANCE);\nJsonObject jsonObject2 = new JsonObject();\njsonObject2.addProperty(\"n\", 2L);\njsonObject.add(\"o\", jsonObject2);\njsonObject.addProperty(\"s\", \"text\");\nJsonTreeReader in = new JsonTreeReader(jsonObject);\nin.skipValue();\nassertEquals(JsonToken.END_DOCUMENT, in.peek());",
    "stack_trace": "java.lang.ArrayIndexOutOfBoundsException: -1\nat com.google.gson.internal.bind.JsonTreeReader.skipValue(JsonTreeReader.java:262)\nat com.google.gson.internal.bind.JsonTreeReaderTest.testSkipValue_filledJsonObject(JsonTreeReaderTest.java:47)",
    "covered_methods": [
        {
            "method_signature": "com.google.gson.JsonObject:createJsonElement(Ljava/lang/Object;)Lcom/google/gson/JsonElement;",
            "method_body": "private JsonElement createJsonElement(Object value) {\nreturn value == null ? JsonNull.INSTANCE : new JsonPrimitive(value);\n}",
            "method_id": 10
        },
        {
            "method_signature": "com.google.gson.JsonPrimitive:<init>(Ljava/lang/Object;)V",
            "method_body": "JsonPrimitive(Object primitive) {\nsetValue(primitive);\n}",
            "method_id": 11
        },
        {
            "method_signature": "com.google.gson.JsonObject:addProperty(Ljava/lang/String;Ljava/lang/String;)V",
            "method_body": "public void addProperty(String property, String value) {\nadd(property, createJsonElement(value));\n}",
            "method_id": 12
        },
        {
            "method_signature": "com.google.gson.internal.bind.JsonTreeReader:push(Ljava/lang/Object;)V",
            "method_body": "private void push(Object newTop) {\nif (stackSize == stack.length) {\nstack[stackSize++] = newTop;\n}",
            "method_id": 13
        },
        {
            "method_signature": "com.google.gson.internal.bind.JsonTreeReader:peek()Lcom/google/gson/stream/JsonToken;",
            "method_body": "@Override public JsonToken peek() throws IOException {\nif (stackSize == 0) {\nObject o = peekStack();\nif (o instanceof Iterator) {\n} else if (o instanceof JsonObject) {\nreturn JsonToken.BEGIN_OBJECT;\n}",
            "method_id": 14
        },
        {
            "method_signature": "com.google.gson.internal.$Gson$Preconditions:checkArgument(Z)V",
            "method_body": "public static void checkArgument(boolean condition) {\nif (!condition) {\n}",
            "method_id": 15
        },
        {
            "method_signature": "com.google.gson.stream.JsonReader:<init>(Ljava/io/Reader;)V",
            "method_body": "public JsonReader(Reader in) {\nif (in == null) {\nthis.in = in;\n}",
            "method_id": 16
        },
        {
            "method_signature": "com.google.gson.JsonObject:add(Ljava/lang/String;Lcom/google/gson/JsonElement;)V",
            "method_body": "public void add(String property, JsonElement value) {\nif (value == null) {\nmembers.put(property, value);\n}",
            "method_id": 17
        },
        {
            "method_signature": "com.google.gson.JsonObject:addProperty(Ljava/lang/String;Ljava/lang/Number;)V",
            "method_body": "public void addProperty(String property, Number value) {\nadd(property, createJsonElement(value));\n}",
            "method_id": 18
        },
        {
            "method_signature": "com.google.gson.JsonObject:addProperty(Ljava/lang/String;Ljava/lang/Boolean;)V",
            "method_body": "public void addProperty(String property, Boolean value) {\nadd(property, createJsonElement(value));\n}",
            "method_id": 19
        }
    ]
}