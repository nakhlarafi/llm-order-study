{
    "bug_id": 13,
    "test_id": 0,
    "test_name": "com.google.gson.stream.JsonReaderTest.testNegativeZero",
    "test_body": "public void testNegativeZero() throws Exception {\nJsonReader reader = new JsonReader(reader(\"[-0]\"));\nreader.setLenient(false);\nreader.beginArray();\nassertEquals(NUMBER, reader.peek());\nassertEquals(\"-0\", reader.nextString());\n}\n",
    "stack_trace": "junit.framework.ComparisonFailure: expected:<[-]0> but was:<[]0>\nat junit.framework.Assert.assertEquals(Assert.java:100)\nat junit.framework.Assert.assertEquals(Assert.java:107)\nat junit.framework.TestCase.assertEquals(TestCase.java:269)\nat com.google.gson.stream.JsonReaderTest.testNegativeZero(JsonReaderTest.java:573)",
    "covered_methods": [
        {
            "method_signature": "com.google.gson.stream.JsonReader:setLenient(Z)V",
            "method_body": "public final void setLenient(boolean lenient) {\nthis.lenient = lenient;\n}",
            "method_id": 10
        },
        {
            "method_signature": "com.google.gson.stream.JsonReader:nextNonWhitespace(Z)I",
            "method_body": "private int nextNonWhitespace(boolean throwOnEof) throws IOException {\nchar[] buffer = this.buffer;\nint p = pos;\nint l = limit;\nif (p == l) {\npos = p;\nif (!fillBuffer(1)) {\np = pos;\nl = limit;\nint c = buffer[p++];\nif (c == '\\n') {\n} else if (c == ' ' || c == '\\r' || c == '\\t') {\nif (c == '/') {\n} else if (c == '#') {\npos = p;\nreturn c;\n}",
            "method_id": 11
        }
    ]
}