{
    "bug_id": 3,
    "test_id": 0,
    "test_name": "com.fasterxml.jackson.core.json.TestLocation.testOffsetWithInputOffset",
    "test_body": "public void testOffsetWithInputOffset() throws Exception\n{\nfinal JsonFactory f = new JsonFactory();\nJsonLocation loc;\nJsonParser p;\n// 3 spaces before, 2 after, just for padding\nbyte[] b = \"   { }  \".getBytes(\"UTF-8\");\n63: // and then peel them off\np = f.createParser(b, 3, b.length-5);\nassertToken(JsonToken.START_OBJECT, p.nextToken());\n67: loc = p.getTokenLocation();\nassertEquals(0L, loc.getByteOffset());\nassertEquals(-1L, loc.getCharOffset());",
    "stack_trace": "junit.framework.AssertionFailedError: expected:<0> but was:<3>\nat junit.framework.Assert.fail(Assert.java:57)\nat junit.framework.Assert.failNotEquals(Assert.java:329)\nat junit.framework.Assert.assertEquals(Assert.java:78)\nat junit.framework.Assert.assertEquals(Assert.java:159)\nat junit.framework.Assert.assertEquals(Assert.java:166)\nat junit.framework.TestCase.assertEquals(TestCase.java:324)\nat com.fasterxml.jackson.core.json.TestLocation.testOffsetWithInputOffset(TestLocation.java:68)",
    "covered_methods": [
        {
            "method_signature": "com.fasterxml.jackson.core.JsonLocation:<clinit>()V",
            "method_body": "private static final long serialVersionUID = 1L;\npublic final static JsonLocation NA = new JsonLocation(\"N/A\", -1L, -1L, -1, -1);\n}",
            "method_id": 80
        },
        {
            "method_signature": "com.fasterxml.jackson.core.JsonLocation:getByteOffset()J",
            "method_body": "public long getByteOffset()\nreturn _totalBytes;\n}",
            "method_id": 81
        }
    ]
}