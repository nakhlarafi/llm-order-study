{
    "bug_id": 17,
    "test_id": 0,
    "test_name": "com.fasterxml.jackson.core.json.RawValueWithSurrogatesTest.testRawWithSurrogatesString",
    "test_body": "public void testRawWithSurrogatesString() throws Exception {\n_testRawWithSurrogatesString(false);\n}\n",
    "stack_trace": "com.fasterxml.jackson.core.JsonGenerationException: Split surrogate on writeRaw() input (last character)\nat com.fasterxml.jackson.core.JsonGenerator._reportError(JsonGenerator.java:1723)\nat com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputRawMultiByteChar(UTF8JsonGenerator.java:1887)\nat com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeSegmentedRaw(UTF8JsonGenerator.java:658)\nat com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeRaw(UTF8JsonGenerator.java:573)\nat com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeRaw(UTF8JsonGenerator.java:536)\nat com.fasterxml.jackson.core.base.GeneratorBase.writeRawValue(GeneratorBase.java:299)\nat com.fasterxml.jackson.core.json.RawValueWithSurrogatesTest._testRawWithSurrogatesString(RawValueWithSurrogatesTest.java:82)",
    "covered_methods": [
        {
            "method_signature": "com.fasterxml.jackson.core.io.CharTypes:get7BitOutputEscapes()[I",
            "method_body": "public static int[] get7BitOutputEscapes() { return sOutputEscapes128; }\npublic static int[] get7BitOutputEscapes() { return sOutputEscapes128; }",
            "method_id": 70
        },
        {
            "method_signature": "com.fasterxml.jackson.core.io.CharTypes:copyHexBytes()[B",
            "method_body": "public static byte[] copyHexBytes() {\nreturn (byte[]) HB.clone();\n}",
            "method_id": 71
        },
        {
            "method_signature": "com.fasterxml.jackson.core.json.UTF8JsonGenerator:<init>(Lcom/fasterxml/jackson/core/io/IOContext;ILcom/fasterxml/jackson/core/ObjectCodec;Ljava/io/OutputStream;)V",
            "method_body": "public UTF8JsonGenerator(IOContext ctxt, int features, ObjectCodec codec,\nsuper(ctxt, features, codec);\n_outputStream = out;\n_bufferRecyclable = true;\n_outputBuffer = ctxt.allocWriteEncodingBuffer();\n_outputEnd = _outputBuffer.length;\n_outputMaxContiguous = _outputEnd >> 3;\n_charBuffer = ctxt.allocConcatBuffer();\n_charBufferLength = _charBuffer.length;\nif (isEnabled(Feature.ESCAPE_NON_ASCII)) {\n}",
            "method_id": 72
        },
        {
            "method_signature": "com.fasterxml.jackson.core.json.UTF8JsonGenerator:<clinit>()V",
            "method_body": "private final static byte[] TRUE_BYTES = { 't', 'r', 'u', 'e' };\nprivate final static byte[] TRUE_BYTES = { 't', 'r', 'u', 'e' };",
            "method_id": 73
        },
        {
            "method_signature": "com.fasterxml.jackson.core.json.UTF8JsonGenerator:writeRaw([CII)V",
            "method_body": "public final void writeRaw(char[] cbuf, int offset, int len) throws IOException\nint len3 = len+len+len;\nif ((_outputTail + len3) > _outputEnd) {\nif (_outputEnd < len3) { // wouldn't be enough...\n_writeSegmentedRaw(cbuf, offset, len);\n}",
            "method_id": 74
        },
        {
            "method_signature": "com.fasterxml.jackson.core.json.UTF8JsonGenerator:_writeSegmentedRaw([CII)V",
            "method_body": "private final void _writeSegmentedRaw(char[] cbuf, int offset, int len) throws IOException\nfinal int end = _outputEnd;\nfinal byte[] bbuf = _outputBuffer;\nfinal int inputEnd = offset + len;\nwhile (offset < inputEnd) {\nint ch = (int) cbuf[offset];\nif (ch >= 0x80) {\nbreak inner_loop;\nif (_outputTail >= end) {\nbbuf[_outputTail++] = (byte) ch;\nif (++offset >= inputEnd) {\n}\nif ((_outputTail + 3) >= _outputEnd) {\nchar ch = cbuf[offset++];\nif (ch < 0x800) { // 2-byte?\noffset = _outputRawMultiByteChar(ch, cbuf, offset, inputEnd);\n}\n}",
            "method_id": 75
        },
        {
            "method_signature": "com.fasterxml.jackson.core.json.UTF8JsonGenerator:_verifyValueWrite(Ljava/lang/String;)V",
            "method_body": "protected final void _verifyValueWrite(String typeMsg) throws IOException\nint status = _writeContext.writeValue();\nif (status == JsonWriteContext.STATUS_EXPECT_NAME) {\nif (_cfgPrettyPrinter == null) {\nswitch (status) {\nreturn;\n}",
            "method_id": 76
        },
        {
            "method_signature": "com.fasterxml.jackson.core.json.UTF8JsonGenerator:_outputSurrogates(II)V",
            "method_body": "protected final void _outputSurrogates(int surr1, int surr2) throws IOException\nint c = _decodeSurrogate(surr1, surr2);\nif ((_outputTail + 4) > _outputEnd) {\nfinal byte[] bbuf = _outputBuffer;\nbbuf[_outputTail++] = (byte) (0xf0 | (c >> 18));\nbbuf[_outputTail++] = (byte) (0x80 | ((c >> 12) & 0x3f));\nbbuf[_outputTail++] = (byte) (0x80 | ((c >> 6) & 0x3f));\nbbuf[_outputTail++] = (byte) (0x80 | (c & 0x3f));\n}",
            "method_id": 77
        },
        {
            "method_signature": "com.fasterxml.jackson.core.JsonStreamContext:<init>()V",
            "method_body": "protected JsonStreamContext() { }\nprotected JsonStreamContext() { }",
            "method_id": 78
        },
        {
            "method_signature": "com.fasterxml.jackson.core.json.JsonWriteContext:<init>(ILcom/fasterxml/jackson/core/json/JsonWriteContext;Lcom/fasterxml/jackson/core/json/DupDetector;)V",
            "method_body": "protected JsonWriteContext(int type, JsonWriteContext parent, DupDetector dups) {\nsuper();\n_type = type;\n_parent = parent;\n_dups = dups;\n_index = -1;\n}",
            "method_id": 79
        }
    ]
}