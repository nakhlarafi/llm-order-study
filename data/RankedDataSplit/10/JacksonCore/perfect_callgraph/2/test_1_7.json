{
    "bug_id": 2,
    "test_id": 1,
    "test_name": "com.fasterxml.jackson.core.json.TestParserErrorHandling.testMangledNumbersChars",
    "test_body": "public void testMangledNumbersChars() throws Exception {\n_testMangledNumbers(false);\n}\n",
    "stack_trace": "junit.framework.AssertionFailedError: Should have gotten an exception; instead got token: VALUE_NUMBER_INT\nat junit.framework.Assert.fail(Assert.java:57)\nat junit.framework.TestCase.fail(TestCase.java:227)\nat com.fasterxml.jackson.core.json.TestParserErrorHandling._testMangledNumbers(TestParserErrorHandling.java:93)\nat com.fasterxml.jackson.core.json.TestParserErrorHandling.testMangledNumbersChars(TestParserErrorHandling.java:26)",
    "covered_methods": [
        {
            "method_signature": "com.fasterxml.jackson.core.json.ReaderBasedJsonParser:nextToken()Lcom/fasterxml/jackson/core/JsonToken;",
            "method_body": "public JsonToken nextToken()\n_numTypesValid = NR_UNKNOWN;\nif (_currToken == JsonToken.FIELD_NAME) {\nif (_tokenIncomplete) {\nint i = _skipWSOrEnd();\nif (i < 0) { // end-of-input\n_tokenInputTotal = _currInputProcessed + _inputPtr - 1;\n_tokenInputRow = _currInputRow;\n_tokenInputCol = _inputPtr - _currInputRowStart - 1;\n_binaryValue = null;\nif (i == INT_RBRACKET) {\n}",
            "method_id": 70
        },
        {
            "method_signature": "com.fasterxml.jackson.core.json.ReaderBasedJsonParser:_skipWSOrEnd()I",
            "method_body": "private int _skipWSOrEnd() throws IOException\nfinal int[] codes = _icWS;\nwhile (_inputPtr < _inputEnd || loadMore()) {\nint i = (int) _inputBuffer[_inputPtr++];\nif (i >= 64) {\nswitch (codes[i]) {\nreturn i;\n}",
            "method_id": 71
        },
        {
            "method_signature": "com.fasterxml.jackson.core.util.TextBuffer:resetWithShared([CII)V",
            "method_body": "public void resetWithShared(char[] buf, int start, int len)\n_resultString = null;\n_resultArray = null;\n_inputBuffer = buf;\n_inputStart = start;\n_inputLen = len;\nif (_hasSegments) {\n}",
            "method_id": 72
        }
    ]
}