{
    "bug_id": 15,
    "test_id": 0,
    "test_name": "com.fasterxml.jackson.core.filter.BasicParserFilteringTest.testNotAllowMultipleMatches",
    "test_body": "public void testNotAllowMultipleMatches() throws Exception\n{\nString jsonString = aposToQuotes(\"{'a':123,'array':[1,2],'ob':{'value0':2,'value':3,'value2':4},'value':4,'b':true}\");\nJsonParser p0 = JSON_F.createParser(jsonString);\nJsonParser p = new FilteringParserDelegate(p0,\nnew NameMatchFilter(\"value\"),\nfalse, // includePath\nfalse // multipleMatches -false\n);\nString result = readAndWrite(JSON_F, p);\nassertEquals(aposToQuotes(\"3\"), result);\n}\n",
    "stack_trace": "junit.framework.ComparisonFailure: expected:<3[]> but was:<3[ 4]>\nat junit.framework.Assert.assertEquals(Assert.java:100)\nat junit.framework.Assert.assertEquals(Assert.java:107)\nat junit.framework.TestCase.assertEquals(TestCase.java:269)\nat com.fasterxml.jackson.core.filter.BasicParserFilteringTest.testNotAllowMultipleMatches(BasicParserFilteringTest.java:118)",
    "covered_methods": [
        {
            "method_signature": "com.fasterxml.jackson.core.filter.TokenFilter:includeRootValue(I)Lcom/fasterxml/jackson/core/filter/TokenFilter;",
            "method_body": "public TokenFilter includeRootValue(int index) {\nreturn this;\n}",
            "method_id": 160
        },
        {
            "method_signature": "com.fasterxml.jackson.core.filter.TokenFilter:includeValue(Lcom/fasterxml/jackson/core/JsonParser;)Z",
            "method_body": "public boolean includeValue(JsonParser p) throws IOException {\nreturn _includeScalar();\n}",
            "method_id": 161
        },
        {
            "method_signature": "com.fasterxml.jackson.core.filter.TokenFilterContext:<init>(ILcom/fasterxml/jackson/core/filter/TokenFilterContext;Lcom/fasterxml/jackson/core/filter/TokenFilter;Z)V",
            "method_body": "protected TokenFilterContext(int type, TokenFilterContext parent,\nsuper();\n_type = type;\n_parent = parent;\n_filter = filter;\n_index = -1;\n_startHandled = startHandled;\n_needToHandleName = false;\n}",
            "method_id": 162
        },
        {
            "method_signature": "com.fasterxml.jackson.core.filter.TokenFilterContext:reset(ILcom/fasterxml/jackson/core/filter/TokenFilter;Z)Lcom/fasterxml/jackson/core/filter/TokenFilterContext;",
            "method_body": "protected TokenFilterContext reset(int type,\n_type = type;\n_filter = filter;\n_index = -1;\n_currentName = null;\n_startHandled = startWritten;\n_needToHandleName = false;\nreturn this;\n}",
            "method_id": 163
        },
        {
            "method_signature": "com.fasterxml.jackson.core.filter.TokenFilterContext:createRootContext(Lcom/fasterxml/jackson/core/filter/TokenFilter;)Lcom/fasterxml/jackson/core/filter/TokenFilterContext;",
            "method_body": "public static TokenFilterContext createRootContext(TokenFilter filter) {\nreturn new TokenFilterContext(TYPE_ROOT, null, filter, true);\n}",
            "method_id": 164
        },
        {
            "method_signature": "com.fasterxml.jackson.core.filter.TokenFilterContext:createChildArrayContext(Lcom/fasterxml/jackson/core/filter/TokenFilter;Z)Lcom/fasterxml/jackson/core/filter/TokenFilterContext;",
            "method_body": "public TokenFilterContext createChildArrayContext(TokenFilter filter, boolean writeStart) {\nTokenFilterContext ctxt = _child;\nif (ctxt == null) {\n_child = ctxt = new TokenFilterContext(TYPE_ARRAY, this, filter, writeStart);\nreturn ctxt;\n}",
            "method_id": 165
        },
        {
            "method_signature": "com.fasterxml.jackson.core.filter.TokenFilterContext:createChildObjectContext(Lcom/fasterxml/jackson/core/filter/TokenFilter;Z)Lcom/fasterxml/jackson/core/filter/TokenFilterContext;",
            "method_body": "public TokenFilterContext createChildObjectContext(TokenFilter filter, boolean writeStart) {\nTokenFilterContext ctxt = _child;\nif (ctxt == null) {\n_child = ctxt = new TokenFilterContext(TYPE_OBJECT, this, filter, writeStart);\nreturn ctxt;\nreturn ctxt.reset(TYPE_OBJECT, filter, writeStart);\n}",
            "method_id": 166
        },
        {
            "method_signature": "com.fasterxml.jackson.core.filter.TokenFilterContext:setFieldName(Ljava/lang/String;)Lcom/fasterxml/jackson/core/filter/TokenFilter;",
            "method_body": "public TokenFilter setFieldName(String name) throws JsonProcessingException {\n_currentName = name;\n_needToHandleName = true;\nreturn _filter;\n}",
            "method_id": 167
        },
        {
            "method_signature": "com.fasterxml.jackson.core.filter.TokenFilterContext:checkValue(Lcom/fasterxml/jackson/core/filter/TokenFilter;)Lcom/fasterxml/jackson/core/filter/TokenFilter;",
            "method_body": "public TokenFilter checkValue(TokenFilter filter) {\nif (_type == TYPE_OBJECT) {\nreturn filter;\nint ix = ++_index;\nif (_type == TYPE_ARRAY) {\nreturn filter.includeElement(ix);\nreturn filter.includeRootValue(ix);\n}",
            "method_id": 168
        },
        {
            "method_signature": "com.fasterxml.jackson.core.filter.TokenFilterContext:getParent()Lcom/fasterxml/jackson/core/filter/TokenFilterContext;",
            "method_body": "@Override public final TokenFilterContext getParent() { return _parent; }\n@Override public final TokenFilterContext getParent() { return _parent; }",
            "method_id": 169
        }
    ]
}