{
    "bug_id": 12,
    "test_id": 0,
    "test_name": "com.fasterxml.jackson.core.json.LocationInObjectTest.testOffsetWithObjectFieldsUsingReader",
    "test_body": "public void testOffsetWithObjectFieldsUsingReader() throws Exception\n{\nfinal JsonFactory f = new JsonFactory();\nchar[] c = \"{\\\"f1\\\":\\\"v1\\\",\\\"f2\\\":{\\\"f3\\\":\\\"v3\\\"},\\\"f4\\\":[true,false],\\\"f5\\\":5}\".toCharArray();\n//            1      6      11    16 17    22      28    33 34 39      46    51\nJsonParser p = f.createParser(c);\n61: assertEquals(JsonToken.START_OBJECT, p.nextToken());\n63: assertEquals(JsonToken.FIELD_NAME, p.nextToken());\nassertEquals(1L, p.getTokenLocation().getCharOffset());\nassertEquals(JsonToken.VALUE_STRING, p.nextToken());\nassertEquals(6L, p.getTokenLocation().getCharOffset());\n68: assertEquals(\"f2\", p.nextFieldName());\nassertEquals(11L, p.getTokenLocation().getCharOffset());\nassertEquals(JsonToken.START_OBJECT, p.nextValue());\nassertEquals(16L, p.getTokenLocation().getCharOffset());\n73: assertEquals(\"f3\", p.nextFieldName());\nassertEquals(17L, p.getTokenLocation().getCharOffset());\nassertEquals(JsonToken.VALUE_STRING, p.nextValue());\nassertEquals(22L, p.getTokenLocation().getCharOffset());\nassertEquals(JsonToken.END_OBJECT, p.nextToken());\n79: assertEquals(\"f4\", p.nextFieldName());\nassertEquals(28L, p.getTokenLocation().getCharOffset());\nassertEquals(JsonToken.START_ARRAY, p.nextValue());\nassertEquals(33L, p.getTokenLocation().getCharOffset());\n84: assertEquals(JsonToken.VALUE_TRUE, p.nextValue());\nassertEquals(34L, p.getTokenLocation().getCharOffset());\n87: assertEquals(JsonToken.VALUE_FALSE, p.nextValue());\nassertEquals(39L, p.getTokenLocation().getCharOffset());\nassertEquals(JsonToken.END_ARRAY, p.nextToken());\n91: assertEquals(\"f5\", p.nextFieldName());\nassertEquals(46L, p.getTokenLocation().getCharOffset());\nassertEquals(JsonToken.VALUE_NUMBER_INT, p.nextToken());\nassertEquals(51L, p.getTokenLocation().getCharOffset());\nassertEquals(JsonToken.END_OBJECT, p.nextToken());\n97: p.close();\n}\n",
    "stack_trace": "junit.framework.AssertionFailedError: expected:<6> but was:<1>\nat junit.framework.Assert.fail(Assert.java:57)\nat junit.framework.Assert.failNotEquals(Assert.java:329)\nat junit.framework.Assert.assertEquals(Assert.java:78)\nat junit.framework.Assert.assertEquals(Assert.java:159)\nat junit.framework.Assert.assertEquals(Assert.java:166)\nat junit.framework.TestCase.assertEquals(TestCase.java:324)\nat com.fasterxml.jackson.core.json.LocationInObjectTest.testOffsetWithObjectFieldsUsingReader(LocationInObjectTest.java:66)",
    "covered_methods": [
        {
            "method_signature": "com.fasterxml.jackson.core.JsonGenerator$Feature:enabledByDefault()Z",
            "method_body": "public boolean enabledByDefault() { return _defaultState; }\npublic boolean enabledByDefault() { return _defaultState; }",
            "method_id": 30
        },
        {
            "method_signature": "com.fasterxml.jackson.core.JsonGenerator$Feature:getMask()I",
            "method_body": "public int getMask() { return _mask; }\npublic int getMask() { return _mask; }",
            "method_id": 31
        },
        {
            "method_signature": "com.fasterxml.jackson.core.util.DefaultPrettyPrinter:<clinit>()V",
            "method_body": "private static final long serialVersionUID = 1;\npublic final static SerializedString DEFAULT_ROOT_VALUE_SEPARATOR = new SerializedString(\" \");\n}",
            "method_id": 32
        },
        {
            "method_signature": "com.fasterxml.jackson.core.io.SerializedString:<init>(Ljava/lang/String;)V",
            "method_body": "public SerializedString(String v) {\nif (v == null) {\n_value = v;\n}",
            "method_id": 33
        },
        {
            "method_signature": "com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer:<init>()V",
            "method_body": "private CharsToNameCanonicalizer() {\n_canonicalize = true;\n_flags = -1;\n_dirty = true;\n_hashSeed = 0;\n_longestCollisionList = 0;\ninitTables(DEFAULT_T_SIZE);\n}",
            "method_id": 34
        },
        {
            "method_signature": "com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer:<init>(Lcom/fasterxml/jackson/core/sym/CharsToNameCanonicalizer;I[Ljava/lang/String;[Lcom/fasterxml/jackson/core/sym/CharsToNameCanonicalizer$Bucket;III)V",
            "method_body": "private CharsToNameCanonicalizer(CharsToNameCanonicalizer parent, int flags,\nString[] symbols, Bucket[] buckets, int size, int hashSeed, int longestColl) {\n_parent = parent;\n_flags = flags;\n_canonicalize = JsonFactory.Feature.CANONICALIZE_FIELD_NAMES.enabledIn(flags);\n_symbols = symbols;\n_buckets = buckets;\n_size = size;\n_hashSeed = hashSeed;\nint arrayLen = (symbols.length);\n_sizeThreshold = _thresholdSize(arrayLen);\n_indexMask =  (arrayLen - 1);\n_longestCollisionList = longestColl;\n_dirty = false;\n}",
            "method_id": 35
        },
        {
            "method_signature": "com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer:<clinit>()V",
            "method_body": "public final static int HASH_MULT = 33;\nfinal static CharsToNameCanonicalizer sBootstrapSymbolTable = new CharsToNameCanonicalizer();\n* Method called to create root canonicalizer for a {@link com.fasterxml.jackson.core.JsonFactory}",
            "method_id": 36
        },
        {
            "method_signature": "com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer:initTables(I)V",
            "method_body": "private void initTables(int initialSize)\n_symbols = new String[initialSize];\n_buckets = new Bucket[initialSize >> 1];\n_indexMask = initialSize - 1;\n_size = 0;\n_longestCollisionList = 0;\n_sizeThreshold = _thresholdSize(initialSize);\n}",
            "method_id": 37
        },
        {
            "method_signature": "com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer:_thresholdSize(I)I",
            "method_body": "private static int _thresholdSize(int hashAreaSize) { return hashAreaSize - (hashAreaSize >> 2); }\nprivate static int _thresholdSize(int hashAreaSize) { return hashAreaSize - (hashAreaSize >> 2); }",
            "method_id": 38
        },
        {
            "method_signature": "com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer:hashSeed()I",
            "method_body": "public int hashSeed() { return _hashSeed; }\npublic int hashSeed() { return _hashSeed; }",
            "method_id": 39
        }
    ]
}