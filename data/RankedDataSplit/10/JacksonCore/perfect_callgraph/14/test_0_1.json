{
    "bug_id": 14,
    "test_id": 0,
    "test_name": "com.fasterxml.jackson.core.io.TestIOContext.testAllocations",
    "test_body": "public void testAllocations() throws Exception\n{\nIOContext ctxt = new IOContext(new BufferRecycler(), \"N/A\", true);\n13: /* I/O Read buffer */\n15: // First succeeds:\nassertNotNull(ctxt.allocReadIOBuffer());\n// second fails\ntry {\nctxt.allocReadIOBuffer();\n} catch (IllegalStateException e) {\nverifyException(e, \"second time\");\n}\n// Also: can't succeed with different buffer\ntry {\nctxt.releaseReadIOBuffer(new byte[1]);\n} catch (IllegalArgumentException e) {\nverifyException(e, \"smaller than original\");\n}",
    "stack_trace": "junit.framework.AssertionFailedError: Expected an exception with one of substrings ([smaller than original]): got one with message \"Trying to release buffer not owned by the context\"\nat junit.framework.Assert.fail(Assert.java:57)\nat junit.framework.TestCase.fail(TestCase.java:227)\nat com.fasterxml.jackson.core.BaseTest.verifyException(BaseTest.java:390)\nat com.fasterxml.jackson.core.io.TestIOContext.testAllocations(TestIOContext.java:27)",
    "covered_methods": [
        {
            "method_signature": "com.fasterxml.jackson.core.util.BufferRecycler:<clinit>()V",
            "method_body": "private final static int[] CHAR_BUFFER_LENGTHS = new int[] { 4000, 4000, 200, 200 };\nprivate final static int[] CHAR_BUFFER_LENGTHS = new int[] { 4000, 4000, 200, 200 };",
            "method_id": 10
        },
        {
            "method_signature": "com.fasterxml.jackson.core.util.BufferRecycler:byteBufferLength(I)I",
            "method_body": "protected int byteBufferLength(int ix) {\nreturn BYTE_BUFFER_LENGTHS[ix];\n}",
            "method_id": 11
        },
        {
            "method_signature": "com.fasterxml.jackson.core.util.BufferRecycler:balloc(I)[B",
            "method_body": "protected byte[] balloc(int size) { return new byte[size]; }\nprotected byte[] balloc(int size) { return new byte[size]; }",
            "method_id": 12
        }
    ]
}