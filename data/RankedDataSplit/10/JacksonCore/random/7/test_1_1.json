{
    "bug_id": 7,
    "test_id": 1,
    "test_name": "com.fasterxml.jackson.core.json.GeneratorFailTest.testFailOnWritingStringNotFieldNameChars",
    "test_body": "public void testFailOnWritingStringNotFieldNameChars() throws Exception {\n_testFailOnWritingStringNotFieldName(F, true);        \n}\n",
    "stack_trace": "junit.framework.AssertionFailedError: Should not have let com.fasterxml.jackson.core.json.WriterBasedJsonGenerator.writeString() be used in place of 'writeFieldName()': output = {:\"a\"\nat junit.framework.Assert.fail(Assert.java:57)\nat junit.framework.TestCase.fail(TestCase.java:227)\nat com.fasterxml.jackson.core.json.GeneratorFailTest._testFailOnWritingStringNotFieldName(GeneratorFailTest.java:79)\nat com.fasterxml.jackson.core.json.GeneratorFailTest.testFailOnWritingStringNotFieldNameChars(GeneratorFailTest.java:32)",
    "covered_methods": [
        {
            "method_signature": "com.fasterxml.jackson.core.json.WriterBasedJsonGenerator:_flushBuffer()V",
            "method_body": "protected void _flushBuffer() throws IOException\nint len = _outputTail - _outputHead;\nif (len > 0) {\nint offset = _outputHead;\n_outputTail = _outputHead = 0;\n_writer.write(_outputBuffer, offset, len);\n}",
            "method_id": 10
        },
        {
            "method_signature": "com.fasterxml.jackson.core.JsonGenerator$Feature:getMask()I",
            "method_body": "public int getMask() { return _mask; }\npublic int getMask() { return _mask; }",
            "method_id": 11
        },
        {
            "method_signature": "com.fasterxml.jackson.core.JsonStreamContext:<init>()V",
            "method_body": "protected JsonStreamContext() { }\nprotected JsonStreamContext() { }",
            "method_id": 12
        },
        {
            "method_signature": "com.fasterxml.jackson.core.json.JsonWriteContext:<init>(ILcom/fasterxml/jackson/core/json/JsonWriteContext;Lcom/fasterxml/jackson/core/json/DupDetector;)V",
            "method_body": "protected JsonWriteContext(int type, JsonWriteContext parent, DupDetector dups) {\nsuper();\n_type = type;\n_parent = parent;\n_dups = dups;\n_index = -1;\n}",
            "method_id": 13
        },
        {
            "method_signature": "com.fasterxml.jackson.core.JsonFactory$Feature:getMask()I",
            "method_body": "public int getMask() { return (1 << ordinal()); }\npublic int getMask() { return (1 << ordinal()); }",
            "method_id": 14
        },
        {
            "method_signature": "com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer:_thresholdSize(I)I",
            "method_body": "private static int _thresholdSize(int hashAreaSize) { return hashAreaSize - (hashAreaSize >> 2); }\nprivate static int _thresholdSize(int hashAreaSize) { return hashAreaSize - (hashAreaSize >> 2); }",
            "method_id": 15
        },
        {
            "method_signature": "com.fasterxml.jackson.core.JsonFactory$Feature:enabledIn(I)Z",
            "method_body": "public boolean enabledIn(int flags) { return (flags & getMask()) != 0; }\npublic boolean enabledIn(int flags) { return (flags & getMask()) != 0; }",
            "method_id": 16
        },
        {
            "method_signature": "com.fasterxml.jackson.core.util.BufferRecycler:calloc(I)[C",
            "method_body": "protected char[] calloc(int size) { return new char[size]; }\nprotected char[] calloc(int size) { return new char[size]; }",
            "method_id": 17
        },
        {
            "method_signature": "com.fasterxml.jackson.core.base.GeneratorBase:<init>(ILcom/fasterxml/jackson/core/ObjectCodec;Lcom/fasterxml/jackson/core/json/JsonWriteContext;)V",
            "method_body": "public final static int SURR1_FIRST = 0xD800;\nprotected final static int DERIVED_FEATURES_MASK = Feature.WRITE_NUMBERS_AS_STRINGS.getMask()\nprotected final String WRITE_BINARY = \"write a binary value\";\nprotected final String WRITE_BOOLEAN = \"write a boolean value\";\nprotected final String WRITE_NULL = \"write a null\";\nprotected final String WRITE_NUMBER = \"write a number\";\nprotected final String WRITE_RAW = \"write a raw (unencoded) value\";\nprotected final String WRITE_STRING = \"write a string\";\n* {@link com.fasterxml.jackson.core.JsonGenerator.Feature}s",
            "method_id": 18
        },
        {
            "method_signature": "com.fasterxml.jackson.core.util.BufferRecycler:<clinit>()V",
            "method_body": "private final static int[] CHAR_BUFFER_LENGTHS = new int[] { 4000, 4000, 200, 200 };\nprivate final static int[] CHAR_BUFFER_LENGTHS = new int[] { 4000, 4000, 200, 200 };",
            "method_id": 19
        }
    ]
}