{
    "bug_id": 2,
    "test_id": 0,
    "test_name": "com.fasterxml.jackson.core.json.TestParserErrorHandling.testMangledNumbersBytes",
    "test_body": "public void testMangledNumbersBytes() throws Exception {\n_testMangledNumbers(true);\n}\n",
    "stack_trace": "junit.framework.AssertionFailedError: Should have gotten an exception; instead got token: VALUE_NUMBER_INT\nat junit.framework.Assert.fail(Assert.java:57)\nat junit.framework.TestCase.fail(TestCase.java:227)\nat com.fasterxml.jackson.core.json.TestParserErrorHandling._testMangledNumbers(TestParserErrorHandling.java:93)\nat com.fasterxml.jackson.core.json.TestParserErrorHandling.testMangledNumbersBytes(TestParserErrorHandling.java:22)",
    "covered_methods": [
        {
            "method_signature": "com.fasterxml.jackson.core.util.BufferRecycler$ByteBufferType:<init>(Ljava/lang/String;II)V",
            "method_body": "ByteBufferType(int size) { this.size = size; }\nByteBufferType(int size) { this.size = size; }",
            "method_id": 60
        },
        {
            "method_signature": "com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer:createRoot()Lcom/fasterxml/jackson/core/sym/BytesToNameCanonicalizer;",
            "method_body": "public static BytesToNameCanonicalizer createRoot()\nlong now = System.currentTimeMillis();\nint seed = (((int) now) + ((int) (now >>> 32))) | 1;\nreturn createRoot(seed);\n}",
            "method_id": 61
        },
        {
            "method_signature": "com.fasterxml.jackson.core.util.BufferRecycler:allocByteBuffer(Lcom/fasterxml/jackson/core/util/BufferRecycler$ByteBufferType;)[B",
            "method_body": "public final byte[] allocByteBuffer(ByteBufferType type)\nint ix = type.ordinal();\nbyte[] buffer = _byteBuffers[ix];\nif (buffer == null) {\nbuffer = balloc(type.size);\nreturn buffer;\n}",
            "method_id": 62
        },
        {
            "method_signature": "com.fasterxml.jackson.core.json.UTF8StreamJsonParser:nextToken()Lcom/fasterxml/jackson/core/JsonToken;",
            "method_body": "public JsonToken nextToken()\n_numTypesValid = NR_UNKNOWN;\nif (_currToken == JsonToken.FIELD_NAME) {\nif (_tokenIncomplete) {\nint i = _skipWSOrEnd();\nif (i < 0) { // end-of-input\n_tokenInputTotal = _currInputProcessed + _inputPtr - 1;\n_tokenInputRow = _currInputRow;\n_tokenInputCol = _inputPtr - _currInputRowStart - 1;\n_binaryValue = null;\nif (i == INT_RBRACKET) {\n}",
            "method_id": 63
        },
        {
            "method_signature": "com.fasterxml.jackson.core.json.JsonReadContext:createRootContext()Lcom/fasterxml/jackson/core/json/JsonReadContext;",
            "method_body": "public static JsonReadContext createRootContext()\nreturn new JsonReadContext(null, TYPE_ROOT, 1, 0);\n}",
            "method_id": 64
        },
        {
            "method_signature": "com.fasterxml.jackson.core.JsonFactory:<init>()V",
            "method_body": "public JsonFactory() { this((ObjectCodec) null); }\npublic JsonFactory() { this((ObjectCodec) null); }",
            "method_id": 65
        },
        {
            "method_signature": "com.fasterxml.jackson.core.JsonParser:<init>()V",
            "method_body": "protected JsonParser() { }\nprotected JsonParser() { }",
            "method_id": 66
        },
        {
            "method_signature": "com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer:createRoot(I)Lcom/fasterxml/jackson/core/sym/BytesToNameCanonicalizer;",
            "method_body": "protected static BytesToNameCanonicalizer createRoot(int hashSeed) {\nreturn new BytesToNameCanonicalizer(DEFAULT_TABLE_SIZE, true, hashSeed);\n}",
            "method_id": 67
        },
        {
            "method_signature": "com.fasterxml.jackson.core.util.BufferRecycler:allocCharBuffer(Lcom/fasterxml/jackson/core/util/BufferRecycler$CharBufferType;I)[C",
            "method_body": "public final char[] allocCharBuffer(CharBufferType type, int minSize)\nif (type.size > minSize) {\nminSize = type.size;\nint ix = type.ordinal();\nchar[] buffer = _charBuffers[ix];\nif (buffer == null || buffer.length < minSize) {\nbuffer = calloc(minSize);\nreturn buffer;\n}",
            "method_id": 68
        },
        {
            "method_signature": "com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper:<init>(Lcom/fasterxml/jackson/core/io/IOContext;[BII)V",
            "method_body": "final static byte UTF8_BOM_1 = (byte) 0xEF;\nprotected boolean _bigEndian = true;\nprotected int _bytesPerChar = 0; // 0 means \"dunno yet\"\n{\n_context = ctxt;\n_in = in;\n_inputBuffer = ctxt.allocReadIOBuffer();\n_inputEnd = _inputPtr = 0;\n_inputProcessed = 0;\n_bufferRecyclable = true;\n}",
            "method_id": 69
        }
    ]
}