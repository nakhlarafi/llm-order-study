{
    "bug_id": 15,
    "test_id": 0,
    "test_name": "com.fasterxml.jackson.core.filter.BasicParserFilteringTest.testNotAllowMultipleMatches",
    "test_body": "public void testNotAllowMultipleMatches() throws Exception\n{\nString jsonString = aposToQuotes(\"{'a':123,'array':[1,2],'ob':{'value0':2,'value':3,'value2':4},'value':4,'b':true}\");\nJsonParser p0 = JSON_F.createParser(jsonString);\nJsonParser p = new FilteringParserDelegate(p0,\nnew NameMatchFilter(\"value\"),\nfalse, // includePath\nfalse // multipleMatches -false\n);\nString result = readAndWrite(JSON_F, p);\nassertEquals(aposToQuotes(\"3\"), result);\n}\n",
    "stack_trace": "junit.framework.ComparisonFailure: expected:<3[]> but was:<3[ 4]>\nat junit.framework.Assert.assertEquals(Assert.java:100)\nat junit.framework.Assert.assertEquals(Assert.java:107)\nat junit.framework.TestCase.assertEquals(TestCase.java:269)\nat com.fasterxml.jackson.core.filter.BasicParserFilteringTest.testNotAllowMultipleMatches(BasicParserFilteringTest.java:118)",
    "covered_methods": [
        {
            "method_signature": "com.fasterxml.jackson.core.JsonFactory$Feature:<init>(Ljava/lang/String;IZ)V",
            "method_body": "private Feature(boolean defaultState) { _defaultState = defaultState; }\nprivate Feature(boolean defaultState) { _defaultState = defaultState; }",
            "method_id": 160
        },
        {
            "method_signature": "com.fasterxml.jackson.core.JsonFactory:_createContext(Ljava/lang/Object;Z)Lcom/fasterxml/jackson/core/io/IOContext;",
            "method_body": "protected IOContext _createContext(Object srcRef, boolean resourceManaged) {\nreturn new IOContext(_getBufferRecycler(), srcRef, resourceManaged);\n}",
            "method_id": 161
        },
        {
            "method_signature": "com.fasterxml.jackson.core.JsonStreamContext:inObject()Z",
            "method_body": "public final boolean inObject() { return _type == TYPE_OBJECT; }\npublic final boolean inObject() { return _type == TYPE_OBJECT; }",
            "method_id": 162
        },
        {
            "method_signature": "com.fasterxml.jackson.core.io.CharTypes:<clinit>()V",
            "method_body": "private final static int[] sInputCodesComment;\nfinal int[] buf = new int[256];\nSystem.arraycopy(sInputCodesUTF8, 128, buf, 128, 128);\nArrays.fill(buf, 0, 32, -1); // invalid white space\nbuf['\\t'] = 0; // tab is still fine\nbuf['\\n'] = '\\n'; // lf/cr need to be observed, ends cpp comment\nbuf['\\r'] = '\\r';\nbuf['*'] = '*'; // end marker for c-style comments\nsInputCodesComment = buf;\n}",
            "method_id": 163
        },
        {
            "method_signature": "com.fasterxml.jackson.core.util.TextBuffer:getTextOffset()I",
            "method_body": "public int getTextOffset() {\nreturn (_inputStart >= 0) ? _inputStart : 0;\n}",
            "method_id": 164
        },
        {
            "method_signature": "com.fasterxml.jackson.core.filter.TokenFilterContext:createChildArrayContext(Lcom/fasterxml/jackson/core/filter/TokenFilter;Z)Lcom/fasterxml/jackson/core/filter/TokenFilterContext;",
            "method_body": "public TokenFilterContext createChildArrayContext(TokenFilter filter, boolean writeStart) {\nTokenFilterContext ctxt = _child;\nif (ctxt == null) {\n_child = ctxt = new TokenFilterContext(TYPE_ARRAY, this, filter, writeStart);\nreturn ctxt;\n}",
            "method_id": 165
        },
        {
            "method_signature": "com.fasterxml.jackson.core.io.CharTypes:copyHexChars()[C",
            "method_body": "public static char[] copyHexChars() {\nreturn (char[]) HC.clone();\n}",
            "method_id": 166
        },
        {
            "method_signature": "com.fasterxml.jackson.core.JsonParser:<init>(I)V",
            "method_body": "protected JsonParser(int features) { _features = features; }\nprotected JsonParser(int features) { _features = features; }",
            "method_id": 167
        },
        {
            "method_signature": "com.fasterxml.jackson.core.base.GeneratorBase:getOutputContext()Lcom/fasterxml/jackson/core/json/JsonWriteContext;",
            "method_body": "@Override public final JsonWriteContext getOutputContext() { return _writeContext; }\n@Override public final JsonWriteContext getOutputContext() { return _writeContext; }",
            "method_id": 168
        },
        {
            "method_signature": "com.fasterxml.jackson.core.JsonGenerator$Feature:collectDefaults()I",
            "method_body": "public static int collectDefaults()\nint flags = 0;\nfor (Feature f : values()) {\nif (f.enabledByDefault()) {\nflags |= f.getMask();\nreturn flags;\n}",
            "method_id": 169
        }
    ]
}