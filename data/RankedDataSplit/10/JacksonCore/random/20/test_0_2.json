{
    "bug_id": 20,
    "test_id": 0,
    "test_name": "com.fasterxml.jackson.core.base64.Base64GenerationTest.testBinaryAsEmbeddedObject",
    "test_body": "public void testBinaryAsEmbeddedObject() throws Exception\n{\nJsonGenerator g;\n98: StringWriter sw = new StringWriter();\ng = JSON_F.createGenerator(sw);\ng.writeEmbeddedObject(WIKIPEDIA_BASE64_AS_BYTES);\ng.close();",
    "stack_trace": "com.fasterxml.jackson.core.JsonGenerationException: No native support for writing embedded objects\nat com.fasterxml.jackson.core.JsonGenerator.writeEmbeddedObject(JsonGenerator.java:1330)\nat com.fasterxml.jackson.core.base64.Base64GenerationTest.testBinaryAsEmbeddedObject(Base64GenerationTest.java:100)",
    "covered_methods": [
        {
            "method_signature": "com.fasterxml.jackson.core.JsonGenerator:<init>()V",
            "method_body": "protected JsonGenerator() { }\nprotected JsonGenerator() { }",
            "method_id": 20
        },
        {
            "method_signature": "com.fasterxml.jackson.core.JsonProcessingException:<init>(Ljava/lang/String;Lcom/fasterxml/jackson/core/JsonLocation;Ljava/lang/Throwable;)V",
            "method_body": "protected JsonProcessingException(String msg, JsonLocation loc, Throwable rootCause) {\nsuper(msg);\nif (rootCause != null) {\n_location = loc;\n}",
            "method_id": 21
        },
        {
            "method_signature": "com.fasterxml.jackson.core.util.BufferRecycler:charBufferLength(I)I",
            "method_body": "protected int charBufferLength(int ix) {\nreturn CHAR_BUFFER_LENGTHS[ix];\n}",
            "method_id": 22
        },
        {
            "method_signature": "com.fasterxml.jackson.core.Base64Variant:<init>(Lcom/fasterxml/jackson/core/Base64Variant;Ljava/lang/String;ZCI)V",
            "method_body": "public Base64Variant(Base64Variant base, String name, boolean usesPadding, char paddingChar, int maxLineLength)\n{\n_name = name;\nbyte[] srcB = base._base64ToAsciiB;\nSystem.arraycopy(srcB, 0, this._base64ToAsciiB, 0, srcB.length);\nchar[] srcC = base._base64ToAsciiC;\nSystem.arraycopy(srcC, 0, this._base64ToAsciiC, 0, srcC.length);\nint[] srcV = base._asciiToBase64;\nSystem.arraycopy(srcV, 0, this._asciiToBase64, 0, srcV.length);\n_usesPadding = usesPadding;\n_paddingChar = paddingChar;\n_maxLineLength = maxLineLength;\n}",
            "method_id": 23
        },
        {
            "method_signature": "com.fasterxml.jackson.core.JsonParser$Feature:getMask()I",
            "method_body": "public int getMask() { return _mask; }\npublic int getMask() { return _mask; }",
            "method_id": 24
        },
        {
            "method_signature": "com.fasterxml.jackson.core.io.CharTypes:get7BitOutputEscapes()[I",
            "method_body": "public static int[] get7BitOutputEscapes() { return sOutputEscapes128; }\npublic static int[] get7BitOutputEscapes() { return sOutputEscapes128; }",
            "method_id": 25
        },
        {
            "method_signature": "com.fasterxml.jackson.core.JsonFactory:_decorate(Ljava/io/Writer;Lcom/fasterxml/jackson/core/io/IOContext;)Ljava/io/Writer;",
            "method_body": "protected final Writer _decorate(Writer out, IOContext ctxt) throws IOException {\nif (_outputDecorator != null) {\nreturn out;\n}",
            "method_id": 26
        },
        {
            "method_signature": "com.fasterxml.jackson.core.json.JsonGeneratorImpl:<init>(Lcom/fasterxml/jackson/core/io/IOContext;ILcom/fasterxml/jackson/core/ObjectCodec;)V",
            "method_body": "protected final static int[] sOutputEscapes = CharTypes.get7BitOutputEscapes();\nprotected int[] _outputEscapes = sOutputEscapes;\nprotected SerializableString _rootValueSeparator\nsuper(features, codec);\n_ioContext = ctxt;\nif (Feature.ESCAPE_NON_ASCII.enabledIn(features)) {\n_cfgUnqNames = !Feature.QUOTE_FIELD_NAMES.enabledIn(features);\n}",
            "method_id": 27
        },
        {
            "method_signature": "com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer:<init>(IZIZ)V",
            "method_body": "private ByteQuadsCanonicalizer(int sz, boolean intern, int seed, boolean failOnDoS) {\n_parent = null;\n_seed = seed;\n_intern = intern;\n_failOnDoS = failOnDoS;\nif (sz < MIN_HASH_SIZE) {\nif ((sz & (sz - 1)) != 0) { // only true if it's 2^N\n_tableInfo = new AtomicReference<TableInfo>(TableInfo.createInitial(sz));\n}",
            "method_id": 28
        },
        {
            "method_signature": "com.fasterxml.jackson.core.JsonFactory$Feature:enabledByDefault()Z",
            "method_body": "public boolean enabledByDefault() { return _defaultState; }\npublic boolean enabledByDefault() { return _defaultState; }",
            "method_id": 29
        }
    ]
}