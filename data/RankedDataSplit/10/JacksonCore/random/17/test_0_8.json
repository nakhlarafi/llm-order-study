{
    "bug_id": 17,
    "test_id": 0,
    "test_name": "com.fasterxml.jackson.core.json.RawValueWithSurrogatesTest.testRawWithSurrogatesString",
    "test_body": "public void testRawWithSurrogatesString() throws Exception {\n_testRawWithSurrogatesString(false);\n}\n",
    "stack_trace": "com.fasterxml.jackson.core.JsonGenerationException: Split surrogate on writeRaw() input (last character)\nat com.fasterxml.jackson.core.JsonGenerator._reportError(JsonGenerator.java:1723)\nat com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputRawMultiByteChar(UTF8JsonGenerator.java:1887)\nat com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeSegmentedRaw(UTF8JsonGenerator.java:658)\nat com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeRaw(UTF8JsonGenerator.java:573)\nat com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeRaw(UTF8JsonGenerator.java:536)\nat com.fasterxml.jackson.core.base.GeneratorBase.writeRawValue(GeneratorBase.java:299)\nat com.fasterxml.jackson.core.json.RawValueWithSurrogatesTest._testRawWithSurrogatesString(RawValueWithSurrogatesTest.java:82)",
    "covered_methods": [
        {
            "method_signature": "com.fasterxml.jackson.core.base.GeneratorBase:_decodeSurrogate(II)I",
            "method_body": "protected final int _decodeSurrogate(int surr1, int surr2) throws IOException\nif (surr2 < SURR2_FIRST || surr2 > SURR2_LAST) {\nint c = 0x10000 + ((surr1 - SURR1_FIRST) << 10) + (surr2 - SURR2_FIRST);\nreturn c;\n}",
            "method_id": 80
        },
        {
            "method_signature": "com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer:createRoot()Lcom/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer;",
            "method_body": "public static ByteQuadsCanonicalizer createRoot() {\nlong now = System.currentTimeMillis();\nint seed = (((int) now) + ((int) (now >>> 32))) | 1;\nreturn createRoot(seed);\n}",
            "method_id": 81
        },
        {
            "method_signature": "com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer$TableInfo:<init>(III[I[Ljava/lang/String;II)V",
            "method_body": "public TableInfo(int size, int count, int tertiaryShift,\n{\nthis.size = size;\nthis.count = count;\nthis.tertiaryShift = tertiaryShift;\nthis.mainHash = mainHash;\nthis.names = names;\nthis.spilloverEnd = spilloverEnd;\nthis.longNameOffset = longNameOffset;\n}",
            "method_id": 82
        },
        {
            "method_signature": "com.fasterxml.jackson.core.util.BufferRecycler:allocByteBuffer(I)[B",
            "method_body": "public final byte[] allocByteBuffer(int ix) {\nreturn allocByteBuffer(ix, 0);\n}",
            "method_id": 83
        },
        {
            "method_signature": "com.fasterxml.jackson.core.io.IOContext:allocConcatBuffer()[C",
            "method_body": "public char[] allocConcatBuffer() {\n_verifyAlloc(_concatCBuffer);\nreturn (_concatCBuffer = _bufferRecycler.allocCharBuffer(BufferRecycler.CHAR_CONCAT_BUFFER));\n}",
            "method_id": 84
        },
        {
            "method_signature": "com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer:_thresholdSize(I)I",
            "method_body": "private static int _thresholdSize(int hashAreaSize) { return hashAreaSize - (hashAreaSize >> 2); }\nprivate static int _thresholdSize(int hashAreaSize) { return hashAreaSize - (hashAreaSize >> 2); }",
            "method_id": 85
        },
        {
            "method_signature": "com.fasterxml.jackson.core.util.BufferRecycler:<init>(II)V",
            "method_body": "protected BufferRecycler(int bbCount, int cbCount) {\n_byteBuffers = new byte[bbCount][];\n_charBuffers = new char[cbCount][];\n}",
            "method_id": 86
        },
        {
            "method_signature": "com.fasterxml.jackson.core.JsonGenerator:_reportError(Ljava/lang/String;)V",
            "method_body": "protected void _reportError(String msg) throws JsonGenerationException {\nthrow new JsonGenerationException(msg, this);\n}",
            "method_id": 87
        },
        {
            "method_signature": "com.fasterxml.jackson.core.json.UTF8JsonGenerator:<clinit>()V",
            "method_body": "private final static byte[] TRUE_BYTES = { 't', 'r', 'u', 'e' };\nprivate final static byte[] TRUE_BYTES = { 't', 'r', 'u', 'e' };",
            "method_id": 88
        }
    ]
}