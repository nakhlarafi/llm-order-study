{
    "bug_id": 12,
    "test_id": 0,
    "test_name": "com.fasterxml.jackson.core.json.LocationInObjectTest.testOffsetWithObjectFieldsUsingReader",
    "test_body": "public void testOffsetWithObjectFieldsUsingReader() throws Exception\n{\nfinal JsonFactory f = new JsonFactory();\nchar[] c = \"{\\\"f1\\\":\\\"v1\\\",\\\"f2\\\":{\\\"f3\\\":\\\"v3\\\"},\\\"f4\\\":[true,false],\\\"f5\\\":5}\".toCharArray();\n//            1      6      11    16 17    22      28    33 34 39      46    51\nJsonParser p = f.createParser(c);\n61: assertEquals(JsonToken.START_OBJECT, p.nextToken());\n63: assertEquals(JsonToken.FIELD_NAME, p.nextToken());\nassertEquals(1L, p.getTokenLocation().getCharOffset());\nassertEquals(JsonToken.VALUE_STRING, p.nextToken());\nassertEquals(6L, p.getTokenLocation().getCharOffset());\n68: assertEquals(\"f2\", p.nextFieldName());\nassertEquals(11L, p.getTokenLocation().getCharOffset());\nassertEquals(JsonToken.START_OBJECT, p.nextValue());\nassertEquals(16L, p.getTokenLocation().getCharOffset());\n73: assertEquals(\"f3\", p.nextFieldName());\nassertEquals(17L, p.getTokenLocation().getCharOffset());\nassertEquals(JsonToken.VALUE_STRING, p.nextValue());\nassertEquals(22L, p.getTokenLocation().getCharOffset());\nassertEquals(JsonToken.END_OBJECT, p.nextToken());\n79: assertEquals(\"f4\", p.nextFieldName());\nassertEquals(28L, p.getTokenLocation().getCharOffset());\nassertEquals(JsonToken.START_ARRAY, p.nextValue());\nassertEquals(33L, p.getTokenLocation().getCharOffset());\n84: assertEquals(JsonToken.VALUE_TRUE, p.nextValue());\nassertEquals(34L, p.getTokenLocation().getCharOffset());\n87: assertEquals(JsonToken.VALUE_FALSE, p.nextValue());\nassertEquals(39L, p.getTokenLocation().getCharOffset());\nassertEquals(JsonToken.END_ARRAY, p.nextToken());\n91: assertEquals(\"f5\", p.nextFieldName());\nassertEquals(46L, p.getTokenLocation().getCharOffset());\nassertEquals(JsonToken.VALUE_NUMBER_INT, p.nextToken());\nassertEquals(51L, p.getTokenLocation().getCharOffset());\nassertEquals(JsonToken.END_OBJECT, p.nextToken());\n97: p.close();\n}\n",
    "stack_trace": "junit.framework.AssertionFailedError: expected:<6> but was:<1>\nat junit.framework.Assert.fail(Assert.java:57)\nat junit.framework.Assert.failNotEquals(Assert.java:329)\nat junit.framework.Assert.assertEquals(Assert.java:78)\nat junit.framework.Assert.assertEquals(Assert.java:159)\nat junit.framework.Assert.assertEquals(Assert.java:166)\nat junit.framework.TestCase.assertEquals(TestCase.java:324)\nat com.fasterxml.jackson.core.json.LocationInObjectTest.testOffsetWithObjectFieldsUsingReader(LocationInObjectTest.java:66)",
    "covered_methods": [
        {
            "method_signature": "com.fasterxml.jackson.core.JsonFactory:_createParser([CIILcom/fasterxml/jackson/core/io/IOContext;Z)Lcom/fasterxml/jackson/core/JsonParser;",
            "method_body": "protected JsonParser _createParser(char[] data, int offset, int len, IOContext ctxt,\nreturn new ReaderBasedJsonParser(ctxt, _parserFeatures, null, _objectCodec,\n}",
            "method_id": 0
        },
        {
            "method_signature": "com.fasterxml.jackson.core.JsonLocation:<clinit>()V",
            "method_body": "private static final long serialVersionUID = 1L;\npublic final static JsonLocation NA = new JsonLocation(\"N/A\", -1L, -1L, -1, -1);\n}",
            "method_id": 1
        },
        {
            "method_signature": "com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer:<init>(Lcom/fasterxml/jackson/core/sym/CharsToNameCanonicalizer;I[Ljava/lang/String;[Lcom/fasterxml/jackson/core/sym/CharsToNameCanonicalizer$Bucket;III)V",
            "method_body": "private CharsToNameCanonicalizer(CharsToNameCanonicalizer parent, int flags,\nString[] symbols, Bucket[] buckets, int size, int hashSeed, int longestColl) {\n_parent = parent;\n_flags = flags;\n_canonicalize = JsonFactory.Feature.CANONICALIZE_FIELD_NAMES.enabledIn(flags);\n_symbols = symbols;\n_buckets = buckets;\n_size = size;\n_hashSeed = hashSeed;\nint arrayLen = (symbols.length);\n_sizeThreshold = _thresholdSize(arrayLen);\n_indexMask =  (arrayLen - 1);\n_longestCollisionList = longestColl;\n_dirty = false;\n}",
            "method_id": 2
        },
        {
            "method_signature": "com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer:<init>()V",
            "method_body": "private CharsToNameCanonicalizer() {\n_canonicalize = true;\n_flags = -1;\n_dirty = true;\n_hashSeed = 0;\n_longestCollisionList = 0;\ninitTables(DEFAULT_T_SIZE);\n}",
            "method_id": 3
        },
        {
            "method_signature": "com.fasterxml.jackson.core.JsonFactory:isEnabled(Lcom/fasterxml/jackson/core/JsonFactory$Feature;)Z",
            "method_body": "public final boolean isEnabled(JsonFactory.Feature f) {\nreturn (_factoryFeatures & f.getMask()) != 0;\n}",
            "method_id": 4
        },
        {
            "method_signature": "com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer:findSymbol([CIII)Ljava/lang/String;",
            "method_body": "public String findSymbol(char[] buffer, int start, int len, int h)\nif (len < 1) { // empty Strings are simplest to handle up front\nif (!_canonicalize) { // [JACKSON-259]\nint index = _hashToIndex(h);\nString sym = _symbols[index];\nif (sym != null) {\nreturn _addSymbol(buffer, start, len, h, index);\n}",
            "method_id": 5
        },
        {
            "method_signature": "com.fasterxml.jackson.core.JsonParser$Feature:<init>(Ljava/lang/String;IZ)V",
            "method_body": "private Feature(boolean defaultState) {\n_mask = (1 << ordinal());\n_defaultState = defaultState;\n}",
            "method_id": 6
        },
        {
            "method_signature": "com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer:copyArrays()V",
            "method_body": "private void copyArrays() {\nfinal String[] oldSyms = _symbols;\n_symbols = Arrays.copyOf(oldSyms, oldSyms.length);\nfinal Bucket[] oldBuckets = _buckets;\n_buckets = Arrays.copyOf(oldBuckets, oldBuckets.length);\n}",
            "method_id": 7
        },
        {
            "method_signature": "com.fasterxml.jackson.core.JsonGenerator$Feature:<init>(Ljava/lang/String;IZ)V",
            "method_body": "private Feature(boolean defaultState) {\n_defaultState = defaultState;\n_mask = (1 << ordinal());\n}",
            "method_id": 8
        },
        {
            "method_signature": "com.fasterxml.jackson.core.json.JsonReadContext:setCurrentName(Ljava/lang/String;)V",
            "method_body": "public void setCurrentName(String name) throws JsonProcessingException {\n_currentName = name;\nif (_dups != null) { _checkDup(_dups, name); }\n}",
            "method_id": 9
        }
    ]
}