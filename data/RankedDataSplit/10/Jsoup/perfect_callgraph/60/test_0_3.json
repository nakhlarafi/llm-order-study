{
    "bug_id": 60,
    "test_id": 0,
    "test_name": "org.jsoup.select.QueryParserTest.testParsesSingleQuoteInContains",
    "test_body": "47: @Test(expected = Selector.SelectorParseException.class)  public void testParsesSingleQuoteInContains() {\n48: Evaluator parse = QueryParser.parse(\"p:contains(One \\\" One)\");\n49: }\n",
    "stack_trace": "",
    "covered_methods": [
        {
            "method_signature": "org.jsoup.select.QueryParser:contains(Z)V",
            "method_body": "private void contains(boolean own) {\ntq.consume(own ? \":containsOwn\" : \":contains\");\nString searchText = TokenQueue.unescape(tq.chompBalanced('(', ')'));\nValidate.notEmpty(searchText, \":contains(text) query must not be empty\");\nif (own)\nevals.add(new Evaluator.ContainsText(searchText));\n}",
            "method_id": 30
        },
        {
            "method_signature": "org.jsoup.select.CombiningEvaluator:<init>(Ljava/util/Collection;)V",
            "method_body": "CombiningEvaluator(Collection<Evaluator> evaluators) {\nthis();\nthis.evaluators.addAll(evaluators);\nupdateNumEvaluators();\n}",
            "method_id": 31
        },
        {
            "method_signature": "org.jsoup.select.CombiningEvaluator$And:<init>(Ljava/util/Collection;)V",
            "method_body": "And(Collection<Evaluator> evaluators) {\nsuper(evaluators);\n}",
            "method_id": 32
        }
    ]
}