{
    "bug_id": 50,
    "test_id": 0,
    "test_name": "org.jsoup.helper.DataUtilTest.supportsBOMinFiles",
    "test_body": "105: public void supportsBOMinFiles() throws IOException {\n106: // test files from http://www.i18nl10n.com/korean/utftest/\n107: File in = getFile(\"/bomtests/bom_utf16be.html\");\n108: Document doc = Jsoup.parse(in, null, \"http://example.com\");\n109: assertTrue(doc.title().contains(\"UTF-16BE\"));\n110: assertTrue(doc.text().contains(\"\u00ea\u00b0\u0080\u00ea\u00b0\u0081\u00ea\u00b0\u0082\u00ea\u00b0\u0083\u00ea\u00b0\u0084\u00ea\u00b0\u0085\"));\n111: 112: in = getFile(\"/bomtests/bom_utf16le.html\");\n113: doc = Jsoup.parse(in, null, \"http://example.com\");\n114: assertTrue(doc.title().contains(\"UTF-16LE\"));\n115: assertTrue(doc.text().contains(\"\u00ea\u00b0\u0080\u00ea\u00b0\u0081\u00ea\u00b0\u0082\u00ea\u00b0\u0083\u00ea\u00b0\u0084\u00ea\u00b0\u0085\"));\n116: 117: in = getFile(\"/bomtests/bom_utf32be.html\");\n118: doc = Jsoup.parse(in, null, \"http://example.com\");\n119: assertTrue(doc.title().contains(\"UTF-32BE\"));\n120: assertTrue(doc.text().contains(\"\u00ea\u00b0\u0080\u00ea\u00b0\u0081\u00ea\u00b0\u0082\u00ea\u00b0\u0083\u00ea\u00b0\u0084\u00ea\u00b0\u0085\"));\n121: 122: in = getFile(\"/bomtests/bom_utf32le.html\");\n123: doc = Jsoup.parse(in, null, \"http://example.com\");\n124: assertTrue(doc.title().contains(\"UTF-32LE\"));\n125: assertTrue(doc.text().contains(\"\u00ea\u00b0\u0080\u00ea\u00b0\u0081\u00ea\u00b0\u0082\u00ea\u00b0\u0083\u00ea\u00b0\u0084\u00ea\u00b0\u0085\"));\n126: }\n",
    "stack_trace": "",
    "covered_methods": [
        {
            "method_signature": "org.jsoup.helper.DataUtil:readFileToByteBuffer(Ljava/io/File;)Ljava/nio/ByteBuffer;",
            "method_body": "static ByteBuffer readFileToByteBuffer(File file) throws IOException {\nRandomAccessFile randomAccessFile = null;\nrandomAccessFile = new RandomAccessFile(file, \"r\");\nbyte[] bytes = new byte[(int) randomAccessFile.length()];\nrandomAccessFile.readFully(bytes);\nreturn ByteBuffer.wrap(bytes);\nif (randomAccessFile != null)\nrandomAccessFile.close();\n}",
            "method_id": 190
        }
    ]
}