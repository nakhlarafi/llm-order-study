{
    "bug_id": 52,
    "test_id": 4,
    "test_name": "org.jsoup.nodes.DocumentTest.testMetaCharsetUpdateXmlIso8859",
    "test_body": "328: public void testMetaCharsetUpdateXmlIso8859() {\n329: final Document doc = createXmlDocument(\"1.0\", \"changeThis\", true);\n330: doc.updateMetaCharsetElement(true);\n331: doc.charset(Charset.forName(charsetIso8859));\n332: 333: final String xmlCharsetISO = \"<?xml version=\\\"1.0\\\" encoding=\\\"\" + charsetIso8859 + \"\\\"?>\\n\" +\n334: \"<root>\\n\" +\n335: \" node\\n\" +\n336: \"</root>\";\n337: assertEquals(xmlCharsetISO, doc.toString());\n338: 339: XmlDeclaration selectedNode = (XmlDeclaration) doc.childNode(0);\n340: assertEquals(charsetIso8859, doc.charset().name());\n341: assertEquals(charsetIso8859, selectedNode.attr(\"encoding\"));\n342: assertEquals(doc.charset(), doc.outputSettings().charset());\n343: }\n",
    "stack_trace": "",
    "covered_methods": [
        {
            "method_signature": "org.jsoup.nodes.Document:updateMetaCharsetElement(Z)V",
            "method_body": "public void updateMetaCharsetElement(boolean update) {\nthis.updateMetaCharset = update;\n}",
            "method_id": 60
        },
        {
            "method_signature": "org.jsoup.nodes.Document:outputSettings()Lorg/jsoup/nodes/Document$OutputSettings;",
            "method_body": "public OutputSettings outputSettings() {\nreturn outputSettings;\n}",
            "method_id": 61
        },
        {
            "method_signature": "org.jsoup.parser.Tag:<clinit>()V",
            "method_body": "private static final String[] blockTags = {\n};",
            "method_id": 62
        },
        {
            "method_signature": "org.jsoup.parser.Tag:getName()Ljava/lang/String;",
            "method_body": "public String getName() {\nreturn tagName;\n}",
            "method_id": 63
        },
        {
            "method_signature": "org.jsoup.parser.Tag:formatAsBlock()Z",
            "method_body": "public boolean formatAsBlock() {\nreturn formatAsBlock;\n}",
            "method_id": 64
        },
        {
            "method_signature": "org.jsoup.parser.Tag:preserveWhitespace()Z",
            "method_body": "public boolean preserveWhitespace() {\nreturn preserveWhitespace;\n}",
            "method_id": 65
        },
        {
            "method_signature": "org.jsoup.parser.Tag:register(Lorg/jsoup/parser/Tag;)V",
            "method_body": "private static void register(Tag tag) {\ntags.put(tag.tagName, tag);\n}",
            "method_id": 66
        },
        {
            "method_signature": "org.jsoup.nodes.Document$OutputSettings:escapeMode()Lorg/jsoup/nodes/Entities$EscapeMode;",
            "method_body": "public Entities.EscapeMode escapeMode() {\nreturn escapeMode;\n}",
            "method_id": 67
        },
        {
            "method_signature": "org.jsoup.nodes.Document$OutputSettings:charset()Ljava/nio/charset/Charset;",
            "method_body": "public Charset charset() {\nreturn charset;\n}",
            "method_id": 68
        },
        {
            "method_signature": "org.jsoup.nodes.Document$OutputSettings:charset(Ljava/nio/charset/Charset;)Lorg/jsoup/nodes/Document$OutputSettings;",
            "method_body": "public OutputSettings charset(Charset charset) {\nthis.charset = charset;\ncharsetEncoder = charset.newEncoder();\nreturn this;\n}",
            "method_id": 69
        }
    ]
}