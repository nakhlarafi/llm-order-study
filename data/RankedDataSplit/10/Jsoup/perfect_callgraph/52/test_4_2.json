{
    "bug_id": 52,
    "test_id": 4,
    "test_name": "org.jsoup.nodes.DocumentTest.testMetaCharsetUpdateXmlIso8859",
    "test_body": "328: public void testMetaCharsetUpdateXmlIso8859() {\n329: final Document doc = createXmlDocument(\"1.0\", \"changeThis\", true);\n330: doc.updateMetaCharsetElement(true);\n331: doc.charset(Charset.forName(charsetIso8859));\n332: 333: final String xmlCharsetISO = \"<?xml version=\\\"1.0\\\" encoding=\\\"\" + charsetIso8859 + \"\\\"?>\\n\" +\n334: \"<root>\\n\" +\n335: \" node\\n\" +\n336: \"</root>\";\n337: assertEquals(xmlCharsetISO, doc.toString());\n338: 339: XmlDeclaration selectedNode = (XmlDeclaration) doc.childNode(0);\n340: assertEquals(charsetIso8859, doc.charset().name());\n341: assertEquals(charsetIso8859, selectedNode.attr(\"encoding\"));\n342: assertEquals(doc.charset(), doc.outputSettings().charset());\n343: }\n",
    "stack_trace": "",
    "covered_methods": [
        {
            "method_signature": "org.jsoup.nodes.Attributes:html(Ljava/lang/Appendable;Lorg/jsoup/nodes/Document$OutputSettings;)V",
            "method_body": "void html(Appendable accum, Document.OutputSettings out) throws IOException {\nif (attributes == null)\nreturn;\n}",
            "method_id": 20
        },
        {
            "method_signature": "org.jsoup.helper.Validate:noNullElements([Ljava/lang/Object;)V",
            "method_body": "public static void noNullElements(Object[] objects) {\nnoNullElements(objects, \"Array must not contain any null objects\");\n}",
            "method_id": 21
        },
        {
            "method_signature": "org.jsoup.helper.Validate:noNullElements([Ljava/lang/Object;Ljava/lang/String;)V",
            "method_body": "public static void noNullElements(Object[] objects, String msg) {\nfor (Object obj : objects)\nif (obj == null)\n}",
            "method_id": 22
        },
        {
            "method_signature": "org.jsoup.nodes.Node:<init>(Ljava/lang/String;Lorg/jsoup/nodes/Attributes;)V",
            "method_body": "protected Node(String baseUri, Attributes attributes) {\nValidate.notNull(baseUri);\nValidate.notNull(attributes);\nchildNodes = EMPTY_NODES;\nthis.baseUri = baseUri.trim();\nthis.attributes = attributes;\n}",
            "method_id": 23
        },
        {
            "method_signature": "org.jsoup.nodes.Node:<clinit>()V",
            "method_body": "private static final List<Node> EMPTY_NODES = Collections.emptyList();\nprotected Node(String baseUri, Attributes attributes) {\nValidate.notNull(baseUri);\nValidate.notNull(attributes);\nchildNodes = EMPTY_NODES;\nthis.baseUri = baseUri.trim();\nthis.attributes = attributes;\n}",
            "method_id": 24
        },
        {
            "method_signature": "org.jsoup.nodes.Node:baseUri()Ljava/lang/String;",
            "method_body": "public String baseUri() {\nreturn baseUri;\n}",
            "method_id": 25
        },
        {
            "method_signature": "org.jsoup.nodes.Node:childNode(I)Lorg/jsoup/nodes/Node;",
            "method_body": "public Node childNode(int index) {\nreturn childNodes.get(index);\n}",
            "method_id": 26
        },
        {
            "method_signature": "org.jsoup.nodes.Node:childNodes()Ljava/util/List;",
            "method_body": "public List<Node> childNodes() {\nreturn Collections.unmodifiableList(childNodes);\n}",
            "method_id": 27
        },
        {
            "method_signature": "org.jsoup.nodes.Node:childNodeSize()I",
            "method_body": "public final int childNodeSize() {\nreturn childNodes.size();\n}",
            "method_id": 28
        },
        {
            "method_signature": "org.jsoup.nodes.Node:parent()Lorg/jsoup/nodes/Node;",
            "method_body": "public Node parent() {\nreturn parentNode;\n}",
            "method_id": 29
        }
    ]
}