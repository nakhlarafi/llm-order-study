{
    "bug_id": 44,
    "test_id": 0,
    "test_name": "org.jsoup.parser.HtmlParserTest.testInvalidTableContents",
    "test_body": "855: public void testInvalidTableContents() throws IOException {\n856: File in = ParseTest.getFile(\"/htmltests/table-invalid-elements.html\");\n857: Document doc = Jsoup.parse(in, \"UTF-8\");\n858: doc.outputSettings().prettyPrint(true);\n859: String rendered = doc.toString();\n860: int endOfEmail = rendered.indexOf(\"Comment\");\n861: int guarantee = rendered.indexOf(\"Why am I here?\");\n862: assertTrue(\"Comment not found\", endOfEmail > -1);\n863: assertTrue(\"Search text not found\", guarantee > -1);\n864: assertTrue(\"Search text did not come after comment\", guarantee > endOfEmail);\n865: }\n",
    "stack_trace": "",
    "covered_methods": [
        {
            "method_signature": "org.jsoup.parser.HtmlTreeBuilder:newPendingTableCharacters()V",
            "method_body": "void newPendingTableCharacters() {\npendingTableCharacters = new ArrayList<String>();\n}",
            "method_id": 50
        },
        {
            "method_signature": "org.jsoup.parser.HtmlTreeBuilder:getPendingTableCharacters()Ljava/util/List;",
            "method_body": "List<String> getPendingTableCharacters() {\nreturn pendingTableCharacters;\n}",
            "method_id": 51
        },
        {
            "method_signature": "org.jsoup.parser.HtmlTreeBuilder:generateImpliedEndTags(Ljava/lang/String;)V",
            "method_body": "void generateImpliedEndTags(String excludeTag) {\nwhile ((excludeTag != null && !currentElement().nodeName().equals(excludeTag)) &&\n}",
            "method_id": 52
        },
        {
            "method_signature": "org.jsoup.parser.HtmlTreeBuilder:generateImpliedEndTags()V",
            "method_body": "void generateImpliedEndTags() {\ngenerateImpliedEndTags(null);\n}",
            "method_id": 53
        },
        {
            "method_signature": "org.jsoup.parser.HtmlTreeBuilder:lastFormattingElement()Lorg/jsoup/nodes/Element;",
            "method_body": "Element lastFormattingElement() {\nreturn formattingElements.size() > 0 ? formattingElements.get(formattingElements.size()-1) : null;\n}",
            "method_id": 54
        },
        {
            "method_signature": "org.jsoup.parser.HtmlTreeBuilder:removeLastFormattingElement()Lorg/jsoup/nodes/Element;",
            "method_body": "Element removeLastFormattingElement() {\nint size = formattingElements.size();\nif (size > 0)\nreturn formattingElements.remove(size-1);\n}",
            "method_id": 55
        },
        {
            "method_signature": "org.jsoup.parser.HtmlTreeBuilder:reconstructFormattingElements()V",
            "method_body": "void reconstructFormattingElements() {\nElement last = lastFormattingElement();\nif (last == null || onStack(last))\nreturn;\n}",
            "method_id": 56
        },
        {
            "method_signature": "org.jsoup.parser.HtmlTreeBuilder:clearFormattingElementsToLastMarker()V",
            "method_body": "void clearFormattingElementsToLastMarker() {\nwhile (!formattingElements.isEmpty()) {\nElement el = removeLastFormattingElement();\nif (el == null)\nbreak;\n}",
            "method_id": 57
        },
        {
            "method_signature": "org.jsoup.parser.HtmlTreeBuilder:insertMarkerToFormattingElements()V",
            "method_body": "void insertMarkerToFormattingElements() {\nformattingElements.add(null);\n}",
            "method_id": 58
        },
        {
            "method_signature": "org.jsoup.parser.HtmlTreeBuilder:insertInFosterParent(Lorg/jsoup/nodes/Node;)V",
            "method_body": "void insertInFosterParent(Node in) {\nElement lastTable = getFromStack(\"table\");\nboolean isLastTableParent = false;\nif (lastTable != null) {\nif (lastTable.parent() != null) {\nfosterParent = lastTable.parent();\nisLastTableParent = true;\nif (isLastTableParent) {\nValidate.notNull(lastTable); // last table cannot be null by this point.\nlastTable.before(in);\n}",
            "method_id": 59
        }
    ]
}