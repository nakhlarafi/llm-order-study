{
    "bug_id": 49,
    "test_id": 0,
    "test_name": "org.jsoup.nodes.ElementTest.appendMustCorrectlyMoveChildrenInsideOneParentElement",
    "test_body": "862: public void appendMustCorrectlyMoveChildrenInsideOneParentElement() {\n863: Document doc = new Document(\"\");\n864: Element body = doc.appendElement(\"body\");\n865: body.appendElement(\"div1\");\n866: body.appendElement(\"div2\");\n867: final Element div3 = body.appendElement(\"div3\");\n868: div3.text(\"Check\");\n869: final Element div4 = body.appendElement(\"div4\");\n870: 871: ArrayList<Element> toMove = new ArrayList<Element>();\n872: toMove.add(div3);\n873: toMove.add(div4);\n874: 875: body.insertChildren(0, toMove);\n876: 877: String result = doc.toString().replaceAll(\"\\\\s+\", \"\");\n878: assertEquals(\"<body><div3>Check</div3><div4></div4><div1></div1><div2></div2></body>\", result);\n879: 880: }\n",
    "stack_trace": "",
    "covered_methods": [
        {
            "method_signature": "org.jsoup.nodes.Element:nodeName()Ljava/lang/String;",
            "method_body": "public String nodeName() {\nreturn tag.getName();\n}",
            "method_id": 40
        },
        {
            "method_signature": "org.jsoup.nodes.Element:tagName()Ljava/lang/String;",
            "method_body": "public String tagName() {\nreturn tag.getName();\n}",
            "method_id": 41
        },
        {
            "method_signature": "org.jsoup.nodes.Element:tag()Lorg/jsoup/parser/Tag;",
            "method_body": "public Tag tag() {\nreturn tag;\n}",
            "method_id": 42
        },
        {
            "method_signature": "org.jsoup.nodes.Element:parent()Lorg/jsoup/nodes/Element;",
            "method_body": "public final Element parent() {\nreturn (Element) parentNode;\n}",
            "method_id": 43
        },
        {
            "method_signature": "org.jsoup.nodes.Element:appendChild(Lorg/jsoup/nodes/Node;)Lorg/jsoup/nodes/Element;",
            "method_body": "public Element appendChild(Node child) {\nValidate.notNull(child);\nreparentChild(child);\nensureChildNodes();\nchildNodes.add(child);\nchild.setSiblingIndex(childNodes.size() - 1);\nreturn this;\n}",
            "method_id": 44
        },
        {
            "method_signature": "org.jsoup.nodes.Element:insertChildren(ILjava/util/Collection;)Lorg/jsoup/nodes/Element;",
            "method_body": "public Element insertChildren(int index, Collection<? extends Node> children) {\nValidate.notNull(children, \"Children collection to be inserted must not be null.\");\nint currentSize = childNodeSize();\nif (index < 0) index += currentSize +1; // roll around\nValidate.isTrue(index >= 0 && index <= currentSize, \"Insert position out of bounds.\");\nArrayList<Node> nodes = new ArrayList<Node>(children);\nNode[] nodeArray = nodes.toArray(new Node[nodes.size()]);\naddChildren(index, nodeArray);\nreturn this;\n}",
            "method_id": 45
        },
        {
            "method_signature": "org.jsoup.nodes.Element:preserveWhitespace(Lorg/jsoup/nodes/Node;)Z",
            "method_body": "static boolean preserveWhitespace(Node node) {\nif (node != null && node instanceof Element) {\nElement element = (Element) node;\nreturn element.tag.preserveWhitespace() ||\n}",
            "method_id": 46
        },
        {
            "method_signature": "org.jsoup.nodes.Element:outerHtmlHead(Ljava/lang/StringBuilder;ILorg/jsoup/nodes/Document$OutputSettings;)V",
            "method_body": "void outerHtmlHead(StringBuilder accum, int depth, Document.OutputSettings out) {\nif (accum.length() > 0 && out.prettyPrint() && (tag.formatAsBlock() || (parent() != null && parent().tag().formatAsBlock()) || out.outline()) )\nindent(accum, depth, out);\naccum\nattributes.html(accum, out);\nif (childNodes.isEmpty() && tag.isSelfClosing()) {\naccum.append(\">\");\n}",
            "method_id": 47
        },
        {
            "method_signature": "org.jsoup.nodes.Element:outerHtmlTail(Ljava/lang/StringBuilder;ILorg/jsoup/nodes/Document$OutputSettings;)V",
            "method_body": "void outerHtmlTail(StringBuilder accum, int depth, Document.OutputSettings out) {\nif (!(childNodes.isEmpty() && tag.isSelfClosing())) {\nif (out.prettyPrint() && (!childNodes.isEmpty() && (\nindent(accum, depth, out);\naccum.append(\"</\").append(tagName()).append(\">\");\n}",
            "method_id": 48
        },
        {
            "method_signature": "org.jsoup.nodes.Element:html()Ljava/lang/String;",
            "method_body": "public String html() {\nStringBuilder accum = new StringBuilder();\nhtml(accum);\nreturn getOutputSettings().prettyPrint() ? accum.toString().trim() : accum.toString();\n}",
            "method_id": 49
        }
    ]
}