{
    "bug_id": 49,
    "test_id": 0,
    "test_name": "org.jsoup.nodes.ElementTest.appendMustCorrectlyMoveChildrenInsideOneParentElement",
    "test_body": "862: public void appendMustCorrectlyMoveChildrenInsideOneParentElement() {\n863: Document doc = new Document(\"\");\n864: Element body = doc.appendElement(\"body\");\n865: body.appendElement(\"div1\");\n866: body.appendElement(\"div2\");\n867: final Element div3 = body.appendElement(\"div3\");\n868: div3.text(\"Check\");\n869: final Element div4 = body.appendElement(\"div4\");\n870: 871: ArrayList<Element> toMove = new ArrayList<Element>();\n872: toMove.add(div3);\n873: toMove.add(div4);\n874: 875: body.insertChildren(0, toMove);\n876: 877: String result = doc.toString().replaceAll(\"\\\\s+\", \"\");\n878: assertEquals(\"<body><div3>Check</div3><div4></div4><div1></div1><div2></div2></body>\", result);\n879: 880: }\n",
    "stack_trace": "",
    "covered_methods": [
        {
            "method_signature": "org.jsoup.nodes.Node:baseUri()Ljava/lang/String;",
            "method_body": "public String baseUri() {\nreturn baseUri;\n}",
            "method_id": 20
        },
        {
            "method_signature": "org.jsoup.nodes.Node:childNode(I)Lorg/jsoup/nodes/Node;",
            "method_body": "public Node childNode(int index) {\nreturn childNodes.get(index);\n}",
            "method_id": 21
        },
        {
            "method_signature": "org.jsoup.nodes.Node:childNodeSize()I",
            "method_body": "public final int childNodeSize() {\nreturn childNodes.size();\n}",
            "method_id": 22
        },
        {
            "method_signature": "org.jsoup.nodes.Node:parent()Lorg/jsoup/nodes/Node;",
            "method_body": "public Node parent() {\nreturn parentNode;\n}",
            "method_id": 23
        },
        {
            "method_signature": "org.jsoup.nodes.Node:parentNode()Lorg/jsoup/nodes/Node;",
            "method_body": "public final Node parentNode() {\nreturn parentNode;\n}",
            "method_id": 24
        },
        {
            "method_signature": "org.jsoup.nodes.Node:ownerDocument()Lorg/jsoup/nodes/Document;",
            "method_body": "public Document ownerDocument() {\nif (this instanceof Document)\nreturn (Document) this;\nelse if (parentNode == null)\nreturn parentNode.ownerDocument();\n}",
            "method_id": 25
        },
        {
            "method_signature": "org.jsoup.nodes.Node:setParentNode(Lorg/jsoup/nodes/Node;)V",
            "method_body": "protected void setParentNode(Node parentNode) {\nif (this.parentNode != null)\nthis.parentNode = parentNode;\n}",
            "method_id": 26
        },
        {
            "method_signature": "org.jsoup.nodes.Node:removeChild(Lorg/jsoup/nodes/Node;)V",
            "method_body": "protected void removeChild(Node out) {\nValidate.isTrue(out.parentNode == this);\nfinal int index = out.siblingIndex;\nchildNodes.remove(index);\nreindexChildren(index);\nout.parentNode = null;\n}",
            "method_id": 27
        },
        {
            "method_signature": "org.jsoup.nodes.Node:ensureChildNodes()V",
            "method_body": "protected void ensureChildNodes() {\nif (childNodes == EMPTY_NODES) {\nchildNodes = new ArrayList<Node>(4);\n}",
            "method_id": 28
        },
        {
            "method_signature": "org.jsoup.nodes.Node:reparentChild(Lorg/jsoup/nodes/Node;)V",
            "method_body": "protected void reparentChild(Node child) {\nif (child.parentNode != null)\nchild.parentNode.removeChild(child);\nchild.setParentNode(this);\n}",
            "method_id": 29
        }
    ]
}