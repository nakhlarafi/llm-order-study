{
    "bug_id": 10,
    "test_id": 0,
    "test_name": "org.jsoup.nodes.NodeTest.absHandlesRelativeQuery",
    "test_body": "45: @Test public void absHandlesRelativeQuery() {\n46: Document doc = Jsoup.parse(\"<a href='?foo'>One</a> <a href='bar.html?foo'>Two</a>\", \"http://jsoup.org/path/file?bar\");\n47: 48: Element a1 = doc.select(\"a\").first();\n49: assertEquals(\"http://jsoup.org/path/file?foo\", a1.absUrl(\"href\"));\n50: 51: Element a2 = doc.select(\"a\").get(1);\n52: assertEquals(\"http://jsoup.org/path/bar.html?foo\", a2.absUrl(\"href\"));\n53: }\n",
    "stack_trace": "",
    "covered_methods": [
        {
            "method_signature": "org.jsoup.nodes.Attribute:getValue()Ljava/lang/String;",
            "method_body": "public String getValue() {\nreturn value;\n}",
            "method_id": 110
        },
        {
            "method_signature": "org.jsoup.nodes.Attribute:createFromEncoded(Ljava/lang/String;Ljava/lang/String;)Lorg/jsoup/nodes/Attribute;",
            "method_body": "public static Attribute createFromEncoded(String unencodedKey, String encodedValue) {\nString value = Entities.unescape(encodedValue);\nreturn new Attribute(unencodedKey, value);\n}",
            "method_id": 111
        },
        {
            "method_signature": "org.jsoup.nodes.Attribute:hashCode()I",
            "method_body": "public int hashCode() {\nint result = key != null ? key.hashCode() : 0;\nresult = 31 * result + (value != null ? value.hashCode() : 0);\nreturn result;\n}",
            "method_id": 112
        },
        {
            "method_signature": "org.jsoup.nodes.Evaluator:<init>()V",
            "method_body": "private Evaluator() {}\nprivate Evaluator() {}",
            "method_id": 113
        },
        {
            "method_signature": "org.jsoup.nodes.Evaluator$Tag:<init>(Ljava/lang/String;)V",
            "method_body": "public abstract boolean matches(Element element);\nTag (String tagName) {\nthis.tagName = tagName;\n}\nreturn (element.tagName().equals(tagName));\n}",
            "method_id": 114
        },
        {
            "method_signature": "org.jsoup.nodes.Evaluator$Tag:matches(Lorg/jsoup/nodes/Element;)Z",
            "method_body": "public abstract boolean matches(Element element);\nTag (String tagName) {\nthis.tagName = tagName;\n}\nreturn (element.tagName().equals(tagName));\n}",
            "method_id": 115
        },
        {
            "method_signature": "org.jsoup.select.Collector:collect(Lorg/jsoup/nodes/Evaluator;Lorg/jsoup/nodes/Element;)Lorg/jsoup/select/Elements;",
            "method_body": "public static Elements collect (Evaluator eval, Element root) {\nElements elements = new Elements();\nnew NodeTraversor(new Accumulator(elements, eval)).traverse(root);\nreturn elements;\n}",
            "method_id": 116
        },
        {
            "method_signature": "org.jsoup.select.Elements:<init>()V",
            "method_body": "public Elements() {\ncontents = new ArrayList<Element>();\n}",
            "method_id": 117
        },
        {
            "method_signature": "org.jsoup.select.Elements:<init>(Ljava/util/Collection;)V",
            "method_body": "public Elements(Collection<Element> elements) {\ncontents = new ArrayList<Element>(elements);\n}",
            "method_id": 118
        },
        {
            "method_signature": "org.jsoup.select.Elements:size()I",
            "method_body": "public int size() {return contents.size();}\npublic int size() {return contents.size();}",
            "method_id": 119
        }
    ]
}