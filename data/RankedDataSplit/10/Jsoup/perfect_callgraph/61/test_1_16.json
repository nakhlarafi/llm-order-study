{
    "bug_id": 61,
    "test_id": 1,
    "test_name": "org.jsoup.select.SelectorTest.testByClassCaseInsensitive",
    "test_body": "51: @Test public void testByClassCaseInsensitive() {\n52: String html = \"<p Class=foo>One <p Class=Foo>Two <p class=FOO>Three <p class=farp>Four\";\n53: Elements elsFromClass = Jsoup.parse(html).select(\"P.Foo\");\n54: Elements elsFromAttr = Jsoup.parse(html).select(\"p[class=foo]\");\n55: 56: assertEquals(elsFromAttr.size(), elsFromClass.size());\n57: assertEquals(3, elsFromClass.size());\n58: assertEquals(\"Two\", elsFromClass.get(1).text());\n59: }\n",
    "stack_trace": "",
    "covered_methods": [
        {
            "method_signature": "org.jsoup.helper.StringUtil:inSorted(Ljava/lang/String;[Ljava/lang/String;)Z",
            "method_body": "public static boolean inSorted(String needle, String[] haystack) {\nreturn Arrays.binarySearch(haystack, needle) >= 0;\n}",
            "method_id": 160
        },
        {
            "method_signature": "org.jsoup.parser.HtmlTreeBuilderState$Constants:<clinit>()V",
            "method_body": "private static final String[] InBodyStartMedia = new String[]{\"param\", \"source\", \"track\"};\nprivate static final String[] InBodyStartMedia = new String[]{\"param\", \"source\", \"track\"};",
            "method_id": 161
        },
        {
            "method_signature": "org.jsoup.nodes.TextNode:<init>(Ljava/lang/String;Ljava/lang/String;)V",
            "method_body": "public TextNode(String text, String baseUri) {\nthis.baseUri = baseUri;\nthis.text = text;\n}",
            "method_id": 162
        },
        {
            "method_signature": "org.jsoup.nodes.Attribute:<init>(Ljava/lang/String;Ljava/lang/String;)V",
            "method_body": "public Attribute(String key, String value) {\nValidate.notNull(key);\nValidate.notNull(value);\nthis.key = key.trim();\nValidate.notEmpty(key); // trimming could potentially make empty, so validate here\nthis.value = value;\n}",
            "method_id": 163
        },
        {
            "method_signature": "org.jsoup.nodes.Attribute:<clinit>()V",
            "method_body": "private static final String[] booleanAttributes = {\n};",
            "method_id": 164
        },
        {
            "method_signature": "org.jsoup.nodes.Attribute:getKey()Ljava/lang/String;",
            "method_body": "public String getKey() {\nreturn key;\n}",
            "method_id": 165
        },
        {
            "method_signature": "org.jsoup.nodes.Attribute:setKey(Ljava/lang/String;)V",
            "method_body": "public void setKey(String key) {\nValidate.notEmpty(key);\nthis.key = key.trim();\n}",
            "method_id": 166
        },
        {
            "method_signature": "org.jsoup.nodes.Attribute:getValue()Ljava/lang/String;",
            "method_body": "public String getValue() {\nreturn value;\n}",
            "method_id": 167
        },
        {
            "method_signature": "org.jsoup.parser.Token$EOF:<init>()V",
            "method_body": "EOF() {\ntype = Token.TokenType.EOF;\n}",
            "method_id": 168
        },
        {
            "method_signature": "org.jsoup.parser.Token$EOF:reset()Lorg/jsoup/parser/Token;",
            "method_body": "Token reset() {\nreturn this;\n}",
            "method_id": 169
        }
    ]
}