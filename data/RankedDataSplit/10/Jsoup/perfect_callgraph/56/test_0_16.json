{
    "bug_id": 56,
    "test_id": 0,
    "test_name": "org.jsoup.nodes.DocumentTypeTest.testRoundTrip",
    "test_body": "44: @Test public void testRoundTrip() {\n45: String base = \"<!DOCTYPE html>\";\n46: assertEquals(\"<!doctype html>\", htmlOutput(base));\n47: assertEquals(base, xmlOutput(base));\n48: 49: String publicDoc = \"<!DOCTYPE html PUBLIC \\\"-//W3C//DTD XHTML 1.0 Transitional//EN\\\" \\\"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\\\">\";\n50: assertEquals(publicDoc, htmlOutput(publicDoc));\n51: assertEquals(publicDoc, xmlOutput(publicDoc));\n52: 53: String systemDoc = \"<!DOCTYPE html SYSTEM \\\"exampledtdfile.dtd\\\">\";\n54: assertEquals(systemDoc, htmlOutput(systemDoc));\n55: assertEquals(systemDoc, xmlOutput(systemDoc));\n56: 57: String legacyDoc = \"<!DOCTYPE html SYSTEM \\\"about:legacy-compat\\\">\";\n58: assertEquals(legacyDoc, htmlOutput(legacyDoc));\n59: assertEquals(legacyDoc, xmlOutput(legacyDoc));\n60: }\n",
    "stack_trace": "",
    "covered_methods": [
        {
            "method_signature": "org.jsoup.parser.Token$Doctype:getName()Ljava/lang/String;",
            "method_body": "String getName() {\nreturn name.toString();\n}",
            "method_id": 160
        },
        {
            "method_signature": "org.jsoup.parser.Token$Doctype:getPublicIdentifier()Ljava/lang/String;",
            "method_body": "String getPublicIdentifier() {\nreturn publicIdentifier.toString();\n}",
            "method_id": 161
        },
        {
            "method_signature": "org.jsoup.parser.Token$Doctype:getSystemIdentifier()Ljava/lang/String;",
            "method_body": "public String getSystemIdentifier() {\nreturn systemIdentifier.toString();\n}",
            "method_id": 162
        },
        {
            "method_signature": "org.jsoup.parser.Token$Doctype:isForceQuirks()Z",
            "method_body": "public boolean isForceQuirks() {\nreturn forceQuirks;\n}",
            "method_id": 163
        },
        {
            "method_signature": "org.jsoup.parser.Token$Comment:<init>()V",
            "method_body": "final StringBuilder data = new StringBuilder();\nboolean bogus = false;\n}",
            "method_id": 164
        },
        {
            "method_signature": "org.jsoup.nodes.Attribute:<init>(Ljava/lang/String;Ljava/lang/String;)V",
            "method_body": "public Attribute(String key, String value) {\nValidate.notEmpty(key);\nValidate.notNull(value);\nthis.key = key.trim();\nthis.value = value;\n}",
            "method_id": 165
        },
        {
            "method_signature": "org.jsoup.nodes.Attribute:<clinit>()V",
            "method_body": "private static final String[] booleanAttributes = {\n};",
            "method_id": 166
        },
        {
            "method_signature": "org.jsoup.nodes.Attribute:getKey()Ljava/lang/String;",
            "method_body": "public String getKey() {\nreturn key;\n}",
            "method_id": 167
        },
        {
            "method_signature": "org.jsoup.nodes.Attribute:getValue()Ljava/lang/String;",
            "method_body": "public String getValue() {\nreturn value;\n}",
            "method_id": 168
        },
        {
            "method_signature": "org.jsoup.parser.HtmlTreeBuilderState$24:<clinit>()V",
            "method_body": "boolean process(Token t, HtmlTreeBuilder tb) {\nif (isWhitespace(t)) {\nswitch (t.type) {\nToken.EndTag end = t.asEndTag();\nname = end.normalName();\nif (name.equals(\"head\")) {\ntb.pop();\ntb.transition(AfterHead);\nreturn anythingElse(t, tb);\nreturn true;\n}",
            "method_id": 169
        }
    ]
}