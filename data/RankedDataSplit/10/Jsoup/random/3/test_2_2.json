{
    "bug_id": 3,
    "test_id": 2,
    "test_name": "org.jsoup.nodes.ElementTest.testPrependRowToTable",
    "test_body": "222: @Test public void testPrependRowToTable() {\n223: Document doc = Jsoup.parse(\"<table><tr><td>1</td></tr></table>\");\n224: Element table = doc.select(\"table\").first();\n225: table.prepend(\"<tr><td>2</td></tr>\");\n226: 227: assertEquals(\"<table><tr><td>2</td></tr><tr><td>1</td></tr></table>\", TextUtil.stripNewlines(doc.body().html()));\n228: }\n",
    "stack_trace": "",
    "covered_methods": [
        {
            "method_signature": "org.jsoup.nodes.Document:createShell(Ljava/lang/String;)Lorg/jsoup/nodes/Document;",
            "method_body": "static public Document createShell(String baseUri) {\nValidate.notNull(baseUri);\nDocument doc = new Document(baseUri);\nElement html = doc.appendElement(\"html\");\nhtml.appendElement(\"head\");\nhtml.appendElement(\"body\");\nreturn doc;\n}",
            "method_id": 20
        },
        {
            "method_signature": "org.jsoup.select.Elements:<init>()V",
            "method_body": "public Elements() {\ncontents = new ArrayList<Element>();\n}",
            "method_id": 21
        },
        {
            "method_signature": "org.jsoup.nodes.Attributes:<init>()V",
            "method_body": "private LinkedHashMap<String, Attribute> attributes = new LinkedHashMap<String, Attribute>();\nValidate.notEmpty(key);\nAttribute attr = attributes.get(key.toLowerCase());\nreturn attr != null ? attr.getValue() : \"\";\n}",
            "method_id": 22
        },
        {
            "method_signature": "org.jsoup.nodes.Element:tagName()Ljava/lang/String;",
            "method_body": "public String tagName() {\nreturn tag.getName();\n}",
            "method_id": 23
        },
        {
            "method_signature": "org.jsoup.select.Collector:accumulateMatches(Lorg/jsoup/nodes/Evaluator;Ljava/util/List;Lorg/jsoup/nodes/Element;)V",
            "method_body": "private static void accumulateMatches(Evaluator eval, List<Element> elements, Element element) {\nif (eval.matches(element))\nelements.add(element);\nfor (Element child: element.children())\naccumulateMatches(eval, elements, child);\n}",
            "method_id": 24
        },
        {
            "method_signature": "org.jsoup.nodes.Attribute:getKey()Ljava/lang/String;",
            "method_body": "public String getKey() {\nreturn key;\n}",
            "method_id": 25
        },
        {
            "method_signature": "org.jsoup.parser.TokenQueue:isEmpty()Z",
            "method_body": "public boolean isEmpty() {\nreturn queue.isEmpty();\n}",
            "method_id": 26
        },
        {
            "method_signature": "org.jsoup.parser.Tag:setEmpty()Lorg/jsoup/parser/Tag;",
            "method_body": "private Tag setEmpty() {\ncanContainBlock = false;\ncanContainInline = false;\nempty = true;\nreturn this;\n}",
            "method_id": 27
        },
        {
            "method_signature": "org.jsoup.nodes.Node:baseUri()Ljava/lang/String;",
            "method_body": "public String baseUri() {\nreturn baseUri;\n}",
            "method_id": 28
        },
        {
            "method_signature": "org.jsoup.nodes.Element:prependChild(Lorg/jsoup/nodes/Node;)Lorg/jsoup/nodes/Element;",
            "method_body": "public Element prependChild(Node child) {\nValidate.notNull(child);\nchild.setParentNode(this);\nchildNodes.add(0, child);\nreturn this;\n}",
            "method_id": 29
        }
    ]
}