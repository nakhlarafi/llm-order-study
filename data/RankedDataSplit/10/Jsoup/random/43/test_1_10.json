{
    "bug_id": 43,
    "test_id": 1,
    "test_name": "org.jsoup.nodes.ElementTest.testGetSiblingsWithDuplicateContent",
    "test_body": "120: @Test public void testGetSiblingsWithDuplicateContent() {\n121: Document doc = Jsoup.parse(\"<div><p>Hello<p id=1>there<p>this<p>this<p>is<p>an<p id=last>element</div>\");\n122: Element p = doc.getElementById(\"1\");\n123: assertEquals(\"there\", p.text());\n124: assertEquals(\"Hello\", p.previousElementSibling().text());\n125: assertEquals(\"this\", p.nextElementSibling().text());\n126: assertEquals(\"this\", p.nextElementSibling().nextElementSibling().text());\n127: assertEquals(\"is\", p.nextElementSibling().nextElementSibling().nextElementSibling().text());\n128: assertEquals(\"Hello\", p.firstElementSibling().text());\n129: assertEquals(\"element\", p.lastElementSibling().text());\n130: }\n",
    "stack_trace": "",
    "covered_methods": [
        {
            "method_signature": "org.jsoup.nodes.Node:nextSibling()Lorg/jsoup/nodes/Node;",
            "method_body": "public Node nextSibling() {\nif (parentNode == null)\nreturn null; // root\nfinal List<Node> siblings = parentNode.childNodes;\nfinal int index = siblingIndex+1;\nif (siblings.size() > index)\nreturn siblings.get(index);\nreturn null;\n}",
            "method_id": 100
        },
        {
            "method_signature": "org.jsoup.parser.HtmlTreeBuilder:inScope(Ljava/lang/String;[Ljava/lang/String;)Z",
            "method_body": "boolean inScope(String targetName, String[] extras) {\nreturn inSpecificScope(targetName, TagsSearchInScope, extras);\n}",
            "method_id": 101
        },
        {
            "method_signature": "org.jsoup.parser.Token:isComment()Z",
            "method_body": "final boolean isComment() {\nreturn type == TokenType.Comment;\n}",
            "method_id": 102
        },
        {
            "method_signature": "org.jsoup.parser.Token$Character:getData()Ljava/lang/String;",
            "method_body": "String getData() {\nreturn data;\n}",
            "method_id": 103
        },
        {
            "method_signature": "org.jsoup.parser.TreeBuilder:runParser()V",
            "method_body": "protected void runParser() {\nToken token = tokeniser.read();\nprocess(token);\ntoken.reset();\nif (token.type == Token.TokenType.EOF)\nbreak;\n}\n}",
            "method_id": 104
        },
        {
            "method_signature": "org.jsoup.parser.Token$Tag:<init>()V",
            "method_body": "protected String tagName;\nprivate StringBuilder pendingAttributeValue = new StringBuilder(); // but values are accumulated, from e.g. & in hrefs\nprivate boolean hasPendingAttributeValue = false;\nboolean selfClosing = false;\ntagName = null;\npendingAttributeName = null;\nreset(pendingAttributeValue);\nhasPendingAttributeValue = false;\nselfClosing = false;\nattributes = null;\nreturn this;\n}",
            "method_id": 105
        },
        {
            "method_signature": "org.jsoup.parser.Token$Tag:newAttribute()V",
            "method_body": "final void newAttribute() {\nif (attributes == null)\nif (pendingAttributeName != null) {\nif (!hasPendingAttributeValue)\nattribute = new Attribute(pendingAttributeName, pendingAttributeValue.toString());\nattributes.put(attribute);\npendingAttributeName = null;\nreset(pendingAttributeValue);\n}",
            "method_id": 106
        },
        {
            "method_signature": "org.jsoup.parser.CharacterReader:<init>(Ljava/lang/String;)V",
            "method_body": "static final char EOF = (char) -1;\nprivate int pos = 0;\nprivate int mark = 0;\nprivate final String[] stringCache = new String[512]; // holds reused strings in this doc, to lessen garbage\nCharacterReader(String input) {\nValidate.notNull(input);\nthis.input = input.toCharArray();\nthis.length = this.input.length;\n}",
            "method_id": 107
        },
        {
            "method_signature": "org.jsoup.parser.HtmlTreeBuilder:inScope(Ljava/lang/String;)Z",
            "method_body": "boolean inScope(String targetName) {\nreturn inScope(targetName, null);\n}",
            "method_id": 108
        },
        {
            "method_signature": "org.jsoup.parser.HtmlTreeBuilderState$6:anythingElse(Lorg/jsoup/parser/Token;Lorg/jsoup/parser/HtmlTreeBuilder;)Z",
            "method_body": "private boolean anythingElse(Token t, HtmlTreeBuilder tb) {\ntb.processStartTag(\"body\");\ntb.framesetOk(true);\nreturn tb.process(t);\n}",
            "method_id": 109
        }
    ]
}