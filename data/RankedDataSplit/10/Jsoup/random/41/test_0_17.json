{
    "bug_id": 41,
    "test_id": 0,
    "test_name": "org.jsoup.nodes.ElementTest.testHashAndEquals",
    "test_body": "754: public void testHashAndEquals() {\n755: String doc1 = \"<div id=1><p class=one>One</p><p class=one>One</p><p class=one>Two</p><p class=two>One</p></div>\" +\n756: \"<div id=2><p class=one>One</p><p class=one>One</p><p class=one>Two</p><p class=two>One</p></div>\";\n757: 758: Document doc = Jsoup.parse(doc1);\n759: Elements els = doc.select(\"p\");\n760: 761: /*\n762: for (Element el : els) {\n763: System.out.println(el.hashCode() + \" - \" + el.outerHtml());\n764: }\n765: 766: 0 1534787905 - <p class=\"one\">One</p>\n767: 1 1534787905 - <p class=\"one\">One</p>\n768: 2 1539683239 - <p class=\"one\">Two</p>\n769: 3 1535455211 - <p class=\"two\">One</p>\n770: 4 1534787905 - <p class=\"one\">One</p>\n771: 5 1534787905 - <p class=\"one\">One</p>\n772: 6 1539683239 - <p class=\"one\">Two</p>\n773: 7 1535455211 - <p class=\"two\">One</p>\n774: */\n775: assertEquals(8, els.size());\n776: Element e0 = els.get(0);\n777: Element e1 = els.get(1);\n778: Element e2 = els.get(2);\n779: Element e3 = els.get(3);\n780: Element e4 = els.get(4);\n781: Element e5 = els.get(5);\n782: Element e6 = els.get(6);\n783: Element e7 = els.get(7);\n784: 785: assertEquals(e0, e1);\n786: assertEquals(e0, e4);\n787: assertEquals(e0, e5);\n788: assertFalse(e0.equals(e2));\n789: assertFalse(e0.equals(e3));\n790: assertFalse(e0.equals(e6));\n791: assertFalse(e0.equals(e7));\n792: 793: assertEquals(e0.hashCode(), e1.hashCode());\n794: assertEquals(e0.hashCode(), e4.hashCode());\n795: assertEquals(e0.hashCode(), e5.hashCode());\n796: assertFalse(e0.hashCode() == (e2.hashCode()));\n797: assertFalse(e0.hashCode() == (e3).hashCode());\n798: assertFalse(e0.hashCode() == (e6).hashCode());\n799: assertFalse(e0.hashCode() == (e7).hashCode());\n800: }\n",
    "stack_trace": "",
    "covered_methods": [
        {
            "method_signature": "org.jsoup.parser.TokenQueue:matches(Ljava/lang/String;)Z",
            "method_body": "public boolean matches(String seq) {\nreturn queue.regionMatches(true, pos, seq, 0, seq.length());\n}",
            "method_id": 170
        },
        {
            "method_signature": "org.jsoup.parser.HtmlTreeBuilder:transition(Lorg/jsoup/parser/HtmlTreeBuilderState;)V",
            "method_body": "void transition(HtmlTreeBuilderState state) {\nthis.state = state;\n}",
            "method_id": 171
        },
        {
            "method_signature": "org.jsoup.parser.TokenQueue:matchChomp(Ljava/lang/String;)Z",
            "method_body": "public boolean matchChomp(String seq) {\nif (matches(seq)) {\nreturn false;\n}",
            "method_id": 172
        },
        {
            "method_signature": "org.jsoup.parser.HtmlTreeBuilder:framesetOk()Z",
            "method_body": "boolean framesetOk() {\nreturn framesetOk;\n}",
            "method_id": 173
        },
        {
            "method_signature": "org.jsoup.select.QueryParser:<init>(Ljava/lang/String;)V",
            "method_body": "private QueryParser(String query) {\nthis.query = query;\nthis.tq = new TokenQueue(query);\n}",
            "method_id": 174
        },
        {
            "method_signature": "org.jsoup.parser.Token:isEndTag()Z",
            "method_body": "final boolean isEndTag() {\nreturn type == TokenType.EndTag;\n}",
            "method_id": 175
        },
        {
            "method_signature": "org.jsoup.nodes.Element:tag()Lorg/jsoup/parser/Tag;",
            "method_body": "public Tag tag() {\nreturn tag;\n}",
            "method_id": 176
        },
        {
            "method_signature": "org.jsoup.nodes.Document:outputSettings()Lorg/jsoup/nodes/Document$OutputSettings;",
            "method_body": "public OutputSettings outputSettings() {\nreturn outputSettings;\n}",
            "method_id": 177
        },
        {
            "method_signature": "org.jsoup.nodes.Attributes:equals(Ljava/lang/Object;)Z",
            "method_body": "public boolean equals(Object o) {\nif (this == o) return true;\nif (!(o instanceof Attributes)) return false;\nAttributes that = (Attributes) o;\nreturn !(attributes != null ? !attributes.equals(that.attributes) : that.attributes != null);\n}",
            "method_id": 178
        },
        {
            "method_signature": "org.jsoup.nodes.Node:reparentChild(Lorg/jsoup/nodes/Node;)V",
            "method_body": "protected void reparentChild(Node child) {\nif (child.parentNode != null)\nchild.setParentNode(this);\n}",
            "method_id": 179
        }
    ]
}