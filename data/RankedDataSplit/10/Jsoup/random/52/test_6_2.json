{
    "bug_id": 52,
    "test_id": 6,
    "test_name": "org.jsoup.nodes.DocumentTest.testMetaCharsetUpdateXmlDisabledNoChanges",
    "test_body": "372: public void testMetaCharsetUpdateXmlDisabledNoChanges() {\n373: final Document doc = createXmlDocument(\"dontTouch\", \"dontTouch\", true);\n374: 375: final String xmlCharset = \"<?xml version=\\\"dontTouch\\\" encoding=\\\"dontTouch\\\"?>\\n\" +\n376: \"<root>\\n\" +\n377: \" node\\n\" +\n378: \"</root>\";\n379: assertEquals(xmlCharset, doc.toString());\n380: 381: XmlDeclaration selectedNode = (XmlDeclaration) doc.childNode(0);\n382: assertEquals(\"dontTouch\", selectedNode.attr(\"encoding\"));\n383: assertEquals(\"dontTouch\", selectedNode.attr(\"version\"));\n384: }\n",
    "stack_trace": "",
    "covered_methods": [
        {
            "method_signature": "org.jsoup.nodes.Attribute:<clinit>()V",
            "method_body": "private static final String[] booleanAttributes = {\n};",
            "method_id": 20
        },
        {
            "method_signature": "org.jsoup.helper.StringUtil:padding(I)Ljava/lang/String;",
            "method_body": "public static String padding(int width) {\nif (width < 0)\nif (width < padding.length)\nreturn padding[width];\n}",
            "method_id": 21
        },
        {
            "method_signature": "org.jsoup.nodes.Element:parent()Lorg/jsoup/nodes/Element;",
            "method_body": "public final Element parent() {\nreturn (Element) parentNode;\n}",
            "method_id": 22
        },
        {
            "method_signature": "org.jsoup.nodes.Node$OuterHtmlVisitor:<init>(Ljava/lang/Appendable;Lorg/jsoup/nodes/Document$OutputSettings;)V",
            "method_body": "OuterHtmlVisitor(Appendable accum, Document.OutputSettings out) {\nthis.accum = accum;\nthis.out = out;\n}",
            "method_id": 23
        },
        {
            "method_signature": "org.jsoup.nodes.Element:nodeName()Ljava/lang/String;",
            "method_body": "public String nodeName() {\nreturn tag.getName();\n}",
            "method_id": 24
        },
        {
            "method_signature": "org.jsoup.nodes.Node:baseUri()Ljava/lang/String;",
            "method_body": "public String baseUri() {\nreturn baseUri;\n}",
            "method_id": 25
        },
        {
            "method_signature": "org.jsoup.nodes.Entities:loadEntities(Ljava/lang/String;)Ljava/util/Map;",
            "method_body": "private static Map<String, Character> loadEntities(String filename) {\nProperties properties = new Properties();\nMap<String, Character> entities = new HashMap<String, Character>();\nInputStream in = Entities.class.getResourceAsStream(filename);\nproperties.load(in);\nin.close();\n}\nfor (Map.Entry entry: properties.entrySet()) {\nCharacter val = Character.valueOf((char) Integer.parseInt((String) entry.getValue(), 16));\nString name = (String) entry.getKey();\nentities.put(name, val);\n}\nreturn entities;\n}",
            "method_id": 26
        },
        {
            "method_signature": "org.jsoup.nodes.Element:appendChild(Lorg/jsoup/nodes/Node;)Lorg/jsoup/nodes/Element;",
            "method_body": "public Element appendChild(Node child) {\nValidate.notNull(child);\nreparentChild(child);\nensureChildNodes();\nchildNodes.add(child);\nchild.setSiblingIndex(childNodes.size() - 1);\nreturn this;\n}",
            "method_id": 27
        },
        {
            "method_signature": "org.jsoup.nodes.Node:getOutputSettings()Lorg/jsoup/nodes/Document$OutputSettings;",
            "method_body": "Document.OutputSettings getOutputSettings() {\nreturn ownerDocument() != null ? ownerDocument().outputSettings() : (new Document(\"\")).outputSettings();\n}",
            "method_id": 28
        },
        {
            "method_signature": "org.jsoup.nodes.Element:text(Ljava/lang/String;)Lorg/jsoup/nodes/Element;",
            "method_body": "public Element text(String text) {\nValidate.notNull(text);\nempty();\nTextNode textNode = new TextNode(text, baseUri);\nappendChild(textNode);\nreturn this;\n}",
            "method_id": 29
        }
    ]
}