{
    "bug_id": 52,
    "test_id": 3,
    "test_name": "org.jsoup.nodes.DocumentTest.testMetaCharsetUpdateXmlUtf8",
    "test_body": "310: public void testMetaCharsetUpdateXmlUtf8() {\n311: final Document doc = createXmlDocument(\"1.0\", \"changeThis\", true);\n312: doc.updateMetaCharsetElement(true);\n313: doc.charset(Charset.forName(charsetUtf8));\n314: 315: final String xmlCharsetUTF8 = \"<?xml version=\\\"1.0\\\" encoding=\\\"\" + charsetUtf8 + \"\\\"?>\\n\" +\n316: \"<root>\\n\" +\n317: \" node\\n\" +\n318: \"</root>\";\n319: assertEquals(xmlCharsetUTF8, doc.toString());\n320: 321: XmlDeclaration selectedNode = (XmlDeclaration) doc.childNode(0);\n322: assertEquals(charsetUtf8, doc.charset().name());\n323: assertEquals(charsetUtf8, selectedNode.attr(\"encoding\"));\n324: assertEquals(doc.charset(), doc.outputSettings().charset());\n325: }\n",
    "stack_trace": "",
    "covered_methods": [
        {
            "method_signature": "org.jsoup.nodes.Attribute:<init>(Ljava/lang/String;Ljava/lang/String;)V",
            "method_body": "public Attribute(String key, String value) {\nValidate.notEmpty(key);\nValidate.notNull(value);\nthis.key = key.trim().toLowerCase();\nthis.value = value;\n}",
            "method_id": 30
        },
        {
            "method_signature": "org.jsoup.nodes.Element:empty()Lorg/jsoup/nodes/Element;",
            "method_body": "public Element empty() {\nchildNodes.clear();\nreturn this;\n}",
            "method_id": 31
        },
        {
            "method_signature": "org.jsoup.nodes.Document$OutputSettings:syntax(Lorg/jsoup/nodes/Document$OutputSettings$Syntax;)Lorg/jsoup/nodes/Document$OutputSettings;",
            "method_body": "public OutputSettings syntax(Syntax syntax) {\nthis.syntax = syntax;\nreturn this;\n}",
            "method_id": 32
        },
        {
            "method_signature": "org.jsoup.nodes.Node:attr(Ljava/lang/String;Ljava/lang/String;)Lorg/jsoup/nodes/Node;",
            "method_body": "public Node attr(String attributeKey, String attributeValue) {\nattributes.put(attributeKey, attributeValue);\nreturn this;\n}",
            "method_id": 33
        },
        {
            "method_signature": "org.jsoup.helper.Validate:noNullElements([Ljava/lang/Object;)V",
            "method_body": "public static void noNullElements(Object[] objects) {\nnoNullElements(objects, \"Array must not contain any null objects\");\n}",
            "method_id": 34
        },
        {
            "method_signature": "org.jsoup.nodes.Node:parentNode()Lorg/jsoup/nodes/Node;",
            "method_body": "public final Node parentNode() {\nreturn parentNode;\n}",
            "method_id": 35
        },
        {
            "method_signature": "org.jsoup.helper.Validate:notEmpty(Ljava/lang/String;)V",
            "method_body": "public static void notEmpty(String string) {\nif (string == null || string.length() == 0)\n}",
            "method_id": 36
        },
        {
            "method_signature": "org.jsoup.nodes.Node:childNodes()Ljava/util/List;",
            "method_body": "public List<Node> childNodes() {\nreturn Collections.unmodifiableList(childNodes);\n}",
            "method_id": 37
        },
        {
            "method_signature": "org.jsoup.nodes.Document:updateMetaCharsetElement(Z)V",
            "method_body": "public void updateMetaCharsetElement(boolean update) {\nthis.updateMetaCharset = update;\n}",
            "method_id": 38
        },
        {
            "method_signature": "org.jsoup.nodes.Document$OutputSettings:escapeMode()Lorg/jsoup/nodes/Entities$EscapeMode;",
            "method_body": "public Entities.EscapeMode escapeMode() {\nreturn escapeMode;\n}",
            "method_id": 39
        }
    ]
}