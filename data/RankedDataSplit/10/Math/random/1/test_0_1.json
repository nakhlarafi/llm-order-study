{
    "bug_id": 1,
    "test_id": 0,
    "test_name": "org.apache.commons.math3.fraction.FractionTest.testDigitLimitConstructor",
    "test_body": "public void testDigitLimitConstructor() throws ConvergenceException  {\nassertFraction(2, 5, new Fraction(0.4,   9));\nassertFraction(2, 5, new Fraction(0.4,  99));\nassertFraction(2, 5, new Fraction(0.4, 999));\n128: assertFraction(3, 5,      new Fraction(0.6152,    9));\nassertFraction(8, 13,     new Fraction(0.6152,   99));\nassertFraction(510, 829,  new Fraction(0.6152,  999));\nassertFraction(769, 1250, new Fraction(0.6152, 9999));\n133: // MATH-996\nassertFraction(1, 2, new Fraction(0.5000000001, 10));\n}\n",
    "stack_trace": "org.apache.commons.math3.fraction.FractionConversionException: illegal state: Overflow trying to convert 0.5 to fraction (2,499,999,794/4,999,999,587)\nat org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:215)\nat org.apache.commons.math3.fraction.Fraction.<init>(Fraction.java:144)\nat org.apache.commons.math3.fraction.FractionTest.testDigitLimitConstructor(FractionTest.java:134)",
    "covered_methods": [
        {
            "method_signature": "org.apache.commons.math3.util.FastMath:abs(D)D",
            "method_body": "public static double abs(double x) {\nreturn Double.longBitsToDouble(MASK_NON_SIGN_LONG & Double.doubleToRawLongBits(x));\n}",
            "method_id": 10
        },
        {
            "method_signature": "org.apache.commons.math3.exception.MathIllegalStateException:<init>(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V",
            "method_body": "public MathIllegalStateException(Localizable pattern,\nObject ... args) {\ncontext = new ExceptionContext(this);\ncontext.addMessage(pattern, args);\n}",
            "method_id": 11
        },
        {
            "method_signature": "org.apache.commons.math3.exception.util.ArgUtils:flatten([Ljava/lang/Object;)[Ljava/lang/Object;",
            "method_body": "public static Object[] flatten(Object[] array) {\nfinal List<Object> list = new ArrayList<Object>();\nif (array != null) {\nfor (Object o : array) {\nif (o instanceof Object[]) {\nlist.add(o);\nreturn list.toArray();\n}",
            "method_id": 12
        },
        {
            "method_signature": "org.apache.commons.math3.exception.util.ExceptionContext:<init>(Ljava/lang/Throwable;)V",
            "method_body": "public ExceptionContext(final Throwable throwable) {\nthis.throwable = throwable;\nmsgPatterns    = new ArrayList<Localizable>();\nmsgArguments   = new ArrayList<Object[]>();\ncontext        = new HashMap<String, Object>();\n}",
            "method_id": 13
        },
        {
            "method_signature": "org.apache.commons.math3.fraction.Fraction:getNumerator()I",
            "method_body": "public int getNumerator() {\nreturn numerator;\n}",
            "method_id": 14
        }
    ]
}