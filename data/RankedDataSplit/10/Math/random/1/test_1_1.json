{
    "bug_id": 1,
    "test_id": 1,
    "test_name": "org.apache.commons.math3.fraction.BigFractionTest.testDigitLimitConstructor",
    "test_body": "public void testDigitLimitConstructor() throws ConvergenceException {\nassertFraction(2, 5, new BigFraction(0.4, 9));\nassertFraction(2, 5, new BigFraction(0.4, 99));\nassertFraction(2, 5, new BigFraction(0.4, 999));\n153: assertFraction(3, 5, new BigFraction(0.6152, 9));\nassertFraction(8, 13, new BigFraction(0.6152, 99));\nassertFraction(510, 829, new BigFraction(0.6152, 999));\nassertFraction(769, 1250, new BigFraction(0.6152, 9999));\n158: // MATH-996\nassertFraction(1, 2, new BigFraction(0.5000000001, 10));\n}\n",
    "stack_trace": "org.apache.commons.math3.fraction.FractionConversionException: illegal state: Overflow trying to convert 0.5 to fraction (2,499,999,794/4,999,999,587)\nat org.apache.commons.math3.fraction.BigFraction.<init>(BigFraction.java:306)\nat org.apache.commons.math3.fraction.BigFraction.<init>(BigFraction.java:356)\nat org.apache.commons.math3.fraction.BigFractionTest.testDigitLimitConstructor(BigFractionTest.java:159)",
    "covered_methods": [
        {
            "method_signature": "org.apache.commons.math3.fraction.BigFraction:<init>(DI)V",
            "method_body": "public BigFraction(final double value, final int maxDenominator)\nthis(value, 0, maxDenominator, 100);\n}",
            "method_id": 10
        },
        {
            "method_signature": "org.apache.commons.math3.exception.MathIllegalStateException:getContext()Lorg/apache/commons/math3/exception/util/ExceptionContext;",
            "method_body": "public ExceptionContext getContext() {\nreturn context;\n}",
            "method_id": 11
        },
        {
            "method_signature": "org.apache.commons.math3.util.FastMath:abs(D)D",
            "method_body": "public static double abs(double x) {\nreturn Double.longBitsToDouble(MASK_NON_SIGN_LONG & Double.doubleToRawLongBits(x));\n}",
            "method_id": 12
        },
        {
            "method_signature": "org.apache.commons.math3.fraction.BigFraction:getNumeratorAsInt()I",
            "method_body": "public int getNumeratorAsInt() {\nreturn numerator.intValue();\n}",
            "method_id": 13
        }
    ]
}