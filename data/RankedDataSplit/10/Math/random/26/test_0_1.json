{
    "bug_id": 26,
    "test_id": 0,
    "test_name": "org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow",
    "test_body": "public void testIntegerOverflow() {\ncheckIntegerOverflow(0.75000000001455192);\ncheckIntegerOverflow(1.0e10);\ncheckIntegerOverflow(-1.0e10);\ncheckIntegerOverflow(-43979.60679604749);",
    "stack_trace": "junit.framework.AssertionFailedError: an exception should have been thrown\nat org.junit.Assert.fail(Assert.java:88)\nat org.apache.commons.math3.fraction.FractionTest.checkIntegerOverflow(FractionTest.java:145)\nat org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow(FractionTest.java:138)",
    "covered_methods": [
        {
            "method_signature": "org.apache.commons.math3.exception.util.ExceptionContext:<init>(Ljava/lang/Throwable;)V",
            "method_body": "public ExceptionContext(final Throwable throwable) {\nthis.throwable = throwable;\nmsgPatterns    = new ArrayList<Localizable>();\nmsgArguments   = new ArrayList<Object[]>();\ncontext        = new HashMap<String, Object>();\n}",
            "method_id": 10
        },
        {
            "method_signature": "org.apache.commons.math3.exception.MathIllegalStateException:<init>(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V",
            "method_body": "public MathIllegalStateException(Localizable pattern,\nObject ... args) {\ncontext = new ExceptionContext(this);\ncontext.addMessage(pattern, args);\n}",
            "method_id": 11
        }
    ]
}