{
    "bug_id": 61,
    "test_id": 0,
    "test_name": "org.apache.commons.math.distribution.PoissonDistributionTest.testMean",
    "test_body": "public void testMean() {\nPoissonDistribution dist;\ntry {\ndist = new PoissonDistributionImpl(-1);\nfail(\"negative mean: NotStrictlyPositiveException expected\");",
    "stack_trace": "org.apache.commons.math.MathRuntimeException$4: the Poisson mean must be positive (-1)\nat org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(MathRuntimeException.java:387)\nat org.apache.commons.math.distribution.PoissonDistributionImpl.<init>(PoissonDistributionImpl.java:94)\nat org.apache.commons.math.distribution.PoissonDistributionImpl.<init>(PoissonDistributionImpl.java:80)\nat org.apache.commons.math.distribution.PoissonDistributionTest.testMean(PoissonDistributionTest.java:140)",
    "covered_methods": [
        {
            "method_signature": "org.apache.commons.math.MathRuntimeException$4:<init>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V",
            "method_body": "public static IllegalArgumentException createIllegalArgumentException(final Localizable pattern,\nreturn new IllegalArgumentException() {\n}",
            "method_id": 10
        },
        {
            "method_signature": "org.apache.commons.math.distribution.NormalDistributionImpl:<init>(DD)V",
            "method_body": "public NormalDistributionImpl(double mean, double sd){\nthis(mean, sd, DEFAULT_INVERSE_ABSOLUTE_ACCURACY);\n}",
            "method_id": 11
        }
    ]
}