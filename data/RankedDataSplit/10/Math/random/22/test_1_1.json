{
    "bug_id": 22,
    "test_id": 1,
    "test_name": "org.apache.commons.math3.distribution.UniformRealDistributionTest.testIsSupportUpperBoundInclusive",
    "test_body": null,
    "stack_trace": "junit.framework.AssertionFailedError: expected:<true> but was:<false>\nat org.junit.Assert.fail(Assert.java:88)\nat org.junit.Assert.failNotEquals(Assert.java:743)\nat org.junit.Assert.assertEquals(Assert.java:118)\nat org.junit.Assert.assertEquals(Assert.java:144)\nat org.apache.commons.math3.distribution.RealDistributionAbstractTest.testIsSupportUpperBoundInclusive(RealDistributionAbstractTest.java:367)",
    "covered_methods": [
        {
            "method_signature": "org.apache.commons.math3.distribution.UniformRealDistribution:<init>(DDD)V",
            "method_body": "public UniformRealDistribution(double lower, double upper, double inverseCumAccuracy)\nthis(new  Well19937c(), lower, upper, inverseCumAccuracy);\n}",
            "method_id": 10
        },
        {
            "method_signature": "org.apache.commons.math3.random.AbstractWell:setSeed(J)V",
            "method_body": "public void setSeed(final long seed) {\nsetSeed(new int[] { (int) (seed >>> 32), (int) (seed & 0xffffffffl) });\n}",
            "method_id": 11
        },
        {
            "method_signature": "org.apache.commons.math3.random.AbstractWell:setSeed([I)V",
            "method_body": "public void setSeed(final int[] seed) {\nif (seed == null) {\nsetSeed(System.currentTimeMillis() + System.identityHashCode(this));\nreturn;\nSystem.arraycopy(seed, 0, v, 0, Math.min(seed.length, v.length));\nif (seed.length < v.length) {\nfor (int i = seed.length; i < v.length; ++i) {\nfinal long l = v[i - seed.length];\nv[i] = (int) ((1812433253l * (l ^ (l >> 30)) + i) & 0xffffffffL);\nindex = 0;\nclear();  // Clear normal deviate cache\n}",
            "method_id": 12
        },
        {
            "method_signature": "org.apache.commons.math3.random.AbstractWell:<init>(IIII[I)V",
            "method_body": "protected AbstractWell(final int k, final int m1, final int m2, final int m3, final int[] seed) {\nfinal int w = 32;\nfinal int r = (k + w - 1) / w;\nthis.v      = new int[r];\nthis.index  = 0;\niRm1 = new int[r];\niRm2 = new int[r];\ni1   = new int[r];\ni2   = new int[r];\ni3   = new int[r];\nfor (int j = 0; j < r; ++j) {\niRm1[j] = (j + r - 1) % r;\niRm2[j] = (j + r - 2) % r;\ni1[j]   = (j + m1)    % r;\ni2[j]   = (j + m2)    % r;\ni3[j]   = (j + m3)    % r;\nsetSeed(seed);\n}",
            "method_id": 13
        },
        {
            "method_signature": "org.apache.commons.math3.distribution.UniformRealDistribution:<init>(Lorg/apache/commons/math3/random/RandomGenerator;DDD)V",
            "method_body": "public UniformRealDistribution(RandomGenerator rng,\nsuper(rng);\nif (lower >= upper) {\nthis.lower = lower;\nthis.upper = upper;\nsolverAbsoluteAccuracy = inverseCumAccuracy;\n}",
            "method_id": 14
        }
    ]
}