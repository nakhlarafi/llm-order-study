{
    "bug_id": 101,
    "test_id": 0,
    "test_name": "org.apache.commons.math.complex.ComplexFormatTest.testForgottenImaginaryCharacter",
    "test_body": null,
    "stack_trace": "java.lang.StringIndexOutOfBoundsException: String index out of range: 6\nat java.lang.String.substring(String.java:1963)\nat org.apache.commons.math.complex.ComplexFormat.parse(ComplexFormat.java:377)\nat org.apache.commons.math.complex.ComplexFormatAbstractTest.testForgottenImaginaryCharacter(ComplexFormatAbstractTest.java:355)",
    "covered_methods": [
        {
            "method_signature": "org.apache.commons.math.complex.ComplexFormat:<init>(Ljava/text/NumberFormat;)V",
            "method_body": "public ComplexFormat(NumberFormat format) {\nthis(DEFAULT_IMAGINARY_CHARACTER, format);\n}",
            "method_id": 10
        },
        {
            "method_signature": "org.apache.commons.math.complex.ComplexFormat:<init>()V",
            "method_body": "public ComplexFormat() {\nthis(DEFAULT_IMAGINARY_CHARACTER, getDefaultNumberFormat());\n}",
            "method_id": 11
        },
        {
            "method_signature": "org.apache.commons.math.complex.ComplexFormat:setImaginaryFormat(Ljava/text/NumberFormat;)V",
            "method_body": "public void setImaginaryFormat(NumberFormat imaginaryFormat) {\nif (imaginaryFormat == null) {\nthis.imaginaryFormat = imaginaryFormat;\n}",
            "method_id": 12
        },
        {
            "method_signature": "org.apache.commons.math.complex.ComplexFormat:getDefaultNumberFormat()Ljava/text/NumberFormat;",
            "method_body": "private static NumberFormat getDefaultNumberFormat() {\nreturn getDefaultNumberFormat(Locale.getDefault());\n}",
            "method_id": 13
        },
        {
            "method_signature": "org.apache.commons.math.complex.ComplexFormat:parseNextCharacter(Ljava/lang/String;Ljava/text/ParsePosition;)C",
            "method_body": "private char parseNextCharacter(String source, ParsePosition pos) {\nint index = pos.getIndex();\nint n = source.length();\nchar ret = 0;\nif (index < n) {\nc = source.charAt(index++);\n} while (Character.isWhitespace(c) && index < n);\npos.setIndex(index);\nif (index < n) {\nret = c;\nreturn ret;\n}",
            "method_id": 14
        },
        {
            "method_signature": "org.apache.commons.math.complex.ComplexFormat:getRealFormat()Ljava/text/NumberFormat;",
            "method_body": "public NumberFormat getRealFormat() {\nreturn realFormat;\n}",
            "method_id": 15
        }
    ]
}