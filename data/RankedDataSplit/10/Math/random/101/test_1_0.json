{
    "bug_id": 101,
    "test_id": 1,
    "test_name": "org.apache.commons.math.complex.FrenchComplexFormatTest.testForgottenImaginaryCharacter",
    "test_body": null,
    "stack_trace": "java.lang.StringIndexOutOfBoundsException: String index out of range: 6\nat java.lang.String.substring(String.java:1963)\nat org.apache.commons.math.complex.ComplexFormat.parse(ComplexFormat.java:377)\nat org.apache.commons.math.complex.ComplexFormatAbstractTest.testForgottenImaginaryCharacter(ComplexFormatAbstractTest.java:355)",
    "covered_methods": [
        {
            "method_signature": "org.apache.commons.math.complex.ComplexFormat:parse(Ljava/lang/String;Ljava/text/ParsePosition;)Lorg/apache/commons/math/complex/Complex;",
            "method_body": "public Complex parse(String source, ParsePosition pos) {\nint initialIndex = pos.getIndex();\nparseAndIgnoreWhitespace(source, pos);\nNumber re = parseNumber(source, getRealFormat(), pos);\nif (re == null) {\nint startIndex = pos.getIndex();\nchar c = parseNextCharacter(source, pos);\nint sign = 0;\nswitch (c) {\nsign = 1;\nbreak;\nparseAndIgnoreWhitespace(source, pos);\nNumber im = parseNumber(source, getRealFormat(), pos);\nif (im == null) {\nint n = getImaginaryCharacter().length();\nstartIndex = pos.getIndex();\nint endIndex = startIndex + n;\nif (\n}",
            "method_id": 0
        },
        {
            "method_signature": "org.apache.commons.math.complex.ComplexFormat:getInstance(Ljava/util/Locale;)Lorg/apache/commons/math/complex/ComplexFormat;",
            "method_body": "public static ComplexFormat getInstance(Locale locale) {\nNumberFormat f = getDefaultNumberFormat(locale);\nreturn new ComplexFormat(f);\n}",
            "method_id": 1
        },
        {
            "method_signature": "org.apache.commons.math.complex.ComplexFormat:parseNextCharacter(Ljava/lang/String;Ljava/text/ParsePosition;)C",
            "method_body": "private char parseNextCharacter(String source, ParsePosition pos) {\nint index = pos.getIndex();\nint n = source.length();\nchar ret = 0;\nif (index < n) {\nc = source.charAt(index++);\n} while (Character.isWhitespace(c) && index < n);\npos.setIndex(index);\nif (index < n) {\nret = c;\nreturn ret;\n}",
            "method_id": 2
        },
        {
            "method_signature": "org.apache.commons.math.complex.ComplexFormat:parseAndIgnoreWhitespace(Ljava/lang/String;Ljava/text/ParsePosition;)V",
            "method_body": "private void parseAndIgnoreWhitespace(String source, ParsePosition pos) {\nparseNextCharacter(source, pos);\npos.setIndex(pos.getIndex() - 1);\n}",
            "method_id": 3
        },
        {
            "method_signature": "org.apache.commons.math.complex.ComplexFormat:<init>(Ljava/lang/String;Ljava/text/NumberFormat;)V",
            "method_body": "public ComplexFormat(String imaginaryCharacter, NumberFormat format) {\nthis(imaginaryCharacter, format, (NumberFormat)format.clone());\n}",
            "method_id": 4
        },
        {
            "method_signature": "org.apache.commons.math.complex.ComplexFormat:getDefaultNumberFormat()Ljava/text/NumberFormat;",
            "method_body": "private static NumberFormat getDefaultNumberFormat() {\nreturn getDefaultNumberFormat(Locale.getDefault());\n}",
            "method_id": 5
        },
        {
            "method_signature": "org.apache.commons.math.complex.ComplexFormat:getImaginaryCharacter()Ljava/lang/String;",
            "method_body": "public String getImaginaryCharacter() {\nreturn imaginaryCharacter;\n}",
            "method_id": 6
        },
        {
            "method_signature": "org.apache.commons.math.complex.ComplexFormat:getDefaultNumberFormat(Ljava/util/Locale;)Ljava/text/NumberFormat;",
            "method_body": "private static NumberFormat getDefaultNumberFormat(Locale locale) {\nNumberFormat nf = NumberFormat.getInstance(locale);\nnf.setMaximumFractionDigits(2);\nreturn nf;\n}",
            "method_id": 7
        },
        {
            "method_signature": "org.apache.commons.math.complex.ComplexFormat:setImaginaryFormat(Ljava/text/NumberFormat;)V",
            "method_body": "public void setImaginaryFormat(NumberFormat imaginaryFormat) {\nif (imaginaryFormat == null) {\nthis.imaginaryFormat = imaginaryFormat;\n}",
            "method_id": 8
        },
        {
            "method_signature": "org.apache.commons.math.complex.ComplexFormat:<init>(Ljava/lang/String;Ljava/text/NumberFormat;Ljava/text/NumberFormat;)V",
            "method_body": "public ComplexFormat(String imaginaryCharacter, NumberFormat realFormat,\nsuper();\nsetImaginaryCharacter(imaginaryCharacter);\nsetImaginaryFormat(imaginaryFormat);\nsetRealFormat(realFormat);\n}",
            "method_id": 9
        }
    ]
}