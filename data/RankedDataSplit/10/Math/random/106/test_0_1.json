{
    "bug_id": 106,
    "test_id": 0,
    "test_name": "org.apache.commons.math.fraction.FractionFormatTest.testParseProperInvalidMinus",
    "test_body": "public void testParseProperInvalidMinus() {\nString source = \"2 -2 / 3\";\ntry {\nFraction c = properFormat.parse(source);\nfail(\"invalid minus in improper fraction.\");\n} catch (ParseException ex) {",
    "stack_trace": "junit.framework.AssertionFailedError: invalid minus in improper fraction.\nat junit.framework.Assert.fail(Assert.java:57)\nat junit.framework.TestCase.fail(TestCase.java:227)\nat org.apache.commons.math.fraction.FractionFormatTest.testParseProperInvalidMinus(FractionFormatTest.java:236)",
    "covered_methods": [
        {
            "method_signature": "org.apache.commons.math.util.MathUtils:sign(I)I",
            "method_body": "public static int sign(final int x) {\nreturn (x == 0) ? 0 : (x > 0) ? 1 : -1;\n}",
            "method_id": 10
        },
        {
            "method_signature": "org.apache.commons.math.fraction.FractionFormat:getNumeratorFormat()Ljava/text/NumberFormat;",
            "method_body": "public NumberFormat getNumeratorFormat() {\nreturn numeratorFormat;\n}",
            "method_id": 11
        },
        {
            "method_signature": "org.apache.commons.math.fraction.ProperFractionFormat:<init>(Ljava/text/NumberFormat;)V",
            "method_body": "public ProperFractionFormat(NumberFormat format) {\nthis(format, (NumberFormat)format.clone(), (NumberFormat)format.clone());\n}",
            "method_id": 12
        },
        {
            "method_signature": "org.apache.commons.math.fraction.Fraction:reduce()V",
            "method_body": "private void reduce() {\nint d = MathUtils.gcd(numerator, denominator);\nif (d > 1) {\nif (denominator < 0) {\n}",
            "method_id": 13
        },
        {
            "method_signature": "org.apache.commons.math.fraction.ProperFractionFormat:parse(Ljava/lang/String;Ljava/text/ParsePosition;)Lorg/apache/commons/math/fraction/Fraction;",
            "method_body": "public Fraction parse(String source, ParsePosition pos) {\nFraction ret = super.parse(source, pos);\nif (ret != null) {\nint initialIndex = pos.getIndex();\nparseAndIgnoreWhitespace(source, pos);\nNumber whole = getWholeFormat().parse(source, pos);\nif (whole == null) {\nparseAndIgnoreWhitespace(source, pos);\nNumber num = getNumeratorFormat().parse(source, pos);\nif (num == null) {\nint startIndex = pos.getIndex();\nchar c = parseNextCharacter(source, pos);\nswitch (c) {\nbreak;\nparseAndIgnoreWhitespace(source, pos);\nNumber den = getDenominatorFormat().parse(source, pos);\nif (den == null) {\nint w = whole.intValue();\nint n = num.intValue();\nint d = den.intValue();\nreturn new Fraction(((Math.abs(w) * d) + n) * MathUtils.sign(w), d);\n}",
            "method_id": 14
        },
        {
            "method_signature": "org.apache.commons.math.util.MathUtils:gcd(II)I",
            "method_body": "public static int gcd(int u, int v) {\nif (u * v == 0) {\nif (u > 0) {\nu = -u;\nif (v > 0) {\nv = -v;\nint k = 0;\nwhile ((u & 1) == 0 && (v & 1) == 0 && k < 31) { // while u and v are\nif (k == 31) {\nint t = ((u & 1) == 1) ? v : -(u / 2)/* B3 */;\nwhile ((t & 1) == 0) { // while t is even..\nt /= 2; // cast out twos\nif (t > 0) {\nu = -t;\nv = t;\nt = (v - u) / 2;\n} while (t != 0);\nreturn -u * (1 << k); // gcd is u*2^k\n}",
            "method_id": 15
        },
        {
            "method_signature": "org.apache.commons.math.fraction.ProperFractionFormat:getWholeFormat()Ljava/text/NumberFormat;",
            "method_body": "public NumberFormat getWholeFormat() {\nreturn wholeFormat;\n}",
            "method_id": 16
        },
        {
            "method_signature": "org.apache.commons.math.fraction.FractionFormat:getImproperInstance(Ljava/util/Locale;)Lorg/apache/commons/math/fraction/FractionFormat;",
            "method_body": "public static FractionFormat getImproperInstance(Locale locale) {\nNumberFormat f = getDefaultNumberFormat(locale);\nreturn new FractionFormat(f);\n}",
            "method_id": 17
        },
        {
            "method_signature": "org.apache.commons.math.fraction.ProperFractionFormat:<init>(Ljava/text/NumberFormat;Ljava/text/NumberFormat;Ljava/text/NumberFormat;)V",
            "method_body": "public ProperFractionFormat(NumberFormat wholeFormat,\nsuper(numeratorFormat, denominatorFormat);\nsetWholeFormat(wholeFormat);\n}",
            "method_id": 18
        },
        {
            "method_signature": "org.apache.commons.math.fraction.FractionFormat:<init>(Ljava/text/NumberFormat;Ljava/text/NumberFormat;)V",
            "method_body": "public FractionFormat(NumberFormat numeratorFormat,\nsuper();\nthis.numeratorFormat = numeratorFormat;\nthis.denominatorFormat = denominatorFormat;\n}",
            "method_id": 19
        }
    ]
}