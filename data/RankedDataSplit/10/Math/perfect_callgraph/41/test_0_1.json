{
    "bug_id": 41,
    "test_id": 0,
    "test_name": "org.apache.commons.math.stat.descriptive.moment.VarianceTest.testEvaluateArraySegmentWeighted",
    "test_body": null,
    "stack_trace": "junit.framework.AssertionFailedError: expected:<1.6644508338125354> but was:<0.31909161062727365>\nat org.junit.Assert.fail(Assert.java:88)\nat org.junit.Assert.failNotEquals(Assert.java:743)\nat org.junit.Assert.assertEquals(Assert.java:494)\nat org.junit.Assert.assertEquals(Assert.java:592)\nat org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest.testEvaluateArraySegmentWeighted(UnivariateStatisticAbstractTest.java:130)",
    "covered_methods": [
        {
            "method_signature": "org.apache.commons.math.stat.descriptive.moment.Variance:evaluate([D[DII)D",
            "method_body": "public double evaluate(final double[] values, final double[] weights,\ndouble var = Double.NaN;\nif (test(values, weights,begin, length)) {\nclear();\nif (length == 1) {\n} else if (length > 1) {\nMean mean = new Mean();\ndouble m = mean.evaluate(values, weights, begin, length);\nvar = evaluate(values, weights, m, begin, length);\nreturn var;\n}",
            "method_id": 10
        },
        {
            "method_signature": "org.apache.commons.math.util.FastMath:sqrt(D)D",
            "method_body": "public static double sqrt(final double a) {\nreturn Math.sqrt(a);\n}",
            "method_id": 11
        },
        {
            "method_signature": "org.apache.commons.math.stat.descriptive.moment.SecondMoment:<init>()V",
            "method_body": "public SecondMoment() {\nsuper();\nm2 = Double.NaN;\n}",
            "method_id": 12
        },
        {
            "method_signature": "org.apache.commons.math.stat.descriptive.moment.Mean:<init>()V",
            "method_body": "public Mean() {\nincMoment = true;\nmoment = new FirstMoment();\n}",
            "method_id": 13
        },
        {
            "method_signature": "org.apache.commons.math.stat.descriptive.summary.Sum:evaluate([D[DII)D",
            "method_body": "public double evaluate(final double[] values, final double[] weights,\ndouble sum = Double.NaN;\nif (test(values, weights, begin, length, true)) {\nsum = 0.0;\nfor (int i = begin; i < begin + length; i++) {\nsum += values[i] * weights[i];\nreturn sum;\n}",
            "method_id": 14
        },
        {
            "method_signature": "org.apache.commons.math.stat.descriptive.moment.Variance:clear()V",
            "method_body": "public void clear() {\nif (incMoment) {\nmoment.clear();\n}",
            "method_id": 15
        },
        {
            "method_signature": "org.apache.commons.math.stat.descriptive.moment.FirstMoment:clear()V",
            "method_body": "public void clear() {\nm1 = Double.NaN;\nn = 0;\ndev = Double.NaN;\nnDev = Double.NaN;\n}",
            "method_id": 16
        },
        {
            "method_signature": "org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic:test([D[DII)Z",
            "method_body": "protected boolean test(\nreturn test(values, weights, begin, length, false);\n}",
            "method_id": 17
        }
    ]
}