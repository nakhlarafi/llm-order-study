{
    "bug_id": 43,
    "test_id": 1,
    "test_name": "org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideGeoMeanWithMathClass",
    "test_body": null,
    "stack_trace": "junit.framework.AssertionFailedError: expected:<2.213363839400643> but was:<NaN>\nat org.junit.Assert.fail(Assert.java:88)\nat org.junit.Assert.failNotEquals(Assert.java:743)\nat org.junit.Assert.assertEquals(Assert.java:494)\nat org.junit.Assert.assertEquals(Assert.java:592)\nat org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testOverrideGeoMeanWithMathClass(SummaryStatisticsTest.java:346)",
    "covered_methods": [
        {
            "method_signature": "org.apache.commons.math.stat.descriptive.SummaryStatistics:addValue(D)V",
            "method_body": "public void addValue(double value) {\nsumImpl.increment(value);\nsumsqImpl.increment(value);\nminImpl.increment(value);\nmaxImpl.increment(value);\nsumLogImpl.increment(value);\nsecondMoment.increment(value);\nif (!(meanImpl instanceof Mean)) {\nif (!(varianceImpl instanceof Variance)) {\nif (!(geoMeanImpl instanceof GeometricMean)) {\nn++;\n}",
            "method_id": 0
        },
        {
            "method_signature": "org.apache.commons.math.util.FastMath:log(D)D",
            "method_body": "public static double log(final double x) {\nreturn log(x, null);\n}",
            "method_id": 1
        },
        {
            "method_signature": "org.apache.commons.math.stat.descriptive.summary.SumOfLogs:<init>()V",
            "method_body": "public SumOfLogs() {\nvalue = 0d;\nn = 0;\n}",
            "method_id": 2
        },
        {
            "method_signature": "org.apache.commons.math.stat.descriptive.SummaryStatistics:getGeometricMean()D",
            "method_body": "public double getGeometricMean() {\nreturn geoMeanImpl.getResult();\n}",
            "method_id": 3
        },
        {
            "method_signature": "org.apache.commons.math.stat.descriptive.summary.Sum:increment(D)V",
            "method_body": "public void increment(final double d) {\nvalue += d;\nn++;\n}",
            "method_id": 4
        },
        {
            "method_signature": "org.apache.commons.math.stat.descriptive.moment.SecondMoment:increment(D)V",
            "method_body": "public void increment(final double d) {\nif (n < 1) {\nm1 = m2 = 0.0;\nsuper.increment(d);\nm2 += ((double) n - 1) * dev * nDev;\n}",
            "method_id": 5
        },
        {
            "method_signature": "org.apache.commons.math.stat.descriptive.moment.GeometricMean:evaluate([DII)D",
            "method_body": "public double evaluate(\nreturn FastMath.exp(\n}",
            "method_id": 6
        },
        {
            "method_signature": "org.apache.commons.math.stat.descriptive.moment.GeometricMean:<init>(Lorg/apache/commons/math/stat/descriptive/summary/SumOfLogs;)V",
            "method_body": "public GeometricMean(SumOfLogs sumOfLogs) {\nthis.sumOfLogs = sumOfLogs;\n}",
            "method_id": 7
        },
        {
            "method_signature": "org.apache.commons.math.stat.descriptive.moment.GeometricMean:getResult()D",
            "method_body": "public double getResult() {\nif (sumOfLogs.getN() > 0) {\nreturn Double.NaN;\n}",
            "method_id": 8
        },
        {
            "method_signature": "org.apache.commons.math.stat.descriptive.SummaryStatistics:checkEmpty()V",
            "method_body": "private void checkEmpty() {\nif (n > 0) {\n}",
            "method_id": 9
        }
    ]
}