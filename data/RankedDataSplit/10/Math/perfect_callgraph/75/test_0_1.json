{
    "bug_id": 75,
    "test_id": 0,
    "test_name": "org.apache.commons.math.stat.FrequencyTest.testPcts",
    "test_body": "public void testPcts() {\nf.addValue(oneL);\nf.addValue(twoL);\nf.addValue(oneI);\nf.addValue(twoI);\nf.addValue(threeL);\nf.addValue(threeL);\nf.addValue(3);\nf.addValue(threeI);\nassertEquals(\"one pct\",0.25,f.getPct(1),tolerance);\nassertEquals(\"two pct\",0.25,f.getPct(Long.valueOf(2)),tolerance);\nassertEquals(\"three pct\",0.5,f.getPct(threeL),tolerance);\n// MATH-329\nassertEquals(\"three (Object) pct\",0.5,f.getPct((Object) (Integer.valueOf(3))),tolerance);\nassertEquals(\"five pct\",0,f.getPct(5),tolerance);",
    "stack_trace": "junit.framework.AssertionFailedError: three (Object) pct expected:<0.5> but was:<1.0>\nat junit.framework.Assert.fail(Assert.java:57)\nat junit.framework.Assert.failNotEquals(Assert.java:329)\nat junit.framework.Assert.assertEquals(Assert.java:120)\nat junit.framework.TestCase.assertEquals(TestCase.java:279)\nat org.apache.commons.math.stat.FrequencyTest.testPcts(FrequencyTest.java:148)",
    "covered_methods": [
        {
            "method_signature": "org.apache.commons.math.stat.Frequency:getCumPct(Ljava/lang/Comparable;)D",
            "method_body": "public double getCumPct(Comparable<?> v) {\nfinal long sumFreq = getSumFreq();\nif (sumFreq == 0) {\nreturn (double) getCumFreq(v) / (double) sumFreq;\n}",
            "method_id": 10
        },
        {
            "method_signature": "org.apache.commons.math.stat.Frequency:getCumFreq(Ljava/lang/Comparable;)J",
            "method_body": "public long getCumFreq(Comparable<?> v) {\nif (getSumFreq() == 0) {\nif (v instanceof Integer) {\nreturn getCumFreq(((Integer) v).longValue());\nComparator<Comparable<?>> c = (Comparator<Comparable<?>>) freqTable.comparator();\nif (c == null) {\nc = new NaturalComparator();\nlong result = 0;\nLong value = freqTable.get(v);\nif (value != null) {\nresult = value.longValue();\n}\nif (c.compare(v, freqTable.firstKey()) < 0) {\nif (c.compare(v, freqTable.lastKey()) >= 0) {\nreturn getSumFreq();    // v is comparable, but greater than the last value\n}",
            "method_id": 11
        },
        {
            "method_signature": "org.apache.commons.math.stat.Frequency$NaturalComparator:compare(Ljava/lang/Comparable;Ljava/lang/Comparable;)I",
            "method_body": "public int compare(Comparable<T> o1, Comparable<T> o2) {\nreturn o1.compareTo((T) o2);\n}",
            "method_id": 12
        },
        {
            "method_signature": "org.apache.commons.math.stat.Frequency:getCount(Ljava/lang/Comparable;)J",
            "method_body": "public long getCount(Comparable<?> v) {\nif (v instanceof Integer) {\nlong result = 0;\nLong count =  freqTable.get(v);\nif (count != null) {\nresult = count.longValue();\n}\nreturn result;\n}",
            "method_id": 13
        }
    ]
}