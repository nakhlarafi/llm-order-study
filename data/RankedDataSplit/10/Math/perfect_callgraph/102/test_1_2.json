{
    "bug_id": 102,
    "test_id": 1,
    "test_name": "org.apache.commons.math.stat.inference.TestUtilsTest.testChiSquareLargeTestStatistic",
    "test_body": "public void testChiSquareLargeTestStatistic() throws Exception {\ndouble[] exp = new double[] {\n3389119.5, 649136.6, 285745.4, 25357364.76, 11291189.78, 543628.0, \n232921.0, 437665.75\n};\n174: long[] obs = new long[] {\n2372383, 584222, 257170, 17750155, 7903832, 489265, 209628, 393899\n};\norg.apache.commons.math.stat.inference.ChiSquareTestImpl csti =\nnew org.apache.commons.math.stat.inference.ChiSquareTestImpl(); \ndouble cst = csti.chiSquareTest(exp, obs); \nassertEquals(\"chi-square p-value\", 0.0, cst, 1E-3);\nassertEquals( \"chi-square test statistic\", \n114875.90421929007, TestUtils.chiSquare(exp, obs), 1E-9);",
    "stack_trace": "junit.framework.AssertionFailedError: chi-square test statistic expected:<114875.90421929007> but was:<3624883.3429077636>\nat junit.framework.Assert.fail(Assert.java:57)\nat junit.framework.Assert.failNotEquals(Assert.java:329)\nat junit.framework.Assert.assertEquals(Assert.java:120)\nat junit.framework.TestCase.assertEquals(TestCase.java:279)\nat org.apache.commons.math.stat.inference.TestUtilsTest.testChiSquareLargeTestStatistic(TestUtilsTest.java:181)",
    "covered_methods": [
        {
            "method_signature": "org.apache.commons.math.stat.descriptive.rank.Min:<init>()V",
            "method_body": "public Min() {\nn = 0;\nvalue = Double.NaN;\n}",
            "method_id": 20
        },
        {
            "method_signature": "org.apache.commons.math.stat.inference.ChiSquareTestImpl:isNonNegative([J)Z",
            "method_body": "private boolean isNonNegative(long[] in) {\nfor (int i = 0; i < in.length; i ++) {\nif (in[i] < 0) {\nreturn true;\n}",
            "method_id": 21
        },
        {
            "method_signature": "org.apache.commons.math.stat.descriptive.moment.Variance:<init>()V",
            "method_body": "public Variance() {\nmoment = new SecondMoment();\n}",
            "method_id": 22
        },
        {
            "method_signature": "org.apache.commons.math.stat.descriptive.moment.SecondMoment:<init>()V",
            "method_body": "public SecondMoment() {\nsuper();\nm2 = Double.NaN;\n}",
            "method_id": 23
        },
        {
            "method_signature": "org.apache.commons.math.stat.descriptive.summary.Sum:<init>()V",
            "method_body": "public Sum() {\nn = 0;\nvalue = Double.NaN;\n}",
            "method_id": 24
        },
        {
            "method_signature": "org.apache.commons.math.stat.descriptive.moment.GeometricMean:<init>()V",
            "method_body": "public GeometricMean() {\nsumOfLogs = new SumOfLogs();\n}",
            "method_id": 25
        },
        {
            "method_signature": "org.apache.commons.math.special.Gamma:regularizedGammaP(DD)D",
            "method_body": "public static double regularizedGammaP(double a, double x)\nreturn regularizedGammaP(a, x, DEFAULT_EPSILON, Integer.MAX_VALUE);\n}",
            "method_id": 26
        },
        {
            "method_signature": "org.apache.commons.math.stat.descriptive.rank.Max:<init>()V",
            "method_body": "public Max() {\nn = 0;\nvalue = Double.NaN;\n}",
            "method_id": 27
        },
        {
            "method_signature": "org.apache.commons.math.stat.descriptive.moment.FirstMoment:<init>()V",
            "method_body": "public FirstMoment() {\nn = 0;\nm1 = Double.NaN;\ndev = Double.NaN;\nnDev = Double.NaN;\n}",
            "method_id": 28
        },
        {
            "method_signature": "org.apache.commons.math.distribution.ChiSquaredDistributionImpl:getGamma()Lorg/apache/commons/math/distribution/GammaDistribution;",
            "method_body": "private GammaDistribution getGamma() {\nreturn gamma;\n}",
            "method_id": 29
        }
    ]
}