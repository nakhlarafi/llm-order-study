{
    "bug_id": 66,
    "test_id": 3,
    "test_name": "org.apache.commons.math.optimization.univariate.BrentOptimizerTest.testSinMin",
    "test_body": "public void testSinMin() throws MathException {\nUnivariateRealFunction f = new SinFunction();\nUnivariateRealOptimizer minimizer = new BrentOptimizer();\nminimizer.setMaxEvaluations(200);\nassertEquals(200, minimizer.getMaxEvaluations());\ntry {\nminimizer.getResult();\nfail(\"an exception should have been thrown\");\n} catch (NoDataException ise) {\n// expected\n} catch (Exception e) {\nfail(\"wrong exception caught\");\n}\nassertEquals(3 * Math.PI / 2, minimizer.optimize(f, GoalType.MINIMIZE, 4, 5), 10 * minimizer.getRelativeAccuracy());\nassertTrue(minimizer.getIterationCount() <= 50);",
    "stack_trace": "junit.framework.AssertionFailedError: expected:<4.71238898038469> but was:<4.71238897901431>\nat org.junit.Assert.fail(Assert.java:88)\nat org.junit.Assert.failNotEquals(Assert.java:743)\nat org.junit.Assert.assertEquals(Assert.java:494)\nat org.junit.Assert.assertEquals(Assert.java:592)\nat org.apache.commons.math.optimization.univariate.BrentOptimizerTest.testSinMin(BrentOptimizerTest.java:54)",
    "covered_methods": [
        {
            "method_signature": "org.apache.commons.math.exception.NoDataException:<init>()V",
            "method_body": "public NoDataException() {\nthis(null);\n}",
            "method_id": 10
        },
        {
            "method_signature": "org.apache.commons.math.optimization.univariate.AbstractUnivariateRealOptimizer:clearResult()V",
            "method_body": "protected final void clearResult() {\nthis.resultComputed = false;\n}",
            "method_id": 11
        },
        {
            "method_signature": "org.apache.commons.math.exception.NoDataException:<init>(Lorg/apache/commons/math/util/Localizable;)V",
            "method_body": "public NoDataException(Localizable specific) {\nsuper(specific, LocalizedFormats.NO_DATA, null);\n}",
            "method_id": 12
        },
        {
            "method_signature": "org.apache.commons.math.ConvergingAlgorithmImpl:getAbsoluteAccuracy()D",
            "method_body": "public double getAbsoluteAccuracy() {\nreturn absoluteAccuracy;\n}",
            "method_id": 13
        },
        {
            "method_signature": "org.apache.commons.math.optimization.univariate.AbstractUnivariateRealOptimizer:computeObjectiveValue(Lorg/apache/commons/math/analysis/UnivariateRealFunction;D)D",
            "method_body": "protected double computeObjectiveValue(final UnivariateRealFunction f,\nif (++evaluations > maxEvaluations) {\nreturn f.value(point);\n}",
            "method_id": 14
        },
        {
            "method_signature": "org.apache.commons.math.optimization.univariate.AbstractUnivariateRealOptimizer:getMaxEvaluations()I",
            "method_body": "public int getMaxEvaluations() {\nreturn maxEvaluations;\n}",
            "method_id": 15
        },
        {
            "method_signature": "org.apache.commons.math.ConvergingAlgorithmImpl:getRelativeAccuracy()D",
            "method_body": "public double getRelativeAccuracy() {\nreturn relativeAccuracy;\n}",
            "method_id": 16
        }
    ]
}