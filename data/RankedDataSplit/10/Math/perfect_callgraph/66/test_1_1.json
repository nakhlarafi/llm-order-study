{
    "bug_id": 66,
    "test_id": 1,
    "test_name": "org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest.testSinMin",
    "test_body": "public void testSinMin() throws MathException {\nUnivariateRealFunction f = new SinFunction();\nUnivariateRealOptimizer underlying = new BrentOptimizer();\nJDKRandomGenerator g = new JDKRandomGenerator();\ng.setSeed(44428400075l);\nMultiStartUnivariateRealOptimizer minimizer =\nnew MultiStartUnivariateRealOptimizer(underlying, 10, g);\nminimizer.optimize(f, GoalType.MINIMIZE, -100.0, 100.0);\ndouble[] optima = minimizer.getOptima();\ndouble[] optimaValues = minimizer.getOptimaValues();\nfor (int i = 1; i < optima.length; ++i) {\ndouble d = (optima[i] - optima[i-1]) / (2 * Math.PI);\nassertTrue (Math.abs(d - Math.rint(d)) < 1.0e-8);\nassertEquals(-1.0, f.value(optima[i]), 1.0e-10);\nassertEquals(f.value(optima[i]), optimaValues[i], 1.0e-10);\n}\nassertTrue(minimizer.getEvaluations() > 150);\nassertTrue(minimizer.getEvaluations() < 250);\n}\n",
    "stack_trace": "junit.framework.AssertionFailedError\nat org.junit.Assert.fail(Assert.java:86)\nat org.junit.Assert.assertTrue(Assert.java:41)\nat org.junit.Assert.assertTrue(Assert.java:52)\nat org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizerTest.testSinMin(MultiStartUnivariateRealOptimizerTest.java:52)",
    "covered_methods": [
        {
            "method_signature": "org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer:setMaxEvaluations(I)V",
            "method_body": "public void setMaxEvaluations(int maxEvaluations) {\nthis.maxEvaluations = maxEvaluations;\n}",
            "method_id": 10
        },
        {
            "method_signature": "org.apache.commons.math.optimization.univariate.AbstractUnivariateRealOptimizer:setMaxEvaluations(I)V",
            "method_body": "public void setMaxEvaluations(int maxEvaluations) {\nthis.maxEvaluations = maxEvaluations;\n}",
            "method_id": 11
        },
        {
            "method_signature": "org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer:<init>(Lorg/apache/commons/math/optimization/UnivariateRealOptimizer;ILorg/apache/commons/math/random/RandomGenerator;)V",
            "method_body": "public MultiStartUnivariateRealOptimizer(final UnivariateRealOptimizer optimizer,\nfinal RandomGenerator generator) {\nthis.optimizer        = optimizer;\nthis.totalIterations  = 0;\nthis.starts           = starts;\nthis.generator        = generator;\nthis.optima           = null;\nsetMaximalIterationCount(Integer.MAX_VALUE);\nsetMaxEvaluations(Integer.MAX_VALUE);\n}",
            "method_id": 12
        },
        {
            "method_signature": "org.apache.commons.math.optimization.univariate.AbstractUnivariateRealOptimizer:getFunctionValue()D",
            "method_body": "public double getFunctionValue() {\nif (functionValue == Double.NaN) {\nreturn functionValue;\n}",
            "method_id": 13
        },
        {
            "method_signature": "org.apache.commons.math.optimization.univariate.AbstractUnivariateRealOptimizer:clearResult()V",
            "method_body": "protected final void clearResult() {\nthis.resultComputed = false;\n}",
            "method_id": 14
        },
        {
            "method_signature": "org.apache.commons.math.ConvergingAlgorithmImpl:getAbsoluteAccuracy()D",
            "method_body": "public double getAbsoluteAccuracy() {\nreturn absoluteAccuracy;\n}",
            "method_id": 15
        },
        {
            "method_signature": "org.apache.commons.math.optimization.univariate.AbstractUnivariateRealOptimizer:computeObjectiveValue(Lorg/apache/commons/math/analysis/UnivariateRealFunction;D)D",
            "method_body": "protected double computeObjectiveValue(final UnivariateRealFunction f,\nif (++evaluations > maxEvaluations) {\nreturn f.value(point);\n}",
            "method_id": 16
        },
        {
            "method_signature": "org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer:setMaximalIterationCount(I)V",
            "method_body": "public void setMaximalIterationCount(int count) {\nthis.maxIterations = count;\n}",
            "method_id": 17
        },
        {
            "method_signature": "org.apache.commons.math.optimization.univariate.AbstractUnivariateRealOptimizer:getEvaluations()I",
            "method_body": "public int getEvaluations() {\nreturn evaluations;\n}",
            "method_id": 18
        },
        {
            "method_signature": "org.apache.commons.math.ConvergingAlgorithmImpl:getRelativeAccuracy()D",
            "method_body": "public double getRelativeAccuracy() {\nreturn relativeAccuracy;\n}",
            "method_id": 19
        }
    ]
}