{
    "bug_id": 51,
    "test_id": 0,
    "test_name": "org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest.testIssue631",
    "test_body": "public void testIssue631() {\nfinal UnivariateRealFunction f = new UnivariateRealFunction() {\n@Override\npublic double value(double x) {\nreturn Math.exp(x) - Math.pow(Math.PI, 3.0);\n}\n};\n52: final UnivariateRealSolver solver = new RegulaFalsiSolver();\nfinal double root = solver.solve(3624, f, 1, 10);\nAssert.assertEquals(3.4341896575482003, root, 1e-15);",
    "stack_trace": "org.apache.commons.math.exception.TooManyEvaluationsException: illegal state: maximal count (3,624) exceeded: evaluations\nat org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver.incrementEvaluationCount(BaseAbstractUnivariateRealSolver.java:296)\nat org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver.computeObjectiveValue(BaseAbstractUnivariateRealSolver.java:153)\nat org.apache.commons.math.analysis.solvers.BaseSecantSolver.doSolve(BaseSecantSolver.java:161)\nat org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver.solve(BaseAbstractUnivariateRealSolver.java:190)\nat org.apache.commons.math.analysis.solvers.BaseSecantSolver.solve(BaseSecantSolver.java:117)\nat org.apache.commons.math.analysis.solvers.BaseSecantSolver.solve(BaseSecantSolver.java:124)\nat org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver.solve(BaseAbstractUnivariateRealSolver.java:195)\nat org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest.testIssue631(RegulaFalsiSolverTest.java:53)",
    "covered_methods": [
        {
            "method_signature": "org.apache.commons.math.analysis.solvers.BaseSecantSolver:doSolve()D",
            "method_body": "protected final double doSolve() {\ndouble x0 = getMin();\ndouble x1 = getMax();\ndouble f0 = computeObjectiveValue(x0);\ndouble f1 = computeObjectiveValue(x1);\nif (f0 == 0.0) {\nif (f1 == 0.0) {\nverifyBracketing(x0, x1);\nfinal double ftol = getFunctionValueAccuracy();\nfinal double atol = getAbsoluteAccuracy();\nfinal double rtol = getRelativeAccuracy();\nboolean inverted = false;\nfinal double x = x1 - ((f1 * (x1 - x0)) / (f1 - f0));\nfinal double fx = computeObjectiveValue(x);\nif (fx == 0.0) {\nif (f1 * fx < 0) {\nx0 = x1;\nf0 = f1;\ninverted = !inverted;\nswitch (method) {\nx1 = x;\nf1 = fx;\nif (FastMath.abs(f1) <= ftol) {\nif (FastMath.abs(x1 - x0) < FastMath.max(rtol * FastMath.abs(x1),\n}\n}",
            "method_id": 0
        },
        {
            "method_signature": "org.apache.commons.math.analysis.solvers.RegulaFalsiSolver:<init>()V",
            "method_body": "public RegulaFalsiSolver() {\nsuper(DEFAULT_ABSOLUTE_ACCURACY, Method.REGULA_FALSI);\n}",
            "method_id": 1
        },
        {
            "method_signature": "org.apache.commons.math.analysis.solvers.AbstractUnivariateRealSolver:<init>(D)V",
            "method_body": "protected AbstractUnivariateRealSolver(final double absoluteAccuracy) {\nsuper(absoluteAccuracy);\n}",
            "method_id": 2
        },
        {
            "method_signature": "org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver:<init>(D)V",
            "method_body": "protected BaseAbstractUnivariateRealSolver(final double absoluteAccuracy) {\nthis(DEFAULT_RELATIVE_ACCURACY,\n}",
            "method_id": 3
        },
        {
            "method_signature": "org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver:<init>(DDD)V",
            "method_body": "protected BaseAbstractUnivariateRealSolver(final double relativeAccuracy,\nfinal double functionValueAccuracy) {\nthis.absoluteAccuracy = absoluteAccuracy;\nthis.relativeAccuracy = relativeAccuracy;\nthis.functionValueAccuracy = functionValueAccuracy;\n}",
            "method_id": 4
        },
        {
            "method_signature": "org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver:getMin()D",
            "method_body": "public double getMin() {\nreturn searchMin;\n}",
            "method_id": 5
        },
        {
            "method_signature": "org.apache.commons.math.exception.MaxCountExceededException:<init>(Ljava/lang/Number;)V",
            "method_body": "public MaxCountExceededException(Number max) {\nthis(LocalizedFormats.MAX_COUNT_EXCEEDED, max);\n}",
            "method_id": 6
        },
        {
            "method_signature": "org.apache.commons.math.exception.util.ExceptionContext:addMessage(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V",
            "method_body": "public void addMessage(Localizable pattern,\nmsgPatterns.add(pattern);\nmsgArguments.add(ArgUtils.flatten(arguments));\n}",
            "method_id": 7
        },
        {
            "method_signature": "org.apache.commons.math.analysis.solvers.BaseSecantSolver:solve(ILorg/apache/commons/math/analysis/UnivariateRealFunction;DDDLorg/apache/commons/math/analysis/solvers/AllowedSolution;)D",
            "method_body": "public double solve(final int maxEval, final UnivariateRealFunction f,\nthis.allowed = allowedSolution;\nreturn super.solve(maxEval, f, min, max, startValue);\n}",
            "method_id": 8
        },
        {
            "method_signature": "org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver:getFunctionValueAccuracy()D",
            "method_body": "public double getFunctionValueAccuracy() {\nreturn functionValueAccuracy;\n}",
            "method_id": 9
        }
    ]
}