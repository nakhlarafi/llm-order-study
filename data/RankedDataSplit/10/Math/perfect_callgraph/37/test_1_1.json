{
    "bug_id": 37,
    "test_id": 1,
    "test_name": "org.apache.commons.math.complex.ComplexTest.testTanInf",
    "test_body": "public void testTanInf() {\nTestUtils.assertSame(Complex.valueOf(0.0, 1.0), oneInf.tan());\nTestUtils.assertSame(Complex.valueOf(0.0, -1.0), oneNegInf.tan());",
    "stack_trace": "junit.framework.AssertionFailedError: expected:<1.0> but was:<NaN>\nat org.junit.Assert.fail(Assert.java:88)\nat org.junit.Assert.failNotEquals(Assert.java:743)\nat org.junit.Assert.assertEquals(Assert.java:494)\nat org.junit.Assert.assertEquals(Assert.java:592)\nat org.apache.commons.math.TestUtils.assertSame(TestUtils.java:77)\nat org.apache.commons.math.TestUtils.assertSame(TestUtils.java:86)\nat org.apache.commons.math.complex.ComplexTest.testTanInf(ComplexTest.java:1015)",
    "covered_methods": [
        {
            "method_signature": "org.apache.commons.math.complex.Complex:getReal()D",
            "method_body": "public double getReal() {\nreturn real;\n}",
            "method_id": 10
        },
        {
            "method_signature": "org.apache.commons.math.util.FastMath:polySine(D)D",
            "method_body": "private static double polySine(final double x)\ndouble x2 = x*x;\ndouble p = 2.7553817452272217E-6;\np = p * x2 + -1.9841269659586505E-4;\np = p * x2 + 0.008333333333329196;\np = p * x2 + -0.16666666666666666;\np = p * x2 * x;\nreturn p;\n}",
            "method_id": 11
        },
        {
            "method_signature": "org.apache.commons.math.complex.Complex:getImaginary()D",
            "method_body": "public double getImaginary() {\nreturn imaginary;\n}",
            "method_id": 12
        }
    ]
}