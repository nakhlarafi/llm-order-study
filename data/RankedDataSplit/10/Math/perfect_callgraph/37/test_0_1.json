{
    "bug_id": 37,
    "test_id": 0,
    "test_name": "org.apache.commons.math.complex.ComplexTest.testTanhInf",
    "test_body": "public void testTanhInf() {\nTestUtils.assertSame(Complex.NaN, oneInf.tanh());\nTestUtils.assertSame(Complex.NaN, oneNegInf.tanh());\nTestUtils.assertSame(Complex.valueOf(1.0, 0.0), infOne.tanh());\nTestUtils.assertSame(Complex.valueOf(-1.0, 0.0), negInfOne.tanh());",
    "stack_trace": "junit.framework.AssertionFailedError: expected:<1.0> but was:<NaN>\nat org.junit.Assert.fail(Assert.java:88)\nat org.junit.Assert.failNotEquals(Assert.java:743)\nat org.junit.Assert.assertEquals(Assert.java:494)\nat org.junit.Assert.assertEquals(Assert.java:592)\nat org.apache.commons.math.TestUtils.assertSame(TestUtils.java:77)\nat org.apache.commons.math.TestUtils.assertSame(TestUtils.java:85)\nat org.apache.commons.math.complex.ComplexTest.testTanhInf(ComplexTest.java:1054)",
    "covered_methods": [
        {
            "method_signature": "org.apache.commons.math.complex.Complex:<init>(DD)V",
            "method_body": "public Complex(double real, double imaginary) {\nthis.real = real;\nthis.imaginary = imaginary;\nisNaN = Double.isNaN(real) || Double.isNaN(imaginary);\nisInfinite = !isNaN &&\n}",
            "method_id": 10
        },
        {
            "method_signature": "org.apache.commons.math.complex.Complex:valueOf(DD)Lorg/apache/commons/math/complex/Complex;",
            "method_body": "public static Complex valueOf(double realPart,\nif (Double.isNaN(realPart) ||\nreturn new Complex(realPart, imaginaryPart);\n}",
            "method_id": 11
        },
        {
            "method_signature": "org.apache.commons.math.util.FastMath:polyCosine(D)D",
            "method_body": "private static double polyCosine(double x) {\ndouble x2 = x*x;\ndouble p = 2.479773539153719E-5;\np = p * x2 + -0.0013888888689039883;\np = p * x2 + 0.041666666666621166;\np = p * x2 + -0.49999999999999994;\np *= x2;\nreturn p;\n}",
            "method_id": 12
        },
        {
            "method_signature": "org.apache.commons.math.complex.Complex:getReal()D",
            "method_body": "public double getReal() {\nreturn real;\n}",
            "method_id": 13
        },
        {
            "method_signature": "org.apache.commons.math.util.FastMath:polySine(D)D",
            "method_body": "private static double polySine(final double x)\ndouble x2 = x*x;\ndouble p = 2.7553817452272217E-6;\np = p * x2 + -1.9841269659586505E-4;\np = p * x2 + 0.008333333333329196;\np = p * x2 + -0.16666666666666666;\np = p * x2 * x;\nreturn p;\n}",
            "method_id": 14
        },
        {
            "method_signature": "org.apache.commons.math.complex.Complex:getImaginary()D",
            "method_body": "public double getImaginary() {\nreturn imaginary;\n}",
            "method_id": 15
        }
    ]
}