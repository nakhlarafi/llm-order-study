{
    "bug_id": 20,
    "test_id": 0,
    "test_name": "org.mockitousage.annotation.SpyAnnotationTest.should_spy_inner_class",
    "test_body": "public void should_spy_inner_class() throws Exception {\n126: class WithMockAndSpy {\n@Spy private InnerStrength strength;\n@Mock private List<String> list;\n130: abstract class InnerStrength {\nprivate final String name;\n133: InnerStrength() {\n// Make sure that @Mock fields are always injected before @Spy fields.\nassertNotNull(list);\n// Make sure constructor is indeed called.\nthis.name = \"inner\";\n}\n140: abstract String strength();\n142: String fullStrength() {\nreturn name + \" \" + strength();\n}\n}\n}\nWithMockAndSpy outer = new WithMockAndSpy();\nMockitoAnnotations.initMocks(outer);\nwhen(outer.strength.strength()).thenReturn(\"strength\");\nassertEquals(\"inner strength\", outer.strength.fullStrength());\n}\n",
    "stack_trace": "junit.framework.ComparisonFailure: expected:<[inner] strength> but was:<[null] strength>\nat junit.framework.Assert.assertEquals(Assert.java:100)\nat junit.framework.Assert.assertEquals(Assert.java:107)\nat org.mockitousage.annotation.SpyAnnotationTest.should_spy_inner_class(SpyAnnotationTest.java:150)",
    "covered_methods": [
        {
            "method_signature": "org.mockito.internal.creation.settings.CreationSettings:getTypeToMock()Ljava/lang/Class;",
            "method_body": "public Class<T> getTypeToMock() {\nreturn typeToMock;\n}",
            "method_id": 210
        },
        {
            "method_signature": "org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper:<init>(Ljava/lang/Object;)V",
            "method_body": "public HashCodeAndEqualsMockWrapper(Object mockInstance) {\nthis.mockInstance = mockInstance;\n}",
            "method_id": 211
        },
        {
            "method_signature": "org.mockito.internal.creation.MockSettingsImpl:outerInstance(Ljava/lang/Object;)Lorg/mockito/MockSettings;",
            "method_body": "public MockSettings outerInstance(Object outerClassInstance) {\nthis.outerClassInstance = outerClassInstance;\nreturn this;\n}",
            "method_id": 212
        },
        {
            "method_signature": "org.mockito.internal.creation.bytebuddy.ClassInstantiator$UsingObjenesis:instantiate(Ljava/lang/Class;)Ljava/lang/Object;",
            "method_body": "<T> T instantiate(Class<T> type);\nreturn objenesis.newInstance(type);\n}",
            "method_id": 213
        },
        {
            "method_signature": "org.mockito.internal.stubbing.answers.AnswersValidator:validateReturnValue(Lorg/mockito/internal/stubbing/answers/Returns;Lorg/mockito/internal/stubbing/answers/MethodInfo;)V",
            "method_body": "private void validateReturnValue(Returns answer, MethodInfo methodInfo) {\nif (methodInfo.isVoid()) {\nif (answer.returnsNull() && methodInfo.returnsPrimitive()) {\nif (!answer.returnsNull() && !methodInfo.isValidReturnType(answer.getReturnType())) {\n}",
            "method_id": 214
        },
        {
            "method_signature": "org.mockito.internal.creation.MockSettingsImpl:spiedInstance(Ljava/lang/Object;)Lorg/mockito/MockSettings;",
            "method_body": "public MockSettings spiedInstance(Object spiedInstance) {\nthis.spiedInstance = spiedInstance;\nreturn this;\n}",
            "method_id": 215
        },
        {
            "method_signature": "org.mockito.internal.stubbing.answers.MethodInfo:isValidReturnType(Ljava/lang/Class;)Z",
            "method_body": "public boolean isValidReturnType(Class clazz) {\nif (method.getReturnType().isPrimitive() || clazz.isPrimitive()) {\nreturn method.getReturnType().isAssignableFrom(clazz);\n}",
            "method_id": 216
        },
        {
            "method_signature": "org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet:of([Ljava/lang/Object;)Lorg/mockito/internal/util/collections/HashCodeAndEqualsSafeSet;",
            "method_body": "public static HashCodeAndEqualsSafeSet of(Object... mocks) {\nreturn of(Arrays.asList(mocks));\n}",
            "method_id": 217
        },
        {
            "method_signature": "org.mockito.internal.util.MockNameImpl:<init>(Ljava/lang/String;Ljava/lang/Class;)V",
            "method_body": "public MockNameImpl(String mockName, Class classToMock) {\nif (mockName == null) {\nthis.mockName = toInstanceName(classToMock);\nthis.defaultName = true;\nthis.mockName = mockName;\n}",
            "method_id": 218
        },
        {
            "method_signature": "org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet:of(Ljava/lang/Iterable;)Lorg/mockito/internal/util/collections/HashCodeAndEqualsSafeSet;",
            "method_body": "public static HashCodeAndEqualsSafeSet of(Iterable<Object> objects) {\nHashCodeAndEqualsSafeSet hashCodeAndEqualsSafeSet = new HashCodeAndEqualsSafeSet();\nif (objects != null) {\nfor (Object mock : objects) {\nreturn hashCodeAndEqualsSafeSet;\n}",
            "method_id": 219
        }
    ]
}