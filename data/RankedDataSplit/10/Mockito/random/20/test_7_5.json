{
    "bug_id": 20,
    "test_id": 7,
    "test_name": "org.mockitousage.constructor.CreatingMocksWithConstructorTest.exception_message_when_constructor_not_found",
    "test_body": "public void exception_message_when_constructor_not_found() {\ntry {\n//when\nspy(HasConstructor.class);\n//then\nfail();\n} catch (MockitoException e) {",
    "stack_trace": "junit.framework.AssertionFailedError\nat junit.framework.Assert.fail(Assert.java:55)\nat junit.framework.Assert.fail(Assert.java:64)\nat org.mockitousage.constructor.CreatingMocksWithConstructorTest.exception_message_when_constructor_not_found(CreatingMocksWithConstructorTest.java:65)",
    "covered_methods": [
        {
            "method_signature": "org.mockito.internal.configuration.injection.MockInjection$OngoingMockInjection:tryPropertyOrFieldInjection()Lorg/mockito/internal/configuration/injection/MockInjection$OngoingMockInjection;",
            "method_body": "public OngoingMockInjection tryPropertyOrFieldInjection() {\ninjectionStrategies.thenTry(new PropertyAndSetterInjection());\nreturn this;\n}",
            "method_id": 50
        },
        {
            "method_signature": "org.mockito.internal.creation.bytebuddy.CachingMockBytecodeGenerator$CachedBytecodeGenerator:generate(Ljava/lang/Class;Ljava/util/Set;)Ljava/lang/Class;",
            "method_body": "private <T> Class<? extends T> generate(Class<T> mockedType, Set<Class> interfaces) {\nreturn generator.generateMockClass(mockedType, interfaces);\n}",
            "method_id": 51
        },
        {
            "method_signature": "org.mockito.internal.creation.settings.CreationSettings:getName()Ljava/lang/String;",
            "method_body": "public String getName() {\nreturn name;\n}",
            "method_id": 52
        },
        {
            "method_signature": "org.mockito.internal.creation.settings.CreationSettings:getInvocationListeners()Ljava/util/List;",
            "method_body": "public List<InvocationListener> getInvocationListeners() {\nreturn invocationListeners;\n}",
            "method_id": 53
        },
        {
            "method_signature": "org.mockito.internal.creation.settings.CreationSettings:isSerializable()Z",
            "method_body": "public boolean isSerializable() {\nreturn serializableMode != SerializableMode.NONE;\n}",
            "method_id": 54
        },
        {
            "method_signature": "org.mockito.internal.creation.settings.CreationSettings:getSpiedInstance()Ljava/lang/Object;",
            "method_body": "public Object getSpiedInstance() {\nreturn spiedInstance;\n}",
            "method_id": 55
        },
        {
            "method_signature": "org.mockito.internal.creation.settings.CreationSettings:getTypeToMock()Ljava/lang/Class;",
            "method_body": "public Class<T> getTypeToMock() {\nreturn typeToMock;\n}",
            "method_id": 56
        },
        {
            "method_signature": "org.mockito.internal.creation.bytebuddy.ByteBuddyMockMaker:ensureMockIsAssignableToMockedType(Lorg/mockito/mock/MockCreationSettings;Ljava/lang/Object;)Ljava/lang/Object;",
            "method_body": "private <T> T ensureMockIsAssignableToMockedType(MockCreationSettings<T> settings, T mock) {\nClass<T> typeToMock = settings.getTypeToMock();\nreturn typeToMock.cast(mock);\n}",
            "method_id": 57
        },
        {
            "method_signature": "org.mockito.internal.configuration.injection.MockInjectionStrategy:nop()Lorg/mockito/internal/configuration/injection/MockInjectionStrategy;",
            "method_body": "public static final MockInjectionStrategy nop() {\nreturn new MockInjectionStrategy() {\n}",
            "method_id": 58
        },
        {
            "method_signature": "org.mockito.internal.creation.settings.CreationSettings:<init>(Lorg/mockito/internal/creation/settings/CreationSettings;)V",
            "method_body": "public CreationSettings(CreationSettings copy) {\nthis.typeToMock = copy.typeToMock;\nthis.extraInterfaces = copy.extraInterfaces;\nthis.name = copy.name;\nthis.spiedInstance = copy.spiedInstance;\nthis.defaultAnswer = copy.defaultAnswer;\nthis.mockName = copy.mockName;\nthis.serializableMode = copy.serializableMode;\nthis.invocationListeners = copy.invocationListeners;\nthis.stubOnly = copy.stubOnly;\nthis.useConstructor = copy.isUsingConstructor();\nthis.outerClassInstance = copy.getOuterClassInstance();\n}",
            "method_id": 59
        }
    ]
}