{
    "bug_id": 37,
    "test_id": 0,
    "test_name": "org.mockitousage.spies.SpyingOnInterfacesTest.shouldFailFastWhenCallingRealMethodOnInterface",
    "test_body": "public void shouldFailFastWhenCallingRealMethodOnInterface() throws Exception {\nList list = mock(List.class);\ntry {\n//when\nwhen(list.get(0)).thenCallRealMethod();\n//then\nfail();\n} catch (MockitoException e) {}",
    "stack_trace": "junit.framework.AssertionFailedError\nat junit.framework.Assert.fail(Assert.java:55)\nat junit.framework.Assert.fail(Assert.java:64)\nat org.mockitousage.spies.SpyingOnInterfacesTest.shouldFailFastWhenCallingRealMethodOnInterface(SpyingOnInterfacesTest.java:28)",
    "covered_methods": [
        {
            "method_signature": "org.mockito.internal.stubbing.answers.AnswersValidator:validate(Lorg/mockito/stubbing/Answer;Lorg/mockito/internal/invocation/Invocation;)V",
            "method_body": "public void validate(Answer<?> answer, Invocation invocation) {\nif (answer instanceof ThrowsException) {\nif (answer instanceof Returns) {\nif (answer instanceof DoesNothing) {\n}",
            "method_id": 30
        },
        {
            "method_signature": "org.mockito.internal.debugging.Location:<init>(Lorg/mockito/internal/exceptions/base/StackTraceFilter;)V",
            "method_body": "public Location(StackTraceFilter filter) {\nStackTraceElement[] stackTrace = Thread.currentThread().getStackTrace();\nStackTraceElement[] filtered = filter.filter(stackTrace, false);\nif (filtered.length == 0) {\nwhere = \"-> at \" + filtered[0].toString();\n}",
            "method_id": 31
        },
        {
            "method_signature": "org.mockito.internal.creation.AbstractMockitoMethodProxy:setNamingPolicyField(Lorg/mockito/internal/creation/cglib/MockitoNamingPolicy;)V",
            "method_body": "public void setNamingPolicyField(MockitoNamingPolicy namingPolicy) {\nMethodProxy methodProxy = getMethodProxy();\nField createInfoField = reflectOnCreateInfo(methodProxy);\ncreateInfoField.setAccessible(true);\nObject createInfo = createInfoField.get(methodProxy);\nField namingPolicyField = createInfo.getClass().getDeclaredField(\"namingPolicy\");\nnamingPolicyField.setAccessible(true);\nif (namingPolicyField.get(createInfo) == null) {\nnamingPolicyField.set(createInfo, MockitoNamingPolicy.INSTANCE);\n}\n}",
            "method_id": 32
        },
        {
            "method_signature": "org.mockito.internal.debugging.DebuggingInfo:addStubbedInvocation(Lorg/mockito/internal/invocation/Invocation;)V",
            "method_body": "public void addStubbedInvocation(Invocation invocation) {\nif (!collectingData) {\nreturn;\n}",
            "method_id": 33
        },
        {
            "method_signature": "org.mockito.internal.invocation.SerializableMockitoMethod:getReturnType()Ljava/lang/Class;",
            "method_body": "public Class<?> getReturnType() {\nreturn returnType;\n}",
            "method_id": 34
        },
        {
            "method_signature": "org.mockito.internal.progress.MockingProgressImpl:getArgumentMatcherStorage()Lorg/mockito/internal/progress/ArgumentMatcherStorage;",
            "method_body": "public ArgumentMatcherStorage getArgumentMatcherStorage() {\nreturn argumentMatcherStorage;\n}",
            "method_id": 35
        },
        {
            "method_signature": "org.mockito.internal.debugging.DebuggingInfo:addPotentiallyUnstubbed(Lorg/mockito/internal/invocation/InvocationMatcher;)V",
            "method_body": "public void addPotentiallyUnstubbed(InvocationMatcher invocationMatcher) {\nif (!collectingData) {\nreturn;\n}",
            "method_id": 36
        },
        {
            "method_signature": "org.mockito.internal.creation.AbstractMockitoMethodProxy:reflectOnCreateInfo(Lorg/mockito/cglib/proxy/MethodProxy;)Ljava/lang/reflect/Field;",
            "method_body": "private Field reflectOnCreateInfo(MethodProxy methodProxy) throws SecurityException, NoSuchFieldException {\nClass cglibMethodProxyClass = methodProxy.getClass();\nwhile (cglibMethodProxyClass != MethodProxy.class) {\nreturn cglibMethodProxyClass.getDeclaredField(\"createInfo\");\n}",
            "method_id": 37
        },
        {
            "method_signature": "org.mockito.internal.configuration.GlobalConfiguration:getAnnotationEngine()Lorg/mockito/configuration/AnnotationEngine;",
            "method_body": "public AnnotationEngine getAnnotationEngine() {\nreturn globalConfiguration.get().getAnnotationEngine();\n}",
            "method_id": 38
        },
        {
            "method_signature": "org.mockito.internal.configuration.GlobalConfiguration:<init>()V",
            "method_body": "public GlobalConfiguration() {\nif (globalConfiguration.get() == null) {\n}",
            "method_id": 39
        }
    ]
}