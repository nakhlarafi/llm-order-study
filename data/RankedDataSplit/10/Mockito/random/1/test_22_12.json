{
    "bug_id": 1,
    "test_id": 22,
    "test_name": "org.mockitousage.basicapi.UsingVarargsTest.shouldStubStringVarargs",
    "test_body": "public void shouldStubStringVarargs() {\nwhen(mock.withStringVarargsReturningString(1)).thenReturn(\"1\");\nwhen(mock.withStringVarargsReturningString(2, \"1\", \"2\", \"3\")).thenReturn(\"2\");\n38: RuntimeException expected = new RuntimeException();\nstubVoid(mock).toThrow(expected).on().withStringVarargs(3, \"1\", \"2\", \"3\", \"4\");\n41: assertEquals(\"1\", mock.withStringVarargsReturningString(1));\nassertEquals(null, mock.withStringVarargsReturningString(2));",
    "stack_trace": "java.lang.UnsupportedOperationException\nat org.mockito.internal.invocation.InvocationMatcher.captureArgumentsFrom(InvocationMatcher.java:123)\nat org.mockito.internal.handler.MockHandlerImpl.handle(MockHandlerImpl.java:94)\nat org.mockito.internal.handler.NullResultGuardian.handle(NullResultGuardian.java:29)\nat org.mockito.internal.handler.InvocationNotifierHandler.handle(InvocationNotifierHandler.java:37)\nat org.mockito.internal.creation.bytebuddy.MockMethodInterceptor.doIntercept(MockMethodInterceptor.java:82)\nat org.mockito.internal.creation.bytebuddy.MockMethodInterceptor.interceptAbstract(MockMethodInterceptor.java:70)\nat org.mockitousage.basicapi.UsingVarargsTest$IVarArgs$MockitoMock$598797521.withStringVarargsReturningString(Unknown Source)\nat org.mockitousage.basicapi.UsingVarargsTest.shouldStubStringVarargs(UsingVarargsTest.java:41)",
    "covered_methods": [
        {
            "method_signature": "org.mockito.internal.matchers.Equals:<init>(Ljava/lang/Object;)V",
            "method_body": "public Equals(Object wanted) {\nthis.wanted = wanted;\n}",
            "method_id": 120
        },
        {
            "method_signature": "org.mockito.internal.configuration.injection.scanner.InjectMocksScanner:scan()Ljava/util/Set;",
            "method_body": "private Set<Field> scan() {\nSet<Field> mockDependentFields = new HashSet<Field>();\nField[] fields = clazz.getDeclaredFields();\nfor (Field field : fields) {\nif (null != field.getAnnotation(InjectMocks.class)) {\nreturn mockDependentFields;\n}",
            "method_id": 121
        },
        {
            "method_signature": "org.mockito.internal.configuration.GlobalConfiguration:getDefaultAnswer()Lorg/mockito/stubbing/Answer;",
            "method_body": "public Answer<Object> getDefaultAnswer() {\nreturn GLOBAL_CONFIGURATION.get().getDefaultAnswer();\n}",
            "method_id": 122
        },
        {
            "method_signature": "org.mockito.internal.matchers.Equals:matches(Ljava/lang/Object;)Z",
            "method_body": "public boolean matches(Object actual) {\nreturn Equality.areEqual(this.wanted, actual);\n}",
            "method_id": 123
        },
        {
            "method_signature": "org.mockito.internal.progress.ThreadSafeMockingProgress:getArgumentMatcherStorage()Lorg/mockito/internal/progress/ArgumentMatcherStorage;",
            "method_body": "public ArgumentMatcherStorage getArgumentMatcherStorage() {\nreturn threadSafely().getArgumentMatcherStorage();\n}",
            "method_id": 124
        },
        {
            "method_signature": "org.mockito.internal.stubbing.InvocationContainerImpl:addAnswer(Lorg/mockito/stubbing/Answer;)V",
            "method_body": "public void addAnswer(Answer answer) {\nregisteredInvocations.removeLast();\naddAnswer(answer, false);\n}",
            "method_id": 125
        },
        {
            "method_signature": "org.mockito.internal.util.reflection.AccessibilityChanger:safelyDisableAccess(Ljava/lang/reflect/AccessibleObject;)V",
            "method_body": "public void safelyDisableAccess(AccessibleObject accessibleObject) {\nassert wasAccessible != null : \"accessibility info shall not be null\";\naccessibleObject.setAccessible(wasAccessible);\n}\n}",
            "method_id": 126
        },
        {
            "method_signature": "org.mockito.internal.debugging.LocationImpl:<init>()V",
            "method_body": "public LocationImpl() {\nthis(new StackTraceFilter());\n}",
            "method_id": 127
        },
        {
            "method_signature": "org.mockito.internal.creation.DelegatingMethod:<init>(Ljava/lang/reflect/Method;)V",
            "method_body": "public DelegatingMethod(Method method) {\nassert method != null : \"Method cannot be null\";\nthis.method = method;\n}",
            "method_id": 128
        },
        {
            "method_signature": "org.mockito.internal.creation.settings.CreationSettings:getTypeToMock()Ljava/lang/Class;",
            "method_body": "public Class<T> getTypeToMock() {\nreturn typeToMock;\n}",
            "method_id": 129
        }
    ]
}