{
    "bug_id": 1,
    "test_id": 16,
    "test_name": "org.mockitousage.bugs.varargs.VarargsAndAnyObjectPicksUpExtraInvocationsTest.shouldVerifyCorrectlyWithAnyVarargs",
    "test_body": "public void shouldVerifyCorrectlyWithAnyVarargs() {\n//when\ntable.newRow(\"qux\", \"foo\", \"bar\", \"baz\");\ntable.newRow(\"abc\", \"def\");\n29: //then\nverify(table, times(2)).newRow(anyString(), (String[]) anyVararg());\n}\n",
    "stack_trace": "java.lang.UnsupportedOperationException\nat org.mockito.internal.invocation.InvocationMatcher.captureArgumentsFrom(InvocationMatcher.java:123)\nat org.mockito.internal.invocation.InvocationMarker.markVerified(InvocationMarker.java:22)\nat org.mockito.internal.invocation.InvocationMarker.markVerified(InvocationMarker.java:16)\nat org.mockito.internal.verification.checkers.NumberOfInvocationsChecker.check(NumberOfInvocationsChecker.java:48)\nat org.mockito.internal.verification.Times.verify(Times.java:39)\nat org.mockito.internal.verification.MockAwareVerificationMode.verify(MockAwareVerificationMode.java:21)\nat org.mockito.internal.handler.MockHandlerImpl.handle(MockHandlerImpl.java:76)\nat org.mockito.internal.handler.NullResultGuardian.handle(NullResultGuardian.java:29)\nat org.mockito.internal.handler.InvocationNotifierHandler.handle(InvocationNotifierHandler.java:37)\nat org.mockito.internal.creation.bytebuddy.MockMethodInterceptor.doIntercept(MockMethodInterceptor.java:82)\nat org.mockito.internal.creation.bytebuddy.MockMethodInterceptor.interceptAbstract(MockMethodInterceptor.java:70)\nat org.mockitousage.bugs.varargs.VarargsAndAnyObjectPicksUpExtraInvocationsTest$TableBuilder$MockitoMock$1658494778.newRow(Unknown Source)\nat org.mockitousage.bugs.varargs.VarargsAndAnyObjectPicksUpExtraInvocationsTest.shouldVerifyCorrectlyWithAnyVarargs(VarargsAndAnyObjectPicksUpExtraInvocationsTest.java:30)",
    "covered_methods": [
        {
            "method_signature": "org.mockito.internal.handler.InvocationNotifierHandler:<init>(Lorg/mockito/internal/InternalMockHandler;Lorg/mockito/mock/MockCreationSettings;)V",
            "method_body": "public InvocationNotifierHandler(InternalMockHandler<T> mockHandler, MockCreationSettings settings) {\nthis.mockHandler = mockHandler;\nthis.invocationListeners = settings.getInvocationListeners();\n}",
            "method_id": 160
        },
        {
            "method_signature": "org.mockito.internal.invocation.InvocationMatcher:matches(Lorg/mockito/invocation/Invocation;)Z",
            "method_body": "public boolean matches(Invocation actual) {\nreturn invocation.getMock().equals(actual.getMock())\n}",
            "method_id": 161
        },
        {
            "method_signature": "org.mockito.internal.configuration.injection.MockInjection$OngoingMockInjection:handleSpyAnnotation()Lorg/mockito/internal/configuration/injection/MockInjection$OngoingMockInjection;",
            "method_body": "public OngoingMockInjection handleSpyAnnotation() {\npostInjectionStrategies.thenTry(new SpyOnInjectedFieldsHandler());\nreturn this;\n}",
            "method_id": 162
        },
        {
            "method_signature": "org.mockito.internal.creation.settings.CreationSettings:getTypeToMock()Ljava/lang/Class;",
            "method_body": "public Class<T> getTypeToMock() {\nreturn typeToMock;\n}",
            "method_id": 163
        },
        {
            "method_signature": "org.mockito.internal.MockitoCore:verify(Ljava/lang/Object;Lorg/mockito/verification/VerificationMode;)Ljava/lang/Object;",
            "method_body": "public <T> T verify(T mock, VerificationMode mode) {\nif (mock == null) {\n} else if (!mockUtil.isMock(mock)) {\nmockingProgress.verificationStarted(new MockAwareVerificationMode(mock, mode));\nreturn mock;\n}",
            "method_id": 164
        },
        {
            "method_signature": "org.mockito.internal.configuration.injection.scanner.MockScanner:scan()Ljava/util/Set;",
            "method_body": "private Set<Object> scan() {\nSet<Object> mocks = newMockSafeHashSet();\nfor (Field field : clazz.getDeclaredFields()) {\nFieldReader fieldReader = new FieldReader(instance, field);\nObject mockInstance = preparedMock(fieldReader.read(), field);\nif (mockInstance != null) {\nmocks.add(mockInstance);\nreturn mocks;\n}",
            "method_id": 165
        },
        {
            "method_signature": "org.mockito.internal.util.ObjectMethodsGuru:isToString(Ljava/lang/reflect/Method;)Z",
            "method_body": "public boolean isToString(Method method) {\nreturn isToString(new DelegatingMethod(method));\n}",
            "method_id": 166
        },
        {
            "method_signature": "org.mockito.internal.stubbing.defaultanswers.ReturnsEmptyValues:answer(Lorg/mockito/invocation/InvocationOnMock;)Ljava/lang/Object;",
            "method_body": "public Object answer(InvocationOnMock invocation) {\nif (methodsGuru.isToString(invocation.getMethod())) {\n} else if (methodsGuru.isCompareToMethod(invocation.getMethod())) {\nClass<?> returnType = invocation.getMethod().getReturnType();\nreturn returnValueFor(returnType);\n}",
            "method_id": 167
        },
        {
            "method_signature": "org.mockito.internal.progress.MockingProgressImpl:getArgumentMatcherStorage()Lorg/mockito/internal/progress/ArgumentMatcherStorage;",
            "method_body": "public ArgumentMatcherStorage getArgumentMatcherStorage() {\nreturn argumentMatcherStorage;\n}",
            "method_id": 168
        },
        {
            "method_signature": "org.mockito.internal.invocation.InvocationMatcher:<init>(Lorg/mockito/invocation/Invocation;Ljava/util/List;)V",
            "method_body": "public InvocationMatcher(Invocation invocation, List<Matcher> matchers) {\nthis.invocation = invocation;\nif (matchers.isEmpty()) {\nthis.matchers = ArgumentsProcessor.argumentsToMatchers(invocation.getArguments());\nthis.matchers = matchers;\n}",
            "method_id": 169
        }
    ]
}