{
    "bug_id": 1,
    "test_id": 22,
    "test_name": "org.mockitousage.basicapi.UsingVarargsTest.shouldStubStringVarargs",
    "test_body": "public void shouldStubStringVarargs() {\nwhen(mock.withStringVarargsReturningString(1)).thenReturn(\"1\");\nwhen(mock.withStringVarargsReturningString(2, \"1\", \"2\", \"3\")).thenReturn(\"2\");\n38: RuntimeException expected = new RuntimeException();\nstubVoid(mock).toThrow(expected).on().withStringVarargs(3, \"1\", \"2\", \"3\", \"4\");\n41: assertEquals(\"1\", mock.withStringVarargsReturningString(1));\nassertEquals(null, mock.withStringVarargsReturningString(2));",
    "stack_trace": "java.lang.UnsupportedOperationException\nat org.mockito.internal.invocation.InvocationMatcher.captureArgumentsFrom(InvocationMatcher.java:123)\nat org.mockito.internal.handler.MockHandlerImpl.handle(MockHandlerImpl.java:94)\nat org.mockito.internal.handler.NullResultGuardian.handle(NullResultGuardian.java:29)\nat org.mockito.internal.handler.InvocationNotifierHandler.handle(InvocationNotifierHandler.java:37)\nat org.mockito.internal.creation.bytebuddy.MockMethodInterceptor.doIntercept(MockMethodInterceptor.java:82)\nat org.mockito.internal.creation.bytebuddy.MockMethodInterceptor.interceptAbstract(MockMethodInterceptor.java:70)\nat org.mockitousage.basicapi.UsingVarargsTest$IVarArgs$MockitoMock$598797521.withStringVarargsReturningString(Unknown Source)\nat org.mockitousage.basicapi.UsingVarargsTest.shouldStubStringVarargs(UsingVarargsTest.java:41)",
    "covered_methods": [
        {
            "method_signature": "org.mockito.internal.util.MockCreationValidator:validateConstructorUse(ZLorg/mockito/mock/SerializableMode;)V",
            "method_body": "public void validateConstructorUse(boolean usingConstructor, SerializableMode mode) {\nif (usingConstructor && mode == SerializableMode.ACROSS_CLASSLOADERS) {\n}",
            "method_id": 160
        },
        {
            "method_signature": "org.mockito.internal.progress.ThreadSafeMockingProgress:reset()V",
            "method_body": "public void reset() {\nthreadSafely().reset();\n}",
            "method_id": 161
        },
        {
            "method_signature": "org.mockito.internal.progress.MockingProgressImpl:validateState()V",
            "method_body": "public void validateState() {\nvalidateMostStuff();\nif (stubbingInProgress != null) {\n}",
            "method_id": 162
        },
        {
            "method_signature": "org.mockito.internal.configuration.injection.MockInjection$OngoingMockInjection:<init>(Ljava/util/Set;Ljava/lang/Object;)V",
            "method_body": "private OngoingMockInjection(Set<Field> fields, Object fieldOwner) {\nthis.fieldOwner = checkNotNull(fieldOwner, \"fieldOwner\");\nthis.fields.addAll(checkItemsNotNull(fields, \"fields\"));\n}",
            "method_id": 163
        },
        {
            "method_signature": "org.mockito.internal.MockitoCore:stubVoid(Ljava/lang/Object;)Lorg/mockito/stubbing/VoidMethodStubbable;",
            "method_body": "public <T> VoidMethodStubbable<T> stubVoid(T mock) {\nInternalMockHandler<T> handler = mockUtil.getMockHandler(mock);\nmockingProgress.stubbingStarted();\nreturn handler.voidMethodStubbable(mock);\n}",
            "method_id": 164
        },
        {
            "method_signature": "org.mockito.internal.progress.MockingProgressImpl:pullVerificationMode()Lorg/mockito/verification/VerificationMode;",
            "method_body": "public VerificationMode pullVerificationMode() {\nif (verificationMode == null) {\nreturn null;\nVerificationMode temp = verificationMode.getObject();\nverificationMode = null;\nreturn temp;\n}",
            "method_id": 165
        },
        {
            "method_signature": "org.mockito.internal.configuration.DefaultAnnotationEngine:process(Ljava/lang/Class;Ljava/lang/Object;)V",
            "method_body": "public void process(Class<?> clazz, Object testInstance) {\nField[] fields = clazz.getDeclaredFields();\nfor (Field field : fields) {\nboolean alreadyAssigned = false;\nfor(Annotation annotation : field.getAnnotations()) {\nObject mock = createMockFor(annotation, field);\nif (mock != null) {\nthrowIfAlreadyAssigned(field, alreadyAssigned);\nalreadyAssigned = true;\nnew FieldSetter(testInstance, field).set(mock);\n}\n}",
            "method_id": 166
        },
        {
            "method_signature": "org.mockito.internal.stubbing.answers.MethodInfo:<init>(Lorg/mockito/invocation/Invocation;)V",
            "method_body": "public MethodInfo(Invocation theInvocation) {\nthis.method = theInvocation.getMethod();\n}",
            "method_id": 167
        },
        {
            "method_signature": "org.mockito.internal.progress.MockingProgressImpl:getArgumentMatcherStorage()Lorg/mockito/internal/progress/ArgumentMatcherStorage;",
            "method_body": "public ArgumentMatcherStorage getArgumentMatcherStorage() {\nreturn argumentMatcherStorage;\n}",
            "method_id": 168
        },
        {
            "method_signature": "org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet$1:next()Ljava/lang/Object;",
            "method_body": "public Iterator<Object> iterator() {\nreturn new Iterator<Object>() {\nprivate final Iterator<HashCodeAndEqualsMockWrapper> iterator = backingHashSet.iterator();\nreturn iterator.hasNext();\nreturn iterator.next().get();\n}",
            "method_id": 169
        }
    ]
}