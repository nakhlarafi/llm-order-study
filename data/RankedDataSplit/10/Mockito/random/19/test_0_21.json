{
    "bug_id": 19,
    "test_id": 0,
    "test_name": "org.mockitousage.annotation.MockInjectionUsingSetterOrPropertyTest.shouldInsertFieldWithCorrectNameWhenMultipleTypesAvailable",
    "test_body": "public void shouldInsertFieldWithCorrectNameWhenMultipleTypesAvailable() {\nMockitoAnnotations.initMocks(this);\nassertNull(otherSuperUnderTesting.candidate1);\nassertNotNull(otherSuperUnderTesting.candidate2);",
    "stack_trace": "junit.framework.AssertionFailedError: Expected: <null> but was: candidate2\nat junit.framework.Assert.fail(Assert.java:57)\nat junit.framework.Assert.assertTrue(Assert.java:22)\nat junit.framework.Assert.assertNull(Assert.java:277)\nat junit.framework.Assert.assertNull(Assert.java:268)\nat org.mockitousage.annotation.MockInjectionUsingSetterOrPropertyTest.shouldInsertFieldWithCorrectNameWhenMultipleTypesAvailable(MockInjectionUsingSetterOrPropertyTest.java:115)",
    "covered_methods": [
        {
            "method_signature": "org.mockito.internal.util.reflection.FieldInitializer:<init>(Ljava/lang/Object;Ljava/lang/reflect/Field;)V",
            "method_body": "public FieldInitializer(Object fieldOwner, Field field) {\nthis(fieldOwner, field, new NoArgConstructorInstantiator(fieldOwner, field));\n}",
            "method_id": 210
        },
        {
            "method_signature": "org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet:of([Ljava/lang/Object;)Lorg/mockito/internal/util/collections/HashCodeAndEqualsSafeSet;",
            "method_body": "public static HashCodeAndEqualsSafeSet of(Object... mocks) {\nreturn of(Arrays.asList(mocks));\n}",
            "method_id": 211
        },
        {
            "method_signature": "org.mockito.internal.stubbing.answers.MethodInfo:isValidReturnType(Ljava/lang/Class;)Z",
            "method_body": "public boolean isValidReturnType(Class clazz) {\nif (method.getReturnType().isPrimitive() || clazz.isPrimitive()) {\nreturn method.getReturnType().isAssignableFrom(clazz);\n}",
            "method_id": 212
        },
        {
            "method_signature": "org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper:<init>(Ljava/lang/Object;)V",
            "method_body": "public HashCodeAndEqualsMockWrapper(Object mockInstance) {\nthis.mockInstance = mockInstance;\n}",
            "method_id": 213
        },
        {
            "method_signature": "org.mockito.internal.invocation.ArgumentsProcessor:argumentsToMatchers([Ljava/lang/Object;)Ljava/util/List;",
            "method_body": "public static List<Matcher> argumentsToMatchers(Object[] arguments) {\nList<Matcher> matchers = new ArrayList<Matcher>(arguments.length);\nfor (Object arg : arguments) {\nreturn matchers;\n}",
            "method_id": 214
        },
        {
            "method_signature": "org.mockito.internal.creation.DelegatingMethod:<init>(Ljava/lang/reflect/Method;)V",
            "method_body": "public DelegatingMethod(Method method) {\nassert method != null : \"Method cannot be null\";\nthis.method = method;\n}",
            "method_id": 215
        },
        {
            "method_signature": "org.mockito.internal.progress.MockingProgressImpl:getArgumentMatcherStorage()Lorg/mockito/internal/progress/ArgumentMatcherStorage;",
            "method_body": "public ArgumentMatcherStorage getArgumentMatcherStorage() {\nreturn argumentMatcherStorage;\n}",
            "method_id": 216
        },
        {
            "method_signature": "org.mockito.internal.util.MockCreationValidator:validateExtraInterfaces(Ljava/lang/Class;Ljava/util/Collection;)V",
            "method_body": "public void validateExtraInterfaces(Class classToMock, Collection<Class> extraInterfaces) {\nif (extraInterfaces == null) {\nfor (Class i : extraInterfaces) {\n}",
            "method_id": 217
        },
        {
            "method_signature": "org.mockito.internal.creation.settings.CreationSettings:getDefaultAnswer()Lorg/mockito/stubbing/Answer;",
            "method_body": "public Answer<Object> getDefaultAnswer() {\nreturn defaultAnswer;\n}",
            "method_id": 218
        },
        {
            "method_signature": "org.mockito.internal.configuration.injection.SpyOnInjectedFieldsHandler:processInjection(Ljava/lang/reflect/Field;Ljava/lang/Object;Ljava/util/Set;)Z",
            "method_body": "protected boolean processInjection(Field field, Object fieldOwner, Set<Object> mockCandidates) {\nFieldReader fieldReader = new FieldReader(fieldOwner, field);\nif(!fieldReader.isNull() && field.isAnnotationPresent(Spy.class)) {\nObject instance = fieldReader.read();\nif (new MockUtil().isMock(instance)) {\nMockito.reset(instance);\nnew FieldSetter(fieldOwner, field).set(\n}\nreturn false;\n}",
            "method_id": 219
        }
    ]
}