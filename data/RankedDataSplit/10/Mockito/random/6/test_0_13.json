{
    "bug_id": 6,
    "test_id": 0,
    "test_name": "org.mockitousage.matchers.AnyXMatchersAcceptNullsTest.shouldNotAcceptNullInAnyXMatchers",
    "test_body": "public void shouldNotAcceptNullInAnyXMatchers() {\nwhen(mock.oneArg(anyObject())).thenReturn(\"0\");\nwhen(mock.oneArg(anyString())).thenReturn(\"1\");\nwhen(mock.forList(anyList())).thenReturn(\"2\");\nwhen(mock.forMap(anyMap())).thenReturn(\"3\");\nwhen(mock.forCollection(anyCollection())).thenReturn(\"4\");\nwhen(mock.forSet(anySet())).thenReturn(\"5\");\n35: assertEquals(null, mock.oneArg((Object) null));\nassertEquals(null, mock.oneArg((String) null));",
    "stack_trace": "junit.framework.ComparisonFailure: expected:<null> but was:<0>\nat junit.framework.Assert.assertEquals(Assert.java:100)\nat junit.framework.Assert.assertEquals(Assert.java:107)\nat org.mockitousage.matchers.AnyXMatchersAcceptNullsTest.shouldNotAcceptNullInAnyXMatchers(AnyXMatchersAcceptNullsTest.java:35)",
    "covered_methods": [
        {
            "method_signature": "org.mockito.internal.creation.settings.CreationSettings:getExtraInterfaces()Ljava/util/Set;",
            "method_body": "public Set<Class> getExtraInterfaces() {\nreturn extraInterfaces;\n}",
            "method_id": 130
        },
        {
            "method_signature": "org.mockito.internal.util.Checks:checkItemsNotNull(Ljava/lang/Iterable;Ljava/lang/String;)Ljava/lang/Iterable;",
            "method_body": "public static <T extends Iterable> T checkItemsNotNull(T iterable, String checkedIterable) {\ncheckNotNull(iterable, checkedIterable);\nfor (Object item : iterable) {\nreturn iterable;\n}",
            "method_id": 131
        },
        {
            "method_signature": "org.mockito.internal.invocation.InvocationImpl:markStubbed(Lorg/mockito/invocation/StubInfo;)V",
            "method_body": "public void markStubbed(StubInfo stubInfo) {\nthis.stubInfo = stubInfo;\n}",
            "method_id": 132
        },
        {
            "method_signature": "org.mockito.internal.invocation.InvocationMatcher:<init>(Lorg/mockito/invocation/Invocation;Ljava/util/List;)V",
            "method_body": "public InvocationMatcher(Invocation invocation, List<Matcher> matchers) {\nthis.invocation = invocation;\nif (matchers.isEmpty()) {\nthis.matchers = ArgumentsProcessor.argumentsToMatchers(invocation.getArguments());\nthis.matchers = matchers;\n}",
            "method_id": 133
        },
        {
            "method_signature": "org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet:iterator()Ljava/util/Iterator;",
            "method_body": "public Iterator<Object> iterator() {\nreturn new Iterator<Object>() {\nprivate final Iterator<HashCodeAndEqualsMockWrapper> iterator = backingHashSet.iterator();\nreturn iterator.hasNext();\n}",
            "method_id": 134
        },
        {
            "method_signature": "org.mockito.internal.progress.ThreadSafeMockingProgress:stubbingCompleted(Lorg/mockito/invocation/Invocation;)V",
            "method_body": "public void stubbingCompleted(Invocation invocation) {\nthreadSafely().stubbingCompleted(invocation);\n}",
            "method_id": 135
        },
        {
            "method_signature": "org.mockito.internal.verification.DefaultRegisteredInvocations:isEmpty()Z",
            "method_body": "public boolean isEmpty() {\nsynchronized (invocations) {\nreturn invocations.isEmpty();\n}",
            "method_id": 136
        },
        {
            "method_signature": "org.mockito.Matchers:anyMap()Ljava/util/Map;",
            "method_body": "public static Map anyMap() {\nreturn reportMatcher(Any.ANY).returnMap();\n}",
            "method_id": 137
        },
        {
            "method_signature": "org.mockito.internal.progress.HandyReturnValues:returnString()Ljava/lang/String;",
            "method_body": "public String returnString() {\nreturn \"\";\n}",
            "method_id": 138
        },
        {
            "method_signature": "org.mockito.internal.configuration.injection.MockInjectionStrategy$1:<init>()V",
            "method_body": "public static final MockInjectionStrategy nop() {\nreturn new MockInjectionStrategy() {\n}",
            "method_id": 139
        }
    ]
}