{
    "bug_id": 9,
    "test_id": 2,
    "test_name": "org.mockitousage.constructor.CreatingMocksWithConstructorTest.abstractMethodReturnsDefault",
    "test_body": "public void abstractMethodReturnsDefault() {\nAbstractThing thing = spy(AbstractThing.class);\nassertEquals(\"abstract null\", thing.fullName());\n}\n",
    "stack_trace": "org.mockito.exceptions.base.MockitoException:\nCannot call abstract real method on java object!\nCalling real methods is only possible when mocking non abstract method.\n//correct example:\nwhen(mockOfConcreteClass.nonAbstractMethod()).thenCallRealMethod();\nat org.mockito.exceptions.Reporter.cannotCallAbstractRealMethod(Reporter.java:583)\nat org.mockito.internal.invocation.InvocationImpl.callRealMethod(InvocationImpl.java:110)\nat org.mockito.internal.stubbing.answers.CallsRealMethods.answer(CallsRealMethods.java:36)\nat org.mockito.internal.handler.MockHandlerImpl.handle(MockHandlerImpl.java:93)\nat org.mockito.internal.handler.NullResultGuardian.handle(NullResultGuardian.java:29)\nat org.mockito.internal.handler.InvocationNotifierHandler.handle(InvocationNotifierHandler.java:38)\nat org.mockito.internal.creation.cglib.MethodInterceptorFilter.intercept(MethodInterceptorFilter.java:59)\nat org.mockitousage.constructor.CreatingMocksWithConstructorTest$AbstractThing$$EnhancerByMockitoWithCGLIB$$91611a84.name(<generated>)\nat org.mockitousage.constructor.CreatingMocksWithConstructorTest$AbstractThing.fullName(CreatingMocksWithConstructorTest.java:106)\nat org.mockitousage.constructor.CreatingMocksWithConstructorTest$AbstractThing$$EnhancerByMockitoWithCGLIB$$91611a84.CGLIB$fullName$0(<generated>)\nat org.mockitousage.constructor.CreatingMocksWithConstructorTest$AbstractThing$$EnhancerByMockitoWithCGLIB$$91611a84$$FastClassByMockitoWithCGLIB$$6019f3ca.invoke(<generated>)\nat org.mockito.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:216)\nat org.mockito.internal.creation.cglib.DelegatingMockitoMethodProxy.invokeSuper(DelegatingMockitoMethodProxy.java:19)\nat org.mockito.internal.invocation.realmethod.DefaultRealMethod.invoke(DefaultRealMethod.java:21)\nat org.mockito.internal.invocation.realmethod.CleanTraceRealMethod.invoke(CleanTraceRealMethod.java:30)\nat org.mockito.internal.invocation.InvocationImpl.callRealMethod(InvocationImpl.java:112)\nat org.mockito.internal.stubbing.answers.CallsRealMethods.answer(CallsRealMethods.java:36)\nat org.mockito.internal.handler.MockHandlerImpl.handle(MockHandlerImpl.java:93)\nat org.mockito.internal.handler.NullResultGuardian.handle(NullResultGuardian.java:29)\nat org.mockito.internal.handler.InvocationNotifierHandler.handle(InvocationNotifierHandler.java:38)\nat org.mockito.internal.creation.cglib.MethodInterceptorFilter.intercept(MethodInterceptorFilter.java:59)\nat org.mockitousage.constructor.CreatingMocksWithConstructorTest$AbstractThing$$EnhancerByMockitoWithCGLIB$$91611a84.fullName(<generated>)\nat org.mockitousage.constructor.CreatingMocksWithConstructorTest.abstractMethodReturnsDefault(CreatingMocksWithConstructorTest.java:113)",
    "covered_methods": [
        {
            "method_signature": "org.mockito.internal.invocation.InvocationMatcher:getInvocation()Lorg/mockito/invocation/Invocation;",
            "method_body": "public Invocation getInvocation() {\nreturn this.invocation;\n}",
            "method_id": 50
        },
        {
            "method_signature": "org.mockito.internal.creation.cglib.CglibMockMaker:createMock(Lorg/mockito/mock/MockCreationSettings;Lorg/mockito/invocation/MockHandler;)Ljava/lang/Object;",
            "method_body": "public <T> T createMock(MockCreationSettings<T> settings, MockHandler handler) {\nInternalMockHandler mockitoHandler = cast(handler);\nnew AcrossJVMSerializationFeature().enableSerializationAcrossJVM(settings);\nreturn new ClassImposterizer(new InstantiatorProvider().getInstantiator(settings)).imposterise(\n}",
            "method_id": 51
        },
        {
            "method_signature": "org.mockito.internal.configuration.SpyAnnotationEngine:process(Ljava/lang/Class;Ljava/lang/Object;)V",
            "method_body": "public void process(Class<?> context, Object testInstance) {\nField[] fields = context.getDeclaredFields();\nfor (Field field : fields) {\n}",
            "method_id": 52
        },
        {
            "method_signature": "org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet$1:hasNext()Z",
            "method_body": "public Iterator<Object> iterator() {\nreturn new Iterator<Object>() {\nprivate final Iterator<HashCodeAndEqualsMockWrapper> iterator = backingHashSet.iterator();\nreturn iterator.hasNext();\n}",
            "method_id": 53
        },
        {
            "method_signature": "org.mockito.internal.util.collections.Sets:newMockSafeHashSet([Ljava/lang/Object;)Ljava/util/Set;",
            "method_body": "public static Set<Object> newMockSafeHashSet(Object... mocks) {\nreturn HashCodeAndEqualsSafeSet.of(mocks);\n}",
            "method_id": 54
        },
        {
            "method_signature": "org.mockito.internal.configuration.injection.filter.NameBasedCandidateFilter:<init>(Lorg/mockito/internal/configuration/injection/filter/MockCandidateFilter;)V",
            "method_body": "public NameBasedCandidateFilter(MockCandidateFilter next) {\nthis.next = next;\n}",
            "method_id": 55
        },
        {
            "method_signature": "org.mockito.internal.util.StringJoiner:join([Ljava/lang/Object;)Ljava/lang/String;",
            "method_body": "public static String join(Object ... linesToBreak) {\nStringBuilder out = new StringBuilder(\"\\n\");\nreturn join(out, linesToBreak);\n}",
            "method_id": 56
        },
        {
            "method_signature": "org.mockito.internal.creation.instance.ConstructorInstantiator:<init>(Ljava/lang/Object;)V",
            "method_body": "public ConstructorInstantiator(Object outerClassInstance) {\nthis.outerClassInstance = outerClassInstance;\n}",
            "method_id": 57
        },
        {
            "method_signature": "org.mockito.internal.creation.DelegatingMethod:isAbstract()Z",
            "method_body": "public boolean isAbstract() {\nreturn (method.getModifiers() & Modifier.ABSTRACT) != 0;\n}",
            "method_id": 58
        },
        {
            "method_signature": "org.mockito.internal.progress.MockingProgressImpl:reset()V",
            "method_body": "public void reset() {\nstubbingInProgress = null;\nverificationMode = null;\ngetArgumentMatcherStorage().reset();\n}",
            "method_id": 59
        }
    ]
}