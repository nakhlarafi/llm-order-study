{
    "bug_id": 3,
    "test_id": 4,
    "test_name": "org.mockitousage.matchers.CapturingArgumentsTest.should_capture_byte_vararg_by_creating_captor_with_primitive_wrapper",
    "test_body": "public void should_capture_byte_vararg_by_creating_captor_with_primitive_wrapper() throws Exception {\n// given\nArgumentCaptor<Byte> argumentCaptor = ArgumentCaptor.forClass(Byte.class);\n244: // when\nmock.varargsbyte((byte) 1, (byte) 2);\n247: // then\nverify(mock).varargsbyte(argumentCaptor.capture());\nassertEquals((byte) 2, (byte) argumentCaptor.getValue());\nAssertions.assertThat(argumentCaptor.getAllValues()).containsExactly((byte) 1, (byte) 2);",
    "stack_trace": "java.lang.ClassCastException: [B cannot be cast to java.lang.Byte\nat org.mockitousage.matchers.CapturingArgumentsTest.should_capture_byte_vararg_by_creating_captor_with_primitive_wrapper(CapturingArgumentsTest.java:249)",
    "covered_methods": [
        {
            "method_signature": "org.mockito.internal.configuration.InjectingAnnotationEngine:processIndependentAnnotations(Ljava/lang/Class;Ljava/lang/Object;)V",
            "method_body": "private void processIndependentAnnotations(final Class<?> clazz, final Object testInstance) {\nClass<?> classContext = clazz;\nwhile (classContext != Object.class) {\ndelegate.process(classContext, testInstance);\nspyAnnotationEngine.process(classContext, testInstance);\nclassContext = classContext.getSuperclass();\n}",
            "method_id": 100
        },
        {
            "method_signature": "org.mockito.internal.invocation.InvocationsFinder$RemoveNotMatching:<init>(Lorg/mockito/internal/invocation/InvocationMatcher;)V",
            "method_body": "private RemoveNotMatching(InvocationMatcher wanted) {\nthis.wanted = wanted;\n}",
            "method_id": 101
        },
        {
            "method_signature": "org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet:of(Ljava/lang/Iterable;)Lorg/mockito/internal/util/collections/HashCodeAndEqualsSafeSet;",
            "method_body": "public static HashCodeAndEqualsSafeSet of(Iterable<Object> objects) {\nHashCodeAndEqualsSafeSet hashCodeAndEqualsSafeSet = new HashCodeAndEqualsSafeSet();\nif (objects != null) {\nfor (Object mock : objects) {\nreturn hashCodeAndEqualsSafeSet;\n}",
            "method_id": 102
        },
        {
            "method_signature": "org.mockito.internal.matchers.CapturingMatcher:captureFrom(Ljava/lang/Object;)V",
            "method_body": "public void captureFrom(Object argument) {\nthis.arguments.add(argument);\n}",
            "method_id": 103
        },
        {
            "method_signature": "org.mockito.internal.verification.VerificationDataImpl:getAllInvocations()Ljava/util/List;",
            "method_body": "public List<Invocation> getAllInvocations() {\nreturn invocations.getInvocations();\n}",
            "method_id": 104
        },
        {
            "method_signature": "org.mockito.internal.stubbing.InvocationContainerImpl:setInvocationForPotentialStubbing(Lorg/mockito/internal/invocation/InvocationMatcher;)V",
            "method_body": "public void setInvocationForPotentialStubbing(InvocationMatcher invocation) {\nregisteredInvocations.add(invocation.getInvocation());\nthis.invocationForStubbing = invocation;\n}",
            "method_id": 105
        },
        {
            "method_signature": "org.mockito.internal.configuration.injection.scanner.MockScanner:addPreparedMocks(Ljava/util/Set;)V",
            "method_body": "public void addPreparedMocks(Set<Object> mocks) {\nmocks.addAll(scan());\n}",
            "method_id": 106
        },
        {
            "method_signature": "org.mockito.internal.configuration.injection.MockInjection$OngoingMockInjection:withMocks(Ljava/util/Set;)Lorg/mockito/internal/configuration/injection/MockInjection$OngoingMockInjection;",
            "method_body": "public OngoingMockInjection withMocks(Set<Object> mocks) {\nthis.mocks.addAll(checkNotNull(mocks, \"mocks\"));\nreturn this;\n}",
            "method_id": 107
        },
        {
            "method_signature": "org.mockito.internal.progress.MockingProgressImpl:getArgumentMatcherStorage()Lorg/mockito/internal/progress/ArgumentMatcherStorage;",
            "method_body": "public ArgumentMatcherStorage getArgumentMatcherStorage() {\nreturn argumentMatcherStorage;\n}",
            "method_id": 108
        },
        {
            "method_signature": "org.mockito.internal.progress.HandyReturnValues:returnNull()Ljava/lang/Object;",
            "method_body": "public <T> T returnNull() {\nreturn null;\n}",
            "method_id": 109
        }
    ]
}