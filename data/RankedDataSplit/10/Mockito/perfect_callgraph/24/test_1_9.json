{
    "bug_id": 24,
    "test_id": 1,
    "test_name": "org.mockito.internal.stubbing.defaultanswers.ReturnsEmptyValuesTest.should_return_zero_if_mock_is_compared_to_itself",
    "test_body": "@Test public void should_return_zero_if_mock_is_compared_to_itself() {\n//given\nDate d = mock(Date.class);\nd.compareTo(d);\nInvocation compareTo = this.getLastInvocation();\n73: //when\nObject result = values.answer(compareTo);\n76: //then\nassertEquals(0, result);\n}\n",
    "stack_trace": "junit.framework.AssertionFailedError: expected:<0> but was:<1>\nat junit.framework.Assert.fail(Assert.java:57)\nat junit.framework.Assert.failNotEquals(Assert.java:329)\nat junit.framework.Assert.assertEquals(Assert.java:78)\nat junit.framework.Assert.assertEquals(Assert.java:86)\nat org.mockito.internal.stubbing.defaultanswers.ReturnsEmptyValuesTest.should_return_zero_if_mock_is_compared_to_itself(ReturnsEmptyValuesTest.java:77)",
    "covered_methods": [
        {
            "method_signature": "org.mockito.internal.util.Checks:checkItemsNotNull(Ljava/lang/Iterable;Ljava/lang/String;)Ljava/lang/Iterable;",
            "method_body": "public static <T extends Iterable> T checkItemsNotNull(T iterable, String checkedIterable) {\ncheckNotNull(iterable, checkedIterable);\nfor (Object item : iterable) {\nreturn iterable;\n}",
            "method_id": 90
        },
        {
            "method_signature": "org.mockito.internal.invocation.InvocationImpl:getArguments()[Ljava/lang/Object;",
            "method_body": "public Object[] getArguments() {\nreturn arguments;\n}",
            "method_id": 91
        },
        {
            "method_signature": "org.mockito.internal.creation.AcrossJVMSerializationFeature:enableSerializationAcrossJVM(Lorg/mockito/mock/MockCreationSettings;)V",
            "method_body": "public <T> void enableSerializationAcrossJVM(MockCreationSettings<T> settings) {\nif (settings.getSerializableMode() == SerializableMode.ACROSS_CLASSLOADERS) {\n}",
            "method_id": 92
        },
        {
            "method_signature": "org.mockito.internal.stubbing.OngoingStubbingImpl:getRegisteredInvocations()Ljava/util/List;",
            "method_body": "public List<Invocation> getRegisteredInvocations() {\nreturn invocationContainerImpl.getInvocations();\n}",
            "method_id": 93
        },
        {
            "method_signature": "org.mockito.internal.configuration.injection.scanner.MockScanner:addPreparedMocks(Ljava/util/Set;)V",
            "method_body": "public void addPreparedMocks(Set<Object> mocks) {\nmocks.addAll(scan());\n}",
            "method_id": 94
        },
        {
            "method_signature": "org.mockito.internal.creation.MockSettingsImpl:confirm(Ljava/lang/Class;)Lorg/mockito/mock/MockCreationSettings;",
            "method_body": "public MockCreationSettings<T> confirm(Class<T> typeToMock) {\nreturn validatedSettings(typeToMock, this);\n}",
            "method_id": 95
        },
        {
            "method_signature": "org.mockito.internal.configuration.DefaultAnnotationEngine:registerAnnotationProcessor(Ljava/lang/Class;Lorg/mockito/internal/configuration/FieldAnnotationProcessor;)V",
            "method_body": "private <A extends Annotation> void registerAnnotationProcessor(Class<A> annotationClass, FieldAnnotationProcessor<A> fieldAnnotationProcessor) {\nannotationProcessorMap.put(annotationClass, fieldAnnotationProcessor);\n}",
            "method_id": 96
        },
        {
            "method_signature": "org.mockito.internal.stubbing.OngoingStubbingImpl:<init>(Lorg/mockito/internal/stubbing/InvocationContainerImpl;)V",
            "method_body": "public OngoingStubbingImpl(InvocationContainerImpl invocationContainerImpl) {\nthis.invocationContainerImpl = invocationContainerImpl;\n}",
            "method_id": 97
        },
        {
            "method_signature": "org.mockito.internal.progress.MockingProgressImpl:validateMostStuff()V",
            "method_body": "private void validateMostStuff() {\nGlobalConfiguration.validate();\nif (verificationMode != null) {\ngetArgumentMatcherStorage().validateState();\n}",
            "method_id": 98
        },
        {
            "method_signature": "org.mockito.internal.configuration.injection.scanner.MockScanner:scan()Ljava/util/Set;",
            "method_body": "private Set<Object> scan() {\nSet<Object> mocks = newMockSafeHashSet();\nfor (Field field : clazz.getDeclaredFields()) {\nFieldReader fieldReader = new FieldReader(instance, field);\nObject mockInstance = preparedMock(fieldReader.read(), field);\nif (mockInstance != null) {\nreturn mocks;\n}",
            "method_id": 99
        }
    ]
}