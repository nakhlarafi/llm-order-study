{
    "bug_id": 6,
    "test_id": 3,
    "test_name": "org.mockitousage.matchers.AnyXMatchersAcceptNullsTest.shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers",
    "test_body": "public void shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers() {\nwhen(mock.forInteger(anyInt())).thenReturn(\"0\");\nwhen(mock.forCharacter(anyChar())).thenReturn(\"1\");\nwhen(mock.forShort(anyShort())).thenReturn(\"2\");\nwhen(mock.forByte(anyByte())).thenReturn(\"3\");\nwhen(mock.forBoolean(anyBoolean())).thenReturn(\"4\");\nwhen(mock.forLong(anyLong())).thenReturn(\"5\");\nwhen(mock.forFloat(anyFloat())).thenReturn(\"6\");\nwhen(mock.forDouble(anyDouble())).thenReturn(\"7\");\n54: assertEquals(null, mock.forInteger(null));\nassertEquals(null, mock.forCharacter(null));",
    "stack_trace": "junit.framework.ComparisonFailure: expected:<null> but was:<0>\nat junit.framework.Assert.assertEquals(Assert.java:100)\nat junit.framework.Assert.assertEquals(Assert.java:107)\nat org.mockitousage.matchers.AnyXMatchersAcceptNullsTest.shouldNotAcceptNullInAllAnyPrimitiveWrapperMatchers(AnyXMatchersAcceptNullsTest.java:54)",
    "covered_methods": [
        {
            "method_signature": "org.mockito.internal.creation.instance.InstantiatorProvider:getInstantiator(Lorg/mockito/mock/MockCreationSettings;)Lorg/mockito/internal/creation/instance/Instantiator;",
            "method_body": "public Instantiator getInstantiator(MockCreationSettings settings) {\nif (settings.isUsingConstructor()) {\nreturn INSTANCE;\n}",
            "method_id": 140
        },
        {
            "method_signature": "org.mockito.internal.invocation.InvocationImpl:getArguments()[Ljava/lang/Object;",
            "method_body": "public Object[] getArguments() {\nreturn arguments;\n}",
            "method_id": 141
        },
        {
            "method_signature": "org.mockito.internal.creation.DelegatingMethod:getJavaMethod()Ljava/lang/reflect/Method;",
            "method_body": "public Method getJavaMethod() {\nreturn method;\n}",
            "method_id": 142
        },
        {
            "method_signature": "org.mockito.internal.progress.ThreadSafeMockingProgress:pullOngoingStubbing()Lorg/mockito/internal/progress/IOngoingStubbing;",
            "method_body": "public IOngoingStubbing pullOngoingStubbing() {\nreturn threadSafely().pullOngoingStubbing();\n}",
            "method_id": 143
        },
        {
            "method_signature": "org.mockito.internal.matchers.LocalizedMatcher:matches(Ljava/lang/Object;)Z",
            "method_body": "public boolean matches(Object item) {\nreturn actualMatcher.matches(item);\n}",
            "method_id": 144
        },
        {
            "method_signature": "org.mockito.internal.util.reflection.FieldReader:<init>(Ljava/lang/Object;Ljava/lang/reflect/Field;)V",
            "method_body": "public FieldReader(Object target, Field field) {\nthis.target = target;\nthis.field = field;\nchanger.enableAccess(field);\n}",
            "method_id": 145
        },
        {
            "method_signature": "org.mockito.internal.stubbing.InvocationContainerImpl:resetInvocationForPotentialStubbing(Lorg/mockito/internal/invocation/InvocationMatcher;)V",
            "method_body": "public void resetInvocationForPotentialStubbing(InvocationMatcher invocationMatcher) {\nthis.invocationForStubbing = invocationMatcher;\n}",
            "method_id": 146
        },
        {
            "method_signature": "org.mockito.internal.stubbing.InvocationContainerImpl:addAnswer(Lorg/mockito/stubbing/Answer;Z)V",
            "method_body": "public void addAnswer(Answer answer, boolean isConsecutive) {\nInvocation invocation = invocationForStubbing.getInvocation();\nmockingProgress.stubbingCompleted(invocation);\nAnswersValidator answersValidator = new AnswersValidator();\nanswersValidator.validate(answer, invocation);\nsynchronized (stubbed) {\nif (isConsecutive) {\nstubbed.addFirst(new StubbedInvocationMatcher(invocationForStubbing, answer));\n}\n}",
            "method_id": 147
        },
        {
            "method_signature": "org.mockito.internal.util.MockUtil:isMock(Ljava/lang/Object;)Z",
            "method_body": "public boolean isMock(Object mock) {\nreturn isMockitoMock(mock);\n}",
            "method_id": 148
        },
        {
            "method_signature": "org.mockito.internal.invocation.ArgumentsComparator:argumentsMatch(Lorg/mockito/internal/invocation/InvocationMatcher;[Ljava/lang/Object;)Z",
            "method_body": "public boolean argumentsMatch(InvocationMatcher invocationMatcher, Object[] actualArgs) {\nif (actualArgs.length != invocationMatcher.getMatchers().size()) {\nfor (int i = 0; i < actualArgs.length; i++) {\nif (!invocationMatcher.getMatchers().get(i).matches(actualArgs[i])) {\nreturn true;\n}",
            "method_id": 149
        }
    ]
}