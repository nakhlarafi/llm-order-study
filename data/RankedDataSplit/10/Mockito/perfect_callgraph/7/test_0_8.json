{
    "bug_id": 7,
    "test_id": 0,
    "test_name": "org.mockitousage.bugs.deepstubs.DeepStubFailingWhenGenricNestedAsRawTypeTest.discoverDeepMockingOfGenerics",
    "test_body": "public void discoverDeepMockingOfGenerics() {\nMyClass1 myMock1 = mock(MyClass1.class, RETURNS_DEEP_STUBS);\nwhen(myMock1.getNested().getNested().returnSomething()).thenReturn(\"Hello World.\");\n}\n",
    "stack_trace": "org.mockito.exceptions.base.MockitoException: Raw extraction not supported for : 'null'\nat org.mockito.internal.util.reflection.GenericMetadataSupport$TypeVariableReturnType.extractRawTypeOf(GenericMetadataSupport.java:407)\nat org.mockito.internal.util.reflection.GenericMetadataSupport$TypeVariableReturnType.extractRawTypeOf(GenericMetadataSupport.java:405)\nat org.mockito.internal.util.reflection.GenericMetadataSupport$TypeVariableReturnType.rawType(GenericMetadataSupport.java:385)\nat org.mockito.internal.stubbing.defaultanswers.ReturnsDeepStubs.answer(ReturnsDeepStubs.java:51)\nat org.mockito.internal.handler.MockHandlerImpl.handle(MockHandlerImpl.java:93)\nat org.mockito.internal.handler.NullResultGuardian.handle(NullResultGuardian.java:29)\nat org.mockito.internal.handler.InvocationNotifierHandler.handle(InvocationNotifierHandler.java:38)\nat org.mockito.internal.creation.cglib.MethodInterceptorFilter.intercept(MethodInterceptorFilter.java:59)\nat org.mockitousage.bugs.deepstubs.DeepStubFailingWhenGenricNestedAsRawTypeTest$MyClass2$$EnhancerByMockitoWithCGLIB$$da894864.getNested(<generated>)\nat org.mockitousage.bugs.deepstubs.DeepStubFailingWhenGenricNestedAsRawTypeTest.discoverDeepMockingOfGenerics(DeepStubFailingWhenGenricNestedAsRawTypeTest.java:26)",
    "covered_methods": [
        {
            "method_signature": "org.mockito.internal.progress.ThreadSafeMockingProgress:stubbingCompleted(Lorg/mockito/invocation/Invocation;)V",
            "method_body": "public void stubbingCompleted(Invocation invocation) {\nthreadSafely().stubbingCompleted(invocation);\n}",
            "method_id": 80
        },
        {
            "method_signature": "org.mockito.internal.handler.NullResultGuardian:getInvocationContainer()Lorg/mockito/internal/stubbing/InvocationContainer;",
            "method_body": "public InvocationContainer getInvocationContainer() {\nreturn delegate.getInvocationContainer();\n}",
            "method_id": 81
        },
        {
            "method_signature": "org.mockito.internal.creation.cglib.ClassImposterizer:imposterise(Lorg/mockito/cglib/proxy/MethodInterceptor;Ljava/lang/Class;[Ljava/lang/Class;)Ljava/lang/Object;",
            "method_body": "public <T> T imposterise(final MethodInterceptor interceptor, Class<T> mockedType, Class<?>... ancillaryTypes) {\nClass<Factory> proxyClass = null;\nObject proxyInstance = null;\nsetConstructorsAccessible(mockedType, true);\nproxyClass = createProxyClass(mockedType, ancillaryTypes);\nproxyInstance = createProxy(proxyClass, interceptor);\nreturn mockedType.cast(proxyInstance);\nsetConstructorsAccessible(mockedType, false);\n}",
            "method_id": 82
        },
        {
            "method_signature": "org.mockito.internal.creation.cglib.ClassImposterizer:setConstructorsAccessible(Ljava/lang/Class;Z)V",
            "method_body": "public void setConstructorsAccessible(Class<?> mockedType, boolean accessible) {\nfor (Constructor<?> constructor : mockedType.getDeclaredConstructors()) {\n}",
            "method_id": 83
        },
        {
            "method_signature": "org.mockito.internal.invocation.realmethod.CleanTraceRealMethod:<init>(Lorg/mockito/internal/invocation/realmethod/RealMethod;)V",
            "method_body": "public CleanTraceRealMethod(RealMethod realMethod) {\nthis.realMethod = realMethod;\n}",
            "method_id": 84
        },
        {
            "method_signature": "org.mockito.internal.stubbing.OngoingStubbingImpl:<init>(Lorg/mockito/internal/stubbing/InvocationContainerImpl;)V",
            "method_body": "public OngoingStubbingImpl(InvocationContainerImpl invocationContainerImpl) {\nthis.invocationContainerImpl = invocationContainerImpl;\n}",
            "method_id": 85
        },
        {
            "method_signature": "org.mockito.internal.util.reflection.GenericMetadataSupport$FromClassGenericMetadataSupport:readActualTypeParametersOnDeclaringClass(Ljava/lang/Class;)V",
            "method_body": "private void readActualTypeParametersOnDeclaringClass(Class<?> clazz) {\nregisterTypeParametersOn(clazz.getTypeParameters());\nregisterTypeVariablesOn(clazz.getGenericSuperclass());\nfor (Type genericInterface : clazz.getGenericInterfaces()) {\n}",
            "method_id": 86
        },
        {
            "method_signature": "org.mockito.internal.verification.DefaultRegisteredInvocations:add(Lorg/mockito/invocation/Invocation;)V",
            "method_body": "public void add(Invocation invocation) {\nsynchronized (invocations) {\ninvocations.add(invocation);\n}\n}",
            "method_id": 87
        },
        {
            "method_signature": "org.mockito.internal.progress.MockingProgressImpl:validateMostStuff()V",
            "method_body": "private void validateMostStuff() {\nGlobalConfiguration.validate();\nif (verificationMode != null) {\ngetArgumentMatcherStorage().validateState();\n}",
            "method_id": 88
        },
        {
            "method_signature": "org.mockito.internal.util.reflection.GenericMetadataSupport$TypeVariableReturnType:extraInterfaces()Ljava/util/List;",
            "method_body": "public List<Type> extraInterfaces() {\nType type = extractActualBoundedTypeOf(typeVariable);\nif (type instanceof BoundedType) {\nreturn Arrays.asList(((BoundedType) type).interfaceBounds());\n}",
            "method_id": 89
        }
    ]
}