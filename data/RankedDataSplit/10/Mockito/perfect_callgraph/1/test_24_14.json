{
    "bug_id": 1,
    "test_id": 24,
    "test_name": "org.mockito.internal.util.reflection.ParameterizedConstructorInstantiatorTest.should_instantiate_type_with_vararg_constructor",
    "test_body": "public void should_instantiate_type_with_vararg_constructor() throws Exception {\nObserver[] vararg = new Observer[] {  };\ngiven(resolver.resolveTypeInstances(Matchers.<Class<?>[]>anyVararg())).willReturn(new Object[]{ \"\", vararg});\n113: new ParameterizedConstructorInstantiator(this, field(\"withVarargConstructor\"), resolver).instantiate();\n115: assertNotNull(withVarargConstructor);\n}\n",
    "stack_trace": "java.lang.UnsupportedOperationException\nat org.mockito.internal.invocation.InvocationMatcher.captureArgumentsFrom(InvocationMatcher.java:123)\nat org.mockito.internal.handler.MockHandlerImpl.handle(MockHandlerImpl.java:94)\nat org.mockito.internal.handler.NullResultGuardian.handle(NullResultGuardian.java:29)\nat org.mockito.internal.handler.InvocationNotifierHandler.handle(InvocationNotifierHandler.java:37)\nat org.mockito.internal.creation.bytebuddy.MockMethodInterceptor.doIntercept(MockMethodInterceptor.java:82)\nat org.mockito.internal.creation.bytebuddy.MockMethodInterceptor.interceptAbstract(MockMethodInterceptor.java:70)\nat org.mockito.internal.util.reflection.FieldInitializer$ConstructorArgumentResolver$MockitoMock$1278416959.resolveTypeInstances(Unknown Source)\nat org.mockito.internal.util.reflection.FieldInitializer$ParameterizedConstructorInstantiator.instantiate(FieldInitializer.java:256)\nat org.mockito.internal.util.reflection.ParameterizedConstructorInstantiatorTest.should_instantiate_type_with_vararg_constructor(ParameterizedConstructorInstantiatorTest.java:113)",
    "covered_methods": [
        {
            "method_signature": "org.mockito.internal.invocation.InvocationMatcher:getMatchers()Ljava/util/List;",
            "method_body": "public List<Matcher> getMatchers() {\nreturn this.matchers;\n}",
            "method_id": 140
        },
        {
            "method_signature": "org.mockito.internal.stubbing.OngoingStubbingImpl:<init>(Lorg/mockito/internal/stubbing/InvocationContainerImpl;)V",
            "method_body": "public OngoingStubbingImpl(InvocationContainerImpl invocationContainerImpl) {\nthis.invocationContainerImpl = invocationContainerImpl;\n}",
            "method_id": 141
        },
        {
            "method_signature": "org.mockito.internal.stubbing.answers.MethodInfo:isValidReturnType(Ljava/lang/Class;)Z",
            "method_body": "public boolean isValidReturnType(Class clazz) {\nif (method.getReturnType().isPrimitive() || clazz.isPrimitive()) {\nreturn Primitives.primitiveTypeOf(clazz) == Primitives.primitiveTypeOf(method.getReturnType());\nreturn method.getReturnType().isAssignableFrom(clazz);\n}",
            "method_id": 142
        },
        {
            "method_signature": "org.mockito.internal.configuration.injection.scanner.MockScanner:isAnnotatedByMockOrSpy(Ljava/lang/reflect/Field;)Z",
            "method_body": "private boolean isAnnotatedByMockOrSpy(Field field) {\nreturn null != field.getAnnotation(Spy.class)\n}",
            "method_id": 143
        },
        {
            "method_signature": "org.mockito.internal.configuration.injection.scanner.MockScanner:preparedMock(Ljava/lang/Object;Ljava/lang/reflect/Field;)Ljava/lang/Object;",
            "method_body": "private Object preparedMock(Object instance, Field field) {\nif (isAnnotatedByMockOrSpy(field)) {\nreturn instance;\n} else if (isMockOrSpy(instance)) {\nreturn null;\n}",
            "method_id": 144
        },
        {
            "method_signature": "org.mockito.internal.configuration.SpyAnnotationEngine:process(Ljava/lang/Class;Ljava/lang/Object;)V",
            "method_body": "public void process(Class<?> context, Object testInstance) {\nField[] fields = context.getDeclaredFields();\nfor (Field field : fields) {\nif (field.isAnnotationPresent(Spy.class) && !field.isAnnotationPresent(InjectMocks.class)) {\n}",
            "method_id": 145
        },
        {
            "method_signature": "org.mockito.internal.progress.ThreadSafeMockingProgress:reportOngoingStubbing(Lorg/mockito/internal/progress/IOngoingStubbing;)V",
            "method_body": "public void reportOngoingStubbing(IOngoingStubbing iOngoingStubbing) {\nthreadSafely().reportOngoingStubbing(iOngoingStubbing);\n}",
            "method_id": 146
        },
        {
            "method_signature": "org.mockito.internal.MockitoCore:validateMockitoUsage()V",
            "method_body": "public void validateMockitoUsage() {\nmockingProgress.validateState();\n}",
            "method_id": 147
        },
        {
            "method_signature": "org.mockito.internal.configuration.MockAnnotationProcessor:process(Lorg/mockito/Mock;Ljava/lang/reflect/Field;)Ljava/lang/Object;",
            "method_body": "public Object process(Mock annotation, Field field) {\nMockSettings mockSettings = Mockito.withSettings();\nif (annotation.extraInterfaces().length > 0) { // never null\nif (\"\".equals(annotation.name())) {\nmockSettings.name(field.getName());\nif(annotation.serializable()){\nmockSettings.defaultAnswer(annotation.answer());\nreturn Mockito.mock(field.getType(), mockSettings);\n}",
            "method_id": 148
        },
        {
            "method_signature": "org.mockito.runners.MockitoJUnitRunner:run(Lorg/junit/runner/notification/RunNotifier;)V",
            "method_body": "public void run(final RunNotifier notifier) {\nrunner.run(notifier);\n}",
            "method_id": 149
        }
    ]
}