{
    "bug_id": 34,
    "test_id": 11,
    "test_name": "org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayAndObjectCycle",
    "test_body": "public void testReflectionArrayAndObjectCycle() throws Exception {\nObject[] objects = new Object[1];\nSimpleReflectionTestFixture simple = new SimpleReflectionTestFixture(objects);\nobjects[0] = simple;\nassertEquals(\nthis.toBaseString(objects)\n+ \"[{\"\n+ this.toBaseString(simple)\n+ \"[o=\"\n+ this.toBaseString(objects)\n+ \"]\"\n+ \"}]\",\nToStringBuilder.reflectionToString(objects));\nassertEquals(\nthis.toBaseString(simple)\n+ \"[o={\"\n+ this.toBaseString(simple)\n+ \"}]\",\nToStringBuilder.reflectionToString(simple));\nthis.validateNullToStringStyleRegistry();\n}\n",
    "stack_trace": "junit.framework.AssertionFailedError: Expected: <null> but was: {}\nat junit.framework.Assert.fail(Assert.java:57)\nat junit.framework.Assert.assertTrue(Assert.java:22)\nat junit.framework.Assert.assertNull(Assert.java:277)\nat junit.framework.Assert.assertNull(Assert.java:268)\nat junit.framework.TestCase.assertNull(TestCase.java:438)\nat org.apache.commons.lang3.builder.ToStringBuilderTest.validateNullToStringStyleRegistry(ToStringBuilderTest.java:586)\nat org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayAndObjectCycle(ToStringBuilderTest.java:578)",
    "covered_methods": [
        {
            "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:append(Ljava/lang/String;Ljava/lang/Object;)Lorg/apache/commons/lang3/builder/ToStringBuilder;",
            "method_body": "public ToStringBuilder append(String fieldName, Object obj) {\nstyle.append(buffer, fieldName, obj, null);\nreturn this;\n}",
            "method_id": 20
        },
        {
            "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:accept(Ljava/lang/reflect/Field;)Z",
            "method_body": "protected boolean accept(Field field) {\nif (field.getName().indexOf(ClassUtils.INNER_CLASS_SEPARATOR_CHAR) != -1) {\nif (Modifier.isTransient(field.getModifiers()) && !this.isAppendTransients()) {\nreturn false;\nif (Modifier.isStatic(field.getModifiers()) && !this.isAppendStatics()) {\nif (this.excludeFieldNames != null\nreturn true;\n}",
            "method_id": 21
        },
        {
            "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:toString(Ljava/lang/Object;Lorg/apache/commons/lang3/builder/ToStringStyle;ZZLjava/lang/Class;)Ljava/lang/String;",
            "method_body": "public static <T> String toString(\nreturn new ReflectionToStringBuilder(object, style, null, reflectUpToClass, outputTransients, outputStatics)\n}",
            "method_id": 22
        },
        {
            "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendIdentityHashCode(Ljava/lang/StringBuffer;Ljava/lang/Object;)V",
            "method_body": "protected void appendIdentityHashCode(StringBuffer buffer, Object object) {\nif (this.isUseIdentityHashCode() && object!=null) {\nregister(object);\nbuffer.append('@');\nbuffer.append(Integer.toHexString(System.identityHashCode(object)));\n}",
            "method_id": 23
        },
        {
            "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:getDefaultStyle()Lorg/apache/commons/lang3/builder/ToStringStyle;",
            "method_body": "public static ToStringStyle getDefaultStyle() {\nreturn defaultStyle;\n}",
            "method_id": 24
        },
        {
            "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:setUpToClass(Ljava/lang/Class;)V",
            "method_body": "public void setUpToClass(Class<?> clazz) {\nif (clazz != null) {\nObject object = getObject();\nif (object != null && clazz.isInstance(object) == false) {\nthis.upToClass = clazz;\n}",
            "method_id": 25
        },
        {
            "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendDetail(Ljava/lang/StringBuffer;Ljava/lang/String;[Ljava/lang/Object;)V",
            "method_body": "protected void appendDetail(StringBuffer buffer, String fieldName, Object[] array) {\nbuffer.append(arrayStart);\nfor (int i = 0; i < array.length; i++) {\nObject item = array[i];\nif (i > 0) {\nbuffer.append(arraySeparator);\nif (item == null) {\nappendInternal(buffer, fieldName, item, arrayContentDetail);\nbuffer.append(arrayEnd);\n}",
            "method_id": 26
        },
        {
            "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:reflectionAppendArray(Ljava/lang/Object;)Lorg/apache/commons/lang3/builder/ReflectionToStringBuilder;",
            "method_body": "public ReflectionToStringBuilder reflectionAppendArray(Object array) {\nthis.getStyle().reflectionAppendArrayDetail(this.getStringBuffer(), null, array);\nreturn this;\n}",
            "method_id": 27
        },
        {
            "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:unregister(Ljava/lang/Object;)V",
            "method_body": "static void unregister(Object value) {\nif (value != null) {\nsynchronized (ToStringStyle.class) {\nm = REGISTRY.get();\nif (m != null) {\nm.remove(value);\nif (m.isEmpty()) {\nREGISTRY.remove();\n}\n}",
            "method_id": 28
        },
        {
            "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:getUpToClass()Ljava/lang/Class;",
            "method_body": "public Class<?> getUpToClass() {\nreturn this.upToClass;\n}",
            "method_id": 29
        }
    ]
}