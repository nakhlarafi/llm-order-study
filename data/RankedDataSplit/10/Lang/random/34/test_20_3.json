{
    "bug_id": 34,
    "test_id": 20,
    "test_name": "org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayArrayCycle",
    "test_body": "public void testReflectionArrayArrayCycle() throws Exception {\nObject[][] objects = new Object[2][2];\nobjects[0][0] = objects;\nobjects[0][1] = objects;\nobjects[1][0] = objects;\nobjects[1][1] = objects;\nString basicToString = this.toBaseString(objects);\nassertEquals(\nbasicToString\n+ \"[{{\"\n+ basicToString\n+ \",\"\n+ basicToString\n+ \"},{\"\n+ basicToString\n+ \",\"\n+ basicToString\n+ \"}}]\",\nToStringBuilder.reflectionToString(objects));\nthis.validateNullToStringStyleRegistry();\n}\n",
    "stack_trace": "junit.framework.AssertionFailedError: Expected: <null> but was: {}\nat junit.framework.Assert.fail(Assert.java:57)\nat junit.framework.Assert.assertTrue(Assert.java:22)\nat junit.framework.Assert.assertNull(Assert.java:277)\nat junit.framework.Assert.assertNull(Assert.java:268)\nat junit.framework.TestCase.assertNull(TestCase.java:438)\nat org.apache.commons.lang3.builder.ToStringBuilderTest.validateNullToStringStyleRegistry(ToStringBuilderTest.java:586)\nat org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayArrayCycle(ToStringBuilderTest.java:421)",
    "covered_methods": [
        {
            "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:setAppendTransients(Z)V",
            "method_body": "public void setAppendTransients(boolean appendTransients) {\nthis.appendTransients = appendTransients;\n}",
            "method_id": 30
        },
        {
            "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:toString()Ljava/lang/String;",
            "method_body": "public String toString() {\nif (this.getObject() == null) {\nClass<?> clazz = this.getObject().getClass();\nthis.appendFieldsIn(clazz);\nwhile (clazz.getSuperclass() != null && clazz != this.getUpToClass()) {\nclazz = clazz.getSuperclass();\nthis.appendFieldsIn(clazz);\nreturn super.toString();\n}",
            "method_id": 31
        },
        {
            "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:isUseIdentityHashCode()Z",
            "method_body": "protected boolean isUseIdentityHashCode() {\nreturn useIdentityHashCode;\n}",
            "method_id": 32
        }
    ]
}