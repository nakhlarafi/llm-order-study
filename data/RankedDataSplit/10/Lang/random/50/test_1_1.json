{
    "bug_id": 50,
    "test_id": 1,
    "test_name": "org.apache.commons.lang.time.FastDateFormatTest.test_changeDefault_Locale_DateInstance",
    "test_body": "public void test_changeDefault_Locale_DateInstance() {\nLocale realDefaultLocale = Locale.getDefault();\ntry {\nLocale.setDefault(Locale.US);\nFastDateFormat format1 = FastDateFormat.getDateInstance(FastDateFormat.FULL, Locale.GERMANY);\nFastDateFormat format2 = FastDateFormat.getDateInstance(FastDateFormat.FULL);\nLocale.setDefault(Locale.GERMANY);\nFastDateFormat format3 = FastDateFormat.getDateInstance(FastDateFormat.FULL);\n144: assertSame(Locale.GERMANY, format1.getLocale());\nassertSame(Locale.US, format2.getLocale());\nassertSame(Locale.GERMANY, format3.getLocale());\nassertTrue(format1 != format2); // -- junit 3.8 version -- assertFalse(format1 == format2);",
    "stack_trace": "junit.framework.AssertionFailedError: expected same:<de_DE> was not:<en_US>\nat junit.framework.Assert.fail(Assert.java:57)\nat junit.framework.Assert.failNotSame(Assert.java:325)\nat junit.framework.Assert.assertSame(Assert.java:288)\nat junit.framework.Assert.assertSame(Assert.java:296)\nat junit.framework.TestCase.assertSame(TestCase.java:465)\nat org.apache.commons.lang.time.FastDateFormatTest.test_changeDefault_Locale_DateInstance(FastDateFormatTest.java:146)",
    "covered_methods": [
        {
            "method_signature": "org.apache.commons.lang.time.FastDateFormat$StringLiteral:estimateLength()I",
            "method_body": "public int estimateLength() {\nreturn mValue.length();\n}",
            "method_id": 10
        },
        {
            "method_signature": "org.apache.commons.lang.time.FastDateFormat$UnpaddedNumberField:<init>(I)V",
            "method_body": "UnpaddedNumberField(int field) {\nmField = field;\n}",
            "method_id": 11
        },
        {
            "method_signature": "org.apache.commons.lang.time.FastDateFormat:getDateInstance(ILjava/util/Locale;)Lorg/apache/commons/lang/time/FastDateFormat;",
            "method_body": "public static FastDateFormat getDateInstance(int style, Locale locale) {\nreturn getDateInstance(style, null, locale);\n}",
            "method_id": 12
        },
        {
            "method_signature": "org.apache.commons.lang.time.FastDateFormat:getDateInstance(ILjava/util/TimeZone;Ljava/util/Locale;)Lorg/apache/commons/lang/time/FastDateFormat;",
            "method_body": "public static synchronized FastDateFormat getDateInstance(int style, TimeZone timeZone, Locale locale) {\nObject key = new Integer(style);\nif (timeZone != null) {\nif (locale != null) {\nkey = new Pair(key, locale);\nFastDateFormat format = (FastDateFormat) cDateInstanceCache.get(key);\nif (format == null) {\nif (locale == null) {\nlocale = Locale.getDefault();\nSimpleDateFormat formatter = (SimpleDateFormat) DateFormat.getDateInstance(style, locale);\nString pattern = formatter.toPattern();\nformat = getInstance(pattern, timeZone, locale);\ncDateInstanceCache.put(key, format);\n}\nreturn format;\n}",
            "method_id": 13
        },
        {
            "method_signature": "org.apache.commons.lang.time.FastDateFormat$CharacterLiteral:<init>(C)V",
            "method_body": "void appendTo(StringBuffer buffer, int value);\nCharacterLiteral(char value) {\nmValue = value;\n}\nreturn 1;\n}",
            "method_id": 14
        },
        {
            "method_signature": "org.apache.commons.lang.time.FastDateFormat$TextField:<init>(I[Ljava/lang/String;)V",
            "method_body": "TextField(int field, String[] values) {\nmField = field;\nmValues = values;\n}",
            "method_id": 15
        },
        {
            "method_signature": "org.apache.commons.lang.time.FastDateFormat$Pair:<init>(Ljava/lang/Object;Ljava/lang/Object;)V",
            "method_body": "public Pair(Object obj1, Object obj2) {\nmObj1 = obj1;\nmObj2 = obj2;\n}",
            "method_id": 16
        },
        {
            "method_signature": "org.apache.commons.lang.time.FastDateFormat:hashCode()I",
            "method_body": "public int hashCode() {\nint total = 0;\ntotal += mPattern.hashCode();\ntotal += mTimeZone.hashCode();\ntotal += (mTimeZoneForced ? 1 : 0);\ntotal += mLocale.hashCode();\ntotal += (mLocaleForced ? 1 : 0);\nreturn total;\n}",
            "method_id": 17
        },
        {
            "method_signature": "org.apache.commons.lang.time.FastDateFormat$StringLiteral:<init>(Ljava/lang/String;)V",
            "method_body": "StringLiteral(String value) {\nmValue = value;\n}",
            "method_id": 18
        },
        {
            "method_signature": "org.apache.commons.lang.time.FastDateFormat$PaddedNumberField:<init>(II)V",
            "method_body": "PaddedNumberField(int field, int size) {\nif (size < 3) {\nmField = field;\nmSize = size;\n}",
            "method_id": 19
        }
    ]
}