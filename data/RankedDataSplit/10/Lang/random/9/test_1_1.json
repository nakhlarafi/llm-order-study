{
    "bug_id": 9,
    "test_id": 1,
    "test_name": "org.apache.commons.lang3.time.FastDateParserTest.testLANG_832",
    "test_body": "public void testLANG_832() throws Exception {\ntestSdfAndFdp(\"'d'd\" ,\"d3\", false); // OK\ntestSdfAndFdp(\"'d'd'\",\"d3\", true); // should fail (unterminated quote)\n}\n",
    "stack_trace": "junit.framework.AssertionFailedError: Expected FDF failure, but got Fri Jan 02 21:00:00 PST 1970 for ['d'd',d3] using d(\\p{IsNd}++)\nat junit.framework.Assert.fail(Assert.java:57)\nat org.apache.commons.lang3.time.FastDateParserTest.testSdfAndFdp(FastDateParserTest.java:382)\nat org.apache.commons.lang3.time.FastDateParserTest.testLANG_832(FastDateParserTest.java:348)",
    "covered_methods": [
        {
            "method_signature": "org.apache.commons.lang3.time.FastDateParser:isNextNumber()Z",
            "method_body": "boolean isNextNumber() {\nreturn nextStrategy!=null && nextStrategy.isNumber();\n}",
            "method_id": 10
        },
        {
            "method_signature": "org.apache.commons.lang3.time.FastDateParser$NumberStrategy:setCalendar(Lorg/apache/commons/lang3/time/FastDateParser;Ljava/util/Calendar;Ljava/lang/String;)V",
            "method_body": "public void setCalendar(FastDateParser parser, Calendar cal, String value) {\ncal.set(field, modify(Integer.parseInt(value)));\n}",
            "method_id": 11
        },
        {
            "method_signature": "org.apache.commons.lang3.time.FastDateParser:parse(Ljava/lang/String;Ljava/text/ParsePosition;)Ljava/util/Date;",
            "method_body": "public Date parse(String source, ParsePosition pos) {\nint offset= pos.getIndex();\nMatcher matcher= parsePattern.matcher(source.substring(offset));\nif(!matcher.lookingAt()) {\nCalendar cal= Calendar.getInstance(timeZone, locale);\ncal.clear();\nfor(int i=0; i<strategies.length;) {\nStrategy strategy= strategies[i++];\nstrategy.setCalendar(this, cal, matcher.group(i));\n}\npos.setIndex(offset+matcher.end());\nreturn cal.getTime();\n}",
            "method_id": 12
        }
    ]
}