{
    "bug_id": 10,
    "test_id": 0,
    "test_name": "org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLANG_831",
    "test_body": null,
    "stack_trace": "junit.framework.AssertionFailedError: Parsed dates should be equal expected:<null> but was:<Mon Mar 02 21:00:00 PST 1970>\nat org.junit.Assert.fail(Assert.java:88)\nat org.junit.Assert.failNotEquals(Assert.java:743)\nat org.junit.Assert.assertEquals(Assert.java:118)\nat org.apache.commons.lang3.time.FastDateParserTest.testSdfAndFdp(FastDateParserTest.java:388)\nat org.apache.commons.lang3.time.FastDateParserTest.testLANG_831(FastDateParserTest.java:348)",
    "covered_methods": [
        {
            "method_signature": "org.apache.commons.lang3.time.FastDateParser:escapeRegex(Ljava/lang/StringBuilder;Ljava/lang/String;Z)Ljava/lang/StringBuilder;",
            "method_body": "private static StringBuilder escapeRegex(StringBuilder regex, String value, boolean unquote) {\nboolean wasWhite= false;\nfor(int i= 0; i<value.length(); ++i) {\nchar c= value.charAt(i);\nif(Character.isWhitespace(c)) {\nif(!wasWhite) {\nwasWhite= true;\nregex.append(\"\\\\s*+\");\nwasWhite= false;\nswitch(c) {\nregex.append(c);\nreturn regex;\n}",
            "method_id": 0
        },
        {
            "method_signature": "org.apache.commons.lang3.time.FormatCache$MultipartKey:hashCode()I",
            "method_body": "public int hashCode() {\nif(hashCode==0) {\nint rc= 0;\nfor(Object key : keys) {\nif(key!=null) {\nrc= rc*7 + key.hashCode();\nhashCode= rc;\nreturn hashCode;\n}",
            "method_id": 1
        },
        {
            "method_signature": "org.apache.commons.lang3.time.FastDateParser$TextStrategy:addRegex(Lorg/apache/commons/lang3/time/FastDateParser;Ljava/lang/StringBuilder;)Z",
            "method_body": "public boolean addRegex(FastDateParser parser, StringBuilder regex) {\nregex.append('(');\nfor(KeyValue textKeyValue : parser.getDisplayNames(field)) {\nescapeRegex(regex, textKeyValue.key, false).append('|');\nregex.setCharAt(regex.length()-1, ')');\nreturn true;\n}",
            "method_id": 2
        },
        {
            "method_signature": "org.apache.commons.lang3.time.FastDateParser$KeyValue:<init>(Ljava/lang/String;I)V",
            "method_body": "public KeyValue(String key, int value) {\nthis.key= key;\nthis.value= value;\n}",
            "method_id": 3
        },
        {
            "method_signature": "org.apache.commons.lang3.time.FastDateFormat:<init>(Ljava/lang/String;Ljava/util/TimeZone;Ljava/util/Locale;)V",
            "method_body": "protected FastDateFormat(String pattern, TimeZone timeZone, Locale locale) {\nprinter= new FastDatePrinter(pattern, timeZone, locale);\nparser= new FastDateParser(pattern, timeZone, locale);\n}",
            "method_id": 4
        },
        {
            "method_signature": "org.apache.commons.lang3.time.FastDatePrinter$CharacterLiteral:estimateLength()I",
            "method_body": "void appendTo(StringBuffer buffer, int value);\nCharacterLiteral(char value) {\nmValue = value;\n}\nreturn 1;\n}",
            "method_id": 5
        },
        {
            "method_signature": "org.apache.commons.lang3.time.FastDateParser$3:modify(I)I",
            "method_body": "public int modify(int iValue) {\nreturn iValue-1;\n}",
            "method_id": 6
        },
        {
            "method_signature": "org.apache.commons.lang3.time.FastDatePrinter:<init>(Ljava/lang/String;Ljava/util/TimeZone;Ljava/util/Locale;)V",
            "method_body": "protected FastDatePrinter(String pattern, TimeZone timeZone, Locale locale) {\nmPattern = pattern;\nmTimeZone = timeZone;\nmLocale = locale;\ninit();\n}",
            "method_id": 7
        },
        {
            "method_signature": "org.apache.commons.lang3.time.FastDateFormat$1:createInstance(Ljava/lang/String;Ljava/util/TimeZone;Ljava/util/Locale;)Lorg/apache/commons/lang3/time/FastDateFormat;",
            "method_body": "protected FastDateFormat createInstance(String pattern, TimeZone timeZone, Locale locale) {\nreturn new FastDateFormat(pattern, timeZone, locale);\n}",
            "method_id": 8
        },
        {
            "method_signature": "org.apache.commons.lang3.time.FastDateParser$TextStrategy:setCalendar(Lorg/apache/commons/lang3/time/FastDateParser;Ljava/util/Calendar;Ljava/lang/String;)V",
            "method_body": "public void setCalendar(FastDateParser parser, Calendar cal, String value) {\nKeyValue[] textKeyValues= parser.getDisplayNames(field);\nint idx= Arrays.binarySearch(textKeyValues, new KeyValue(value, -1), IGNORE_CASE_COMPARATOR);\nif(idx<0) {\ncal.set(field, textKeyValues[idx].value);\n}",
            "method_id": 9
        }
    ]
}