{
    "bug_id": 4,
    "test_id": 0,
    "test_name": "com.fasterxml.jackson.dataformat.xml.misc.RootNameTest.testDynamicRootName",
    "test_body": "public void testDynamicRootName() throws IOException\n{\nString xml;\n71: ObjectWriter w = _xmlMapper.writer().withRootName(\"rudy\");\n73: xml = w.writeValueAsString(new StringBean(\"foo\"));\nassertEquals(\"<rudy><text>foo</text></rudy>\", xml);\n76: xml = w.writeValueAsString(new StringBean(null));\nassertEquals(\"<rudy><text/></rudy>\", xml);\n79: // and even with null will respect configured root name\nxml = w.writeValueAsString(null);\nassertEquals(\"<rudy/>\", xml);\n}\n",
    "stack_trace": "junit.framework.ComparisonFailure: expected:<<[rudy]/>> but was:<<[null]/>>\nat junit.framework.Assert.assertEquals(Assert.java:100)\nat junit.framework.Assert.assertEquals(Assert.java:107)\nat junit.framework.TestCase.assertEquals(TestCase.java:269)\nat com.fasterxml.jackson.dataformat.xml.misc.RootNameTest.testDynamicRootName(RootNameTest.java:81)",
    "covered_methods": [
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.XmlFactory:_initFactories(Ljavax/xml/stream/XMLInputFactory;Ljavax/xml/stream/XMLOutputFactory;)V",
            "method_body": "protected void _initFactories(XMLInputFactory xmlIn, XMLOutputFactory xmlOut)\nxmlOut.setProperty(XMLOutputFactory.IS_REPAIRING_NAMESPACES, Boolean.TRUE);\nxmlIn.setProperty(XMLInputFactory.IS_COALESCING, Boolean.TRUE);\n}",
            "method_id": 20
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.JacksonXmlAnnotationIntrospector:_findXmlName(Lcom/fasterxml/jackson/databind/introspect/Annotated;)Lcom/fasterxml/jackson/databind/PropertyName;",
            "method_body": "protected PropertyName _findXmlName(Annotated a)\nJacksonXmlProperty pann = a.getAnnotation(JacksonXmlProperty.class);\nif (pann != null) {\nreturn null;\n}",
            "method_id": 21
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.PackageVersion:<clinit>()V",
            "method_body": "public final static Version VERSION = VersionUtil.parseVersion(\n}",
            "method_id": 22
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.util.XmlInfo:isText()Z",
            "method_body": "public boolean isText() { return _isText; }\npublic boolean isText() { return _isText; }",
            "method_id": 23
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator:_handleEndObject()V",
            "method_body": "public final void _handleEndObject() throws IOException\nif (_elementNameStack.isEmpty()) {\n_nextName = _elementNameStack.removeLast();\n_nextIsAttribute = false;\n_xmlWriter.writeEndElement();\nif (_elementNameStack.isEmpty() && (_xmlPrettyPrinter != null)) {\n}\n}",
            "method_id": 24
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.JacksonXmlAnnotationIntrospector:findNamespace(Lcom/fasterxml/jackson/databind/introspect/Annotated;)Ljava/lang/String;",
            "method_body": "public String findNamespace(Annotated ann)\nJacksonXmlProperty prop = ann.getAnnotation(JacksonXmlProperty.class);\nif (prop != null) {\nreturn null;\n}",
            "method_id": 25
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.util.XmlInfo:isAttribute()Z",
            "method_body": "public boolean isAttribute() { return _isAttribute; }\npublic boolean isAttribute() { return _isAttribute; }",
            "method_id": 26
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerModifier:modifySerializer(Lcom/fasterxml/jackson/databind/SerializationConfig;Lcom/fasterxml/jackson/databind/BeanDescription;Lcom/fasterxml/jackson/databind/JsonSerializer;)Lcom/fasterxml/jackson/databind/JsonSerializer;",
            "method_body": "public JsonSerializer<?> modifySerializer(SerializationConfig config,\nif (!(serializer instanceof BeanSerializerBase)) {\nreturn serializer;\nreturn new XmlBeanSerializer((BeanSerializerBase) serializer);\n}",
            "method_id": 27
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator:writeStartObject()V",
            "method_body": "public final void writeStartObject() throws IOException\n_verifyValueWrite(\"start an object\");\n_writeContext = _writeContext.createChildObjectContext();\nif (_cfgPrettyPrinter != null) {\n_handleStartObject();\n}",
            "method_id": 28
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider:_serializeXmlNull(Lcom/fasterxml/jackson/core/JsonGenerator;)V",
            "method_body": "protected void _serializeXmlNull(JsonGenerator jgen) throws IOException\nif (jgen instanceof ToXmlGenerator) {\n_initWithRootName((ToXmlGenerator) jgen, ROOT_NAME_FOR_NULL);\nsuper.serializeValue(jgen, null);\n}",
            "method_id": 29
        }
    ]
}