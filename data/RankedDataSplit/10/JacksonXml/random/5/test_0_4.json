{
    "bug_id": 5,
    "test_id": 0,
    "test_name": "com.fasterxml.jackson.dataformat.xml.MapperCopyTest.testCopyWith",
    "test_body": "public void testCopyWith() throws Exception\n{\nXmlMapper xmlMapper = newMapper();\nfinal ObjectMapper xmlMapperNoAnno = xmlMapper.copy()\n.disable(MapperFeature.USE_ANNOTATIONS)\n.disable(SerializationFeature.FAIL_ON_EMPTY_BEANS);\n81: String xml1 = xmlMapper.writeValueAsString(new Pojo282());\nString xml2 = xmlMapperNoAnno.writeValueAsString(new Pojo282());\n84: if (!xml1.contains(\"AnnotatedName\")) {\nfail(\"Should use name 'AnnotatedName', xml = \"+xml1);\n}\nif (!xml2.contains(\"Pojo282\")\n|| xml2.contains(\"AnnotatedName\")) {\nfail(\"Should NOT use name 'AnnotatedName' but 'Pojo282', xml = \"+xml1);\n}",
    "stack_trace": "junit.framework.AssertionFailedError: Should NOT use name 'AnnotatedName' but 'Pojo282', xml = <AnnotatedName><a>3</a></AnnotatedName>\nat junit.framework.Assert.fail(Assert.java:57)\nat junit.framework.TestCase.fail(TestCase.java:227)\nat com.fasterxml.jackson.dataformat.xml.MapperCopyTest.testCopyWith(MapperCopyTest.java:89)",
    "covered_methods": [
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.XmlFactory:<init>(Lcom/fasterxml/jackson/dataformat/xml/XmlFactory;Lcom/fasterxml/jackson/core/ObjectCodec;)V",
            "method_body": "protected XmlFactory(XmlFactory src, ObjectCodec oc)\nsuper(src, oc);\n_xmlParserFeatures = src._xmlParserFeatures;\n_xmlGeneratorFeatures = src._xmlGeneratorFeatures;\n_cfgNameForTextElement = src._cfgNameForTextElement;\n_xmlInputFactory = src._xmlInputFactory;\n_xmlOutputFactory = src._xmlOutputFactory;\n}",
            "method_id": 40
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.XmlMapper:copy()Lcom/fasterxml/jackson/dataformat/xml/XmlMapper;",
            "method_body": "public XmlMapper copy()\n_checkInvalidCopy(XmlMapper.class);\nreturn new XmlMapper(this);\n}",
            "method_id": 41
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator:writeEndObject()V",
            "method_body": "public final void writeEndObject() throws IOException\nif (!_writeContext.inObject()) {\n_writeContext = _writeContext.getParent();\nif (_cfgPrettyPrinter != null) {\n_handleEndObject();\n}",
            "method_id": 42
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializer:serialize(Ljava/lang/Object;Lcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/databind/SerializerProvider;)V",
            "method_body": "public void serialize(Object bean, JsonGenerator g, SerializerProvider provider) throws IOException\nif (_objectIdWriter != null) {\ng.writeStartObject();\nif (_propertyFilterId != null) {\nserializeFields(bean, g, provider);\ng.writeEndObject();\n}",
            "method_id": 43
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator$Feature:getMask()I",
            "method_body": "@Override public int getMask() { return _mask; }\n@Override public int getMask() { return _mask; }",
            "method_id": 44
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator:setNextIsAttribute(Z)V",
            "method_body": "public void setNextIsAttribute(boolean isAttribute)\n_nextIsAttribute = isAttribute;\n}",
            "method_id": 45
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider:copy()Lcom/fasterxml/jackson/databind/ser/DefaultSerializerProvider;",
            "method_body": "public DefaultSerializerProvider copy() {\nreturn new XmlSerializerProvider(this);\n}",
            "method_id": 46
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.util.XmlInfo:getNamespace()Ljava/lang/String;",
            "method_body": "public String getNamespace() { return _namespace; }\npublic String getNamespace() { return _namespace; }",
            "method_id": 47
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator:_verifyValueWrite(Ljava/lang/String;)V",
            "method_body": "protected final void _verifyValueWrite(String typeMsg) throws IOException\nint status = _writeContext.writeValue();\nif (status == JsonWriteContext.STATUS_EXPECT_NAME) {\n}",
            "method_id": 48
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.XmlMapper:<init>()V",
            "method_body": "public XmlMapper() {\nthis(new XmlFactory());\n}",
            "method_id": 49
        }
    ]
}