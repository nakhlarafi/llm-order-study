{
    "bug_id": 3,
    "test_id": 0,
    "test_name": "com.fasterxml.jackson.dataformat.xml.stream.XmlParserNextXxxTest.testXmlAttributesWithNextTextValue",
    "test_body": "public void testXmlAttributesWithNextTextValue() throws Exception\n{\nfinal String XML = \"<data max=\\\"7\\\" offset=\\\"9\\\"/>\";\n34: FromXmlParser xp = (FromXmlParser) _xmlFactory.createParser(new StringReader(XML));\n36: // First: verify handling without forcing array handling:\nassertToken(JsonToken.START_OBJECT, xp.nextToken()); // <data>\nassertToken(JsonToken.FIELD_NAME, xp.nextToken()); // <max>\nassertEquals(\"max\", xp.getCurrentName());\n41: assertEquals(\"7\", xp.nextTextValue());\n43: assertToken(JsonToken.FIELD_NAME, xp.nextToken()); // <offset>\nassertEquals(\"offset\", xp.getCurrentName());\n46: assertEquals(\"offset\", xp.getText());\n48: assertEquals(\"9\", xp.nextTextValue());\n50: assertEquals(\"9\", xp.getText());\n52: assertToken(JsonToken.END_OBJECT, xp.nextToken()); // </data>\nxp.close();\n}\n",
    "stack_trace": "junit.framework.ComparisonFailure: expected:<7> but was:<null>\nat junit.framework.Assert.assertEquals(Assert.java:100)\nat junit.framework.Assert.assertEquals(Assert.java:107)\nat junit.framework.TestCase.assertEquals(TestCase.java:269)\nat com.fasterxml.jackson.dataformat.xml.stream.XmlParserNextXxxTest.testXmlAttributesWithNextTextValue(XmlParserNextXxxTest.java:41)",
    "covered_methods": [
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser:nextToken()Lcom/fasterxml/jackson/core/JsonToken;",
            "method_body": "public JsonToken nextToken() throws IOException\n_binaryValue = null;\nif (_nextToken != null) {\nJsonToken t = _nextToken;\n_currToken = t;\n_nextToken = null;\nswitch (t) {\n_parsingContext = _parsingContext.createChildObjectContext(-1, -1);\nbreak;\nreturn t;\nint token = _xmlTokens.next();\nwhile (token == XmlTokenStream.XML_START_ELEMENT) {\nswitch (token) {\nif (_mayBeLeaf) {\n_parsingContext.setCurrentName(_xmlTokens.getLocalName());\nreturn (_currToken = JsonToken.FIELD_NAME);\n}",
            "method_id": 0
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser:getCurrentName()Ljava/lang/String;",
            "method_body": "public String getCurrentName() throws IOException\nif (_currToken == JsonToken.START_OBJECT || _currToken == JsonToken.START_ARRAY) {\nname = _parsingContext.getCurrentName();\nif (name == null) {\nreturn name;\n}",
            "method_id": 1
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext:getCurrentName()Ljava/lang/String;",
            "method_body": "public final String getCurrentName() { return _currentName; }\npublic final String getCurrentName() { return _currentName; }",
            "method_id": 2
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator$Feature:collectDefaults()I",
            "method_body": "public static int collectDefaults()\nint flags = 0;\nfor (Feature f : values()) {\nif (f.enabledByDefault()) {\nreturn flags;\n}",
            "method_id": 3
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext:createChildObjectContext(II)Lcom/fasterxml/jackson/dataformat/xml/deser/XmlReadContext;",
            "method_body": "public final XmlReadContext createChildObjectContext(int lineNr, int colNr)\nXmlReadContext ctxt = _child;\nif (ctxt == null) {\n_child = ctxt = new XmlReadContext(this, TYPE_OBJECT, lineNr, colNr);\nreturn ctxt;\n}",
            "method_id": 4
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream:getLocalName()Ljava/lang/String;",
            "method_body": "public String getLocalName() { return _localName; }\npublic String getLocalName() { return _localName; }",
            "method_id": 5
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.XmlFactory:<init>()V",
            "method_body": "public XmlFactory() { this(null, null, null); }\npublic XmlFactory() { this(null, null, null); }",
            "method_id": 6
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.XmlFactory:<init>(Lcom/fasterxml/jackson/core/ObjectCodec;IILjavax/xml/stream/XMLInputFactory;Ljavax/xml/stream/XMLOutputFactory;Ljava/lang/String;)V",
            "method_body": "protected XmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures,\nsuper(oc);\n_xmlParserFeatures = xpFeatures;\n_xmlGeneratorFeatures = xgFeatures;\n_cfgNameForTextElement = nameForTextElem;\nif (xmlIn == null) {\nxmlIn = XMLInputFactory.newInstance();\nxmlIn.setProperty(XMLInputFactory.IS_SUPPORTING_EXTERNAL_ENTITIES, Boolean.FALSE);\nif (xmlOut == null) {\nxmlOut = XMLOutputFactory.newInstance();\n_initFactories(xmlIn, xmlOut);\n_xmlInputFactory = xmlIn;\n_xmlOutputFactory = xmlOut;\n}",
            "method_id": 7
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser$1:<clinit>()V",
            "method_body": "public JsonToken nextToken() throws IOException\n_binaryValue = null;\nif (_nextToken != null) {\nJsonToken t = _nextToken;\n_currToken = t;\n_nextToken = null;\nswitch (t) {\n_parsingContext = _parsingContext.createChildObjectContext(-1, -1);\nbreak;\nreturn t;\nint token = _xmlTokens.next();\nwhile (token == XmlTokenStream.XML_START_ELEMENT) {\nswitch (token) {\nif (_mayBeLeaf) {\n_parsingContext.setCurrentName(_xmlTokens.getLocalName());\nreturn (_currToken = JsonToken.FIELD_NAME);\n}",
            "method_id": 8
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream:getText()Ljava/lang/String;",
            "method_body": "public String getText() { return _textValue; }\npublic String getText() { return _textValue; }",
            "method_id": 9
        }
    ]
}