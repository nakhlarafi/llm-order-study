{
    "bug_id": 1,
    "test_id": 0,
    "test_name": "com.fasterxml.jackson.dataformat.xml.lists.NestedUnwrappedLists180Test.testNestedUnwrappedLists180",
    "test_body": "public void testNestedUnwrappedLists180() throws Exception\n{\n/*\nRecords recs = new Records();\nrecs.records.add(new Record());\nrecs.records.add(new Record());\nrecs.records.add(new Record());\nrecs.records.get(0).fields.add(new Field(\"a\"));\nrecs.records.get(2).fields.add(new Field(\"b\"));\n48: String xml = MAPPER.writerWithDefaultPrettyPrinter().writeValueAsString(recs);\n*/\n51: String xml =\n\"<Records>\\n\"\n// Important: it's the empty CDATA here that causes breakage -- empty element alone would be fine\n//+\"<records>\\n</records>\\n\"\n+\"<records></records>\\n\"\n+\"  <records>\\n\"\n+\"   <fields name='b'/>\\n\"\n+\"  </records>\\n\"\n+\"</Records>\\n\"\n;\n62: //System.out.println(\"XML: \"+xml);\n64: Records result = MAPPER.readValue(xml, Records.class);\nassertNotNull(result.records);\nassertEquals(2, result.records.size());\nassertNotNull(result.records.get(1));\nassertEquals(1, result.records.get(1).fields.size());\nassertEquals(\"b\", result.records.get(1).fields.get(0).name);\n71: // also, first one ought not be null should it? Ideally not...\nassertNotNull(result.records.get(0));\n}\n",
    "stack_trace": "junit.framework.AssertionFailedError\nat junit.framework.Assert.fail(Assert.java:55)\nat junit.framework.Assert.assertTrue(Assert.java:22)\nat junit.framework.Assert.assertNotNull(Assert.java:256)\nat junit.framework.Assert.assertNotNull(Assert.java:248)\nat junit.framework.TestCase.assertNotNull(TestCase.java:417)\nat com.fasterxml.jackson.dataformat.xml.lists.NestedUnwrappedLists180Test.testNestedUnwrappedLists180(NestedUnwrappedLists180Test.java:72)",
    "covered_methods": [
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator$Feature:enabledByDefault()Z",
            "method_body": "@Override public boolean enabledByDefault() { return _defaultState; }\n@Override public boolean enabledByDefault() { return _defaultState; }",
            "method_id": 60
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext:getParent()Lcom/fasterxml/jackson/dataformat/xml/deser/XmlReadContext;",
            "method_body": "public final XmlReadContext getParent() { return _parent; }\npublic final XmlReadContext getParent() { return _parent; }",
            "method_id": 61
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser:getText()Ljava/lang/String;",
            "method_body": "public String getText() throws IOException\nif (_currToken == null) {\nswitch (_currToken) {\nreturn _currText;\n}",
            "method_id": 62
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser:getParsingContext()Lcom/fasterxml/jackson/dataformat/xml/deser/XmlReadContext;",
            "method_body": "public XmlReadContext getParsingContext() {\nreturn _parsingContext;\n}",
            "method_id": 63
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream:next()I",
            "method_body": "public int next() throws IOException\nif (_repeatElement != 0) {\nreturn (_currentState = _handleRepeatElement());\nreturn _next();\n}",
            "method_id": 64
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.util.TypeUtil:isIndexedType(Lcom/fasterxml/jackson/databind/JavaType;)Z",
            "method_body": "public static boolean isIndexedType(JavaType type)\nif (type.isContainerType()) {\nClass<?> cls = type.getRawClass();\nif (cls == byte[].class || cls == char[].class) {\nif (Map.class.isAssignableFrom(cls)) {\nreturn true;\nreturn false;\n}",
            "method_id": 65
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser:addVirtualWrapping(Ljava/util/Set;)V",
            "method_body": "public void addVirtualWrapping(Set<String> namesToWrap)\nString name = _xmlTokens.getLocalName();\nif (name != null && namesToWrap.contains(name)) {\n_xmlTokens.repeatStartElement();\n_namesToWrap = namesToWrap;\n_parsingContext.setNamesToWrap(namesToWrap);\n}",
            "method_id": 66
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser:<init>(Lcom/fasterxml/jackson/core/io/IOContext;IILcom/fasterxml/jackson/core/ObjectCodec;Ljavax/xml/stream/XMLStreamReader;)V",
            "method_body": "public FromXmlParser(IOContext ctxt, int genericParserFeatures, int xmlFeatures,\nsuper(genericParserFeatures);\n_formatFeatures = xmlFeatures;\n_ioContext = ctxt;\n_objectCodec = codec;\n_parsingContext = XmlReadContext.createRootContext(-1, -1);\n_nextToken = JsonToken.START_OBJECT;\n_xmlTokens = new XmlTokenStream(xmlReader, ctxt.getSourceReference());\n}",
            "method_id": 67
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream:_initStartElement()I",
            "method_body": "private final int _initStartElement() throws XMLStreamException\nfinal String ns = _xmlReader.getNamespaceURI();\nfinal String localName = _xmlReader.getLocalName();\n_attributeCount = _xmlReader.getAttributeCount();\n_nextAttributeIndex = 0;\nif (_currentWrapper != null) {\nif (_currentWrapper.matchesWrapper(localName, ns)) {\n_currentWrapper = _currentWrapper.intermediateWrapper();\n_localName = localName;\n_namespaceURI = ns;\nreturn (_currentState = XML_START_ELEMENT);\n}",
            "method_id": 68
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext:convertToArray()V",
            "method_body": "protected void convertToArray() {\n_type = TYPE_ARRAY;\n}",
            "method_id": 69
        }
    ]
}