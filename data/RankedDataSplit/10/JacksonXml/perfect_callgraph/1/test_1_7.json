{
    "bug_id": 1,
    "test_id": 1,
    "test_name": "com.fasterxml.jackson.dataformat.xml.lists.NestedUnwrappedListsTest.testNestedWithEmpty",
    "test_body": "public void testNestedWithEmpty() throws Exception\n{\nfinal String XML =\n\"<ServiceDelivery>\\n\"\n+\"  <ResponseTimestamp>2012-09-12T09:28:17.213-04:00</ResponseTimestamp>\\n\"\n+\"  <VehicleMonitoringDelivery>\\n\"\n+\"  </VehicleMonitoringDelivery>\\n\"\n+\"</ServiceDelivery>\\n\"\n;\n96: ServiceDelivery svc = _xmlMapper.readValue(XML, ServiceDelivery.class);\nassertNotNull(svc);\nassertNotNull(svc.vehicleMonitoringDelivery);\n// 06-Jan-2015, tatu: Really should have one empty entry, not 0\nassertEquals(1, svc.vehicleMonitoringDelivery.size());\n}\n",
    "stack_trace": "junit.framework.AssertionFailedError: expected:<1> but was:<0>\nat junit.framework.Assert.fail(Assert.java:57)\nat junit.framework.Assert.failNotEquals(Assert.java:329)\nat junit.framework.Assert.assertEquals(Assert.java:78)\nat junit.framework.Assert.assertEquals(Assert.java:234)\nat junit.framework.Assert.assertEquals(Assert.java:241)\nat junit.framework.TestCase.assertEquals(TestCase.java:409)\nat com.fasterxml.jackson.dataformat.xml.lists.NestedUnwrappedListsTest.testNestedWithEmpty(NestedUnwrappedListsTest.java:100)",
    "covered_methods": [
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.util.AnnotationUtil:findIsAttributeAnnotation(Lcom/fasterxml/jackson/databind/AnnotationIntrospector;Lcom/fasterxml/jackson/databind/introspect/AnnotatedMember;)Ljava/lang/Boolean;",
            "method_body": "public static Boolean findIsAttributeAnnotation(AnnotationIntrospector ai,\nfor (AnnotationIntrospector intr : ai.allIntrospectors()) {\nif (intr instanceof XmlAnnotationIntrospector) {\nBoolean b = ((XmlAnnotationIntrospector) intr).isOutputAsAttribute(prop);\nif (b != null) {\n} else  if (intr instanceof JaxbAnnotationIntrospector) {\n}\nreturn null;\n}",
            "method_id": 70
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.util.AnnotationUtil:findIsTextAnnotation(Lcom/fasterxml/jackson/databind/AnnotationIntrospector;Lcom/fasterxml/jackson/databind/introspect/AnnotatedMember;)Ljava/lang/Boolean;",
            "method_body": "public static Boolean findIsTextAnnotation(AnnotationIntrospector ai,\nfor (AnnotationIntrospector intr : ai.allIntrospectors()) {\nif (intr instanceof XmlAnnotationIntrospector) {\nBoolean b = ((XmlAnnotationIntrospector) intr).isOutputAsText(prop);\nif (b != null) {\n} else  if (intr instanceof JaxbAnnotationIntrospector) {\n}\nreturn null;\n}",
            "method_id": 71
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.deser.WrapperHandlingDeserializer:<init>(Lcom/fasterxml/jackson/databind/deser/BeanDeserializerBase;)V",
            "method_body": "public WrapperHandlingDeserializer(BeanDeserializerBase delegate) {\nthis(delegate, null);\n}",
            "method_id": 72
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.deser.WrapperHandlingDeserializer:<init>(Lcom/fasterxml/jackson/databind/deser/BeanDeserializerBase;Ljava/util/Set;)V",
            "method_body": "public WrapperHandlingDeserializer(BeanDeserializerBase delegate, Set<String> namesToWrap)\nsuper(delegate);\n_namesToWrap = namesToWrap;\n_type = delegate.getValueType();\n}",
            "method_id": 73
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.deser.WrapperHandlingDeserializer:createContextual(Lcom/fasterxml/jackson/databind/DeserializationContext;Lcom/fasterxml/jackson/databind/BeanProperty;)Lcom/fasterxml/jackson/databind/JsonDeserializer;",
            "method_body": "public JsonDeserializer<?> createContextual(DeserializationContext ctxt,\nJsonDeserializer<?> del = ctxt.handleSecondaryContextualization(_delegatee, property, _type);\nBeanDeserializerBase newDelegatee = _verifyDeserType(del);\nIterator<SettableBeanProperty> it = newDelegatee.properties();\nHashSet<String> unwrappedNames = null;\nwhile (it.hasNext()) {\nSettableBeanProperty prop = it.next();\nJavaType type = prop.getType();\nif (!TypeUtil.isIndexedType(type)) {\ncontinue;\nPropertyName wrapperName = prop.getWrapperName();\nif (wrapperName != null && wrapperName != PropertyName.NO_NAME) {\nif (unwrappedNames == null) {\nunwrappedNames = new HashSet<String>();\nunwrappedNames.add(prop.getName());\n}\nif (unwrappedNames == null) {\nreturn newDelegatee;\nreturn new WrapperHandlingDeserializer(newDelegatee, unwrappedNames);\n}",
            "method_id": 74
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.deser.WrapperHandlingDeserializer:deserialize(Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;)Ljava/lang/Object;",
            "method_body": "public Object deserialize(JsonParser jp, DeserializationContext ctxt) throws IOException\n_configureParser(jp);\nreturn _delegatee.deserialize(jp,  ctxt);\n}",
            "method_id": 75
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.deser.WrapperHandlingDeserializer:_configureParser(Lcom/fasterxml/jackson/core/JsonParser;)V",
            "method_body": "protected final void _configureParser(JsonParser jp) throws IOException\nif (jp instanceof FromXmlParser) {\n((FromXmlParser) jp).addVirtualWrapping(_namesToWrap);\n}",
            "method_id": 76
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.deser.WrapperHandlingDeserializer:_verifyDeserType(Lcom/fasterxml/jackson/databind/JsonDeserializer;)Lcom/fasterxml/jackson/databind/deser/BeanDeserializerBase;",
            "method_body": "protected BeanDeserializerBase _verifyDeserType(JsonDeserializer<?> deser)\nif (!(deser instanceof BeanDeserializerBase)) {\nreturn (BeanDeserializerBase) deser;\n}",
            "method_id": 77
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.util.TypeUtil:isIndexedType(Lcom/fasterxml/jackson/databind/JavaType;)Z",
            "method_body": "public static boolean isIndexedType(JavaType type)\nif (type.isContainerType()) {\nClass<?> cls = type.getRawClass();\nif (cls == byte[].class || cls == char[].class) {\nif (Map.class.isAssignableFrom(cls)) {\nreturn true;\nreturn false;\n}",
            "method_id": 78
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.deser.ElementWrapper:<init>(Lcom/fasterxml/jackson/dataformat/xml/deser/ElementWrapper;Ljava/lang/String;Ljava/lang/String;)V",
            "method_body": "private ElementWrapper(ElementWrapper parent,\n{\n_parent = parent;\n_wrapperName = wrapperLocalName;\n_wrapperNamespace = (wrapperNamespace == null) ? \"\" : wrapperNamespace;\n}",
            "method_id": 79
        }
    ]
}