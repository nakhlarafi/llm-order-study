{
    "bug_id": 6,
    "test_id": 3,
    "test_name": "org.joda.time.chrono.TestGJDate.test_plusYears_positiveToNegative_crossCutover",
    "test_body": "public void test_plusYears_positiveToNegative_crossCutover() {\nLocalDate date = new LocalDate(2003, 6, 30, GJ_CHRONOLOGY);\nLocalDate expected = new LocalDate(-2, 6, 30, GJ_CHRONOLOGY);\nassertEquals(expected, date.plusYears(-2004));\n}\n",
    "stack_trace": "junit.framework.AssertionFailedError: expected:<-0002-06-30> but was:<-0001-06-30>\nat junit.framework.Assert.fail(Assert.java:57)\nat junit.framework.Assert.failNotEquals(Assert.java:329)\nat junit.framework.Assert.assertEquals(Assert.java:78)\nat junit.framework.Assert.assertEquals(Assert.java:86)\nat junit.framework.TestCase.assertEquals(TestCase.java:253)\nat org.joda.time.chrono.TestGJDate.test_plusYears_positiveToNegative_crossCutover(TestGJDate.java:105)",
    "covered_methods": [
        {
            "method_signature": "org.joda.time.format.DateTimeFormatterBuilder$Composite:estimatePrintedLength()I",
            "method_body": "public int estimatePrintedLength() {\nreturn iPrintedLengthEstimate;\n}",
            "method_id": 80
        },
        {
            "method_signature": "org.joda.time.DateTimeFieldType:year()Lorg/joda/time/DateTimeFieldType;",
            "method_body": "public static DateTimeFieldType year() {\nreturn YEAR_TYPE;\n}",
            "method_id": 81
        },
        {
            "method_signature": "org.joda.time.chrono.AssembledChronology:years()Lorg/joda/time/DurationField;",
            "method_body": "public final DurationField years() {\nreturn iYears;\n}",
            "method_id": 82
        },
        {
            "method_signature": "org.joda.time.DurationFieldType$StandardDurationFieldType:hashCode()I",
            "method_body": "public int hashCode() {\nreturn (1 << iOrdinal);\n}",
            "method_id": 83
        },
        {
            "method_signature": "org.joda.time.chrono.GJChronology:equals(Ljava/lang/Object;)Z",
            "method_body": "public boolean equals(Object obj) {\nif (this == obj) {\nreturn true;\n}",
            "method_id": 84
        },
        {
            "method_signature": "org.joda.time.chrono.BasicYearDateTimeField:add(JI)J",
            "method_body": "public long add(long instant, int years) {\nif (years == 0) {\nint thisYear = get(instant);\nint newYear = FieldUtils.safeAdd(thisYear, years);\nreturn set(instant, newYear);\n}",
            "method_id": 85
        },
        {
            "method_signature": "org.joda.time.chrono.AssembledChronology:dayOfMonth()Lorg/joda/time/DateTimeField;",
            "method_body": "public final DateTimeField dayOfMonth() {\nreturn iDayOfMonth;\n}",
            "method_id": 86
        },
        {
            "method_signature": "org.joda.time.chrono.BasicChronology:getMaxMonth(I)I",
            "method_body": "abstract long getYearDifference(long minuendInstant, long subtrahendInstant);\nreturn getMaxMonth();\n}",
            "method_id": 87
        },
        {
            "method_signature": "org.joda.time.field.DelegatedDateTimeField:get(J)I",
            "method_body": "public int get(long instant) {\nreturn iField.get(instant);\n}",
            "method_id": 88
        },
        {
            "method_signature": "org.joda.time.chrono.BasicYearDateTimeField:get(J)I",
            "method_body": "public int get(long instant) {\nreturn iChronology.getYear(instant);\n}",
            "method_id": 89
        }
    ]
}