{
    "bug_id": 1,
    "test_id": 2,
    "test_name": "com.fasterxml.jackson.dataformat.xml.lists.NestedUnwrappedListsTest.testNestedWithEmpty2",
    "test_body": "public void testNestedWithEmpty2() throws Exception\n{\nfinal String XML =\n\"<ServiceDelivery>\\n\"\n+\"  <ResponseTimestamp>2012-09-12T09:28:17.213-04:00</ResponseTimestamp>\\n\"\n+\"  <VehicleMonitoringDelivery>\\n\"\n+\"    <VehicleActivity>\\n\"\n+\"    </VehicleActivity>\\n\"\n+\"  </VehicleMonitoringDelivery>\\n\"\n+\"</ServiceDelivery>\\n\"\n;\n115: ServiceDelivery svc = _xmlMapper.readValue(XML, ServiceDelivery.class);\nassertNotNull(svc);\nassertNotNull(svc.vehicleMonitoringDelivery);\nassertEquals(1, svc.vehicleMonitoringDelivery.size());\nVehicleMonitoringDelivery del = svc.vehicleMonitoringDelivery.get(0);\nassertNotNull(del.vehicleActivity);\n// 06-Jan-2015, tatu: Really should have one empty entry, not 0\nassertEquals(1, del.vehicleActivity.size());\n}\n",
    "stack_trace": "junit.framework.AssertionFailedError: expected:<1> but was:<0>\nat junit.framework.Assert.fail(Assert.java:57)\nat junit.framework.Assert.failNotEquals(Assert.java:329)\nat junit.framework.Assert.assertEquals(Assert.java:78)\nat junit.framework.Assert.assertEquals(Assert.java:234)\nat junit.framework.Assert.assertEquals(Assert.java:241)\nat junit.framework.TestCase.assertEquals(TestCase.java:409)\nat com.fasterxml.jackson.dataformat.xml.lists.NestedUnwrappedListsTest.testNestedWithEmpty2(NestedUnwrappedListsTest.java:122)",
    "covered_methods": [
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser$Feature:collectDefaults()I",
            "method_body": "public static int collectDefaults()\nint flags = 0;\nfor (Feature f : values()) {\nreturn flags;\n}",
            "method_id": 40
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.deser.WrapperHandlingDeserializer:_verifyDeserType(Lcom/fasterxml/jackson/databind/JsonDeserializer;)Lcom/fasterxml/jackson/databind/deser/BeanDeserializerBase;",
            "method_body": "protected BeanDeserializerBase _verifyDeserType(JsonDeserializer<?> deser)\nif (!(deser instanceof BeanDeserializerBase)) {\nreturn (BeanDeserializerBase) deser;\n}",
            "method_id": 41
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator$Feature:enabledByDefault()Z",
            "method_body": "@Override public boolean enabledByDefault() { return _defaultState; }\n@Override public boolean enabledByDefault() { return _defaultState; }",
            "method_id": 42
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.deser.ElementWrapper:getWrapperNamespace()Ljava/lang/String;",
            "method_body": "public String getWrapperNamespace() { return _wrapperNamespace; }\npublic String getWrapperNamespace() { return _wrapperNamespace; }",
            "method_id": 43
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.JacksonXmlAnnotationIntrospector:findWrapperName(Lcom/fasterxml/jackson/databind/introspect/Annotated;)Lcom/fasterxml/jackson/databind/PropertyName;",
            "method_body": "public PropertyName findWrapperName(Annotated ann)\nJacksonXmlElementWrapper w = ann.getAnnotation(JacksonXmlElementWrapper.class);\nif (w != null) {\nif (!w.useWrapping()) {\nreturn PropertyName.NO_NAME;\nif (_cfgDefaultUseWrapper) {\nreturn PropertyName.USE_DEFAULT;\nreturn null;\n}",
            "method_id": 44
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.JacksonXmlAnnotationIntrospector:_findXmlName(Lcom/fasterxml/jackson/databind/introspect/Annotated;)Lcom/fasterxml/jackson/databind/PropertyName;",
            "method_body": "protected PropertyName _findXmlName(Annotated a)\nJacksonXmlProperty pann = a.getAnnotation(JacksonXmlProperty.class);\nif (pann != null) {\nreturn PropertyName.construct(pann.localName(), pann.namespace());\nreturn null;\n}",
            "method_id": 45
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.deser.XmlBeanDeserializerModifier:_findSoleTextProp(Lcom/fasterxml/jackson/databind/DeserializationConfig;Ljava/util/Iterator;)Lcom/fasterxml/jackson/databind/deser/SettableBeanProperty;",
            "method_body": "private SettableBeanProperty _findSoleTextProp(DeserializationConfig config,\nfinal AnnotationIntrospector ai = config.getAnnotationIntrospector();\nSettableBeanProperty textProp = null;\nwhile (propIt.hasNext()) {\nSettableBeanProperty prop = propIt.next();\nAnnotatedMember m = prop.getMember();\nif (m != null) {\nPropertyName n = prop.getFullName();\nif (_cfgNameForTextValue.equals(n.getSimpleName())) {\nBoolean b = AnnotationUtil.findIsAttributeAnnotation(ai, m);\nif (b != null && b.booleanValue()) {\nreturn null;\n}",
            "method_id": 46
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.JacksonXmlAnnotationIntrospector:findNameForDeserialization(Lcom/fasterxml/jackson/databind/introspect/Annotated;)Lcom/fasterxml/jackson/databind/PropertyName;",
            "method_body": "public PropertyName findNameForDeserialization(Annotated a)\nPropertyName name = _findXmlName(a);\nif (name == null) {\nname = super.findNameForDeserialization(a);\nif (name == null) {\nif (a.hasAnnotation(JacksonXmlText.class)) {\nreturn name;\n}",
            "method_id": 47
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.JacksonXmlAnnotationIntrospector:setDefaultUseWrapper(Z)V",
            "method_body": "public void setDefaultUseWrapper(boolean b) {\n_cfgDefaultUseWrapper = b;\n}",
            "method_id": 48
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.deser.ElementWrapper:intermediateWrapper()Lcom/fasterxml/jackson/dataformat/xml/deser/ElementWrapper;",
            "method_body": "public ElementWrapper intermediateWrapper() {\nreturn new ElementWrapper(this, null, null);\n}",
            "method_id": 49
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser:getText()Ljava/lang/String;",
            "method_body": "public String getText() throws IOException\nif (_currToken == null) {\nswitch (_currToken) {\nreturn _currText;\n}",
            "method_id": 50
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream:getText()Ljava/lang/String;",
            "method_body": "public String getText() { return _textValue; }\npublic String getText() { return _textValue; }",
            "method_id": 51
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.XmlFactory:<init>(Lcom/fasterxml/jackson/core/ObjectCodec;Ljavax/xml/stream/XMLInputFactory;Ljavax/xml/stream/XMLOutputFactory;)V",
            "method_body": "public XmlFactory(ObjectCodec oc, XMLInputFactory xmlIn, XMLOutputFactory xmlOut)\nthis(oc, DEFAULT_XML_PARSER_FEATURE_FLAGS, DEFAULT_XML_GENERATOR_FEATURE_FLAGS,\n}",
            "method_id": 52
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext:<init>(Lcom/fasterxml/jackson/dataformat/xml/deser/XmlReadContext;III)V",
            "method_body": "public XmlReadContext(XmlReadContext parent, int type, int lineNr, int colNr)\nsuper();\n_type = type;\n_parent = parent;\n_lineNr = lineNr;\n_columnNr = colNr;\n_index = -1;\n}",
            "method_id": 53
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter$FixedSpaceIndenter:<init>()V",
            "method_body": "public FixedSpaceIndenter() { }\npublic FixedSpaceIndenter() { }",
            "method_id": 54
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.deser.ElementWrapper:getParent()Lcom/fasterxml/jackson/dataformat/xml/deser/ElementWrapper;",
            "method_body": "public ElementWrapper getParent() { return _parent; }\npublic ElementWrapper getParent() { return _parent; }",
            "method_id": 55
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext:createRootContext(II)Lcom/fasterxml/jackson/dataformat/xml/deser/XmlReadContext;",
            "method_body": "public static XmlReadContext createRootContext(int lineNr, int colNr) {\nreturn new XmlReadContext(null, TYPE_ROOT, lineNr, colNr);\n}",
            "method_id": 56
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext:convertToArray()V",
            "method_body": "protected void convertToArray() {\n_type = TYPE_ARRAY;\n}",
            "method_id": 57
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.JacksonXmlModule:_constructIntrospector()Lcom/fasterxml/jackson/databind/AnnotationIntrospector;",
            "method_body": "protected AnnotationIntrospector _constructIntrospector() {\nreturn new JacksonXmlAnnotationIntrospector(_cfgDefaultUseWrapper);\n}",
            "method_id": 58
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.deser.WrapperHandlingDeserializer:<init>(Lcom/fasterxml/jackson/databind/deser/BeanDeserializerBase;Ljava/util/Set;)V",
            "method_body": "public WrapperHandlingDeserializer(BeanDeserializerBase delegate, Set<String> namesToWrap)\nsuper(delegate);\n_namesToWrap = namesToWrap;\n_type = delegate.getValueType();\n}",
            "method_id": 59
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream:_initStartElement()I",
            "method_body": "private final int _initStartElement() throws XMLStreamException\nfinal String ns = _xmlReader.getNamespaceURI();\nfinal String localName = _xmlReader.getLocalName();\n_attributeCount = _xmlReader.getAttributeCount();\n_nextAttributeIndex = 0;\nif (_currentWrapper != null) {\nif (_currentWrapper.matchesWrapper(localName, ns)) {\n_currentWrapper = _currentWrapper.intermediateWrapper();\n_localName = localName;\n_namespaceURI = ns;\nreturn (_currentState = XML_START_ELEMENT);\n}",
            "method_id": 60
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream:_collectUntilTag()Ljava/lang/String;",
            "method_body": "private final String _collectUntilTag() throws XMLStreamException\nString text = null;\nswitch (_xmlReader.next()) {\nreturn text;\nif (text == null) {\ntext = _xmlReader.getText();\n}",
            "method_id": 61
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator$Feature:<clinit>()V",
            "method_body": "protected final static String DEFAULT_UNKNOWN_ELEMENT = \"unknown\";\npublic enum Feature implements FormatFeature\nWRITE_XML_DECLARATION(false),\nWRITE_XML_1_1(false)\nint flags = 0;\nfor (Feature f : values()) {\nif (f.enabledByDefault()) {\nreturn flags;\nprivate Feature(boolean defaultState) {\n_defaultState = defaultState;\n_mask = (1 << ordinal());\n}\n@Override public boolean enabledByDefault() { return _defaultState; }\n}",
            "method_id": 62
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.deser.WrapperHandlingDeserializer:createContextual(Lcom/fasterxml/jackson/databind/DeserializationContext;Lcom/fasterxml/jackson/databind/BeanProperty;)Lcom/fasterxml/jackson/databind/JsonDeserializer;",
            "method_body": "public JsonDeserializer<?> createContextual(DeserializationContext ctxt,\nJsonDeserializer<?> del = ctxt.handleSecondaryContextualization(_delegatee, property, _type);\nBeanDeserializerBase newDelegatee = _verifyDeserType(del);\nIterator<SettableBeanProperty> it = newDelegatee.properties();\nHashSet<String> unwrappedNames = null;\nwhile (it.hasNext()) {\nSettableBeanProperty prop = it.next();\nJavaType type = prop.getType();\nif (!TypeUtil.isIndexedType(type)) {\ncontinue;\nPropertyName wrapperName = prop.getWrapperName();\nif (wrapperName != null && wrapperName != PropertyName.NO_NAME) {\nif (unwrappedNames == null) {\nunwrappedNames = new HashSet<String>();\nunwrappedNames.add(prop.getName());\n}\nif (unwrappedNames == null) {\nreturn newDelegatee;\nreturn new WrapperHandlingDeserializer(newDelegatee, unwrappedNames);\n}",
            "method_id": 63
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.XmlMapper:<init>(Lcom/fasterxml/jackson/dataformat/xml/XmlFactory;Lcom/fasterxml/jackson/dataformat/xml/JacksonXmlModule;)V",
            "method_body": "public XmlMapper(XmlFactory xmlFactory, JacksonXmlModule module)\nsuper(xmlFactory, new XmlSerializerProvider(new XmlRootNameLookup()), null);\n_xmlModule = module;\nif (module != null) {\nregisterModule(module);\n_serializationConfig = _serializationConfig.withDefaultPrettyPrinter(DEFAULT_XML_PRETTY_PRINTER);\n}",
            "method_id": 64
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.XmlFactory:_initializeXmlReader(Ljavax/xml/stream/XMLStreamReader;)Ljavax/xml/stream/XMLStreamReader;",
            "method_body": "protected final XMLStreamReader _initializeXmlReader(XMLStreamReader sr) throws IOException, XMLStreamException\nwhile (sr.next() != XMLStreamConstants.START_ELEMENT) {\nreturn sr;\n}",
            "method_id": 65
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream:<init>(Ljavax/xml/stream/XMLStreamReader;Ljava/lang/Object;)V",
            "method_body": "public XmlTokenStream(XMLStreamReader xmlReader, Object sourceRef)\n{\n_sourceReference = sourceRef;\nif (xmlReader.getEventType() != XMLStreamConstants.START_ELEMENT) {\n_xmlReader = Stax2ReaderAdapter.wrapIfNecessary(xmlReader);\n_currentState = XML_START_ELEMENT;\n_localName = _xmlReader.getLocalName();\n_namespaceURI = _xmlReader.getNamespaceURI();\n_attributeCount = _xmlReader.getAttributeCount();\n}",
            "method_id": 66
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream:closeCompletely()V",
            "method_body": "public void closeCompletely() throws IOException\n_xmlReader.closeCompletely();\n}\n}",
            "method_id": 67
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream:skipEndElement()V",
            "method_body": "public void skipEndElement() throws IOException\nint type = next();\nif (type != XML_END_ELEMENT) {\n}",
            "method_id": 68
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser:getCurrentName()Ljava/lang/String;",
            "method_body": "public String getCurrentName() throws IOException\nif (_currToken == JsonToken.START_OBJECT || _currToken == JsonToken.START_ARRAY) {\nname = _parsingContext.getCurrentName();\nif (name == null) {\nreturn name;\n}",
            "method_id": 69
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser:<init>(Lcom/fasterxml/jackson/core/io/IOContext;IILcom/fasterxml/jackson/core/ObjectCodec;Ljavax/xml/stream/XMLStreamReader;)V",
            "method_body": "public FromXmlParser(IOContext ctxt, int genericParserFeatures, int xmlFeatures,\nsuper(genericParserFeatures);\n_formatFeatures = xmlFeatures;\n_ioContext = ctxt;\n_objectCodec = codec;\n_parsingContext = XmlReadContext.createRootContext(-1, -1);\n_nextToken = JsonToken.START_OBJECT;\n_xmlTokens = new XmlTokenStream(xmlReader, ctxt.getSourceReference());\n}",
            "method_id": 70
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.deser.ElementWrapper:matchingWrapper(Lcom/fasterxml/jackson/dataformat/xml/deser/ElementWrapper;Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/dataformat/xml/deser/ElementWrapper;",
            "method_body": "public static ElementWrapper matchingWrapper(ElementWrapper parent,\nreturn new ElementWrapper(parent, wrapperLocalName, wrapperNamespace);\n}",
            "method_id": 71
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter$Lf2SpacesIndenter:<clinit>()V",
            "method_body": "final static int SPACE_COUNT = 64;\nfinal static char[] SPACES = new char[SPACE_COUNT];\nArrays.fill(SPACES, ' ');\n}",
            "method_id": 72
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext:createChildObjectContext(II)Lcom/fasterxml/jackson/dataformat/xml/deser/XmlReadContext;",
            "method_body": "public final XmlReadContext createChildObjectContext(int lineNr, int colNr)\nXmlReadContext ctxt = _child;\nif (ctxt == null) {\n_child = ctxt = new XmlReadContext(this, TYPE_OBJECT, lineNr, colNr);\nreturn ctxt;\n}",
            "method_id": 73
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.util.TypeUtil:isIndexedType(Lcom/fasterxml/jackson/databind/JavaType;)Z",
            "method_body": "public static boolean isIndexedType(JavaType type)\nif (type.isContainerType()) {\nClass<?> cls = type.getRawClass();\nif (cls == byte[].class || cls == char[].class) {\nif (Map.class.isAssignableFrom(cls)) {\nreturn true;\nreturn false;\n}",
            "method_id": 74
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext:getNamesToWrap()Ljava/util/Set;",
            "method_body": "public Set<String> getNamesToWrap() {\nreturn _namesToWrap;\n}",
            "method_id": 75
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.deser.WrapperHandlingDeserializer:_configureParser(Lcom/fasterxml/jackson/core/JsonParser;)V",
            "method_body": "protected final void _configureParser(JsonParser jp) throws IOException\nif (jp instanceof FromXmlParser) {\n((FromXmlParser) jp).addVirtualWrapping(_namesToWrap);\n}",
            "method_id": 76
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext:setNamesToWrap(Ljava/util/Set;)V",
            "method_body": "public void setNamesToWrap(Set<String> namesToWrap) {\n_namesToWrap = namesToWrap;\n}",
            "method_id": 77
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.JacksonXmlAnnotationIntrospector:isOutputAsText(Lcom/fasterxml/jackson/databind/introspect/Annotated;)Ljava/lang/Boolean;",
            "method_body": "public Boolean isOutputAsText(Annotated ann)\nJacksonXmlText prop = ann.getAnnotation(JacksonXmlText.class);\nif (prop != null) {\nreturn null;\n}",
            "method_id": 78
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream:next()I",
            "method_body": "public int next() throws IOException\nif (_repeatElement != 0) {\nreturn (_currentState = _handleRepeatElement());\nreturn _next();\n}",
            "method_id": 79
        }
    ]
}