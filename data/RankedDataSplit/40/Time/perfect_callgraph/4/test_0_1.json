{
    "bug_id": 4,
    "test_id": 0,
    "test_name": "org.joda.time.TestPartial_Basics.testWith3",
    "test_body": "public void testWith3() {\nPartial test = createHourMinPartial();\ntry {\ntest.with(DateTimeFieldType.clockhourOfDay(), 6);\nfail();\n} catch (IllegalArgumentException ex) {}",
    "stack_trace": "junit.framework.AssertionFailedError\nat junit.framework.Assert.fail(Assert.java:55)\nat junit.framework.Assert.fail(Assert.java:64)\nat junit.framework.TestCase.fail(TestCase.java:235)\nat org.joda.time.TestPartial_Basics.testWith3(TestPartial_Basics.java:364)",
    "covered_methods": [
        {
            "method_signature": "org.joda.time.field.ZeroIsMaxDateTimeField:getMinimumValue()I",
            "method_body": "public int getMinimumValue() {\nreturn 1;\n}",
            "method_id": 40
        },
        {
            "method_signature": "org.joda.time.DateTimeFieldType$StandardDateTimeFieldType:getRangeDurationType()Lorg/joda/time/DurationFieldType;",
            "method_body": "public DurationFieldType getRangeDurationType() {\nreturn iRangeType;\n}",
            "method_id": 41
        },
        {
            "method_signature": "org.joda.time.DateTimeFieldType$StandardDateTimeFieldType:getDurationType()Lorg/joda/time/DurationFieldType;",
            "method_body": "public DurationFieldType getDurationType() {\nreturn iUnitType;\n}",
            "method_id": 42
        },
        {
            "method_signature": "org.joda.time.chrono.AssembledChronology:hours()Lorg/joda/time/DurationField;",
            "method_body": "public final DurationField hours() {\nreturn iHours;\n}",
            "method_id": 43
        },
        {
            "method_signature": "org.joda.time.field.PreciseDateTimeField:getMaximumValue()I",
            "method_body": "public int getMaximumValue() {\nreturn iRange - 1;\n}",
            "method_id": 44
        },
        {
            "method_signature": "org.joda.time.Partial:getChronology()Lorg/joda/time/Chronology;",
            "method_body": "public Chronology getChronology() {\nreturn iChronology;\n}",
            "method_id": 45
        }
    ]
}