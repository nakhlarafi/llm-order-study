{
    "bug_id": 3,
    "test_id": 8,
    "test_name": "org.mockitousage.matchers.CapturingArgumentsTest.captures_correctly_when_captor_used_on_pure_vararg_method",
    "test_body": "public void captures_correctly_when_captor_used_on_pure_vararg_method() throws Exception {\n// given\nArgumentCaptor<String> argumentCaptor = ArgumentCaptor.forClass(String.class);\n313: // when\nmock.varargs(42, \"capturedValue\");\n316: // then\nverify(mock).varargs(eq(42), argumentCaptor.capture());\nAssertions.assertThat(argumentCaptor.getValue()).contains(\"capturedValue\");",
    "stack_trace": "java.lang.ArrayIndexOutOfBoundsException: 1\nat org.mockito.internal.invocation.InvocationMatcher.captureArgumentsFrom(InvocationMatcher.java:130)\nat org.mockito.internal.invocation.InvocationMarker.markVerified(InvocationMarker.java:22)\nat org.mockito.internal.invocation.InvocationMarker.markVerified(InvocationMarker.java:16)\nat org.mockito.internal.verification.checkers.NumberOfInvocationsChecker.check(NumberOfInvocationsChecker.java:48)\nat org.mockito.internal.verification.Times.verify(Times.java:39)\nat org.mockito.internal.verification.MockAwareVerificationMode.verify(MockAwareVerificationMode.java:21)\nat org.mockito.internal.handler.MockHandlerImpl.handle(MockHandlerImpl.java:76)\nat org.mockito.internal.handler.NullResultGuardian.handle(NullResultGuardian.java:29)\nat org.mockito.internal.handler.InvocationNotifierHandler.handle(InvocationNotifierHandler.java:37)\nat org.mockito.internal.creation.bytebuddy.MockMethodInterceptor.doIntercept(MockMethodInterceptor.java:82)\nat org.mockito.internal.creation.bytebuddy.MockMethodInterceptor.interceptAbstract(MockMethodInterceptor.java:70)\nat org.mockitousage.IMethods$MockitoMock$263271281.varargs(Unknown Source)\nat org.mockitousage.matchers.CapturingArgumentsTest.captures_correctly_when_captor_used_on_pure_vararg_method(CapturingArgumentsTest.java:317)",
    "covered_methods": [
        {
            "method_signature": "org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet$1:hasNext()Z",
            "method_body": "public Iterator<Object> iterator() {\nreturn new Iterator<Object>() {\nprivate final Iterator<HashCodeAndEqualsMockWrapper> iterator = backingHashSet.iterator();\nreturn iterator.hasNext();\nreturn iterator.next().get();\n}",
            "method_id": 200
        },
        {
            "method_signature": "org.mockito.internal.configuration.injection.MockInjection$OngoingMockInjection:<init>(Ljava/util/Set;Ljava/lang/Object;)V",
            "method_body": "private OngoingMockInjection(Set<Field> fields, Object fieldOwner) {\nthis.fieldOwner = checkNotNull(fieldOwner, \"fieldOwner\");\nthis.fields.addAll(checkItemsNotNull(fields, \"fields\"));\n}",
            "method_id": 201
        },
        {
            "method_signature": "org.mockito.internal.configuration.injection.MockInjectionStrategy:nop()Lorg/mockito/internal/configuration/injection/MockInjectionStrategy;",
            "method_body": "public static final MockInjectionStrategy nop() {\nreturn new MockInjectionStrategy() {\n}",
            "method_id": 202
        },
        {
            "method_signature": "org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet:of([Ljava/lang/Object;)Lorg/mockito/internal/util/collections/HashCodeAndEqualsSafeSet;",
            "method_body": "public static HashCodeAndEqualsSafeSet of(Object... mocks) {\nreturn of(Arrays.asList(mocks));\n}",
            "method_id": 203
        },
        {
            "method_signature": "org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet:of(Ljava/lang/Iterable;)Lorg/mockito/internal/util/collections/HashCodeAndEqualsSafeSet;",
            "method_body": "public static HashCodeAndEqualsSafeSet of(Iterable<Object> objects) {\nHashCodeAndEqualsSafeSet hashCodeAndEqualsSafeSet = new HashCodeAndEqualsSafeSet();\nif (objects != null) {\nfor (Object mock : objects) {\nreturn hashCodeAndEqualsSafeSet;\n}",
            "method_id": 204
        },
        {
            "method_signature": "org.mockito.internal.progress.ThreadSafeMockingProgress:validateState()V",
            "method_body": "public void validateState() {\nthreadSafely().validateState();\n}",
            "method_id": 205
        },
        {
            "method_signature": "org.mockito.internal.progress.MockingProgressImpl:validateState()V",
            "method_body": "public void validateState() {\nvalidateMostStuff();\nif (stubbingInProgress != null) {\n}",
            "method_id": 206
        },
        {
            "method_signature": "org.mockito.internal.util.Checks:checkNotNull(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;",
            "method_body": "public static <T> T checkNotNull(T value, String checkedValue) {\nif(value == null) {\nreturn value;\n}",
            "method_id": 207
        },
        {
            "method_signature": "org.mockito.internal.configuration.GlobalConfiguration:validate()V",
            "method_body": "public static void validate() {\nnew GlobalConfiguration();\n}",
            "method_id": 208
        },
        {
            "method_signature": "org.mockito.internal.progress.ThreadSafeMockingProgress:threadSafely()Lorg/mockito/internal/progress/MockingProgress;",
            "method_body": "static MockingProgress threadSafely() {\nif (mockingProgress.get() == null) {\nreturn mockingProgress.get();\n}",
            "method_id": 209
        },
        {
            "method_signature": "org.mockito.internal.progress.MockingProgressImpl:validateMostStuff()V",
            "method_body": "private void validateMostStuff() {\nGlobalConfiguration.validate();\nif (verificationMode != null) {\ngetArgumentMatcherStorage().validateState();\n}",
            "method_id": 210
        },
        {
            "method_signature": "org.mockito.internal.progress.MockingProgressImpl:getArgumentMatcherStorage()Lorg/mockito/internal/progress/ArgumentMatcherStorage;",
            "method_body": "public ArgumentMatcherStorage getArgumentMatcherStorage() {\nreturn argumentMatcherStorage;\n}",
            "method_id": 211
        },
        {
            "method_signature": "org.mockito.internal.progress.ArgumentMatcherStorageImpl:validateState()V",
            "method_body": "public void validateState() {\nif (!matcherStack.isEmpty()) {\n}",
            "method_id": 212
        },
        {
            "method_signature": "org.mockito.internal.configuration.GlobalConfiguration:<init>()V",
            "method_body": "public GlobalConfiguration() {\nif (GLOBAL_CONFIGURATION.get() == null) {\n}",
            "method_id": 213
        },
        {
            "method_signature": "org.mockito.internal.util.Primitives:defaultValueForPrimitiveOrWrapper(Ljava/lang/Class;)Ljava/lang/Object;",
            "method_body": "public static <T> T defaultValueForPrimitiveOrWrapper(Class<T> primitiveOrWrapperType) {\nreturn (T) PRIMITIVE_OR_WRAPPER_DEFAULT_VALUES.get(primitiveOrWrapperType);\n}",
            "method_id": 214
        },
        {
            "method_signature": "org.mockito.Matchers:eq(I)I",
            "method_body": "public static int eq(int value) {\nreturn reportMatcher(new Equals(value)).returnZero();\n}",
            "method_id": 215
        },
        {
            "method_signature": "org.mockito.internal.progress.HandyReturnValues:returnZero()B",
            "method_body": "public byte returnZero() {\nreturn 0;\n}",
            "method_id": 216
        },
        {
            "method_signature": "org.mockito.internal.matchers.Equals:matches(Ljava/lang/Object;)Z",
            "method_body": "public boolean matches(Object actual) {\nreturn Equality.areEqual(this.wanted, actual);\n}",
            "method_id": 217
        },
        {
            "method_signature": "org.mockito.internal.matchers.Equality:areEqual(Ljava/lang/Object;Ljava/lang/Object;)Z",
            "method_body": "public static boolean areEqual(Object o1, Object o2) {\nif (o1 == o2 ) {\nreturn true;\n}",
            "method_id": 218
        },
        {
            "method_signature": "org.mockito.internal.util.Primitives:primitiveTypeOf(Ljava/lang/Class;)Ljava/lang/Class;",
            "method_body": "public static <T> Class<T> primitiveTypeOf(Class<T> clazz) {\nif (clazz.isPrimitive()) {\nreturn clazz;\nreturn (Class<T>) PRIMITIVE_TYPES.get(clazz);\n}",
            "method_id": 219
        },
        {
            "method_signature": "org.mockito.internal.stubbing.answers.MethodInfo:isValidReturnType(Ljava/lang/Class;)Z",
            "method_body": "public boolean isValidReturnType(Class clazz) {\nif (method.getReturnType().isPrimitive() || clazz.isPrimitive()) {\nreturn Primitives.primitiveTypeOf(clazz) == Primitives.primitiveTypeOf(method.getReturnType());\n}",
            "method_id": 220
        },
        {
            "method_signature": "org.mockito.internal.configuration.injection.MockInjectionStrategy$1:<init>()V",
            "method_body": "public static final MockInjectionStrategy nop() {\nreturn new MockInjectionStrategy() {\n}",
            "method_id": 221
        },
        {
            "method_signature": "org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet$1:<init>(Lorg/mockito/internal/util/collections/HashCodeAndEqualsSafeSet;)V",
            "method_body": "public Iterator<Object> iterator() {\nreturn new Iterator<Object>() {\nprivate final Iterator<HashCodeAndEqualsMockWrapper> iterator = backingHashSet.iterator();\nreturn iterator.hasNext();\nreturn iterator.next().get();\n}",
            "method_id": 222
        }
    ]
}