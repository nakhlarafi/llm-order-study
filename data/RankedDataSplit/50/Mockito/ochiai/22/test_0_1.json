{
    "bug_id": 22,
    "test_id": 0,
    "test_name": "org.mockito.internal.matchers.EqualityTest.shouldKnowIfObjectsAreEqual",
    "test_body": "public void shouldKnowIfObjectsAreEqual() throws Exception {\nint[] arr = new int[] {1, 2};\nassertTrue(areEqual(arr, arr));\nassertTrue(areEqual(new int[] {1, 2}, new int[] {1, 2}));\nassertTrue(areEqual(new Double[] {1.0}, new Double[] {1.0}));\nassertTrue(areEqual(new String[0], new String[0]));\nassertTrue(areEqual(new Object[10], new Object[10]));\nassertTrue(areEqual(new int[] {1}, new Integer[] {1}));\nassertTrue(areEqual(new Object[] {\"1\"}, new String[] {\"1\"}));\nObject badequals=new BadEquals();\nassertTrue(areEqual(badequals,badequals));\n26: assertFalse(areEqual(new Object[9], new Object[10]));\nassertFalse(areEqual(new int[] {1, 2}, new int[] {1}));\nassertFalse(areEqual(new int[] {1}, new double[] {1.0}));\n}\n",
    "stack_trace": "java.lang.RuntimeException\nat org.mockito.internal.matchers.EqualityTest$BadEquals.equals(EqualityTest.java:34)\nat org.mockito.internal.matchers.Equality.areEqual(Equality.java:18)\nat org.mockito.internal.matchers.EqualityTest.shouldKnowIfObjectsAreEqual(EqualityTest.java:24)",
    "covered_methods": [
        {
            "method_signature": "org.mockito.internal.progress.MockingProgressImpl:validateMostStuff()V",
            "method_body": "private void validateMostStuff() {\nGlobalConfiguration.validate();\nif (verificationMode != null) {\ngetArgumentMatcherStorage().validateState();\n}",
            "method_id": 50
        },
        {
            "method_signature": "org.mockito.internal.progress.MockingProgressImpl:getArgumentMatcherStorage()Lorg/mockito/internal/progress/ArgumentMatcherStorage;",
            "method_body": "public ArgumentMatcherStorage getArgumentMatcherStorage() {\nreturn argumentMatcherStorage;\n}",
            "method_id": 51
        },
        {
            "method_signature": "org.mockito.internal.progress.ArgumentMatcherStorageImpl:validateState()V",
            "method_body": "public void validateState() {\nif (!matcherStack.isEmpty()) {\n}",
            "method_id": 52
        },
        {
            "method_signature": "org.mockito.internal.configuration.injection.MockInjectionStrategy$1:<init>()V",
            "method_body": "public static final MockInjectionStrategy nop() {\nreturn new MockInjectionStrategy() {\n}",
            "method_id": 53
        },
        {
            "method_signature": "org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet$1:<init>(Lorg/mockito/internal/util/collections/HashCodeAndEqualsSafeSet;)V",
            "method_body": "public Iterator<Object> iterator() {\nreturn new Iterator<Object>() {\nprivate Iterator<HashCodeAndEqualsMockWrapper> iterator = backingHashSet.iterator();\nreturn iterator.hasNext();\n}",
            "method_id": 54
        }
    ]
}