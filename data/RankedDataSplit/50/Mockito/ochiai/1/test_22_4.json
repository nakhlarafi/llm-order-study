{
    "bug_id": 1,
    "test_id": 22,
    "test_name": "org.mockitousage.basicapi.UsingVarargsTest.shouldStubStringVarargs",
    "test_body": "public void shouldStubStringVarargs() {\nwhen(mock.withStringVarargsReturningString(1)).thenReturn(\"1\");\nwhen(mock.withStringVarargsReturningString(2, \"1\", \"2\", \"3\")).thenReturn(\"2\");\n38: RuntimeException expected = new RuntimeException();\nstubVoid(mock).toThrow(expected).on().withStringVarargs(3, \"1\", \"2\", \"3\", \"4\");\n41: assertEquals(\"1\", mock.withStringVarargsReturningString(1));\nassertEquals(null, mock.withStringVarargsReturningString(2));",
    "stack_trace": "java.lang.UnsupportedOperationException\nat org.mockito.internal.invocation.InvocationMatcher.captureArgumentsFrom(InvocationMatcher.java:123)\nat org.mockito.internal.handler.MockHandlerImpl.handle(MockHandlerImpl.java:94)\nat org.mockito.internal.handler.NullResultGuardian.handle(NullResultGuardian.java:29)\nat org.mockito.internal.handler.InvocationNotifierHandler.handle(InvocationNotifierHandler.java:37)\nat org.mockito.internal.creation.bytebuddy.MockMethodInterceptor.doIntercept(MockMethodInterceptor.java:82)\nat org.mockito.internal.creation.bytebuddy.MockMethodInterceptor.interceptAbstract(MockMethodInterceptor.java:70)\nat org.mockitousage.basicapi.UsingVarargsTest$IVarArgs$MockitoMock$598797521.withStringVarargsReturningString(Unknown Source)\nat org.mockitousage.basicapi.UsingVarargsTest.shouldStubStringVarargs(UsingVarargsTest.java:41)",
    "covered_methods": [
        {
            "method_signature": "org.mockito.internal.stubbing.VoidMethodStubbableImpl:<init>(Ljava/lang/Object;Lorg/mockito/internal/stubbing/InvocationContainerImpl;)V",
            "method_body": "public VoidMethodStubbableImpl(T mock, InvocationContainerImpl invocationContainerImpl) {\nthis.mock = mock;\nthis.invocationContainerImpl = invocationContainerImpl;\n}",
            "method_id": 200
        },
        {
            "method_signature": "org.mockito.internal.stubbing.InvocationContainerImpl:addAnswerForVoidMethod(Lorg/mockito/stubbing/Answer;)V",
            "method_body": "public void addAnswerForVoidMethod(Answer answer) {\nanswersForStubbing.add(answer);\n}",
            "method_id": 201
        },
        {
            "method_signature": "org.mockito.internal.handler.InvocationNotifierHandler:voidMethodStubbable(Ljava/lang/Object;)Lorg/mockito/stubbing/VoidMethodStubbable;",
            "method_body": "public VoidMethodStubbable<T> voidMethodStubbable(T mock) {\nreturn mockHandler.voidMethodStubbable(mock);\n}",
            "method_id": 202
        },
        {
            "method_signature": "org.mockito.Mockito:stubVoid(Ljava/lang/Object;)Lorg/mockito/stubbing/VoidMethodStubbable;",
            "method_body": "public static <T> VoidMethodStubbable<T> stubVoid(T mock) {\nreturn MOCKITO_CORE.stubVoid(mock);\n}",
            "method_id": 203
        },
        {
            "method_signature": "org.mockito.internal.MockitoCore:stubVoid(Ljava/lang/Object;)Lorg/mockito/stubbing/VoidMethodStubbable;",
            "method_body": "public <T> VoidMethodStubbable<T> stubVoid(T mock) {\nInternalMockHandler<T> handler = mockUtil.getMockHandler(mock);\nmockingProgress.stubbingStarted();\nreturn handler.voidMethodStubbable(mock);\n}",
            "method_id": 204
        },
        {
            "method_signature": "org.mockito.internal.creation.DelegatingMethod:getParameterTypes()[Ljava/lang/Class;",
            "method_body": "public Class<?>[] getParameterTypes() {\nreturn method.getParameterTypes();\n}",
            "method_id": 205
        },
        {
            "method_signature": "org.mockito.internal.stubbing.InvocationContainerImpl:setMethodForStubbing(Lorg/mockito/internal/invocation/InvocationMatcher;)V",
            "method_body": "public void setMethodForStubbing(InvocationMatcher invocation) {\ninvocationForStubbing = invocation;\nassert hasAnswersForStubbing();\nfor (int i = 0; i < answersForStubbing.size(); i++) {\naddAnswer(answersForStubbing.get(i), i != 0);\nanswersForStubbing.clear();\n}",
            "method_id": 206
        },
        {
            "method_signature": "org.mockito.internal.stubbing.answers.AnswersValidator:validateException(Lorg/mockito/internal/stubbing/answers/ThrowsException;Lorg/mockito/internal/stubbing/answers/MethodInfo;)V",
            "method_body": "private void validateException(ThrowsException answer, MethodInfo methodInfo) {\nThrowable throwable = answer.getThrowable();\nif (throwable == null) {\nif (throwable instanceof RuntimeException || throwable instanceof Error) {\nreturn;\n}",
            "method_id": 207
        },
        {
            "method_signature": "org.mockito.internal.stubbing.answers.ThrowsException:getThrowable()Ljava/lang/Throwable;",
            "method_body": "public Throwable getThrowable() {\nreturn throwable;\n}",
            "method_id": 208
        },
        {
            "method_signature": "org.mockito.internal.stubbing.answers.ThrowsException:<init>(Ljava/lang/Throwable;)V",
            "method_body": "public ThrowsException(Throwable throwable) {\nthis.throwable = throwable;\n}",
            "method_id": 209
        },
        {
            "method_signature": "org.mockito.internal.util.MockUtil:getMockHandler(Ljava/lang/Object;)Lorg/mockito/internal/InternalMockHandler;",
            "method_body": "public <T> InternalMockHandler<T> getMockHandler(T mock) {\nif (mock == null) {\nif (isMockitoMock(mock)) {\nMockHandler handler = mockMaker.getHandler(mock);\nreturn (InternalMockHandler) handler;\n}",
            "method_id": 210
        },
        {
            "method_signature": "org.mockito.internal.configuration.injection.MockInjectionStrategy$1:<init>()V",
            "method_body": "public static final MockInjectionStrategy nop() {\nreturn new MockInjectionStrategy() {\n}",
            "method_id": 211
        },
        {
            "method_signature": "org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet$1:<init>(Lorg/mockito/internal/util/collections/HashCodeAndEqualsSafeSet;)V",
            "method_body": "public Iterator<Object> iterator() {\nreturn new Iterator<Object>() {\nprivate final Iterator<HashCodeAndEqualsMockWrapper> iterator = backingHashSet.iterator();\nreturn iterator.hasNext();\nreturn iterator.next().get();\n}",
            "method_id": 212
        }
    ]
}