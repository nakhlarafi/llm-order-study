{
    "bug_id": 33,
    "test_id": 1,
    "test_name": "org.mockitousage.bugs.InheritedGenericsPolimorphicCallTest.shouldVerificationWorks",
    "test_body": "44: public void shouldVerificationWorks() {\n45: iterable.iterator();\n46: 47: verify(iterable).iterator();\n48: verify((Iterable) iterable).iterator();\n49: }\n",
    "stack_trace": "junit.framework.AssertionFailedError:\nWanted but not invoked:\nmyIterable.iterator();\n-> at org.mockitousage.bugs.InheritedGenericsPolimorphicCallTest.shouldVerificationWorks(InheritedGenericsPolimorphicCallTest.java:48)",
    "covered_methods": [
        {
            "method_signature": "org.mockito.internal.verification.VerificationModeFactory:times(I)Lorg/mockito/internal/verification/Times;",
            "method_body": "public static Times times(int wantedNumberOfInvocations) {\nreturn new Times(wantedNumberOfInvocations);\n}",
            "method_id": 0
        },
        {
            "method_signature": "org.mockito.internal.verification.MockAwareVerificationMode:<init>(Ljava/lang/Object;Lorg/mockito/verification/VerificationMode;)V",
            "method_body": "public MockAwareVerificationMode(Object mock, VerificationMode mode) {\nthis.mock = mock;\nthis.mode = mode;\n}",
            "method_id": 1
        },
        {
            "method_signature": "org.mockito.internal.verification.Times:<init>(I)V",
            "method_body": "public Times(int wantedNumberOfInvocations) {\nif (wantedNumberOfInvocations < 0) {\nthis.wantedCount = wantedNumberOfInvocations;\n}",
            "method_id": 2
        },
        {
            "method_signature": "org.mockito.internal.invocation.InvocationMatcher:hasSimilarMethod(Lorg/mockito/internal/invocation/Invocation;)Z",
            "method_body": "public boolean hasSimilarMethod(Invocation candidate) {\nString wantedMethodName = getMethod().getName();\nString currentMethodName = candidate.getMethod().getName();\nfinal boolean methodNameEquals = wantedMethodName.equals(currentMethodName);\nfinal boolean isUnverified = !candidate.isVerified();\nfinal boolean mockIsTheSame = getInvocation().getMock() == candidate.getMock();\nfinal boolean methodEquals = hasSameMethod(candidate);\nif (!methodNameEquals || !isUnverified || !mockIsTheSame) {\nreturn false;\n}",
            "method_id": 3
        },
        {
            "method_signature": "org.mockito.internal.util.StringJoiner:join([Ljava/lang/Object;)Ljava/lang/String;",
            "method_body": "public static String join(Object ... linesToBreak) {\nStringBuilder out = new StringBuilder(\"\\n\");\nfor (Object line : linesToBreak) {\nout.append(line.toString()).append(\"\\n\");\nint lastBreak = out.lastIndexOf(\"\\n\");\nreturn out.replace(lastBreak, lastBreak+1, \"\").toString();\n}",
            "method_id": 4
        },
        {
            "method_signature": "org.mockito.internal.util.MockUtil:getInterceptor(Ljava/lang/Object;)Lorg/mockito/internal/creation/MethodInterceptorFilter;",
            "method_body": "private <T> MethodInterceptorFilter getInterceptor(T mock) {\nif (!(mock instanceof Factory)) {\nFactory factory = (Factory) mock;\nCallback callback = factory.getCallback(0);\nif (callback instanceof MethodInterceptorFilter) {\nreturn (MethodInterceptorFilter) callback;\n}",
            "method_id": 5
        },
        {
            "method_signature": "org.mockito.internal.MockitoCore:verify(Ljava/lang/Object;Lorg/mockito/verification/VerificationMode;)Ljava/lang/Object;",
            "method_body": "public <T> T verify(T mock, VerificationMode mode) {\nif (mock == null) {\n} else if (!mockUtil.isMock(mock)) {\nmockingProgress.verificationStarted(new MockAwareVerificationMode(mock, mode));\nreturn mock;\n}",
            "method_id": 6
        },
        {
            "method_signature": "org.mockito.internal.invocation.InvocationMatcher:toString()Ljava/lang/String;",
            "method_body": "public String toString() {\nreturn invocation.toString(matchers, new PrintSettings());\n}",
            "method_id": 7
        },
        {
            "method_signature": "org.mockito.Mockito:verify(Ljava/lang/Object;)Ljava/lang/Object;",
            "method_body": "public static <T> T verify(T mock) {\nreturn MOCKITO_CORE.verify(mock, times(1));\n}",
            "method_id": 8
        },
        {
            "method_signature": "org.mockito.internal.invocation.InvocationMatcher:matches(Lorg/mockito/internal/invocation/Invocation;)Z",
            "method_body": "public boolean matches(Invocation actual) {\nreturn invocation.getMock().equals(actual.getMock())\n}",
            "method_id": 9
        },
        {
            "method_signature": "org.mockito.internal.invocation.InvocationMatcher:hasSameMethod(Lorg/mockito/internal/invocation/Invocation;)Z",
            "method_body": "public boolean hasSameMethod(Invocation candidate) {\nMethod m1 = invocation.getMethod();\nMethod m2 = candidate.getMethod();\nreturn m1.equals(m2);\n}",
            "method_id": 10
        },
        {
            "method_signature": "org.mockito.Mockito:times(I)Lorg/mockito/verification/VerificationMode;",
            "method_body": "public static VerificationMode times(int wantedNumberOfInvocations) {\nreturn VerificationModeFactory.times(wantedNumberOfInvocations);\n}",
            "method_id": 11
        },
        {
            "method_signature": "org.mockito.internal.util.MockUtil:isMock(Ljava/lang/Object;)Z",
            "method_body": "public boolean isMock(Object mock) {\nreturn mock != null && isMockitoMock(mock);\n}",
            "method_id": 12
        },
        {
            "method_signature": "org.mockito.internal.invocation.InvocationMatcher:getMethod()Ljava/lang/reflect/Method;",
            "method_body": "public Method getMethod() {\nreturn invocation.getMethod();\n}",
            "method_id": 13
        },
        {
            "method_signature": "org.mockito.internal.util.MockUtil:isMockitoMock(Ljava/lang/Object;)Z",
            "method_body": "private <T> boolean isMockitoMock(T mock) {\nreturn getInterceptor(mock) != null;\n}",
            "method_id": 14
        },
        {
            "method_signature": "org.mockito.internal.invocation.InvocationMatcher:getMatchers()Ljava/util/List;",
            "method_body": "public List<Matcher> getMatchers() {\nreturn this.matchers;\n}",
            "method_id": 15
        },
        {
            "method_signature": "org.mockito.internal.invocation.InvocationMatcher:getInvocation()Lorg/mockito/internal/invocation/Invocation;",
            "method_body": "public Invocation getInvocation() {\nreturn this.invocation;\n}",
            "method_id": 16
        },
        {
            "method_signature": "org.mockito.internal.invocation.InvocationMatcher:captureArgumentsFrom(Lorg/mockito/internal/invocation/Invocation;)V",
            "method_body": "public void captureArgumentsFrom(Invocation i) {\nint k = 0;\nfor (Matcher m : matchers) {\n}",
            "method_id": 17
        },
        {
            "method_signature": "org.mockito.internal.invocation.InvocationMatcher:<init>(Lorg/mockito/internal/invocation/Invocation;Ljava/util/List;)V",
            "method_body": "public InvocationMatcher(Invocation invocation, List<Matcher> matchers) {\nthis.invocation = invocation;\nif (matchers.isEmpty()) {\nthis.matchers = invocation.argumentsToMatchers();\n}",
            "method_id": 18
        },
        {
            "method_signature": "org.mockito.exceptions.Reporter:wantedButNotInvoked(Lorg/mockito/exceptions/PrintableInvocation;Ljava/util/List;)V",
            "method_body": "public void wantedButNotInvoked(PrintableInvocation wanted, List<? extends PrintableInvocation> invocations) {\nif (invocations.isEmpty()) {\nStringBuilder sb = new StringBuilder(\"\\nHowever, there were other interactions with this mock:\\n\");\nfor (PrintableInvocation i : invocations) {\nsb.append(i.getLocation());\nsb.append(\"\\n\");\n}\nallInvocations = sb.toString();\nString message = createWantedButNotInvokedMessage(wanted);\nthrow new WantedButNotInvoked(message + allInvocations);\n}",
            "method_id": 19
        },
        {
            "method_signature": "org.mockito.exceptions.Reporter:createWantedButNotInvokedMessage(Lorg/mockito/exceptions/PrintableInvocation;)Ljava/lang/String;",
            "method_body": "private String createWantedButNotInvokedMessage(PrintableInvocation wanted) {\nreturn join(\n}",
            "method_id": 20
        },
        {
            "method_signature": "org.mockito.exceptions.verification.WantedButNotInvoked:<init>(Ljava/lang/String;)V",
            "method_body": "public WantedButNotInvoked(String message) {\nsuper(message);\n}",
            "method_id": 21
        },
        {
            "method_signature": "org.mockito.internal.invocation.InvocationsFinder:findSimilarInvocation(Ljava/util/List;Lorg/mockito/internal/invocation/InvocationMatcher;)Lorg/mockito/internal/invocation/Invocation;",
            "method_body": "public Invocation findSimilarInvocation(List<Invocation> invocations, InvocationMatcher wanted) {\nInvocation firstSimilar = null;\nfor (Invocation invocation : invocations) {\nif (!wanted.hasSimilarMethod(invocation)) {\ncontinue;\nreturn firstSimilar;\n}",
            "method_id": 22
        },
        {
            "method_signature": "org.mockito.internal.util.Primitives:isPrimitiveWrapper(Ljava/lang/Class;)Z",
            "method_body": "public static boolean isPrimitiveWrapper(Class<?> type) {\nreturn wrapperReturnValues.containsKey(type);\n}",
            "method_id": 23
        },
        {
            "method_signature": "org.mockito.Mockito:mock(Ljava/lang/Class;)Ljava/lang/Object;",
            "method_body": "public static <T> T mock(Class<T> classToMock) {\nreturn mock(classToMock, withSettings().defaultAnswer(RETURNS_DEFAULTS));\n}",
            "method_id": 24
        },
        {
            "method_signature": "org.mockito.configuration.DefaultMockitoConfiguration:getDefaultAnswer()Lorg/mockito/stubbing/Answer;",
            "method_body": "public Answer<Object> getDefaultAnswer() {\nreturn new ReturnsEmptyValues();\n}",
            "method_id": 25
        },
        {
            "method_signature": "org.mockito.internal.configuration.GlobalConfiguration:getDefaultAnswer()Lorg/mockito/stubbing/Answer;",
            "method_body": "public Answer<Object> getDefaultAnswer() {\nreturn globalConfiguration.get().getDefaultAnswer();\n}",
            "method_id": 26
        },
        {
            "method_signature": "org.mockito.internal.stubbing.defaultanswers.GloballyConfiguredAnswer:answer(Lorg/mockito/invocation/InvocationOnMock;)Ljava/lang/Object;",
            "method_body": "public Object answer(InvocationOnMock invocation) throws Throwable {\nreturn new GlobalConfiguration().getDefaultAnswer().answer(invocation);\n}",
            "method_id": 27
        },
        {
            "method_signature": "org.mockito.internal.stubbing.defaultanswers.ReturnsEmptyValues:returnValueFor(Ljava/lang/Class;)Ljava/lang/Object;",
            "method_body": "Object returnValueFor(Class<?> type) {\nif (type.isPrimitive()) {\n} else if (Primitives.isPrimitiveWrapper(type)) {\n} else if (type == Collection.class) {\n} else if (type == Set.class) {\n} else if (type == HashSet.class) {\n} else if (type == SortedSet.class) {\n} else if (type == TreeSet.class) {\n} else if (type == LinkedHashSet.class) {\n} else if (type == List.class) {\n} else if (type == LinkedList.class) {\n} else if (type == ArrayList.class) {\n} else if (type == Map.class) {\n} else if (type == HashMap.class) {\n} else if (type == SortedMap.class) {\n} else if (type == TreeMap.class) {\n} else if (type == LinkedHashMap.class) {\nreturn null;\n}",
            "method_id": 28
        },
        {
            "method_signature": "org.mockito.internal.stubbing.defaultanswers.ReturnsEmptyValues:answer(Lorg/mockito/invocation/InvocationOnMock;)Ljava/lang/Object;",
            "method_body": "public Object answer(InvocationOnMock invocation) {\nif (Invocation.isToString(invocation)) {\nClass<?> returnType = invocation.getMethod().getReturnType();\nreturn returnValueFor(returnType);\n}",
            "method_id": 29
        },
        {
            "method_signature": "org.mockito.internal.invocation.Invocation:getMock()Ljava/lang/Object;",
            "method_body": "public Object getMock() {\nreturn mock;\n}",
            "method_id": 30
        },
        {
            "method_signature": "org.mockito.internal.invocation.Invocation:isToString(Lorg/mockito/invocation/InvocationOnMock;)Z",
            "method_body": "public static boolean isToString(InvocationOnMock invocation) {\nreturn new ObjectMethodsGuru().isToString(invocation.getMethod());\n}",
            "method_id": 31
        },
        {
            "method_signature": "org.mockito.internal.stubbing.InvocationContainerImpl:resetInvocationForPotentialStubbing(Lorg/mockito/internal/invocation/InvocationMatcher;)V",
            "method_body": "public void resetInvocationForPotentialStubbing(InvocationMatcher invocationMatcher) {\nthis.invocationForStubbing = invocationMatcher;\n}",
            "method_id": 32
        },
        {
            "method_signature": "org.mockito.internal.util.MockName:toInstanceName(Ljava/lang/Class;)Ljava/lang/String;",
            "method_body": "private static String toInstanceName(Class<?> clazz) {\nString className = clazz.getSimpleName();\nif (className.length() == 0) {\nreturn className.substring(0, 1).toLowerCase() + className.substring(1);\n}",
            "method_id": 33
        },
        {
            "method_signature": "org.mockito.internal.verification.checkers.NumberOfInvocationsChecker:<init>()V",
            "method_body": "public NumberOfInvocationsChecker() {\nthis(new Reporter(), new InvocationsFinder());\n}",
            "method_id": 34
        },
        {
            "method_signature": "org.mockito.internal.creation.MockSettingsImpl:getDefaultAnswer()Lorg/mockito/stubbing/Answer;",
            "method_body": "public Answer<Object> getDefaultAnswer() {\nreturn defaultAnswer;\n}",
            "method_id": 35
        },
        {
            "method_signature": "org.mockito.internal.util.ObjectMethodsGuru:isToString(Ljava/lang/reflect/Method;)Z",
            "method_body": "public boolean isToString(Method method) {\nreturn isToString(new DelegatingMethod(method));\n}",
            "method_id": 36
        },
        {
            "method_signature": "org.mockito.internal.util.ObjectMethodsGuru:isToString(Lorg/mockito/internal/invocation/MockitoMethod;)Z",
            "method_body": "public boolean isToString(MockitoMethod method) {\nreturn method.getReturnType() == String.class && method.getParameterTypes().length == 0\n}",
            "method_id": 37
        },
        {
            "method_signature": "org.mockito.internal.progress.ThreadSafeMockingProgress:reportOngoingStubbing(Lorg/mockito/internal/progress/IOngoingStubbing;)V",
            "method_body": "public void reportOngoingStubbing(IOngoingStubbing iOngoingStubbing) {\nthreadSafely().reportOngoingStubbing(iOngoingStubbing);\n}",
            "method_id": 38
        },
        {
            "method_signature": "org.mockito.internal.progress.MockingProgressImpl:reportOngoingStubbing(Lorg/mockito/internal/progress/IOngoingStubbing;)V",
            "method_body": "public void reportOngoingStubbing(IOngoingStubbing iOngoingStubbing) {\nthis.iOngoingStubbing = iOngoingStubbing;\n}",
            "method_id": 39
        },
        {
            "method_signature": "org.mockito.internal.stubbing.OngoingStubbingImpl:<init>(Lorg/mockito/internal/stubbing/InvocationContainerImpl;)V",
            "method_body": "public OngoingStubbingImpl(InvocationContainerImpl invocationContainerImpl) {\nthis.invocationContainerImpl = invocationContainerImpl;\n}",
            "method_id": 40
        },
        {
            "method_signature": "org.mockito.internal.verification.checkers.NumberOfInvocationsChecker:<init>(Lorg/mockito/exceptions/Reporter;Lorg/mockito/internal/invocation/InvocationsFinder;)V",
            "method_body": "NumberOfInvocationsChecker(Reporter reporter, InvocationsFinder finder) {\nthis.reporter = reporter;\nthis.finder = finder;\n}",
            "method_id": 41
        },
        {
            "method_signature": "org.mockito.internal.verification.checkers.NumberOfInvocationsChecker:check(Ljava/util/List;Lorg/mockito/internal/invocation/InvocationMatcher;I)V",
            "method_body": "public void check(List<Invocation> invocations, InvocationMatcher wanted, int wantedCount) {\nList<Invocation> actualInvocations = finder.findInvocations(invocations, wanted);\nint actualCount = actualInvocations.size();\nif (wantedCount > actualCount) {\n} else if (wantedCount == 0 && actualCount > 0) {\n} else if (wantedCount < actualCount) {\ninvocationMarker.markVerified(actualInvocations, wanted);\n}",
            "method_id": 42
        },
        {
            "method_signature": "org.mockito.internal.invocation.Invocation:isVerified()Z",
            "method_body": "public boolean isVerified() {\nreturn verified;\n}",
            "method_id": 43
        },
        {
            "method_signature": "org.mockito.internal.stubbing.InvocationContainerImpl:setInvocationForPotentialStubbing(Lorg/mockito/internal/invocation/InvocationMatcher;)V",
            "method_body": "public void setInvocationForPotentialStubbing(InvocationMatcher invocation) {\nregisteredInvocations.add(invocation.getInvocation());\nthis.invocationForStubbing = invocation;\n}",
            "method_id": 44
        },
        {
            "method_signature": "org.mockito.internal.creation.DelegatingMethod:getJavaMethod()Ljava/lang/reflect/Method;",
            "method_body": "public Method getJavaMethod() {\nreturn method;\n}",
            "method_id": 45
        },
        {
            "method_signature": "org.mockito.internal.verification.RegisteredInvocations:add(Lorg/mockito/internal/invocation/Invocation;)V",
            "method_body": "public void add(Invocation invocation) {\ninvocations.add(invocation);\n}",
            "method_id": 46
        },
        {
            "method_signature": "org.mockito.internal.creation.DelegatingMethod:getReturnType()Ljava/lang/Class;",
            "method_body": "public Class<?> getReturnType() {\nreturn method.getReturnType();\n}",
            "method_id": 47
        },
        {
            "method_signature": "org.mockito.internal.creation.DelegatingMockitoMethodProxy:<init>(Lorg/mockito/cglib/proxy/MethodProxy;)V",
            "method_body": "public DelegatingMockitoMethodProxy(MethodProxy methodProxy) {\nthis.methodProxy = methodProxy;\n}",
            "method_id": 48
        },
        {
            "method_signature": "org.mockito.internal.creation.DelegatingMockitoMethodProxy:getMethodProxy()Lorg/mockito/cglib/proxy/MethodProxy;",
            "method_body": "public MethodProxy getMethodProxy() {\nreturn methodProxy;\n}",
            "method_id": 49
        }
    ]
}