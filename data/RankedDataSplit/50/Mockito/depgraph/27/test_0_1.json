{
    "bug_id": 27,
    "test_id": 0,
    "test_name": "org.mockitousage.bugs.ListenersLostOnResetMockTest.listener",
    "test_body": "15: public void listener() throws Exception {\n16: InvocationListener invocationListener = mock(InvocationListener.class);\n17: 18: List mockedList = mock(List.class, withSettings().invocationListeners(invocationListener));\n19: reset(mockedList);\n20: 21: mockedList.clear();\n22: 23: verify(invocationListener).reportInvocation(any(MethodInvocationReport.class));\n24: }\n",
    "stack_trace": "junit.framework.AssertionFailedError:\nWanted but not invoked:\ninvocationListener.reportInvocation(<any>);\n-> at org.mockitousage.bugs.ListenersLostOnResetMockTest.listener(ListenersLostOnResetMockTest.java:23)",
    "covered_methods": [
        {
            "method_signature": "org.mockito.Matchers:any(Ljava/lang/Class;)Ljava/lang/Object;",
            "method_body": "public static <T> T any(Class<T> clazz) {\nreturn (T) reportMatcher(Any.ANY).returnFor(clazz);\n}",
            "method_id": 50
        },
        {
            "method_signature": "org.mockito.internal.creation.MockSettingsImpl:invocationListeners([Lorg/mockito/listeners/InvocationListener;)Lorg/mockito/MockSettings;",
            "method_body": "public MockSettings invocationListeners(InvocationListener... listeners) {\nif (listeners == null || listeners.length == 0) {\nfor (InvocationListener listener : listeners) {\nif (listener == null) {\nthis.invocationListeners.add(listener);\nreturn this;\n}",
            "method_id": 51
        },
        {
            "method_signature": "org.mockito.exceptions.Reporter:wantedButNotInvoked(Lorg/mockito/exceptions/PrintableInvocation;Ljava/util/List;)V",
            "method_body": "public void wantedButNotInvoked(PrintableInvocation wanted, List<? extends PrintableInvocation> invocations) {\nif (invocations.isEmpty()) {\nallInvocations = \"Actually, there were zero interactions with this mock.\\n\";\nString message = createWantedButNotInvokedMessage(wanted);\nthrow new WantedButNotInvoked(message + allInvocations);\n}",
            "method_id": 52
        },
        {
            "method_signature": "org.mockito.exceptions.Reporter:createWantedButNotInvokedMessage(Lorg/mockito/exceptions/PrintableInvocation;)Ljava/lang/String;",
            "method_body": "private String createWantedButNotInvokedMessage(PrintableInvocation wanted) {\nreturn join(\n}",
            "method_id": 53
        },
        {
            "method_signature": "org.mockito.exceptions.verification.WantedButNotInvoked:<init>(Ljava/lang/String;)V",
            "method_body": "public WantedButNotInvoked(String message) {\nsuper(message);\n}",
            "method_id": 54
        },
        {
            "method_signature": "org.mockito.internal.matchers.LocalizedMatcher:describeTo(Lorg/hamcrest/Description;)V",
            "method_body": "public void describeTo(Description description) {\nactualMatcher.describeTo(description);\n}",
            "method_id": 55
        },
        {
            "method_signature": "org.mockito.internal.util.Primitives:primitiveValueOrNullFor(Ljava/lang/Class;)Ljava/lang/Object;",
            "method_body": "public static <T> T primitiveValueOrNullFor(Class<T> primitiveType) {\nreturn (T) primitiveValues.get(primitiveType);\n}",
            "method_id": 56
        },
        {
            "method_signature": "org.mockito.internal.invocation.InvocationsFinder:findSimilarInvocation(Ljava/util/List;Lorg/mockito/internal/invocation/InvocationMatcher;)Lorg/mockito/internal/invocation/Invocation;",
            "method_body": "public Invocation findSimilarInvocation(List<Invocation> invocations, InvocationMatcher wanted) {\nInvocation firstSimilar = null;\nfor (Invocation invocation : invocations) {\nreturn firstSimilar;\n}",
            "method_id": 57
        },
        {
            "method_signature": "org.mockito.internal.progress.HandyReturnValues:returnFor(Ljava/lang/Class;)Ljava/lang/Object;",
            "method_body": "public <T> T returnFor(Class<T> clazz) {\nif (isPrimitiveWrapper(clazz)) {\nreturn primitiveValueOrNullFor(clazz);\n}",
            "method_id": 58
        },
        {
            "method_signature": "org.mockito.internal.progress.ThreadSafeMockingProgress:resetOngoingStubbing()V",
            "method_body": "public void resetOngoingStubbing() {\nthreadSafely().resetOngoingStubbing();\n}",
            "method_id": 59
        },
        {
            "method_signature": "org.mockito.internal.progress.ThreadSafeMockingProgress:reset()V",
            "method_body": "public void reset() {\nthreadSafely().reset();\n}",
            "method_id": 60
        },
        {
            "method_signature": "org.mockito.internal.progress.MockingProgressImpl:reset()V",
            "method_body": "public void reset() {\nstubbingInProgress = null;\nverificationMode = null;\ngetArgumentMatcherStorage().reset();\n}",
            "method_id": 61
        },
        {
            "method_signature": "org.mockito.internal.progress.ArgumentMatcherStorageImpl:reset()V",
            "method_body": "public void reset() {\nmatcherStack.clear();\n}",
            "method_id": 62
        },
        {
            "method_signature": "org.mockito.internal.invocation.InvocationMatcher:toString()Ljava/lang/String;",
            "method_body": "public String toString() {\nreturn invocation.toString(matchers, new PrintSettings());\n}",
            "method_id": 63
        },
        {
            "method_signature": "org.mockito.exceptions.base.MockitoAssertionError:<init>(Ljava/lang/String;)V",
            "method_body": "public MockitoAssertionError(String message) {\nsuper(message);\nunfilteredStackTrace = getStackTrace();\nConditionalStackTraceFilter filter = new ConditionalStackTraceFilter();\nfilter.filter(this);\n}",
            "method_id": 64
        },
        {
            "method_signature": "org.mockito.internal.reporting.PrintSettings:extraTypeInfoFor(I)Z",
            "method_body": "public boolean extraTypeInfoFor(int argumentIndex) {\nreturn withTypeInfo.contains(argumentIndex);\n}",
            "method_id": 65
        },
        {
            "method_signature": "org.mockito.Matchers:reportMatcher(Lorg/hamcrest/Matcher;)Lorg/mockito/internal/progress/HandyReturnValues;",
            "method_body": "private static HandyReturnValues reportMatcher(Matcher<?> matcher) {\nreturn mockingProgress.getArgumentMatcherStorage().reportMatcher(matcher);\n}",
            "method_id": 66
        },
        {
            "method_signature": "org.mockito.internal.verification.checkers.MissingInvocationChecker:<init>()V",
            "method_body": "public MissingInvocationChecker() {\nthis(new InvocationsFinder(), new Reporter());\n}",
            "method_id": 67
        },
        {
            "method_signature": "org.mockito.internal.verification.Times:verify(Lorg/mockito/internal/verification/api/VerificationData;)V",
            "method_body": "public void verify(VerificationData data) {\nif (wantedCount > 0) {\nMissingInvocationChecker missingInvocation = new MissingInvocationChecker();\nmissingInvocation.check(data.getAllInvocations(), data.getWanted());\n}",
            "method_id": 68
        },
        {
            "method_signature": "org.mockito.internal.verification.checkers.MissingInvocationChecker:check(Ljava/util/List;Lorg/mockito/internal/invocation/InvocationMatcher;)V",
            "method_body": "public void check(List<Invocation> invocations, InvocationMatcher wanted) {\nList<Invocation> actualInvocations = finder.findInvocations(invocations, wanted);\nif (actualInvocations.isEmpty()) {\nInvocation similar = finder.findSimilarInvocation(invocations, wanted);\nif (similar != null) {\nreporter.wantedButNotInvoked(wanted, invocations);\n}",
            "method_id": 69
        },
        {
            "method_signature": "org.mockito.internal.invocation.Invocation:getArgumentsCount()I",
            "method_body": "public int getArgumentsCount() {\nreturn arguments.length;\n}",
            "method_id": 70
        },
        {
            "method_signature": "org.mockito.internal.verification.checkers.MissingInvocationChecker:<init>(Lorg/mockito/internal/invocation/InvocationsFinder;Lorg/mockito/exceptions/Reporter;)V",
            "method_body": "MissingInvocationChecker(InvocationsFinder finder, Reporter reporter) {\nthis.finder = finder;\nthis.reporter = reporter;\n}",
            "method_id": 71
        },
        {
            "method_signature": "org.mockito.internal.invocation.Invocation:toString(Ljava/util/List;Lorg/mockito/internal/reporting/PrintSettings;)Ljava/lang/String;",
            "method_body": "protected String toString(List<Matcher> matchers, PrintSettings printSettings) {\nMatchersPrinter matchersPrinter = new MatchersPrinter();\nString method = qualifiedMethodName();\nString invocation = method + matchersPrinter.getArgumentsLine(matchers, printSettings);\nif (printSettings.isMultiline() || (!matchers.isEmpty() && invocation.length() > MAX_LINE_LENGTH)) {\nreturn invocation;\n}",
            "method_id": 72
        },
        {
            "method_signature": "org.mockito.internal.invocation.Invocation:qualifiedMethodName()Ljava/lang/String;",
            "method_body": "private String qualifiedMethodName() {\nreturn new MockUtil().getMockName(mock) + \".\" + method.getName();\n}",
            "method_id": 73
        },
        {
            "method_signature": "org.mockito.internal.reporting.PrintSettings:isMultiline()Z",
            "method_body": "public boolean isMultiline() {\nreturn multiline;\n}",
            "method_id": 74
        },
        {
            "method_signature": "org.mockito.internal.util.ObjectMethodsGuru:isHashCodeMethod(Ljava/lang/reflect/Method;)Z",
            "method_body": "public boolean isHashCodeMethod(Method method) {\nreturn method.getName().equals(\"hashCode\") && method.getParameterTypes().length == 0;\n}",
            "method_id": 75
        },
        {
            "method_signature": "org.mockito.internal.matchers.MatchersPrinter:getArgumentsLine(Ljava/util/List;Lorg/mockito/internal/reporting/PrintSettings;)Ljava/lang/String;",
            "method_body": "public String getArgumentsLine(List<Matcher> matchers, PrintSettings printSettings) {\nDescription result = new StringDescription();\nresult.appendList(\"(\", \", \", \");\", applyPrintSettings(matchers, printSettings));\nreturn result.toString();\n}",
            "method_id": 76
        },
        {
            "method_signature": "org.mockito.internal.creation.MethodInterceptorFilter:intercept(Ljava/lang/Object;Ljava/lang/reflect/Method;[Ljava/lang/Object;Lorg/mockito/cglib/proxy/MethodProxy;)Ljava/lang/Object;",
            "method_body": "public Object intercept(Object proxy, Method method, Object[] args, MethodProxy methodProxy)\nif (objectMethodsGuru.isEqualsMethod(method)) {\n} else if (objectMethodsGuru.isHashCodeMethod(method)) {\nMockitoMethodProxy mockitoMethodProxy = createMockitoMethodProxy(methodProxy);\ncglibHacker.setMockitoNamingPolicy(mockitoMethodProxy);\nMockitoMethod mockitoMethod = createMockitoMethod(method);\nFilteredCGLIBProxyRealMethod realMethod = new FilteredCGLIBProxyRealMethod(mockitoMethodProxy);\nInvocation invocation = new Invocation(proxy, mockitoMethod, args, SequenceNumber.next(), realMethod);\nreturn handler.handle(invocation);\n}",
            "method_id": 77
        },
        {
            "method_signature": "org.mockito.internal.util.ObjectMethodsGuru:isEqualsMethod(Ljava/lang/reflect/Method;)Z",
            "method_body": "public boolean isEqualsMethod(Method method) {\nreturn method.getName().equals(\"equals\") && method.getParameterTypes().length == 1 && method.getParameterTypes()[0] == Object.class;\n}",
            "method_id": 78
        },
        {
            "method_signature": "org.mockito.internal.progress.ArgumentMatcherStorageImpl:reportMatcher(Lorg/hamcrest/Matcher;)Lorg/mockito/internal/progress/HandyReturnValues;",
            "method_body": "public HandyReturnValues reportMatcher(Matcher matcher) {\nmatcherStack.push(new LocalizedMatcher(matcher));\nreturn new HandyReturnValues();\n}",
            "method_id": 79
        },
        {
            "method_signature": "org.mockito.internal.matchers.MatchersPrinter:applyPrintSettings(Ljava/util/List;Lorg/mockito/internal/reporting/PrintSettings;)Ljava/util/List;",
            "method_body": "private List<SelfDescribing> applyPrintSettings(List<Matcher> matchers, PrintSettings printSettings) {\nList<SelfDescribing> withPrintSettings = new LinkedList<SelfDescribing>();\nint i = 0;\nfor (final Matcher matcher : matchers) {\nif (matcher instanceof ContainsExtraTypeInformation && printSettings.extraTypeInfoFor(i)) {\nwithPrintSettings.add(matcher);\ni++;\n}\nreturn withPrintSettings;\n}",
            "method_id": 80
        },
        {
            "method_signature": "org.mockito.internal.matchers.LocalizedMatcher:<init>(Lorg/hamcrest/Matcher;)V",
            "method_body": "public LocalizedMatcher(Matcher actualMatcher) {\nthis.actualMatcher = actualMatcher;\nthis.location = new Location();\n}",
            "method_id": 81
        },
        {
            "method_signature": "org.mockito.internal.stubbing.defaultanswers.ReturnsEmptyValues:primitiveOf(Ljava/lang/Class;)Ljava/lang/Object;",
            "method_body": "private Object primitiveOf(Class<?> type) {\nif (type == Boolean.TYPE) {\n} else if (type == Character.TYPE) {\nreturn 0;\n}",
            "method_id": 82
        },
        {
            "method_signature": "org.mockito.internal.util.MockName:toString()Ljava/lang/String;",
            "method_body": "public String toString() {\nreturn mockName;\n}",
            "method_id": 83
        },
        {
            "method_signature": "org.mockito.internal.creation.MockSettingsImpl:getMockName()Lorg/mockito/internal/util/MockName;",
            "method_body": "public MockName getMockName() {\nreturn mockName;\n}",
            "method_id": 84
        },
        {
            "method_signature": "org.mockito.internal.InvocationNotifierHandler:notifyMethodCallException(Lorg/mockito/internal/invocation/Invocation;Ljava/lang/Throwable;)V",
            "method_body": "private void notifyMethodCallException(Invocation invocation, Throwable exception) {\nfor (InvocationListener listener : invocationListeners) {\n}",
            "method_id": 85
        },
        {
            "method_signature": "org.mockito.internal.progress.ThreadSafeMockingProgress:mockingStarted(Ljava/lang/Object;Ljava/lang/Class;Lorg/mockito/MockSettings;)V",
            "method_body": "public void mockingStarted(Object mock, Class classToMock, MockSettings mockSettings) {\nthreadSafely().mockingStarted(mock, classToMock, mockSettings);\n}",
            "method_id": 86
        },
        {
            "method_signature": "org.mockito.internal.progress.MockingProgressImpl:mockingStarted(Ljava/lang/Object;Ljava/lang/Class;Lorg/mockito/MockSettings;)V",
            "method_body": "public void mockingStarted(Object mock, Class classToMock, MockSettings mockSettings) {\nif (listener != null && listener instanceof MockingStartedListener) {\nvalidateMostStuff();\n}",
            "method_id": 87
        },
        {
            "method_signature": "org.mockito.internal.creation.MockSettingsImpl:getInvocationListeners()Ljava/util/List;",
            "method_body": "public List<InvocationListener> getInvocationListeners() {\nreturn this.invocationListeners;\n}",
            "method_id": 88
        },
        {
            "method_signature": "org.mockito.internal.stubbing.InvocationContainerImpl:<init>(Lorg/mockito/internal/progress/MockingProgress;)V",
            "method_body": "public InvocationContainerImpl(MockingProgress mockingProgress) {\nthis.mockingProgress = mockingProgress;\n}",
            "method_id": 89
        },
        {
            "method_signature": "org.mockito.internal.invocation.InvocationsFinder:findInvocations(Ljava/util/List;Lorg/mockito/internal/invocation/InvocationMatcher;)Ljava/util/List;",
            "method_body": "public List<Invocation> findInvocations(List<Invocation> invocations, InvocationMatcher wanted) {\nreturn ListUtil.filter(invocations, new RemoveNotMatching(wanted));\n}",
            "method_id": 90
        },
        {
            "method_signature": "org.mockito.internal.MockHandler:getMockSettings()Lorg/mockito/internal/creation/MockSettingsImpl;",
            "method_body": "public MockSettingsImpl getMockSettings() {\nreturn mockSettings;\n}",
            "method_id": 91
        },
        {
            "method_signature": "org.mockito.internal.InvocationNotifierHandler:getMockSettings()Lorg/mockito/internal/creation/MockSettingsImpl;",
            "method_body": "public MockSettingsImpl getMockSettings() {\nreturn mockHandler.getMockSettings();\n}",
            "method_id": 92
        },
        {
            "method_signature": "org.mockito.internal.creation.DelegatingMethod:getName()Ljava/lang/String;",
            "method_body": "public String getName() {\nreturn method.getName();\n}",
            "method_id": 93
        },
        {
            "method_signature": "org.mockito.internal.debugging.Location:toString()Ljava/lang/String;",
            "method_body": "public String toString() {\nStackTraceElement[] filtered = stackTraceFilter.filter(stackTraceHolder.getStackTrace(), false);\nif (filtered.length == 0) {\nreturn \"-> at \" + filtered[0].toString();\n}",
            "method_id": 94
        },
        {
            "method_signature": "org.mockito.internal.exceptions.base.StackTraceFilter:isBad(Ljava/lang/StackTraceElement;)Z",
            "method_body": "public boolean isBad(StackTraceElement e) {\nboolean fromMockObject = e.getClassName().contains(\"$$EnhancerByMockitoWithCGLIB$$\");\nboolean fromOrgMockito = e.getClassName().startsWith(\"org.mockito.\");\nboolean isRunner = e.getClassName().startsWith(\"org.mockito.runners.\");\nboolean isInternalRunner = e.getClassName().startsWith(\"org.mockito.internal.runners.\");\nreturn (fromMockObject || fromOrgMockito) && !isRunner && !isInternalRunner;\n}",
            "method_id": 95
        },
        {
            "method_signature": "org.mockito.internal.exceptions.base.StackTraceFilter:filter([Ljava/lang/StackTraceElement;Z)[Ljava/lang/StackTraceElement;",
            "method_body": "public StackTraceElement[] filter(StackTraceElement[] target, boolean keepTop) {\nList<StackTraceElement> unfilteredStackTrace = Arrays.asList(target);\nint lastBad = -1;\nint firstBad = -1;\nfor (int i = 0; i < unfilteredStackTrace.size(); i++) {\nif (!this.isBad(unfilteredStackTrace.get(i))) {\ncontinue;\nlastBad = i;\nif (firstBad == -1) {\nfirstBad = i;\nif (keepTop && firstBad != -1) {\ntop = new LinkedList<StackTraceElement>();\nList<StackTraceElement> bottom = unfilteredStackTrace.subList(lastBad + 1, unfilteredStackTrace.size());\nList<StackTraceElement> filtered = new ArrayList<StackTraceElement>(top);\nfiltered.addAll(bottom);\nreturn filtered.toArray(new StackTraceElement[]{});\n}",
            "method_id": 96
        },
        {
            "method_signature": "org.mockito.internal.verification.VerificationDataImpl:getAllInvocations()Ljava/util/List;",
            "method_body": "public List<Invocation> getAllInvocations() {\nreturn invocations.getInvocations();\n}",
            "method_id": 97
        },
        {
            "method_signature": "org.mockito.internal.progress.ThreadSafeMockingProgress:validateState()V",
            "method_body": "public void validateState() {\nthreadSafely().validateState();\n}",
            "method_id": 98
        },
        {
            "method_signature": "org.mockito.internal.progress.MockingProgressImpl:validateState()V",
            "method_body": "public void validateState() {\nvalidateMostStuff();\nif (stubbingInProgress != null) {\n}",
            "method_id": 99
        }
    ]
}