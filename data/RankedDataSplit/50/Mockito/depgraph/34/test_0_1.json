{
    "bug_id": 34,
    "test_id": 0,
    "test_name": "org.mockitousage.basicapi.UsingVarargsTest.shouldMatchEasilyEmptyVararg",
    "test_body": "170: public void shouldMatchEasilyEmptyVararg() throws Exception {\n171: //when\n172: when(mock.foo(anyVararg())).thenReturn(-1);\n173: 174: //then\n175: assertEquals(-1, mock.foo());\n176: } \n",
    "stack_trace": "java.lang.ArrayIndexOutOfBoundsException: 0\nat org.mockito.internal.invocation.InvocationMatcher.captureArgumentsFrom(InvocationMatcher.java:107)\nat org.mockito.internal.MockHandler.handle(MockHandler.java:88)\nat org.mockito.internal.creation.MethodInterceptorFilter.intercept(MethodInterceptorFilter.java:47)\nat org.mockitousage.basicapi.UsingVarargsTest$IVarArgs$$EnhancerByMockitoWithCGLIB$$24404684.foo(<generated>)\nat org.mockitousage.basicapi.UsingVarargsTest.shouldMatchEasilyEmptyVararg(UsingVarargsTest.java:175)",
    "covered_methods": [
        {
            "method_signature": "org.mockito.internal.invocation.Invocation:isVoid()Z",
            "method_body": "public boolean isVoid() {\nreturn this.method.getReturnType() == Void.TYPE;\n}",
            "method_id": 50
        },
        {
            "method_signature": "org.mockito.internal.progress.MockingProgressImpl:pullVerificationMode()Lorg/mockito/internal/verification/api/VerificationMode;",
            "method_body": "public VerificationMode pullVerificationMode() {\nif (verificationMode == null) {\nreturn null;\n}",
            "method_id": 51
        },
        {
            "method_signature": "org.mockito.internal.progress.ArgumentMatcherStorageImpl:pullMatchers()Ljava/util/List;",
            "method_body": "public List<Matcher> pullMatchers() {\nif (matcherStack.isEmpty()) {\nreturn Collections.emptyList();\nList<LocalizedMatcher> matchers = new ArrayList<LocalizedMatcher>(matcherStack);\nmatcherStack.clear();\nreturn (List) matchers;\n}",
            "method_id": 52
        },
        {
            "method_signature": "org.mockito.internal.MockHandler:handle(Lorg/mockito/internal/invocation/Invocation;)Ljava/lang/Object;",
            "method_body": "public Object handle(Invocation invocation) throws Throwable {\nif (invocationContainerImpl.hasAnswersForStubbing()) {\nVerificationMode verificationMode = mockingProgress.pullVerificationMode();\nInvocationMatcher invocationMatcher = matchersBinder.bindMatchers(mockingProgress.getArgumentMatcherStorage(),\nmockingProgress.validateState();\nif (verificationMode != null) {\ninvocationContainerImpl.setInvocationForPotentialStubbing(invocationMatcher);\nOngoingStubbingImpl<T> ongoingStubbing = new OngoingStubbingImpl<T>(invocationContainerImpl);\nmockingProgress.reportOngoingStubbing(ongoingStubbing);\nStubbedInvocationMatcher stubbedInvocation = invocationContainerImpl.findAnswerFor(invocation);\nif (!invocation.isVoid() && stubbedInvocation == null) {\nmockingProgress.getDebuggingInfo().addPotentiallyUnstubbed(invocationMatcher);\nif (stubbedInvocation != null) {\nmockingProgress.getDebuggingInfo().reportUsedStub(invocationMatcher);\nstubbedInvocation.captureArgumentsFrom(invocation);\nreturn stubbedInvocation.answer(invocation);\nObject ret = mockSettings.getDefaultAnswer().answer(invocation);\ninvocationContainerImpl.resetInvocationForPotentialStubbing(invocationMatcher);\nreturn ret;\n}",
            "method_id": 53
        },
        {
            "method_signature": "org.mockito.internal.invocation.MatchersBinder:bindMatchers(Lorg/mockito/internal/progress/ArgumentMatcherStorage;Lorg/mockito/internal/invocation/Invocation;)Lorg/mockito/internal/invocation/InvocationMatcher;",
            "method_body": "public InvocationMatcher bindMatchers(ArgumentMatcherStorage argumentMatcherStorage, Invocation invocation) {\nList<Matcher> lastMatchers = argumentMatcherStorage.pullMatchers();\nvalidateMatchers(invocation, lastMatchers);\nInvocationMatcher invocationWithMatchers = new InvocationMatcher(invocation, lastMatchers);\nreturn invocationWithMatchers;\n}",
            "method_id": 54
        },
        {
            "method_signature": "org.mockito.internal.invocation.MatchersBinder:validateMatchers(Lorg/mockito/internal/invocation/Invocation;Ljava/util/List;)V",
            "method_body": "private void validateMatchers(Invocation invocation, List<Matcher> matchers) {\nif (!matchers.isEmpty()) {\nint recordedMatchersSize = matchers.size();\nint expectedMatchersSize = invocation.getArgumentsCount();\nif (expectedMatchersSize != recordedMatchersSize) {\n}",
            "method_id": 55
        },
        {
            "method_signature": "org.mockito.internal.stubbing.InvocationContainerImpl:hasAnswersForStubbing()Z",
            "method_body": "public boolean hasAnswersForStubbing() {\nreturn !answersForStubbing.isEmpty();\n}",
            "method_id": 56
        },
        {
            "method_signature": "org.mockito.internal.creation.MethodInterceptorFilter:createMockitoMethod(Ljava/lang/reflect/Method;)Lorg/mockito/internal/invocation/MockitoMethod;",
            "method_body": "public MockitoMethod createMockitoMethod(Method method) {\nif (mockSettings.isSerializable()) {\nreturn new DelegatingMethod(method);\n}",
            "method_id": 57
        },
        {
            "method_signature": "org.mockito.internal.creation.cglib.CGLIBHacker:reflectOnCreateInfo(Lorg/mockito/cglib/proxy/MethodProxy;)Ljava/lang/reflect/Field;",
            "method_body": "private Field reflectOnCreateInfo(MethodProxy methodProxy) throws SecurityException, NoSuchFieldException {\nClass cglibMethodProxyClass = methodProxy.getClass();\nwhile (cglibMethodProxyClass != MethodProxy.class) {\nreturn cglibMethodProxyClass.getDeclaredField(\"createInfo\");\n}",
            "method_id": 58
        },
        {
            "method_signature": "org.mockito.internal.invocation.realmethod.FilteredCGLIBProxyRealMethod:<init>(Lorg/mockito/internal/creation/MockitoMethodProxy;)V",
            "method_body": "public FilteredCGLIBProxyRealMethod(MockitoMethodProxy methodProxy) {\nthis(new CGLIBProxyRealMethod(methodProxy));\n}",
            "method_id": 59
        },
        {
            "method_signature": "org.mockito.internal.invocation.realmethod.CGLIBProxyRealMethod:<init>(Lorg/mockito/internal/creation/MockitoMethodProxy;)V",
            "method_body": "public CGLIBProxyRealMethod(MockitoMethodProxy methodProxy) {\nthis.methodProxy = methodProxy;\n}",
            "method_id": 60
        },
        {
            "method_signature": "org.mockito.internal.progress.SequenceNumber:next()I",
            "method_body": "public static synchronized int next() {\nreturn sequenceNumber++;\n}",
            "method_id": 61
        },
        {
            "method_signature": "org.mockito.internal.invocation.realmethod.FilteredCGLIBProxyRealMethod:<init>(Lorg/mockito/internal/invocation/realmethod/RealMethod;)V",
            "method_body": "public FilteredCGLIBProxyRealMethod(RealMethod realMethod) {\nthis.realMethod = realMethod;\n}",
            "method_id": 62
        },
        {
            "method_signature": "org.mockito.internal.creation.cglib.CGLIBHacker:setMockitoNamingPolicy(Lorg/mockito/internal/creation/MockitoMethodProxy;)V",
            "method_body": "public void setMockitoNamingPolicy(MockitoMethodProxy mockitoMethodProxy) {\nMethodProxy methodProxy = mockitoMethodProxy.getMethodProxy();\nField createInfoField = reflectOnCreateInfo(methodProxy);\ncreateInfoField.setAccessible(true);\nObject createInfo = createInfoField.get(methodProxy);\nField namingPolicyField = createInfo.getClass().getDeclaredField(\"namingPolicy\");\nnamingPolicyField.setAccessible(true);\nif (namingPolicyField.get(createInfo) == null) {\nnamingPolicyField.set(createInfo, MockitoNamingPolicy.INSTANCE);\n}\n}",
            "method_id": 63
        },
        {
            "method_signature": "org.mockito.internal.creation.MethodInterceptorFilter:createMockitoMethodProxy(Lorg/mockito/cglib/proxy/MethodProxy;)Lorg/mockito/internal/creation/MockitoMethodProxy;",
            "method_body": "public MockitoMethodProxy createMockitoMethodProxy(MethodProxy methodProxy) {\nif (mockSettings.isSerializable())\nreturn new DelegatingMockitoMethodProxy(methodProxy);\n}",
            "method_id": 64
        },
        {
            "method_signature": "org.mockito.internal.util.ObjectMethodsGuru:isHashCodeMethod(Ljava/lang/reflect/Method;)Z",
            "method_body": "public boolean isHashCodeMethod(Method method) {\nreturn method.getName().equals(\"hashCode\") && method.getParameterTypes().length == 0;\n}",
            "method_id": 65
        },
        {
            "method_signature": "org.mockito.internal.progress.ThreadSafeMockingProgress:getArgumentMatcherStorage()Lorg/mockito/internal/progress/ArgumentMatcherStorage;",
            "method_body": "public ArgumentMatcherStorage getArgumentMatcherStorage() {\nreturn threadSafely().getArgumentMatcherStorage();\n}",
            "method_id": 66
        },
        {
            "method_signature": "org.mockito.internal.creation.DelegatingMethod:<init>(Ljava/lang/reflect/Method;)V",
            "method_body": "public DelegatingMethod(Method method) {\nassert method != null : \"Method cannot be null\";\nthis.method = method;\n}",
            "method_id": 67
        },
        {
            "method_signature": "org.mockito.internal.invocation.Invocation:getMethod()Ljava/lang/reflect/Method;",
            "method_body": "public Method getMethod() {\nreturn method.getJavaMethod();\n}",
            "method_id": 68
        },
        {
            "method_signature": "org.mockito.internal.invocation.Invocation:isValidReturnType(Ljava/lang/Class;)Z",
            "method_body": "public boolean isValidReturnType(Class clazz) {\nif (method.getReturnType().isPrimitive()) {\nreturn Primitives.primitiveTypeOf(clazz) == method.getReturnType();\n}",
            "method_id": 69
        },
        {
            "method_signature": "org.mockito.internal.stubbing.answers.Returns:getReturnType()Ljava/lang/Class;",
            "method_body": "public Class<?> getReturnType() {\nreturn value.getClass();\n}",
            "method_id": 70
        },
        {
            "method_signature": "org.mockito.internal.creation.MethodInterceptorFilter:intercept(Ljava/lang/Object;Ljava/lang/reflect/Method;[Ljava/lang/Object;Lorg/mockito/cglib/proxy/MethodProxy;)Ljava/lang/Object;",
            "method_body": "public Object intercept(Object proxy, Method method, Object[] args, MethodProxy methodProxy)\nif (objectMethodsGuru.isEqualsMethod(method)) {\nreturn proxy == args[0];\n} else if (objectMethodsGuru.isHashCodeMethod(method)) {\nMockitoMethodProxy mockitoMethodProxy = createMockitoMethodProxy(methodProxy);\ncglibHacker.setMockitoNamingPolicy(mockitoMethodProxy);\nMockitoMethod mockitoMethod = createMockitoMethod(method);\nFilteredCGLIBProxyRealMethod realMethod = new FilteredCGLIBProxyRealMethod(mockitoMethodProxy);\nInvocation invocation = new Invocation(proxy, mockitoMethod, args, SequenceNumber.next(), realMethod);\nreturn handler.handle(invocation);\n}",
            "method_id": 71
        },
        {
            "method_signature": "org.mockito.internal.util.ObjectMethodsGuru:isEqualsMethod(Ljava/lang/reflect/Method;)Z",
            "method_body": "public boolean isEqualsMethod(Method method) {\nreturn method.getName().equals(\"equals\") && method.getParameterTypes().length == 1 && method.getParameterTypes()[0] == Object.class;\n}",
            "method_id": 72
        },
        {
            "method_signature": "org.mockito.internal.stubbing.answers.Returns:returnsNull()Z",
            "method_body": "public boolean returnsNull() {\nreturn value == null;\n}",
            "method_id": 73
        },
        {
            "method_signature": "org.mockito.Matchers:reportMatcher(Lorg/hamcrest/Matcher;)Lorg/mockito/internal/progress/HandyReturnValues;",
            "method_body": "private static HandyReturnValues reportMatcher(Matcher<?> matcher) {\nreturn mockingProgress.getArgumentMatcherStorage().reportMatcher(matcher);\n}",
            "method_id": 74
        },
        {
            "method_signature": "org.mockito.internal.stubbing.answers.AnswersValidator:validateReturnValue(Lorg/mockito/internal/stubbing/answers/Returns;Lorg/mockito/internal/invocation/Invocation;)V",
            "method_body": "private void validateReturnValue(Returns answer, Invocation invocation) {\nif (invocation.isVoid()) {\nif (answer.returnsNull() && invocation.returnsPrimitive()) {\nif (!answer.returnsNull() && !invocation.isValidReturnType(answer.getReturnType())) {\n}",
            "method_id": 75
        },
        {
            "method_signature": "org.mockito.internal.invocation.Invocation:argumentsToMatchers()Ljava/util/List;",
            "method_body": "protected List<Matcher> argumentsToMatchers() {\nList<Matcher> matchers = new ArrayList<Matcher>(arguments.length);\nfor (Object arg : arguments) {\nreturn matchers;\n}",
            "method_id": 76
        },
        {
            "method_signature": "org.mockito.internal.stubbing.answers.Returns:<init>(Ljava/lang/Object;)V",
            "method_body": "public Returns(Object value) {\nthis.value = value;\n}",
            "method_id": 77
        },
        {
            "method_signature": "org.mockito.internal.creation.jmock.ClassImposterizer:prepend(Ljava/lang/Class;[Ljava/lang/Class;)[Ljava/lang/Class;",
            "method_body": "private Class<?>[] prepend(Class<?> first, Class<?>... rest) {\nClass<?>[] all = new Class<?>[rest.length+1];\nall[0] = first;\nSystem.arraycopy(rest, 0, all, 1, rest.length);\nreturn all;\n}",
            "method_id": 78
        },
        {
            "method_signature": "org.mockito.internal.stubbing.ConsecutiveStubbing:<init>(Lorg/mockito/internal/stubbing/InvocationContainerImpl;)V",
            "method_body": "public ConsecutiveStubbing(InvocationContainerImpl invocationContainerImpl) {\nthis.invocationContainerImpl = invocationContainerImpl;\n}",
            "method_id": 79
        },
        {
            "method_signature": "org.mockito.internal.stubbing.OngoingStubbingImpl:thenAnswer(Lorg/mockito/stubbing/Answer;)Lorg/mockito/stubbing/OngoingStubbing;",
            "method_body": "public OngoingStubbing<T> thenAnswer(Answer<?> answer) {\ninvocationContainerImpl.addAnswer(answer);\nreturn new ConsecutiveStubbing<T>(invocationContainerImpl);\n}",
            "method_id": 80
        },
        {
            "method_signature": "org.mockito.internal.invocation.Invocation:getArgumentsCount()I",
            "method_body": "public int getArgumentsCount() {\nreturn arguments.length;\n}",
            "method_id": 81
        },
        {
            "method_signature": "org.mockito.internal.invocation.Invocation:<init>(Ljava/lang/Object;Lorg/mockito/internal/invocation/MockitoMethod;[Ljava/lang/Object;ILorg/mockito/internal/invocation/realmethod/RealMethod;)V",
            "method_body": "public Invocation(Object mock, MockitoMethod mockitoMethod, Object[] args, int sequenceNumber, RealMethod realMethod) {\nthis.method = mockitoMethod;\nthis.mock = mock;\nthis.realMethod = realMethod;\nthis.arguments = expandVarArgs(mockitoMethod.isVarArgs(), args);\nthis.rawArguments = args;\nthis.sequenceNumber = sequenceNumber;\nthis.location = new Location();\n}",
            "method_id": 82
        },
        {
            "method_signature": "org.mockito.internal.invocation.Invocation:expandVarArgs(Z[Ljava/lang/Object;)[Ljava/lang/Object;",
            "method_body": "private static Object[] expandVarArgs(final boolean isVarArgs, final Object[] args) {\nif (!isVarArgs || args[args.length - 1] != null && !args[args.length - 1].getClass().isArray()) {\nreturn args == null ? new Object[0] : args;\nfinal int nonVarArgsCount = args.length - 1;\nif (args[nonVarArgsCount] == null) {\nvarArgs = ArrayEquals.createObjectArray(args[nonVarArgsCount]);\nfinal int varArgsCount = varArgs.length;\nObject[] newArgs = new Object[nonVarArgsCount + varArgsCount];\nSystem.arraycopy(args, 0, newArgs, 0, nonVarArgsCount);\nSystem.arraycopy(varArgs, 0, newArgs, nonVarArgsCount, varArgsCount);\nreturn newArgs;\n}",
            "method_id": 83
        },
        {
            "method_signature": "org.mockito.internal.debugging.DebuggingInfo:reportUsedStub(Lorg/mockito/internal/invocation/InvocationMatcher;)V",
            "method_body": "public void reportUsedStub(InvocationMatcher invocationMatcher) {\nIterator<Invocation> i = unusedStubs.iterator();\nwhile(i.hasNext()) {\n}",
            "method_id": 84
        },
        {
            "method_signature": "org.mockito.internal.progress.ArgumentMatcherStorageImpl:reportMatcher(Lorg/hamcrest/Matcher;)Lorg/mockito/internal/progress/HandyReturnValues;",
            "method_body": "public HandyReturnValues reportMatcher(Matcher matcher) {\nmatcherStack.push(new LocalizedMatcher(matcher));\nreturn new HandyReturnValues();\n}",
            "method_id": 85
        },
        {
            "method_signature": "org.mockito.internal.stubbing.InvocationContainerImpl:addAnswer(Lorg/mockito/stubbing/Answer;)V",
            "method_body": "public void addAnswer(Answer answer) {\nregisteredInvocations.removeLast();\naddAnswer(answer, false);\n}",
            "method_id": 86
        },
        {
            "method_signature": "org.mockito.internal.verification.RegisteredInvocations:removeLast()V",
            "method_body": "public void removeLast() {\nint last = invocations.size() - 1;\ninvocations.remove(last);\n}",
            "method_id": 87
        },
        {
            "method_signature": "org.mockito.internal.invocation.Invocation:markStubbed(Lorg/mockito/internal/invocation/StubInfo;)V",
            "method_body": "public void markStubbed(StubInfo stubInfo) {\nthis.stubInfo = stubInfo;\n}",
            "method_id": 88
        },
        {
            "method_signature": "org.mockito.internal.stubbing.StubbedInvocationMatcher:markStubUsed(Lorg/mockito/exceptions/PrintableInvocation;)V",
            "method_body": "public void markStubUsed(PrintableInvocation usedAt) {\nthis.usedAt = usedAt;\n}",
            "method_id": 89
        },
        {
            "method_signature": "org.mockito.internal.invocation.StubInfo:<init>(Lorg/mockito/exceptions/PrintableInvocation;)V",
            "method_body": "public StubInfo(PrintableInvocation stubbedAt) {\nthis.stubbedAt = stubbedAt;\n}",
            "method_id": 90
        },
        {
            "method_signature": "org.mockito.internal.debugging.Location:<init>()V",
            "method_body": "public Location() {\nthis(new StackTraceFilter());\n}",
            "method_id": 91
        },
        {
            "method_signature": "org.mockito.internal.debugging.Location:<init>(Lorg/mockito/internal/exceptions/base/StackTraceFilter;)V",
            "method_body": "public Location(StackTraceFilter filter) {\nStackTraceElement[] stackTrace = Thread.currentThread().getStackTrace();\nStackTraceElement[] filtered = filter.filter(stackTrace, false);\nif (filtered.length == 0) {\nwhere = \"-> at \" + filtered[0].toString();\n}",
            "method_id": 92
        },
        {
            "method_signature": "org.mockito.Mockito:mock(Ljava/lang/Class;Lorg/mockito/MockSettings;)Ljava/lang/Object;",
            "method_body": "public static <T> T mock(Class<T> classToMock, MockSettings mockSettings) {\nreturn MOCKITO_CORE.mock(classToMock, mockSettings);\n}",
            "method_id": 93
        },
        {
            "method_signature": "org.mockito.internal.exceptions.base.StackTraceFilter:isBad(Ljava/lang/StackTraceElement;)Z",
            "method_body": "public boolean isBad(StackTraceElement e) {\nboolean fromMockObject = e.getClassName().contains(\"$$EnhancerByMockitoWithCGLIB$$\");\nboolean fromOrgMockito = e.getClassName().startsWith(\"org.mockito.\");\nboolean isRunner = e.getClassName().startsWith(\"org.mockito.runners.\");\nboolean isInternalRunner = e.getClassName().startsWith(\"org.mockito.internal.runners.\");\nreturn (fromMockObject || fromOrgMockito) && !isRunner && !isInternalRunner;\n}",
            "method_id": 94
        },
        {
            "method_signature": "org.mockito.internal.exceptions.base.StackTraceFilter:filter([Ljava/lang/StackTraceElement;Z)[Ljava/lang/StackTraceElement;",
            "method_body": "public StackTraceElement[] filter(StackTraceElement[] target, boolean keepTop) {\nList<StackTraceElement> unfilteredStackTrace = Arrays.asList(target);\nint lastBad = -1;\nint firstBad = -1;\nfor (int i = 0; i < unfilteredStackTrace.size(); i++) {\nif (!this.isBad(unfilteredStackTrace.get(i))) {\ncontinue;\nlastBad = i;\nif (firstBad == -1) {\nfirstBad = i;\nif (keepTop && firstBad != -1) {\ntop = new LinkedList<StackTraceElement>();\nList<StackTraceElement> bottom = unfilteredStackTrace.subList(lastBad + 1, unfilteredStackTrace.size());\nList<StackTraceElement> filtered = new ArrayList<StackTraceElement>(top);\nfiltered.addAll(bottom);\nreturn filtered.toArray(new StackTraceElement[]{});\n}",
            "method_id": 95
        },
        {
            "method_signature": "org.mockito.internal.creation.MockSettingsImpl:initiateMockName(Ljava/lang/Class;)V",
            "method_body": "public void initiateMockName(Class classToMock) {\nmockName = new MockName(name, classToMock);\n}",
            "method_id": 96
        },
        {
            "method_signature": "org.mockito.internal.MockHandler:<init>(Lorg/mockito/internal/creation/MockSettingsImpl;)V",
            "method_body": "public MockHandler(MockSettingsImpl mockSettings) {\nthis.mockSettings = mockSettings;\nthis.mockingProgress = new ThreadSafeMockingProgress();\nthis.matchersBinder = new MatchersBinder();\nthis.invocationContainerImpl = new InvocationContainerImpl(mockingProgress);\n}",
            "method_id": 97
        },
        {
            "method_signature": "org.mockito.internal.stubbing.InvocationContainerImpl:<init>(Lorg/mockito/internal/progress/MockingProgress;)V",
            "method_body": "public InvocationContainerImpl(MockingProgress mockingProgress) {\nthis.mockingProgress = mockingProgress;\n}",
            "method_id": 98
        },
        {
            "method_signature": "org.mockito.internal.creation.MethodInterceptorFilter:<init>(Lorg/mockito/internal/MockitoInvocationHandler;Lorg/mockito/internal/creation/MockSettingsImpl;)V",
            "method_body": "public MethodInterceptorFilter(MockitoInvocationHandler handler, MockSettingsImpl mockSettings) {\nthis.handler = handler;\nthis.mockSettings = mockSettings;\n}",
            "method_id": 99
        }
    ]
}