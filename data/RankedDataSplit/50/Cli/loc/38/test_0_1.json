{
    "bug_id": 38,
    "test_id": 0,
    "test_name": "org.apache.commons.cli.bug.BugCLI265Test.shouldParseConcatenatedShortOptions",
    "test_body": "public void shouldParseConcatenatedShortOptions() throws Exception {\nString[] concatenatedShortOptions = new String[] { \"-t1\", \"-ab\" };\n80: final CommandLine commandLine = parser.parse(options, concatenatedShortOptions);\n82: assertTrue(commandLine.hasOption(\"t1\"));\nassertNull(commandLine.getOptionValue(\"t1\"));\nassertTrue(commandLine.hasOption(\"a\"));",
    "stack_trace": "junit.framework.AssertionFailedError: expected null, but was:<-ab>\nat org.junit.Assert.fail(Assert.java:88)\nat org.junit.Assert.failNotNull(Assert.java:664)\nat org.junit.Assert.assertNull(Assert.java:646)\nat org.junit.Assert.assertNull(Assert.java:656)\nat org.apache.commons.cli.bug.BugCLI265Test.shouldParseConcatenatedShortOptions(BugCLI265Test.java:83)",
    "covered_methods": [
        {
            "method_signature": "org.apache.commons.cli.OptionValidator:isValidChar(C)Z",
            "method_body": "private static boolean isValidChar(char c)\nreturn Character.isJavaIdentifierPart(c);\n}",
            "method_id": 50,
            "loc": 3
        },
        {
            "method_signature": "org.apache.commons.cli.CommandLine:addOption(Lorg/apache/commons/cli/Option;)V",
            "method_body": "protected void addOption(Option opt)\noptions.add(opt);\n}",
            "method_id": 51,
            "loc": 3
        },
        {
            "method_signature": "org.apache.commons.cli.Option$Builder:hasArg()Lorg/apache/commons/cli/Option$Builder;",
            "method_body": "public Builder hasArg()\nreturn hasArg(true);\n}",
            "method_id": 52,
            "loc": 3
        },
        {
            "method_signature": "org.apache.commons.cli.DefaultParser:parse(Lorg/apache/commons/cli/Options;[Ljava/lang/String;)Lorg/apache/commons/cli/CommandLine;",
            "method_body": "public CommandLine parse(Options options, String[] arguments) throws ParseException\nreturn parse(options, arguments, null);\n}",
            "method_id": 53,
            "loc": 3
        },
        {
            "method_signature": "org.apache.commons.cli.DefaultParser:parse(Lorg/apache/commons/cli/Options;[Ljava/lang/String;Ljava/util/Properties;)Lorg/apache/commons/cli/CommandLine;",
            "method_body": "public CommandLine parse(Options options, String[] arguments, Properties properties) throws ParseException\nreturn parse(options, arguments, properties, false);\n}",
            "method_id": 54,
            "loc": 3
        },
        {
            "method_signature": "org.apache.commons.cli.DefaultParser:isOption(Ljava/lang/String;)Z",
            "method_body": "private boolean isOption(String token)\nreturn isLongOption(token) || isShortOption(token);\n}",
            "method_id": 55,
            "loc": 3
        }
    ]
}