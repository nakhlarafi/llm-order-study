{
    "bug_id": 12,
    "test_id": 1,
    "test_name": "org.apache.commons.cli.GnuParserTest.testShortWithEqual",
    "test_body": "public void testShortWithEqual() throws Exception\n{\nString[] args = new String[] { \"-f=bar\" };\n203: Options options = new Options();\noptions.addOption(OptionBuilder.withLongOpt(\"foo\").hasArg().create('f'));\n206: Parser parser = new GnuParser();\nCommandLine cl = parser.parse(options, args);\n209: assertEquals(\"bar\", cl.getOptionValue(\"foo\"));\n}\n",
    "stack_trace": "junit.framework.ComparisonFailure: expected:<[]bar> but was:<[=]bar>\nat junit.framework.Assert.assertEquals(Assert.java:100)\nat junit.framework.Assert.assertEquals(Assert.java:107)\nat junit.framework.TestCase.assertEquals(TestCase.java:269)\nat org.apache.commons.cli.GnuParserTest.testShortWithEqual(GnuParserTest.java:209)",
    "covered_methods": [
        {
            "method_signature": "org.apache.commons.cli.Parser:processProperties(Ljava/util/Properties;)V",
            "method_body": "protected void processProperties(Properties properties)\nif (properties == null)\nreturn;\n}",
            "method_id": 50
        },
        {
            "method_signature": "org.apache.commons.cli.Parser:checkRequiredOptions()V",
            "method_body": "protected void checkRequiredOptions()\nif (getRequiredOptions().size() > 0)\n}",
            "method_id": 51
        },
        {
            "method_signature": "org.apache.commons.cli.Option:hashCode()I",
            "method_body": "public int hashCode()\nresult = ( opt != null ? opt.hashCode() : 0 );\nresult = 31 * result + ( longOpt != null ? longOpt.hashCode() : 0 );\nreturn result;\n}",
            "method_id": 52
        },
        {
            "method_signature": "org.apache.commons.cli.CommandLine:addOption(Lorg/apache/commons/cli/Option;)V",
            "method_body": "void addOption(Option opt)\noptions.add(opt);\n}",
            "method_id": 53
        },
        {
            "method_signature": "org.apache.commons.cli.Options:getOption(Ljava/lang/String;)Lorg/apache/commons/cli/Option;",
            "method_body": "public Option getOption(String opt)\nopt = Util.stripLeadingHyphens(opt);\nif (shortOpts.containsKey(opt))\nreturn (Option) shortOpts.get(opt);\n}",
            "method_id": 54
        },
        {
            "method_signature": "org.apache.commons.cli.Options:getOptionGroup(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/OptionGroup;",
            "method_body": "public OptionGroup getOptionGroup(Option opt)\nreturn (OptionGroup) optionGroups.get(opt.getKey());\n}",
            "method_id": 55
        }
    ]
}