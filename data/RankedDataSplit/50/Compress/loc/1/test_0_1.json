{
    "bug_id": 1,
    "test_id": 0,
    "test_name": "org.apache.commons.compress.archivers.CpioTestCase.testCpioUnarchive",
    "test_body": "54: public void testCpioUnarchive() throws Exception {\n55: final File output = new File(dir, \"bla.cpio\");\n56: {\n57: final File file1 = getFile(\"test1.xml\");\n58: final File file2 = getFile(\"test2.xml\");\n59: 60: final OutputStream out = new FileOutputStream(output);\n61: final ArchiveOutputStream os = new ArchiveStreamFactory().createArchiveOutputStream(\"cpio\", out);\n62: os.putArchiveEntry(new CpioArchiveEntry(\"test1.xml\", file1.length()));\n63: IOUtils.copy(new FileInputStream(file1), os);\n64: os.closeArchiveEntry();\n65: 66: os.putArchiveEntry(new CpioArchiveEntry(\"test2.xml\", file2.length()));\n67: IOUtils.copy(new FileInputStream(file2), os);\n68: os.closeArchiveEntry();\n69: 70: os.close();\n71: out.close();\n72: }\n73: 74: // Unarchive Operation\n75: final File input = output;\n76: final InputStream is = new FileInputStream(input);\n77: final ArchiveInputStream in = new ArchiveStreamFactory().createArchiveInputStream(\"cpio\", is);\n78: 79: 80: Map result = new HashMap();\n81: ArchiveEntry entry = null;\n82: while ((entry = in.getNextEntry()) != null) {\n83: File target = new File(dir, entry.getName());\n84: final OutputStream out = new FileOutputStream(target);\n85: IOUtils.copy(in, out);\n86: out.close();\n87: result.put(entry.getName(), target);\n88: }\n89: in.close();\n90: 91: int lineSepLength = System.getProperty(\"line.separator\").length();\n92: 93: File t = (File)result.get(\"test1.xml\");\n94: assertTrue(\"Expected \" + t.getAbsolutePath() + \" to exist\", t.exists());\n95: assertEquals(\"length of \" + t.getAbsolutePath(),\n96: 72 + 4 * lineSepLength, t.length());\n97: 98: t = (File)result.get(\"test2.xml\");\n99: assertTrue(\"Expected \" + t.getAbsolutePath() + \" to exist\", t.exists());\n100: assertEquals(\"length of \" + t.getAbsolutePath(),\n101: 73 + 5 * lineSepLength, t.length());\n102: }\n",
    "stack_trace": "",
    "covered_methods": [
        {
            "method_signature": "org.apache.commons.compress.archivers.cpio.CpioArchiveEntry:getTime()J",
            "method_body": "public long getTime() {\nreturn this.mtime;\n}",
            "method_id": 50,
            "loc": 3
        },
        {
            "method_signature": "org.apache.commons.compress.archivers.cpio.CpioArchiveEntry:getUID()J",
            "method_body": "public long getUID() {\nreturn this.uid;\n}",
            "method_id": 51,
            "loc": 3
        },
        {
            "method_signature": "org.apache.commons.compress.archivers.cpio.CpioArchiveEntry:setGID(J)V",
            "method_body": "public void setGID(final long gid) {\nthis.gid = gid;\n}",
            "method_id": 52,
            "loc": 3
        },
        {
            "method_signature": "org.apache.commons.compress.archivers.cpio.CpioArchiveEntry:setInode(J)V",
            "method_body": "public void setInode(final long inode) {\nthis.inode = inode;\n}",
            "method_id": 53,
            "loc": 3
        },
        {
            "method_signature": "org.apache.commons.compress.archivers.cpio.CpioArchiveEntry:setName(Ljava/lang/String;)V",
            "method_body": "public void setName(final String name) {\nthis.name = name;\n}",
            "method_id": 54,
            "loc": 3
        },
        {
            "method_signature": "org.apache.commons.compress.archivers.cpio.CpioArchiveEntry:setNumberOfLinks(J)V",
            "method_body": "public void setNumberOfLinks(final long nlink) {\nthis.nlink = nlink;\n}",
            "method_id": 55,
            "loc": 3
        },
        {
            "method_signature": "org.apache.commons.compress.archivers.cpio.CpioArchiveEntry:setTime(J)V",
            "method_body": "public void setTime(final long time) {\nthis.mtime = time;\n}",
            "method_id": 56,
            "loc": 3
        },
        {
            "method_signature": "org.apache.commons.compress.archivers.cpio.CpioArchiveEntry:setUID(J)V",
            "method_body": "public void setUID(final long uid) {\nthis.uid = uid;\n}",
            "method_id": 57,
            "loc": 3
        },
        {
            "method_signature": "org.apache.commons.compress.utils.IOUtils:copy(Ljava/io/InputStream;Ljava/io/OutputStream;)V",
            "method_body": "public static void copy(final InputStream input, final OutputStream output) throws IOException {\ncopy(input, output, 8024);\n}",
            "method_id": 58,
            "loc": 3
        },
        {
            "method_signature": "org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream:<init>(Ljava/io/InputStream;)V",
            "method_body": "public CpioArchiveInputStream(final InputStream in) {\nthis.in = in;\n}",
            "method_id": 59,
            "loc": 3
        },
        {
            "method_signature": "org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream:ensureOpen()V",
            "method_body": "private void ensureOpen() throws IOException {\nif (this.closed) {\n}",
            "method_id": 60,
            "loc": 3
        },
        {
            "method_signature": "org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream:getNextEntry()Lorg/apache/commons/compress/archivers/ArchiveEntry;",
            "method_body": "public ArchiveEntry getNextEntry() throws IOException {\nreturn getNextCPIOEntry();\n}",
            "method_id": 61,
            "loc": 3
        }
    ]
}