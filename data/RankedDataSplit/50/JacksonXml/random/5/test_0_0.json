{
    "bug_id": 5,
    "test_id": 0,
    "test_name": "com.fasterxml.jackson.dataformat.xml.MapperCopyTest.testCopyWith",
    "test_body": "public void testCopyWith() throws Exception\n{\nXmlMapper xmlMapper = newMapper();\nfinal ObjectMapper xmlMapperNoAnno = xmlMapper.copy()\n.disable(MapperFeature.USE_ANNOTATIONS)\n.disable(SerializationFeature.FAIL_ON_EMPTY_BEANS);\n81: String xml1 = xmlMapper.writeValueAsString(new Pojo282());\nString xml2 = xmlMapperNoAnno.writeValueAsString(new Pojo282());\n84: if (!xml1.contains(\"AnnotatedName\")) {\nfail(\"Should use name 'AnnotatedName', xml = \"+xml1);\n}\nif (!xml2.contains(\"Pojo282\")\n|| xml2.contains(\"AnnotatedName\")) {\nfail(\"Should NOT use name 'AnnotatedName' but 'Pojo282', xml = \"+xml1);\n}",
    "stack_trace": "junit.framework.AssertionFailedError: Should NOT use name 'AnnotatedName' but 'Pojo282', xml = <AnnotatedName><a>3</a></AnnotatedName>\nat junit.framework.Assert.fail(Assert.java:57)\nat junit.framework.TestCase.fail(TestCase.java:227)\nat com.fasterxml.jackson.dataformat.xml.MapperCopyTest.testCopyWith(MapperCopyTest.java:89)",
    "covered_methods": [
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator:initGenerator()V",
            "method_body": "public void initGenerator()  throws IOException\nif (_initialized) {\n_initialized = true;\nif (Feature.WRITE_XML_1_1.enabledIn(_formatFeatures)) {\n} else if (Feature.WRITE_XML_DECLARATION.enabledIn(_formatFeatures)) {\nreturn;\n}",
            "method_id": 0
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup:findNamespace(Lcom/fasterxml/jackson/databind/AnnotationIntrospector;Lcom/fasterxml/jackson/databind/introspect/AnnotatedClass;)Ljava/lang/String;",
            "method_body": "private String findNamespace(AnnotationIntrospector ai, AnnotatedClass ann)\nfor (AnnotationIntrospector intr : ai.allIntrospectors()) {\nif (intr instanceof XmlAnnotationIntrospector) {\nString ns = ((XmlAnnotationIntrospector) intr).findNamespace(ann);\nif (ns != null) {\n}\nreturn null;\n}",
            "method_id": 1
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser$Feature:enabledByDefault()Z",
            "method_body": "@Override public boolean enabledByDefault() { return _defaultState; }\n@Override public boolean enabledByDefault() { return _defaultState; }",
            "method_id": 2
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.XmlFactory:createGenerator(Ljava/io/Writer;)Lcom/fasterxml/jackson/dataformat/xml/ser/ToXmlGenerator;",
            "method_body": "public ToXmlGenerator createGenerator(Writer out) throws IOException\nreturn new ToXmlGenerator(_createContext(out, false),\n}",
            "method_id": 3
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.XmlMapper:<init>(Lcom/fasterxml/jackson/dataformat/xml/XmlFactory;)V",
            "method_body": "public XmlMapper(XmlFactory xmlFactory) {\nthis(xmlFactory, DEFAULT_XML_MODULE);\n}",
            "method_id": 4
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator:<init>(Lcom/fasterxml/jackson/core/io/IOContext;IILcom/fasterxml/jackson/core/ObjectCodec;Ljavax/xml/stream/XMLStreamWriter;)V",
            "method_body": "public ToXmlGenerator(IOContext ctxt, int stdFeatures, int xmlFeatures,\nsuper(stdFeatures, codec);\n_formatFeatures = xmlFeatures;\n_ioContext = ctxt;\n_originalXmlWriter = sw;\n_xmlWriter = Stax2WriterAdapter.wrapIfNecessary(sw);\n_stax2Emulation = (_xmlWriter != sw);\n_xmlPrettyPrinter = (_cfgPrettyPrinter instanceof XmlPrettyPrinter) ?\n}",
            "method_id": 5
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser$Feature:<init>(Ljava/lang/String;IZ)V",
            "method_body": "private Feature(boolean defaultState) {\n_defaultState = defaultState;\n_mask = (1 << ordinal());\n}",
            "method_id": 6
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.JacksonXmlAnnotationIntrospector:findNamespace(Lcom/fasterxml/jackson/databind/introspect/Annotated;)Ljava/lang/String;",
            "method_body": "public String findNamespace(Annotated ann)\nJacksonXmlProperty prop = ann.getAnnotation(JacksonXmlProperty.class);\nif (prop != null) {\nreturn null;\n}",
            "method_id": 7
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider:_rootNameFromConfig()Ljavax/xml/namespace/QName;",
            "method_body": "protected QName _rootNameFromConfig()\nPropertyName name = _config.getFullRootName();\nif (name == null) {\nreturn null;\n}",
            "method_id": 8
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator:_handleEndObject()V",
            "method_body": "public final void _handleEndObject() throws IOException\nif (_elementNameStack.isEmpty()) {\n_nextName = _elementNameStack.removeLast();\n_nextIsAttribute = false;\n_xmlWriter.writeEndElement();\nif (_elementNameStack.isEmpty() && (_xmlPrettyPrinter != null)) {\n}\n}",
            "method_id": 9
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.XmlFactory:<init>(Lcom/fasterxml/jackson/core/ObjectCodec;Ljavax/xml/stream/XMLInputFactory;Ljavax/xml/stream/XMLOutputFactory;)V",
            "method_body": "public XmlFactory(ObjectCodec oc, XMLInputFactory xmlIn, XMLOutputFactory xmlOut)\nthis(oc, DEFAULT_XML_PARSER_FEATURE_FLAGS, DEFAULT_XML_GENERATOR_FEATURE_FLAGS,\n}",
            "method_id": 10
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.XmlMapper:<init>(Lcom/fasterxml/jackson/dataformat/xml/XmlMapper;)V",
            "method_body": "protected XmlMapper(XmlMapper src) {\nsuper(src);\n_xmlModule = src._xmlModule;\n}",
            "method_id": 11
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator:setNextName(Ljavax/xml/namespace/QName;)V",
            "method_body": "public final void setNextName(QName name)\n_nextName = name;\n}",
            "method_id": 12
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.XmlFactory:<clinit>()V",
            "method_body": "public final static String FORMAT_NAME_XML = \"XML\";\nfinal static int DEFAULT_XML_PARSER_FEATURE_FLAGS = FromXmlParser.Feature.collectDefaults();\nfinal static int DEFAULT_XML_GENERATOR_FEATURE_FLAGS = ToXmlGenerator.Feature.collectDefaults();\npublic XmlFactory() { this(null, null, null); }",
            "method_id": 13
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.JacksonXmlModule:_constructIntrospector()Lcom/fasterxml/jackson/databind/AnnotationIntrospector;",
            "method_body": "protected AnnotationIntrospector _constructIntrospector() {\nreturn new JacksonXmlAnnotationIntrospector(_cfgDefaultUseWrapper);\n}",
            "method_id": 14
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.util.TypeUtil:isIndexedType(Ljava/lang/Class;)Z",
            "method_body": "public static boolean isIndexedType(Class<?> cls)\nreturn (cls.isArray() && cls != byte[].class && cls != char[].class)\n}",
            "method_id": 15
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerModifier:changeProperties(Lcom/fasterxml/jackson/databind/SerializationConfig;Lcom/fasterxml/jackson/databind/BeanDescription;Ljava/util/List;)Ljava/util/List;",
            "method_body": "public List<BeanPropertyWriter> changeProperties(SerializationConfig config,\nfinal AnnotationIntrospector intr = config.getAnnotationIntrospector();\nfor (int i = 0, len = beanProperties.size(); i < len; ++i) {\nBeanPropertyWriter bpw = beanProperties.get(i);\nfinal AnnotatedMember member = bpw.getMember();\nString ns = AnnotationUtil.findNamespaceAnnotation(intr, member);\nBoolean isAttribute = AnnotationUtil.findIsAttributeAnnotation(intr, member);\nBoolean isText = AnnotationUtil.findIsTextAnnotation(intr, member);\nBoolean isCData = AnnotationUtil.findIsCDataAnnotation(intr, member);\nbpw.setInternalSetting(XmlBeanSerializerBase.KEY_XML_INFO,\nif (!TypeUtil.isIndexedType(bpw.getType())) {\ncontinue;\nreturn beanProperties;\n}",
            "method_id": 16
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.JacksonXmlAnnotationIntrospector:<init>(Z)V",
            "method_body": "public JacksonXmlAnnotationIntrospector(boolean defaultUseWrapper) {\n_cfgDefaultUseWrapper = defaultUseWrapper;\n}",
            "method_id": 17
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator$Feature:enabledIn(I)Z",
            "method_body": "@Override public boolean enabledIn(int flags) { return (flags & getMask()) != 0; }\n@Override public boolean enabledIn(int flags) { return (flags & getMask()) != 0; }",
            "method_id": 18
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.XmlFactory:<init>()V",
            "method_body": "public XmlFactory() { this(null, null, null); }\npublic XmlFactory() { this(null, null, null); }",
            "method_id": 19
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.JacksonXmlAnnotationIntrospector:isOutputAsText(Lcom/fasterxml/jackson/databind/introspect/Annotated;)Ljava/lang/Boolean;",
            "method_body": "public Boolean isOutputAsText(Annotated ann)\nJacksonXmlText prop = ann.getAnnotation(JacksonXmlText.class);\nif (prop != null) {\nreturn null;\n}",
            "method_id": 20
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.util.XmlInfo:<init>(Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/Boolean;Ljava/lang/Boolean;)V",
            "method_body": "public XmlInfo(Boolean isAttribute, String ns, Boolean isText, Boolean isCData)\n{\n_isAttribute = (isAttribute == null) ? false : isAttribute.booleanValue();\n_namespace = (ns == null) ? \"\" : ns;\n_isText = (isText == null) ? false : isText.booleanValue();\n_isCData = (isCData == null) ? false : isCData.booleanValue();\n}",
            "method_id": 21
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator:_handleStartObject()V",
            "method_body": "public final void _handleStartObject() throws IOException\nif (_nextName == null) {\n_elementNameStack.addLast(_nextName);\n_xmlWriter.writeStartElement(_nextName.getNamespaceURI(), _nextName.getLocalPart());\n}\n}",
            "method_id": 22
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter$Lf2SpacesIndenter:<init>()V",
            "method_body": "public Lf2SpacesIndenter() { }\npublic Lf2SpacesIndenter() { }",
            "method_id": 23
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.JacksonXmlAnnotationIntrospector:_findXmlName(Lcom/fasterxml/jackson/databind/introspect/Annotated;)Lcom/fasterxml/jackson/databind/PropertyName;",
            "method_body": "protected PropertyName _findXmlName(Annotated a)\nJacksonXmlProperty pann = a.getAnnotation(JacksonXmlProperty.class);\nif (pann != null) {\nreturn null;\n}",
            "method_id": 24
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator$Feature:<init>(Ljava/lang/String;IZ)V",
            "method_body": "private Feature(boolean defaultState) {\n_defaultState = defaultState;\n_mask = (1 << ordinal());\n}",
            "method_id": 25
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider:<clinit>()V",
            "method_body": "private static final long serialVersionUID = 1L;\nprotected final static QName ROOT_NAME_FOR_NULL = new QName(\"null\");\nsuper();\n_rootNameLookup = rootNames;\n}",
            "method_id": 26
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializer:<init>(Lcom/fasterxml/jackson/databind/ser/std/BeanSerializerBase;)V",
            "method_body": "public XmlBeanSerializer(BeanSerializerBase src) {\nsuper(src);\n}",
            "method_id": 27
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider:<init>(Lcom/fasterxml/jackson/dataformat/xml/util/XmlRootNameLookup;)V",
            "method_body": "public XmlSerializerProvider(XmlRootNameLookup rootNames)\nsuper();\n_rootNameLookup = rootNames;\n}",
            "method_id": 28
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser$Feature:getMask()I",
            "method_body": "@Override public int getMask() { return _mask; }\n@Override public int getMask() { return _mask; }",
            "method_id": 29
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator:close()V",
            "method_body": "public void close() throws IOException\nsuper.close();\nif (isEnabled(JsonGenerator.Feature.AUTO_CLOSE_JSON_CONTENT)) {\nJsonStreamContext ctxt = _writeContext;\nif (ctxt.inArray()) {\n} else if (ctxt.inObject()) {\n}\nif (_ioContext.isResourceManaged() || isEnabled(JsonGenerator.Feature.AUTO_CLOSE_TARGET)) {\n_xmlWriter.closeCompletely();\n}\n}",
            "method_id": 30
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.JacksonXmlAnnotationIntrospector:findWrapperName(Lcom/fasterxml/jackson/databind/introspect/Annotated;)Lcom/fasterxml/jackson/databind/PropertyName;",
            "method_body": "public PropertyName findWrapperName(Annotated ann)\nJacksonXmlElementWrapper w = ann.getAnnotation(JacksonXmlElementWrapper.class);\nif (w != null) {\nif (_cfgDefaultUseWrapper) {\nreturn PropertyName.USE_DEFAULT;\n}",
            "method_id": 31
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.JacksonXmlAnnotationIntrospector:isOutputAsCData(Lcom/fasterxml/jackson/databind/introspect/Annotated;)Ljava/lang/Boolean;",
            "method_body": "public Boolean isOutputAsCData(Annotated ann) {\nJacksonXmlCData prop = ann.getAnnotation(JacksonXmlCData.class);\nif (prop != null) {\nreturn null;\n}",
            "method_id": 32
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.util.AnnotationUtil:findNamespaceAnnotation(Lcom/fasterxml/jackson/databind/AnnotationIntrospector;Lcom/fasterxml/jackson/databind/introspect/AnnotatedMember;)Ljava/lang/String;",
            "method_body": "public static String findNamespaceAnnotation(AnnotationIntrospector ai,\nfor (AnnotationIntrospector intr : ai.allIntrospectors()) {\nif (intr instanceof XmlAnnotationIntrospector) {\nString ns = ((XmlAnnotationIntrospector) intr).findNamespace(prop);\nif (ns != null) {\n} else  if (intr instanceof JaxbAnnotationIntrospector) {\n}\nreturn null;\n}",
            "method_id": 33
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator:writeStartObject()V",
            "method_body": "public final void writeStartObject() throws IOException\n_verifyValueWrite(\"start an object\");\n_writeContext = _writeContext.createChildObjectContext();\nif (_cfgPrettyPrinter != null) {\n_handleStartObject();\n}",
            "method_id": 34
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider:createInstance(Lcom/fasterxml/jackson/databind/SerializationConfig;Lcom/fasterxml/jackson/databind/ser/SerializerFactory;)Lcom/fasterxml/jackson/databind/ser/DefaultSerializerProvider;",
            "method_body": "public DefaultSerializerProvider createInstance(SerializationConfig config,\nreturn new XmlSerializerProvider(this, config, jsf);\n}",
            "method_id": 35
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.XmlFactory:_createXmlWriter(Ljava/io/Writer;)Ljavax/xml/stream/XMLStreamWriter;",
            "method_body": "protected XMLStreamWriter _createXmlWriter(Writer w) throws IOException\nsw = _xmlOutputFactory.createXMLStreamWriter(w);\n}\nreturn _initializeXmlWriter(sw);\n}",
            "method_id": 36
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator:checkNextIsUnwrapped()Z",
            "method_body": "protected boolean checkNextIsUnwrapped()\nif (_nextIsUnwrapped) {\nreturn false;\n}",
            "method_id": 37
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider:<init>(Lcom/fasterxml/jackson/dataformat/xml/ser/XmlSerializerProvider;Lcom/fasterxml/jackson/databind/SerializationConfig;Lcom/fasterxml/jackson/databind/ser/SerializerFactory;)V",
            "method_body": "public XmlSerializerProvider(XmlSerializerProvider src,\nsuper(src, config, f);\n_rootNameLookup  = src._rootNameLookup;\n}",
            "method_id": 38
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator:writeFieldName(Ljava/lang/String;)V",
            "method_body": "public final void writeFieldName(String name) throws IOException\nif (_writeContext.writeFieldName(name) == JsonWriteContext.STATUS_EXPECT_VALUE) {\nString ns = (_nextName == null) ? \"\" : _nextName.getNamespaceURI();\nsetNextName(new QName(ns, name));\n}",
            "method_id": 39
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.XmlFactory:<init>(Lcom/fasterxml/jackson/dataformat/xml/XmlFactory;Lcom/fasterxml/jackson/core/ObjectCodec;)V",
            "method_body": "protected XmlFactory(XmlFactory src, ObjectCodec oc)\nsuper(src, oc);\n_xmlParserFeatures = src._xmlParserFeatures;\n_xmlGeneratorFeatures = src._xmlGeneratorFeatures;\n_cfgNameForTextElement = src._cfgNameForTextElement;\n_xmlInputFactory = src._xmlInputFactory;\n_xmlOutputFactory = src._xmlOutputFactory;\n}",
            "method_id": 40
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.XmlMapper:copy()Lcom/fasterxml/jackson/dataformat/xml/XmlMapper;",
            "method_body": "public XmlMapper copy()\n_checkInvalidCopy(XmlMapper.class);\nreturn new XmlMapper(this);\n}",
            "method_id": 41
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator:writeEndObject()V",
            "method_body": "public final void writeEndObject() throws IOException\nif (!_writeContext.inObject()) {\n_writeContext = _writeContext.getParent();\nif (_cfgPrettyPrinter != null) {\n_handleEndObject();\n}",
            "method_id": 42
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializer:serialize(Ljava/lang/Object;Lcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/databind/SerializerProvider;)V",
            "method_body": "public void serialize(Object bean, JsonGenerator g, SerializerProvider provider) throws IOException\nif (_objectIdWriter != null) {\ng.writeStartObject();\nif (_propertyFilterId != null) {\nserializeFields(bean, g, provider);\ng.writeEndObject();\n}",
            "method_id": 43
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator$Feature:getMask()I",
            "method_body": "@Override public int getMask() { return _mask; }\n@Override public int getMask() { return _mask; }",
            "method_id": 44
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator:setNextIsAttribute(Z)V",
            "method_body": "public void setNextIsAttribute(boolean isAttribute)\n_nextIsAttribute = isAttribute;\n}",
            "method_id": 45
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider:copy()Lcom/fasterxml/jackson/databind/ser/DefaultSerializerProvider;",
            "method_body": "public DefaultSerializerProvider copy() {\nreturn new XmlSerializerProvider(this);\n}",
            "method_id": 46
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.util.XmlInfo:getNamespace()Ljava/lang/String;",
            "method_body": "public String getNamespace() { return _namespace; }\npublic String getNamespace() { return _namespace; }",
            "method_id": 47
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator:_verifyValueWrite(Ljava/lang/String;)V",
            "method_body": "protected final void _verifyValueWrite(String typeMsg) throws IOException\nint status = _writeContext.writeValue();\nif (status == JsonWriteContext.STATUS_EXPECT_NAME) {\n}",
            "method_id": 48
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.XmlMapper:<init>()V",
            "method_body": "public XmlMapper() {\nthis(new XmlFactory());\n}",
            "method_id": 49
        }
    ]
}