{
    "bug_id": 52,
    "test_id": 5,
    "test_name": "org.jsoup.parser.XmlTreeBuilderTest.handlesXmlDeclarationAsDeclaration",
    "test_body": "105: @Test public void handlesXmlDeclarationAsDeclaration() {\n106: String html = \"<?xml encoding='UTF-8' ?><body>One</body><!-- comment -->\";\n107: Document doc = Jsoup.parse(html, \"\", Parser.xmlParser());\n108: assertEquals(\"<?xml encoding=\\\"UTF-8\\\"?> <body> One </body> <!-- comment -->\",\n109: StringUtil.normaliseWhitespace(doc.outerHtml()));\n110: assertEquals(\"#declaration\", doc.childNode(0).nodeName());\n111: assertEquals(\"#comment\", doc.childNode(2).nodeName());\n112: }\n",
    "stack_trace": "",
    "covered_methods": [
        {
            "method_signature": "org.jsoup.parser.Token:asCharacter()Lorg/jsoup/parser/Token$Character;",
            "method_body": "final Character asCharacter() {\nreturn (Character) this;\n}",
            "method_id": 150,
            "loc": 3
        },
        {
            "method_signature": "org.jsoup.parser.Token$Tag:finaliseTag()V",
            "method_body": "final void finaliseTag() {\nif (pendingAttributeName != null) {\n}",
            "method_id": 151,
            "loc": 3
        },
        {
            "method_signature": "org.jsoup.parser.Token$Tag:isSelfClosing()Z",
            "method_body": "final boolean isSelfClosing() {\nreturn selfClosing;\n}",
            "method_id": 152,
            "loc": 3
        },
        {
            "method_signature": "org.jsoup.parser.Token$Tag:appendTagName(Ljava/lang/String;)V",
            "method_body": "final void appendTagName(String append) {\ntagName = tagName == null ? append : tagName.concat(append);\n}",
            "method_id": 153,
            "loc": 3
        },
        {
            "method_signature": "org.jsoup.helper.Validate:isFalse(Z)V",
            "method_body": "public static void isFalse(boolean val) {\nif (val)\n}",
            "method_id": 154,
            "loc": 3
        },
        {
            "method_signature": "org.jsoup.helper.Validate:isFalse(ZLjava/lang/String;)V",
            "method_body": "public static void isFalse(boolean val, String msg) {\nif (val)\n}",
            "method_id": 155,
            "loc": 3
        },
        {
            "method_signature": "org.jsoup.parser.CharacterReader:isEmpty()Z",
            "method_body": "boolean isEmpty() {\nreturn pos >= length;\n}",
            "method_id": 156,
            "loc": 3
        },
        {
            "method_signature": "org.jsoup.parser.CharacterReader:current()C",
            "method_body": "char current() {\nreturn pos >= length ? EOF : input[pos];\n}",
            "method_id": 157,
            "loc": 3
        },
        {
            "method_signature": "org.jsoup.parser.CharacterReader:unconsume()V",
            "method_body": "void unconsume() {\npos--;\n}",
            "method_id": 158,
            "loc": 3
        },
        {
            "method_signature": "org.jsoup.parser.CharacterReader:advance()V",
            "method_body": "void advance() {\npos++;\n}",
            "method_id": 159,
            "loc": 3
        },
        {
            "method_signature": "org.jsoup.parser.Tokeniser:transition(Lorg/jsoup/parser/TokeniserState;)V",
            "method_body": "void transition(TokeniserState state) {\nthis.state = state;\n}",
            "method_id": 160,
            "loc": 3
        },
        {
            "method_signature": "org.jsoup.parser.Tokeniser:createCommentPending()V",
            "method_body": "void createCommentPending() {\ncommentPending.reset();\n}",
            "method_id": 161,
            "loc": 3
        },
        {
            "method_signature": "org.jsoup.parser.Tokeniser:emitCommentPending()V",
            "method_body": "void emitCommentPending() {\nemit(commentPending);\n}",
            "method_id": 162,
            "loc": 3
        },
        {
            "method_signature": "org.jsoup.parser.Token$Character:getData()Ljava/lang/String;",
            "method_body": "String getData() {\nreturn data;\n}",
            "method_id": 163,
            "loc": 3
        },
        {
            "method_signature": "org.jsoup.parser.Token$Comment:getData()Ljava/lang/String;",
            "method_body": "String getData() {\nreturn data.toString();\n}",
            "method_id": 164,
            "loc": 3
        },
        {
            "method_signature": "org.jsoup.parser.Token$EOF:<init>()V",
            "method_body": "EOF() {\ntype = Token.TokenType.EOF;\n}",
            "method_id": 165,
            "loc": 3
        },
        {
            "method_signature": "org.jsoup.parser.Token$EOF:reset()Lorg/jsoup/parser/Token;",
            "method_body": "Token reset() {\nreturn this;\n}",
            "method_id": 166,
            "loc": 3
        },
        {
            "method_signature": "org.jsoup.nodes.Comment:nodeName()Ljava/lang/String;",
            "method_body": "public String nodeName() {\nreturn \"#comment\";\n}",
            "method_id": 167,
            "loc": 3
        },
        {
            "method_signature": "org.jsoup.nodes.Comment:getData()Ljava/lang/String;",
            "method_body": "public String getData() {\nreturn attributes.get(COMMENT_KEY);\n}",
            "method_id": 168,
            "loc": 3
        },
        {
            "method_signature": "org.jsoup.parser.XmlTreeBuilder:insertNode(Lorg/jsoup/nodes/Node;)V",
            "method_body": "private void insertNode(Node node) {\ncurrentElement().appendChild(node);\n}",
            "method_id": 169,
            "loc": 3
        },
        {
            "method_signature": "org.jsoup.parser.Tag:<clinit>()V",
            "method_body": "private static final String[] blockTags = {\n};",
            "method_id": 170,
            "loc": 2
        },
        {
            "method_signature": "org.jsoup.nodes.Attribute:<clinit>()V",
            "method_body": "private static final String[] booleanAttributes = {\n};",
            "method_id": 171,
            "loc": 2
        },
        {
            "method_signature": "org.jsoup.helper.StringUtil:<clinit>()V",
            "method_body": "private static final String[] padding = {\"\", \" \", \"  \", \"   \", \"    \", \"     \", \"      \", \"       \", \"        \", \"         \", \"          \"};\nprivate static final String[] padding = {\"\", \" \", \"  \", \"   \", \"    \", \"     \", \"      \", \"       \", \"        \", \"         \", \"          \"};",
            "method_id": 172,
            "loc": 2
        },
        {
            "method_signature": "org.jsoup.nodes.XmlDeclaration:outerHtmlTail(Ljava/lang/Appendable;ILorg/jsoup/nodes/Document$OutputSettings;)V",
            "method_body": "void outerHtmlTail(Appendable accum, int depth, Document.OutputSettings out) {}\nvoid outerHtmlTail(Appendable accum, int depth, Document.OutputSettings out) {}",
            "method_id": 173,
            "loc": 2
        },
        {
            "method_signature": "org.jsoup.parser.Token:<init>()V",
            "method_body": "private Token() {\n}",
            "method_id": 174,
            "loc": 2
        },
        {
            "method_signature": "org.jsoup.nodes.Comment:outerHtmlTail(Ljava/lang/Appendable;ILorg/jsoup/nodes/Document$OutputSettings;)V",
            "method_body": "void outerHtmlTail(Appendable accum, int depth, Document.OutputSettings out) {}\nvoid outerHtmlTail(Appendable accum, int depth, Document.OutputSettings out) {}",
            "method_id": 175,
            "loc": 2
        }
    ]
}