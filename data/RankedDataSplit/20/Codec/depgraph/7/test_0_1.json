{
    "bug_id": 7,
    "test_id": 0,
    "test_name": "org.apache.commons.codec.binary.Base64Test.testByteToStringVariations",
    "test_body": "1121: public void testByteToStringVariations() throws DecoderException {\n1122: Base64 base64 = new Base64(0);\n1123: byte[] b1 = StringUtils.getBytesUtf8(\"Hello World\");\n1124: byte[] b2 = new byte[0];\n1125: byte[] b3 = null;\n1126: byte[] b4 = Hex.decodeHex(\"2bf7cc2701fe4397b49ebeed5acc7090\".toCharArray());  // for url-safe tests\n1127: 1128: assertEquals(\"byteToString Hello World\", \"SGVsbG8gV29ybGQ=\", base64.encodeToString(b1));\n1129: assertEquals(\"byteToString static Hello World\", \"SGVsbG8gV29ybGQ=\", Base64.encodeBase64String(b1));\n1130: assertEquals(\"byteToString \\\"\\\"\", \"\", base64.encodeToString(b2));",
    "stack_trace": "junit.framework.ComparisonFailure: byteToString static Hello World expected:<SGVsbG8gV29ybGQ=[]> but was:<SGVsbG8gV29ybGQ=[\n]>\nat junit.framework.Assert.assertEquals(Assert.java:100)\nat junit.framework.TestCase.assertEquals(TestCase.java:261)\nat org.apache.commons.codec.binary.Base64Test.testByteToStringVariations(Base64Test.java:1129)",
    "covered_methods": [
        {
            "method_signature": "org.apache.commons.codec.binary.StringUtils:getBytesUnchecked(Ljava/lang/String;Ljava/lang/String;)[B",
            "method_body": "public static byte[] getBytesUnchecked(String string, String charsetName) {\nif (string == null) {\nreturn string.getBytes(charsetName);\n}",
            "method_id": 20
        },
        {
            "method_signature": "org.apache.commons.codec.binary.Base64:isUrlSafe()Z",
            "method_body": "public boolean isUrlSafe() {\nreturn this.encodeTable == URL_SAFE_ENCODE_TABLE;\n}",
            "method_id": 21
        },
        {
            "method_signature": "org.apache.commons.codec.binary.StringUtils:getBytesUtf8(Ljava/lang/String;)[B",
            "method_body": "public static byte[] getBytesUtf8(String string) {\nreturn StringUtils.getBytesUnchecked(string, CharEncoding.UTF_8);\n}",
            "method_id": 22
        },
        {
            "method_signature": "org.apache.commons.codec.binary.Base64:isBase64(B)Z",
            "method_body": "public static boolean isBase64(byte octet) {\nreturn octet == PAD || (octet >= 0 && octet < DECODE_TABLE.length && DECODE_TABLE[octet] != -1);\n}",
            "method_id": 23
        }
    ]
}