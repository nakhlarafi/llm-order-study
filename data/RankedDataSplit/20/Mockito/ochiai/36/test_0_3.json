{
    "bug_id": 36,
    "test_id": 0,
    "test_name": "org.mockitousage.spies.SpyingOnInterfacesTest.shouldFailInRuntimeWhenCallingRealMethodOnInterface",
    "test_body": "public void shouldFailInRuntimeWhenCallingRealMethodOnInterface() throws Exception {\n//given\nList list = mock(List.class);\nwhen(list.get(0)).thenAnswer(\nnew Answer() {\npublic Object answer(InvocationOnMock invocation) throws Throwable {\nreturn invocation.callRealMethod();\n}\n}\n);\ntry {\n//when\nlist.get(0);            \n//then",
    "stack_trace": "java.lang.NoSuchMethodError: java.lang.Object.get(I)Ljava/lang/Object;\nat $java.util.List$$EnhancerByMockitoWithCGLIB$$89a44f61.CGLIB$get$9(<generated>)\nat $java.util.List$$EnhancerByMockitoWithCGLIB$$89a44f61$$FastClassByMockitoWithCGLIB$$e9819b9f.invoke(<generated>)\nat org.mockito.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:216)\nat org.mockito.internal.creation.AbstractMockitoMethodProxy.invokeSuper(AbstractMockitoMethodProxy.java:11)\nat org.mockito.internal.invocation.realmethod.CGLIBProxyRealMethod.invoke(CGLIBProxyRealMethod.java:20)\nat org.mockito.internal.invocation.realmethod.FilteredCGLIBProxyRealMethod.invoke(FilteredCGLIBProxyRealMethod.java:26)\nat org.mockito.internal.invocation.Invocation.callRealMethod(Invocation.java:202)\nat org.mockitousage.spies.SpyingOnInterfacesTest$1.answer(SpyingOnInterfacesTest.java:38)\nat org.mockito.internal.stubbing.StubbedInvocationMatcher.answer(StubbedInvocationMatcher.java:28)\nat org.mockito.internal.MockHandler.handle(MockHandler.java:95)\nat org.mockito.internal.creation.MethodInterceptorFilter.intercept(MethodInterceptorFilter.java:47)\nat $java.util.List$$EnhancerByMockitoWithCGLIB$$89a44f61.get(<generated>)\nat org.mockitousage.spies.SpyingOnInterfacesTest.shouldFailInRuntimeWhenCallingRealMethodOnInterface(SpyingOnInterfacesTest.java:44)",
    "covered_methods": [
        {
            "method_signature": "org.mockito.internal.stubbing.answers.AnswersValidator:validate(Lorg/mockito/stubbing/Answer;Lorg/mockito/internal/invocation/Invocation;)V",
            "method_body": "public void validate(Answer<?> answer, Invocation invocation) {\nif (answer instanceof ThrowsException) {\nif (answer instanceof Returns) {\nif (answer instanceof DoesNothing) {\nif (answer instanceof CallsRealMethods) {\n}",
            "method_id": 60
        },
        {
            "method_signature": "org.mockito.internal.matchers.Equals:matches(Ljava/lang/Object;)Z",
            "method_body": "public boolean matches(Object actual) {\nif (this.wanted == null) {\nreturn wanted.equals(actual);\n}",
            "method_id": 61
        },
        {
            "method_signature": "org.mockito.MockitoAnnotations:initMocks(Ljava/lang/Object;)V",
            "method_body": "public static void initMocks(Object testClass) {\nif (testClass == null) {\nClass<?> clazz = testClass.getClass();\nwhile (clazz != Object.class) {\nscan(testClass, clazz);\nclazz = clazz.getSuperclass();\n}",
            "method_id": 62
        },
        {
            "method_signature": "org.mockito.MockitoAnnotations:scan(Ljava/lang/Object;Ljava/lang/Class;)V",
            "method_body": "private static void scan(Object testClass, Class<?> clazz) {\nAnnotationEngine annotationEngine = new GlobalConfiguration().getAnnotationEngine();\nField[] fields = clazz.getDeclaredFields();\nfor (Field field : fields) {\nfor(Annotation annotation : field.getAnnotations()) {\n}",
            "method_id": 63
        },
        {
            "method_signature": "org.mockito.internal.configuration.GlobalConfiguration:<init>()V",
            "method_body": "public GlobalConfiguration() {\nif (globalConfiguration.get() == null) {\n}",
            "method_id": 64
        },
        {
            "method_signature": "org.mockito.internal.configuration.GlobalConfiguration:getIt()Lorg/mockito/configuration/IMockitoConfiguration;",
            "method_body": "IMockitoConfiguration getIt() {\nreturn globalConfiguration.get();\n}",
            "method_id": 65
        },
        {
            "method_signature": "org.mockito.internal.configuration.GlobalConfiguration:validate()V",
            "method_body": "public static void validate() {\nnew GlobalConfiguration();\n}",
            "method_id": 66
        },
        {
            "method_signature": "org.mockito.internal.configuration.GlobalConfiguration:getAnnotationEngine()Lorg/mockito/configuration/AnnotationEngine;",
            "method_body": "public AnnotationEngine getAnnotationEngine() {\nreturn globalConfiguration.get().getAnnotationEngine();\n}",
            "method_id": 67
        },
        {
            "method_signature": "org.mockito.internal.progress.ThreadSafeMockingProgress:threadSafely()Lorg/mockito/internal/progress/MockingProgress;",
            "method_body": "static MockingProgress threadSafely() {\nif (mockingProgress.get() == null) {\nreturn mockingProgress.get();\n}",
            "method_id": 68
        },
        {
            "method_signature": "org.mockito.internal.progress.ThreadSafeMockingProgress:validateState()V",
            "method_body": "public void validateState() {\nthreadSafely().validateState();\n}",
            "method_id": 69
        },
        {
            "method_signature": "org.mockito.internal.progress.MockingProgressImpl:validateState()V",
            "method_body": "public void validateState() {\nGlobalConfiguration.validate();\nif (verificationMode != null) {\nif (stubbingInProgress != null) {\ngetArgumentMatcherStorage().validateState();\n}",
            "method_id": 70
        },
        {
            "method_signature": "org.mockito.internal.progress.MockingProgressImpl:getArgumentMatcherStorage()Lorg/mockito/internal/progress/ArgumentMatcherStorage;",
            "method_body": "public ArgumentMatcherStorage getArgumentMatcherStorage() {\nreturn argumentMatcherStorage;\n}",
            "method_id": 71
        },
        {
            "method_signature": "org.mockito.internal.progress.ArgumentMatcherStorageImpl:validateState()V",
            "method_body": "public void validateState() {\nif (!matcherStack.isEmpty()) {\n}",
            "method_id": 72
        },
        {
            "method_signature": "org.mockito.internal.util.Primitives:isPrimitiveWrapper(Ljava/lang/Class;)Z",
            "method_body": "public static boolean isPrimitiveWrapper(Class<?> type) {\nreturn wrapperReturnValues.containsKey(type);\n}",
            "method_id": 73
        },
        {
            "method_signature": "org.mockito.internal.invocation.InvocationMatcher:captureArgumentsFrom(Lorg/mockito/internal/invocation/Invocation;)V",
            "method_body": "public void captureArgumentsFrom(Invocation i) {\nint k = 0;\nfor (Matcher m : matchers) {\nif (m instanceof CapturesArguments) {\nk++;\n}\n}",
            "method_id": 74
        },
        {
            "method_signature": "org.mockito.internal.configuration.GlobalConfiguration:cleansStackTrace()Z",
            "method_body": "public boolean cleansStackTrace() {\nreturn globalConfiguration.get().cleansStackTrace();\n}",
            "method_id": 75
        },
        {
            "method_signature": "org.mockito.internal.exceptions.base.ConditionalStackTraceFilter:filter(Ljava/lang/Throwable;)V",
            "method_body": "public void filter(Throwable throwable) {\nif (!config.cleansStackTrace()) {\nreturn;\n}",
            "method_id": 76
        },
        {
            "method_signature": "org.mockito.internal.debugging.DebuggingInfo:addPotentiallyUnstubbed(Lorg/mockito/internal/invocation/InvocationMatcher;)V",
            "method_body": "public void addPotentiallyUnstubbed(InvocationMatcher invocationMatcher) {\nif (!collectingData) {\nreturn;\n}",
            "method_id": 77
        },
        {
            "method_signature": "org.mockito.internal.invocation.ArgumentsComparator:argumentsMatch(Lorg/mockito/internal/invocation/InvocationMatcher;Lorg/mockito/internal/invocation/Invocation;)Z",
            "method_body": "public boolean argumentsMatch(InvocationMatcher invocationMatcher, Invocation actual) {\nObject[] actualArgs = actual.getArguments();\nreturn argumentsMatch(invocationMatcher, actualArgs) || varArgsMatch(invocationMatcher, actual);\n}",
            "method_id": 78
        },
        {
            "method_signature": "org.mockito.internal.invocation.InvocationMatcher:matches(Lorg/mockito/internal/invocation/Invocation;)Z",
            "method_body": "public boolean matches(Invocation actual) {\nreturn invocation.getMock().equals(actual.getMock())\n}",
            "method_id": 79
        }
    ]
}