{
    "bug_id": 1,
    "test_id": 24,
    "test_name": "org.mockito.internal.util.reflection.ParameterizedConstructorInstantiatorTest.should_instantiate_type_with_vararg_constructor",
    "test_body": "public void should_instantiate_type_with_vararg_constructor() throws Exception {\nObserver[] vararg = new Observer[] {  };\ngiven(resolver.resolveTypeInstances(Matchers.<Class<?>[]>anyVararg())).willReturn(new Object[]{ \"\", vararg});\n113: new ParameterizedConstructorInstantiator(this, field(\"withVarargConstructor\"), resolver).instantiate();\n115: assertNotNull(withVarargConstructor);\n}\n",
    "stack_trace": "java.lang.UnsupportedOperationException\nat org.mockito.internal.invocation.InvocationMatcher.captureArgumentsFrom(InvocationMatcher.java:123)\nat org.mockito.internal.handler.MockHandlerImpl.handle(MockHandlerImpl.java:94)\nat org.mockito.internal.handler.NullResultGuardian.handle(NullResultGuardian.java:29)\nat org.mockito.internal.handler.InvocationNotifierHandler.handle(InvocationNotifierHandler.java:37)\nat org.mockito.internal.creation.bytebuddy.MockMethodInterceptor.doIntercept(MockMethodInterceptor.java:82)\nat org.mockito.internal.creation.bytebuddy.MockMethodInterceptor.interceptAbstract(MockMethodInterceptor.java:70)\nat org.mockito.internal.util.reflection.FieldInitializer$ConstructorArgumentResolver$MockitoMock$1278416959.resolveTypeInstances(Unknown Source)\nat org.mockito.internal.util.reflection.FieldInitializer$ParameterizedConstructorInstantiator.instantiate(FieldInitializer.java:256)\nat org.mockito.internal.util.reflection.ParameterizedConstructorInstantiatorTest.should_instantiate_type_with_vararg_constructor(ParameterizedConstructorInstantiatorTest.java:113)",
    "covered_methods": [
        {
            "method_signature": "org.mockito.internal.configuration.injection.scanner.MockScanner:isMockOrSpy(Ljava/lang/Object;)Z",
            "method_body": "private boolean isMockOrSpy(Object instance) {\nreturn mockUtil.isMock(instance)\n}",
            "method_id": 220
        },
        {
            "method_signature": "org.mockito.internal.configuration.injection.MockInjectionStrategy$1:<init>()V",
            "method_body": "public static final MockInjectionStrategy nop() {\nreturn new MockInjectionStrategy() {\n}",
            "method_id": 221
        },
        {
            "method_signature": "org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet$1:<init>(Lorg/mockito/internal/util/collections/HashCodeAndEqualsSafeSet;)V",
            "method_body": "public Iterator<Object> iterator() {\nreturn new Iterator<Object>() {\nprivate final Iterator<HashCodeAndEqualsMockWrapper> iterator = backingHashSet.iterator();\nreturn iterator.hasNext();\nreturn iterator.next().get();\n}",
            "method_id": 222
        },
        {
            "method_signature": "org.mockito.internal.runners.JUnit45AndHigherRunnerImpl$1:<init>(Lorg/mockito/internal/runners/JUnit45AndHigherRunnerImpl;Ljava/lang/Class;)V",
            "method_body": "public JUnit45AndHigherRunnerImpl(Class<?> klass) throws InitializationError {\nrunner = new BlockJUnit4ClassRunner(klass) {\nMockitoAnnotations.initMocks(target);\nreturn super.withBefores(method, target, statement);\n}",
            "method_id": 223
        }
    ]
}