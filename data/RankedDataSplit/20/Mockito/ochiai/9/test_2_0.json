{
    "bug_id": 9,
    "test_id": 2,
    "test_name": "org.mockitousage.constructor.CreatingMocksWithConstructorTest.abstractMethodReturnsDefault",
    "test_body": "public void abstractMethodReturnsDefault() {\nAbstractThing thing = spy(AbstractThing.class);\nassertEquals(\"abstract null\", thing.fullName());\n}\n",
    "stack_trace": "org.mockito.exceptions.base.MockitoException:\nCannot call abstract real method on java object!\nCalling real methods is only possible when mocking non abstract method.\n//correct example:\nwhen(mockOfConcreteClass.nonAbstractMethod()).thenCallRealMethod();\nat org.mockito.exceptions.Reporter.cannotCallAbstractRealMethod(Reporter.java:583)\nat org.mockito.internal.invocation.InvocationImpl.callRealMethod(InvocationImpl.java:110)\nat org.mockito.internal.stubbing.answers.CallsRealMethods.answer(CallsRealMethods.java:36)\nat org.mockito.internal.handler.MockHandlerImpl.handle(MockHandlerImpl.java:93)\nat org.mockito.internal.handler.NullResultGuardian.handle(NullResultGuardian.java:29)\nat org.mockito.internal.handler.InvocationNotifierHandler.handle(InvocationNotifierHandler.java:38)\nat org.mockito.internal.creation.cglib.MethodInterceptorFilter.intercept(MethodInterceptorFilter.java:59)\nat org.mockitousage.constructor.CreatingMocksWithConstructorTest$AbstractThing$$EnhancerByMockitoWithCGLIB$$91611a84.name(<generated>)\nat org.mockitousage.constructor.CreatingMocksWithConstructorTest$AbstractThing.fullName(CreatingMocksWithConstructorTest.java:106)\nat org.mockitousage.constructor.CreatingMocksWithConstructorTest$AbstractThing$$EnhancerByMockitoWithCGLIB$$91611a84.CGLIB$fullName$0(<generated>)\nat org.mockitousage.constructor.CreatingMocksWithConstructorTest$AbstractThing$$EnhancerByMockitoWithCGLIB$$91611a84$$FastClassByMockitoWithCGLIB$$6019f3ca.invoke(<generated>)\nat org.mockito.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:216)\nat org.mockito.internal.creation.cglib.DelegatingMockitoMethodProxy.invokeSuper(DelegatingMockitoMethodProxy.java:19)\nat org.mockito.internal.invocation.realmethod.DefaultRealMethod.invoke(DefaultRealMethod.java:21)\nat org.mockito.internal.invocation.realmethod.CleanTraceRealMethod.invoke(CleanTraceRealMethod.java:30)\nat org.mockito.internal.invocation.InvocationImpl.callRealMethod(InvocationImpl.java:112)\nat org.mockito.internal.stubbing.answers.CallsRealMethods.answer(CallsRealMethods.java:36)\nat org.mockito.internal.handler.MockHandlerImpl.handle(MockHandlerImpl.java:93)\nat org.mockito.internal.handler.NullResultGuardian.handle(NullResultGuardian.java:29)\nat org.mockito.internal.handler.InvocationNotifierHandler.handle(InvocationNotifierHandler.java:38)\nat org.mockito.internal.creation.cglib.MethodInterceptorFilter.intercept(MethodInterceptorFilter.java:59)\nat org.mockitousage.constructor.CreatingMocksWithConstructorTest$AbstractThing$$EnhancerByMockitoWithCGLIB$$91611a84.fullName(<generated>)\nat org.mockitousage.constructor.CreatingMocksWithConstructorTest.abstractMethodReturnsDefault(CreatingMocksWithConstructorTest.java:113)",
    "covered_methods": [
        {
            "method_signature": "org.mockito.exceptions.Reporter:cannotCallAbstractRealMethod()V",
            "method_body": "public void cannotCallAbstractRealMethod() {\nthrow new MockitoException(join(\n}",
            "method_id": 0
        },
        {
            "method_signature": "org.mockito.Mockito:spy(Ljava/lang/Class;)Ljava/lang/Object;",
            "method_body": "public static <T> T spy(Class<T> classToSpy) {\nreturn MOCKITO_CORE.mock(classToSpy, withSettings()\n}",
            "method_id": 1
        },
        {
            "method_signature": "org.mockito.internal.creation.settings.CreationSettings:getOuterClassInstance()Ljava/lang/Object;",
            "method_body": "public Object getOuterClassInstance() {\nreturn outerClassInstance;\n}",
            "method_id": 2
        },
        {
            "method_signature": "org.mockito.internal.creation.MockSettingsImpl:useConstructor()Lorg/mockito/MockSettings;",
            "method_body": "public MockSettings useConstructor() {\nthis.useConstructor = true;\nreturn this;\n}",
            "method_id": 3
        },
        {
            "method_signature": "org.mockito.internal.creation.instance.ConstructorInstantiator:noArgConstructor(Ljava/lang/Class;)Ljava/lang/Object;",
            "method_body": "private static <T> T noArgConstructor(Class<T> cls) {\nreturn cls.newInstance();\n}",
            "method_id": 4
        },
        {
            "method_signature": "org.mockito.internal.creation.instance.ConstructorInstantiator:<init>(Ljava/lang/Object;)V",
            "method_body": "public ConstructorInstantiator(Object outerClassInstance) {\nthis.outerClassInstance = outerClassInstance;\n}",
            "method_id": 5
        },
        {
            "method_signature": "org.mockito.internal.creation.instance.ConstructorInstantiator:newInstance(Ljava/lang/Class;)Ljava/lang/Object;",
            "method_body": "public <T> T newInstance(Class<T> cls) {\nif (outerClassInstance == null) {\nreturn noArgConstructor(cls);\n}",
            "method_id": 6
        },
        {
            "method_signature": "org.mockito.internal.creation.DelegatingMethod:isAbstract()Z",
            "method_body": "public boolean isAbstract() {\nreturn (method.getModifiers() & Modifier.ABSTRACT) != 0;\n}",
            "method_id": 7
        },
        {
            "method_signature": "org.mockito.internal.stubbing.answers.CallsRealMethods:answer(Lorg/mockito/invocation/InvocationOnMock;)Ljava/lang/Object;",
            "method_body": "public Object answer(InvocationOnMock invocation) throws Throwable {\nreturn invocation.callRealMethod();\n}",
            "method_id": 8
        },
        {
            "method_signature": "org.mockito.internal.invocation.InvocationImpl:callRealMethod()Ljava/lang/Object;",
            "method_body": "public Object callRealMethod() throws Throwable {\nif (method.isAbstract()) {\nnew Reporter().cannotCallAbstractRealMethod();\nreturn realMethod.invoke(mock, rawArguments);\n}",
            "method_id": 9
        },
        {
            "method_signature": "org.mockito.exceptions.base.MockitoException:filterStackTrace()V",
            "method_body": "private void filterStackTrace() {\nunfilteredStackTrace = getStackTrace();\nConditionalStackTraceFilter filter = new ConditionalStackTraceFilter();\nfilter.filter(this);\n}",
            "method_id": 10
        },
        {
            "method_signature": "org.mockito.internal.util.StringJoiner:join([Ljava/lang/Object;)Ljava/lang/String;",
            "method_body": "public static String join(Object ... linesToBreak) {\nStringBuilder out = new StringBuilder(\"\\n\");\nreturn join(out, linesToBreak);\n}",
            "method_id": 11
        },
        {
            "method_signature": "org.mockito.internal.util.StringJoiner:join(Ljava/lang/StringBuilder;[Ljava/lang/Object;)Ljava/lang/String;",
            "method_body": "private static String join(StringBuilder out, Object[] linesToBreak) {\nfor (Object line : linesToBreak) {\nout.append(line.toString()).append(\"\\n\");\nint lastBreak = out.lastIndexOf(\"\\n\");\nreturn out.replace(lastBreak, lastBreak+1, \"\").toString();\n}",
            "method_id": 12
        },
        {
            "method_signature": "org.mockito.exceptions.base.MockitoException:<init>(Ljava/lang/String;)V",
            "method_body": "public MockitoException(String message) {\nsuper(message);\nfilterStackTrace();\n}",
            "method_id": 13
        },
        {
            "method_signature": "org.mockito.internal.handler.InvocationNotifierHandler:notifyMethodCallException(Lorg/mockito/invocation/Invocation;Ljava/lang/Throwable;)V",
            "method_body": "private void notifyMethodCallException(Invocation invocation, Throwable exception) {\nfor (InvocationListener listener : invocationListeners) {\n}",
            "method_id": 14
        },
        {
            "method_signature": "org.mockito.internal.configuration.GlobalConfiguration:cleansStackTrace()Z",
            "method_body": "public boolean cleansStackTrace() {\nreturn GLOBAL_CONFIGURATION.get().cleansStackTrace();\n}",
            "method_id": 15
        },
        {
            "method_signature": "org.mockito.internal.exceptions.stacktrace.ConditionalStackTraceFilter:filter(Ljava/lang/Throwable;)V",
            "method_body": "public void filter(Throwable throwable) {\nif (!config.cleansStackTrace()) {\nreturn;\n}",
            "method_id": 16
        },
        {
            "method_signature": "org.mockito.internal.util.MockNameImpl:toInstanceName(Ljava/lang/Class;)Ljava/lang/String;",
            "method_body": "private static String toInstanceName(Class<?> clazz) {\nString className = clazz.getSimpleName();\nif (className.length() == 0) {\nreturn className.substring(0, 1).toLowerCase() + className.substring(1);\n}",
            "method_id": 17
        },
        {
            "method_signature": "org.mockito.internal.creation.cglib.DelegatingMockitoMethodProxy:invokeSuper(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;",
            "method_body": "public Object invokeSuper(Object target, Object[] arguments) throws Throwable {\nreturn methodProxy.invokeSuper(target, arguments);\n}",
            "method_id": 18
        },
        {
            "method_signature": "org.mockito.internal.invocation.realmethod.DefaultRealMethod:invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;",
            "method_body": "public Object invoke(Object target, Object[] arguments) throws Throwable {\nreturn methodProxy.invokeSuper(target, arguments);\n}",
            "method_id": 19
        }
    ]
}