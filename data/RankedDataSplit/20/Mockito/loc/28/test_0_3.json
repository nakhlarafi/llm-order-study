{
    "bug_id": 28,
    "test_id": 0,
    "test_name": "org.mockitousage.bugs.InjectionByTypeShouldFirstLookForExactTypeThenAncestorTest.mock_should_be_injected_once_and_in_the_best_matching_type",
    "test_body": "public void mock_should_be_injected_once_and_in_the_best_matching_type() {\nassertSame(REFERENCE, illegalInjectionExample.mockShouldNotGoInHere);\nassertSame(mockedBean, illegalInjectionExample.mockShouldGoInHere);",
    "stack_trace": "junit.framework.AssertionFailedError: expected same:<java.lang.Object@1a6aecec> was not:<mockedBean>\nat org.junit.Assert.fail(Assert.java:88)\nat org.junit.Assert.failNotSame(Assert.java:737)\nat org.junit.Assert.assertSame(Assert.java:680)\nat org.junit.Assert.assertSame(Assert.java:691)\nat org.mockitousage.bugs.InjectionByTypeShouldFirstLookForExactTypeThenAncestorTest.mock_should_be_injected_once_and_in_the_best_matching_type(InjectionByTypeShouldFirstLookForExactTypeThenAncestorTest.java:33)",
    "covered_methods": [
        {
            "method_signature": "org.mockito.internal.debugging.Location:<init>(Lorg/mockito/internal/exceptions/base/StackTraceFilter;)V",
            "method_body": "public Location(StackTraceFilter stackTraceFilter) {\nthis.stackTraceFilter = stackTraceFilter;\nstackTraceHolder = new Throwable();\n}",
            "method_id": 60,
            "loc": 4
        },
        {
            "method_signature": "org.mockito.internal.progress.MockingProgressImpl:pullVerificationMode()Lorg/mockito/verification/VerificationMode;",
            "method_body": "public VerificationMode pullVerificationMode() {\nif (verificationMode == null) {\nreturn null;\n}",
            "method_id": 61,
            "loc": 4
        },
        {
            "method_signature": "org.mockito.internal.util.reflection.AccessibilityChanger:enableAccess(Ljava/lang/reflect/AccessibleObject;)V",
            "method_body": "public void enableAccess(AccessibleObject accessibleObject) {\nwasAccessible = accessibleObject.isAccessible();\naccessibleObject.setAccessible(true);\n}",
            "method_id": 62,
            "loc": 4
        },
        {
            "method_signature": "org.mockito.internal.creation.DelegatingMethod:<init>(Ljava/lang/reflect/Method;)V",
            "method_body": "public DelegatingMethod(Method method) {\nassert method != null : \"Method cannot be null\";\nthis.method = method;\n}",
            "method_id": 63,
            "loc": 4
        },
        {
            "method_signature": "org.mockito.internal.util.reflection.FieldSetter:<init>(Ljava/lang/Object;Ljava/lang/reflect/Field;)V",
            "method_body": "public FieldSetter(Object target, Field field) {\nthis.target = target;\nthis.field = field;\n}",
            "method_id": 64,
            "loc": 4
        },
        {
            "method_signature": "org.mockito.internal.creation.MethodInterceptorFilter:createMockitoMethod(Ljava/lang/reflect/Method;)Lorg/mockito/internal/invocation/MockitoMethod;",
            "method_body": "public MockitoMethod createMockitoMethod(Method method) {\nif (mockSettings.isSerializable()) {\nreturn new DelegatingMethod(method);\n}",
            "method_id": 65,
            "loc": 4
        },
        {
            "method_signature": "org.mockito.internal.util.MockCreationValidator:validateMockedType(Ljava/lang/Class;Ljava/lang/Object;)V",
            "method_body": "public void validateMockedType(Class classToMock, Object spiedInstance) {\nif (classToMock == null || spiedInstance == null) {\nreturn;\n}",
            "method_id": 66,
            "loc": 4
        },
        {
            "method_signature": "org.mockito.internal.creation.jmock.ClassImposterizer:setConstructorsAccessible(Ljava/lang/Class;Z)V",
            "method_body": "private void setConstructorsAccessible(Class<?> mockedType, boolean accessible) {\nfor (Constructor<?> constructor : mockedType.getDeclaredConstructors()) {\nconstructor.setAccessible(accessible);\n}",
            "method_id": 67,
            "loc": 4
        },
        {
            "method_signature": "org.mockito.internal.runners.RunnerFactory:create(Ljava/lang/Class;)Lorg/mockito/internal/runners/RunnerImpl;",
            "method_body": "public RunnerImpl create(Class<?> klass) throws InvocationTargetException {\nif (runnerProvider.isJUnit45OrHigherAvailable()) {\nreturn runnerProvider.newInstance(\"org.mockito.internal.runners.JUnit45AndHigherRunnerImpl\", klass);\n}",
            "method_id": 68,
            "loc": 4
        },
        {
            "method_signature": "org.mockito.internal.creation.MockSettingsImpl:defaultAnswer(Lorg/mockito/stubbing/Answer;)Lorg/mockito/MockSettings;",
            "method_body": "public MockSettings defaultAnswer(Answer defaultAnswer) {\nthis.defaultAnswer = defaultAnswer;\nreturn this;\n}",
            "method_id": 69,
            "loc": 4
        },
        {
            "method_signature": "org.mockito.internal.creation.MockSettingsImpl:name(Ljava/lang/String;)Lorg/mockito/MockSettings;",
            "method_body": "public MockSettings name(String name) {\nthis.name = name;\nreturn this;\n}",
            "method_id": 70,
            "loc": 4
        },
        {
            "method_signature": "org.mockito.internal.invocation.Invocation:expandVarArgs(Z[Ljava/lang/Object;)[Ljava/lang/Object;",
            "method_body": "private static Object[] expandVarArgs(final boolean isVarArgs, final Object[] args) {\nif (!isVarArgs || args[args.length - 1] != null && !args[args.length - 1].getClass().isArray()) {\nreturn args == null ? new Object[0] : args;\n}",
            "method_id": 71,
            "loc": 4
        },
        {
            "method_signature": "org.mockito.internal.util.MockName:<init>(Ljava/lang/String;Ljava/lang/Class;)V",
            "method_body": "public MockName(String mockName, Class classToMock) {\nif (mockName == null) {\nthis.mockName = mockName;\n}",
            "method_id": 72,
            "loc": 4
        },
        {
            "method_signature": "org.mockito.internal.progress.ArgumentMatcherStorageImpl:pullMatchers()Ljava/util/List;",
            "method_body": "public List<Matcher> pullMatchers() {\nif (matcherStack.isEmpty()) {\nreturn Collections.emptyList();\n}",
            "method_id": 73,
            "loc": 4
        },
        {
            "method_signature": "org.mockito.internal.progress.MockingProgressImpl:mockingStarted(Ljava/lang/Object;Ljava/lang/Class;Lorg/mockito/MockSettings;)V",
            "method_body": "public void mockingStarted(Object mock, Class classToMock, MockSettings mockSettings) {\nif (listener != null && listener instanceof MockingStartedListener) {\nvalidateMostStuff();\n}",
            "method_id": 74,
            "loc": 4
        },
        {
            "method_signature": "org.mockito.internal.progress.ThreadSafeMockingProgress:threadSafely()Lorg/mockito/internal/progress/MockingProgress;",
            "method_body": "static MockingProgress threadSafely() {\nif (mockingProgress.get() == null) {\nreturn mockingProgress.get();\n}",
            "method_id": 75,
            "loc": 4
        },
        {
            "method_signature": "org.mockito.internal.configuration.InjectingAnnotationEngine:assertNoAnnotations(Ljava/lang/reflect/Field;[Ljava/lang/Class;)V",
            "method_body": "void assertNoAnnotations(final Field field, final Class ... annotations) {\nfor (Class annotation : annotations) {\nif (field.isAnnotationPresent(annotation)) {\n}",
            "method_id": 76,
            "loc": 4
        },
        {
            "method_signature": "org.mockito.internal.progress.MockingProgressImpl:validateState()V",
            "method_body": "public void validateState() {\nvalidateMostStuff();\nif (stubbingInProgress != null) {\n}",
            "method_id": 77,
            "loc": 4
        },
        {
            "method_signature": "org.mockito.internal.creation.MethodInterceptorFilter:<init>(Lorg/mockito/internal/MockitoInvocationHandler;Lorg/mockito/internal/creation/MockSettingsImpl;)V",
            "method_body": "public MethodInterceptorFilter(MockitoInvocationHandler handler, MockSettingsImpl mockSettings) {\nthis.handler = handler;\nthis.mockSettings = mockSettings;\n}",
            "method_id": 78,
            "loc": 4
        },
        {
            "method_signature": "org.mockito.internal.creation.jmock.SearchingClassLoader:addIfNewElement(Ljava/util/List;Ljava/lang/ClassLoader;)V",
            "method_body": "private static void addIfNewElement(List<ClassLoader> loaders, ClassLoader c) {\nif (c != null && !loaders.contains(c)) {\nloaders.add(c);\n}",
            "method_id": 79,
            "loc": 4
        }
    ]
}