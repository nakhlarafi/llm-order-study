{
    "bug_id": 31,
    "test_id": 0,
    "test_name": "org.mockito.internal.stubbing.defaultanswers.ReturnsSmartNullsTest.shouldPrintTheParametersWhenCallingAMethodWithArgs",
    "test_body": "public void shouldPrintTheParametersWhenCallingAMethodWithArgs() throws Throwable {\nAnswer<Object> answer = new ReturnsSmartNulls();\n55: Foo smartNull = (Foo) answer.answer(invocationOf(Foo.class, \"withArgs\", \"oompa\", \"lumpa\"));\n57: assertEquals(\"SmartNull returned by unstubbed withArgs(oompa, lumpa) method on mock\", smartNull + \"\");\n}\n",
    "stack_trace": "junit.framework.ComparisonFailure: expected:<... unstubbed withArgs([oompa, lumpa]) method on mock> but was:<... unstubbed withArgs([]) method on mock>\nat junit.framework.Assert.assertEquals(Assert.java:100)\nat junit.framework.Assert.assertEquals(Assert.java:107)\nat org.mockito.internal.stubbing.defaultanswers.ReturnsSmartNullsTest.shouldPrintTheParametersWhenCallingAMethodWithArgs(ReturnsSmartNullsTest.java:57)",
    "covered_methods": [
        {
            "method_signature": "org.mockito.internal.stubbing.defaultanswers.ReturnsEmptyValues:returnValueFor(Ljava/lang/Class;)Ljava/lang/Object;",
            "method_body": "Object returnValueFor(Class<?> type) {\nif (type.isPrimitive()) {\n} else if (Primitives.isPrimitiveWrapper(type)) {\n} else if (type == Collection.class) {\n} else if (type == Set.class) {\n} else if (type == HashSet.class) {\n} else if (type == SortedSet.class) {\n} else if (type == TreeSet.class) {\n} else if (type == LinkedHashSet.class) {\n} else if (type == List.class) {\n} else if (type == LinkedList.class) {\n} else if (type == ArrayList.class) {\n} else if (type == Map.class) {\n} else if (type == HashMap.class) {\n} else if (type == SortedMap.class) {\n} else if (type == TreeMap.class) {\n} else if (type == LinkedHashMap.class) {\nreturn null;\n}",
            "method_id": 0,
            "loc": 19
        },
        {
            "method_signature": "org.mockito.internal.creation.jmock.ClassImposterizer$3:<init>(Lorg/mockito/internal/creation/jmock/ClassImposterizer;)V",
            "method_body": "private Class<?> createProxyClass(Class<?> mockedType, Class<?>...interfaces) {\nif (mockedType == Object.class) {\nEnhancer enhancer = new Enhancer() {\n}\nenhancer.setClassLoader(SearchingClassLoader.combineLoadersOf(mockedType));\nenhancer.setUseFactory(true);\nif (mockedType.isInterface()) {\nenhancer.setSuperclass(Object.class);\nenhancer.setInterfaces(prepend(mockedType, interfaces));\nenhancer.setCallbackTypes(new Class[]{MethodInterceptor.class, NoOp.class});\nenhancer.setCallbackFilter(IGNORE_BRIDGE_METHODS);\nif (mockedType.getSigners() != null) {\nenhancer.setNamingPolicy(MockitoNamingPolicy.INSTANCE);\nreturn enhancer.createClass();\n}",
            "method_id": 1,
            "loc": 15
        },
        {
            "method_signature": "org.mockito.internal.creation.jmock.ClassImposterizer:createProxyClass(Ljava/lang/Class;[Ljava/lang/Class;)Ljava/lang/Class;",
            "method_body": "private Class<?> createProxyClass(Class<?> mockedType, Class<?>...interfaces) {\nif (mockedType == Object.class) {\nEnhancer enhancer = new Enhancer() {\n}\nenhancer.setClassLoader(SearchingClassLoader.combineLoadersOf(mockedType));\nenhancer.setUseFactory(true);\nif (mockedType.isInterface()) {\nenhancer.setSuperclass(Object.class);\nenhancer.setInterfaces(prepend(mockedType, interfaces));\nenhancer.setCallbackTypes(new Class[]{MethodInterceptor.class, NoOp.class});\nenhancer.setCallbackFilter(IGNORE_BRIDGE_METHODS);\nif (mockedType.getSigners() != null) {\nenhancer.setNamingPolicy(MockitoNamingPolicy.INSTANCE);\nreturn enhancer.createClass();\n}",
            "method_id": 2,
            "loc": 15
        },
        {
            "method_signature": "org.mockito.internal.creation.jmock.SearchingClassLoader:combineLoadersOf(Ljava/lang/Class;[Ljava/lang/Class;)Ljava/lang/ClassLoader;",
            "method_body": "private static ClassLoader combineLoadersOf(Class<?> first, Class<?>... others) {\nList<ClassLoader> loaders = new ArrayList<ClassLoader>();\naddIfNewElement(loaders, first.getClassLoader());\nfor (Class<?> c : others) {\naddIfNewElement(loaders, c.getClassLoader());\naddIfNewElement(loaders, SearchingClassLoader.class.getClassLoader());\naddIfNewElement(loaders, currentThread().getContextClassLoader());\nreturn combine(loaders);\n}",
            "method_id": 3,
            "loc": 9
        },
        {
            "method_signature": "org.mockito.internal.invocation.Invocation:<init>(Ljava/lang/Object;Lorg/mockito/internal/invocation/MockitoMethod;[Ljava/lang/Object;ILorg/mockito/internal/invocation/realmethod/RealMethod;)V",
            "method_body": "public Invocation(Object mock, MockitoMethod mockitoMethod, Object[] args, int sequenceNumber, RealMethod realMethod) {\nthis.method = mockitoMethod;\nthis.mock = mock;\nthis.realMethod = realMethod;\nthis.arguments = expandVarArgs(mockitoMethod.isVarArgs(), args);\nthis.rawArguments = args;\nthis.sequenceNumber = sequenceNumber;\nthis.location = new Location();\n}",
            "method_id": 4,
            "loc": 9
        },
        {
            "method_signature": "org.mockito.internal.invocation.SerializableMethod:<init>(Ljava/lang/reflect/Method;)V",
            "method_body": "public SerializableMethod(Method method) {\ndeclaringClass = method.getDeclaringClass();\nmethodName = method.getName();\nparameterTypes = method.getParameterTypes();\nreturnType = method.getReturnType();\nexceptionTypes = method.getExceptionTypes();\nisVarArgs = method.isVarArgs();\n}",
            "method_id": 5,
            "loc": 8
        },
        {
            "method_signature": "org.mockito.MockitoAnnotations:initMocks(Ljava/lang/Object;)V",
            "method_body": "public static void initMocks(Object testClass) {\nif (testClass == null) {\nClass<?> clazz = testClass.getClass();\nwhile (clazz != Object.class) {\nscan(testClass, clazz);\nclazz = clazz.getSuperclass();\n}",
            "method_id": 6,
            "loc": 7
        },
        {
            "method_signature": "org.mockito.internal.stubbing.defaultanswers.ReturnsSmartNulls:answer(Lorg/mockito/invocation/InvocationOnMock;)Ljava/lang/Object;",
            "method_body": "public Object answer(final InvocationOnMock invocation) throws Throwable {\nObject defaultReturnValue = delegate.answer(invocation);\nif (defaultReturnValue != null) {\nClass<?> type = invocation.getMethod().getReturnType();\nif (ClassImposterizer.INSTANCE.canImposterise(type)) {\nreturn ClassImposterizer.INSTANCE.imposterise(new ThrowingInterceptor(invocation), type);\n}",
            "method_id": 7,
            "loc": 7
        },
        {
            "method_signature": "org.mockito.MockitoAnnotations:scan(Ljava/lang/Object;Ljava/lang/Class;)V",
            "method_body": "static void scan(Object testClass, Class<?> clazz) {\nAnnotationEngine annotationEngine = new GlobalConfiguration().getAnnotationEngine();\nField[] fields = clazz.getDeclaredFields();\nfor (Field field : fields) {\nannotationEngine.process(clazz, testClass);\n}",
            "method_id": 8,
            "loc": 6
        },
        {
            "method_signature": "org.mockito.internal.configuration.InjectingAnnotationEngine:process(Ljava/lang/Class;Ljava/lang/Object;)V",
            "method_body": "public void process(Class<?> context, Object testClass) {\ndelegate.process(context, testClass);\nspyAnnotationEngine.process(context, testClass);\nField[] fields = context.getDeclaredFields();\nfor (Field field : fields) {\n}",
            "method_id": 9,
            "loc": 6
        },
        {
            "method_signature": "org.mockito.internal.stubbing.defaultanswers.ReturnsMoreEmptyValues:answer(Lorg/mockito/invocation/InvocationOnMock;)Ljava/lang/Object;",
            "method_body": "public Object answer(InvocationOnMock invocation) throws Throwable {\nObject ret = delegate.answer(invocation);\nif (ret != null) {\nClass<?> returnType = invocation.getMethod().getReturnType();\nreturn returnValueFor(returnType);\n}",
            "method_id": 10,
            "loc": 6
        },
        {
            "method_signature": "org.mockito.internal.creation.jmock.ClassImposterizer:imposterise(Lorg/mockito/cglib/proxy/MethodInterceptor;Ljava/lang/Class;[Ljava/lang/Class;)Ljava/lang/Object;",
            "method_body": "public <T> T imposterise(final MethodInterceptor interceptor, Class<T> mockedType, Class<?>... ancillaryTypes) {\nsetConstructorsAccessible(mockedType, true);\nClass<?> proxyClass = createProxyClass(mockedType, ancillaryTypes);\nreturn mockedType.cast(createProxy(proxyClass, interceptor));\nsetConstructorsAccessible(mockedType, false);\n}",
            "method_id": 11,
            "loc": 6
        },
        {
            "method_signature": "org.mockito.internal.creation.jmock.ClassImposterizer:prepend(Ljava/lang/Class;[Ljava/lang/Class;)[Ljava/lang/Class;",
            "method_body": "private Class<?>[] prepend(Class<?> first, Class<?>... rest) {\nClass<?>[] all = new Class<?>[rest.length+1];\nall[0] = first;\nSystem.arraycopy(rest, 0, all, 1, rest.length);\nreturn all;\n}",
            "method_id": 12,
            "loc": 6
        },
        {
            "method_signature": "org.mockito.internal.stubbing.defaultanswers.ReturnsEmptyValues:answer(Lorg/mockito/invocation/InvocationOnMock;)Ljava/lang/Object;",
            "method_body": "public Object answer(InvocationOnMock invocation) {\nif (methodsGuru.isToString(invocation.getMethod())) {\n} else if (methodsGuru.isCompareToMethod(invocation.getMethod())) {\nClass<?> returnType = invocation.getMethod().getReturnType();\nreturn returnValueFor(returnType);\n}",
            "method_id": 13,
            "loc": 6
        },
        {
            "method_signature": "org.mockito.internal.creation.jmock.ClassImposterizer:createProxy(Ljava/lang/Class;Lorg/mockito/cglib/proxy/MethodInterceptor;)Ljava/lang/Object;",
            "method_body": "private Object createProxy(Class<?> proxyClass, final MethodInterceptor interceptor) {\nFactory proxy = (Factory) objenesis.newInstance(proxyClass);\nproxy.setCallbacks(new Callback[] {interceptor, SerializableNoOp.SERIALIZABLE_INSTANCE });\nreturn proxy;\n}",
            "method_id": 14,
            "loc": 5
        },
        {
            "method_signature": "org.mockito.internal.creation.jmock.SearchingClassLoader:combine(Ljava/util/List;)Ljava/lang/ClassLoader;",
            "method_body": "private static ClassLoader combine(List<ClassLoader> parentLoaders) {\nClassLoader loader = parentLoaders.get(parentLoaders.size()-1);\nfor (int i = parentLoaders.size()-2; i >= 0; i--) {\nreturn loader;\n}",
            "method_id": 15,
            "loc": 5
        },
        {
            "method_signature": "org.mockito.internal.progress.MockingProgressImpl:validateMostStuff()V",
            "method_body": "private void validateMostStuff() {\nGlobalConfiguration.validate();\nif (verificationMode != null) {\ngetArgumentMatcherStorage().validateState();\n}",
            "method_id": 16,
            "loc": 5
        },
        {
            "method_signature": "org.mockito.internal.stubbing.defaultanswers.ReturnsMoreEmptyValues:returnValueFor(Ljava/lang/Class;)Ljava/lang/Object;",
            "method_body": "Object returnValueFor(Class<?> type) {\nif (type == String.class) {\n}  else if (type.isArray()) {\nreturn null;\n}",
            "method_id": 17,
            "loc": 5
        },
        {
            "method_signature": "org.mockito.internal.configuration.DefaultAnnotationEngine:process(Ljava/lang/Class;Ljava/lang/Object;)V",
            "method_body": "public void process(Class<?> clazz, Object testClass) {\nField[] fields = clazz.getDeclaredFields();\nfor (Field field : fields) {\n}",
            "method_id": 18,
            "loc": 4
        },
        {
            "method_signature": "org.mockito.internal.debugging.Location:<init>(Lorg/mockito/internal/exceptions/base/StackTraceFilter;)V",
            "method_body": "public Location(StackTraceFilter stackTraceFilter) {\nthis.stackTraceFilter = stackTraceFilter;\nstackTraceHolder = new Throwable();\n}",
            "method_id": 19,
            "loc": 4
        }
    ]
}