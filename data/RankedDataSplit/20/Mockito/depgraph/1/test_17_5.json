{
    "bug_id": 1,
    "test_id": 17,
    "test_name": "org.mockitousage.basicapi.UsingVarargsTest.shouldVerifyWithNullVarArgArray",
    "test_body": "126: public void shouldVerifyWithNullVarArgArray() {\n127: Foo foo = Mockito.mock(Foo.class);\n128: foo.varArgs((String[]) null);    \n129: Mockito.verify(foo).varArgs((String[]) Mockito.anyObject());\n130: Mockito.verify(foo).varArgs((String[]) null);",
    "stack_trace": "java.lang.UnsupportedOperationException\nat org.mockito.internal.invocation.InvocationMatcher.captureArgumentsFrom(InvocationMatcher.java:123)\nat org.mockito.internal.invocation.InvocationMarker.markVerified(InvocationMarker.java:22)\nat org.mockito.internal.invocation.InvocationMarker.markVerified(InvocationMarker.java:16)\nat org.mockito.internal.verification.checkers.NumberOfInvocationsChecker.check(NumberOfInvocationsChecker.java:48)\nat org.mockito.internal.verification.Times.verify(Times.java:39)\nat org.mockito.internal.verification.MockAwareVerificationMode.verify(MockAwareVerificationMode.java:21)\nat org.mockito.internal.handler.MockHandlerImpl.handle(MockHandlerImpl.java:76)\nat org.mockito.internal.handler.NullResultGuardian.handle(NullResultGuardian.java:29)\nat org.mockito.internal.handler.InvocationNotifierHandler.handle(InvocationNotifierHandler.java:37)\nat org.mockito.internal.creation.bytebuddy.MockMethodInterceptor.doIntercept(MockMethodInterceptor.java:82)\nat org.mockito.internal.creation.bytebuddy.MockMethodInterceptor.interceptSuperCallable(MockMethodInterceptor.java:44)\nat org.mockitousage.basicapi.UsingVarargsTest$Foo$MockitoMock$1438278408.varArgs(Unknown Source)\nat org.mockitousage.basicapi.UsingVarargsTest.shouldVerifyWithNullVarArgArray(UsingVarargsTest.java:129)",
    "covered_methods": [
        {
            "method_signature": "org.mockito.internal.configuration.DefaultAnnotationEngine:createMockFor(Ljava/lang/annotation/Annotation;Ljava/lang/reflect/Field;)Ljava/lang/Object;",
            "method_body": "public Object createMockFor(Annotation annotation, Field field) {\nreturn forAnnotation(annotation).process(annotation, field);\n}",
            "method_id": 100
        },
        {
            "method_signature": "org.mockito.internal.configuration.DefaultAnnotationEngine:forAnnotation(Ljava/lang/annotation/Annotation;)Lorg/mockito/internal/configuration/FieldAnnotationProcessor;",
            "method_body": "private <A extends Annotation> FieldAnnotationProcessor<A> forAnnotation(A annotation) {\nif (annotationProcessorMap.containsKey(annotation.annotationType())) {\nreturn (FieldAnnotationProcessor<A>) annotationProcessorMap.get(annotation.annotationType());\n}",
            "method_id": 101
        },
        {
            "method_signature": "org.mockito.internal.creation.MockSettingsImpl:name(Ljava/lang/String;)Lorg/mockito/MockSettings;",
            "method_body": "public MockSettings name(String name) {\nthis.name = name;\nreturn this;\n}",
            "method_id": 102
        },
        {
            "method_signature": "org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet$1:next()Ljava/lang/Object;",
            "method_body": "public Iterator<Object> iterator() {\nreturn new Iterator<Object>() {\nprivate final Iterator<HashCodeAndEqualsMockWrapper> iterator = backingHashSet.iterator();\nreturn iterator.hasNext();\nreturn iterator.next().get();\n}",
            "method_id": 103
        },
        {
            "method_signature": "org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper:get()Ljava/lang/Object;",
            "method_body": "public Object get() {\nreturn mockInstance;\n}",
            "method_id": 104
        },
        {
            "method_signature": "org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet:add(Ljava/lang/Object;)Z",
            "method_body": "public boolean add(Object mock) {\nreturn backingHashSet.add(HashCodeAndEqualsMockWrapper.of(mock));\n}",
            "method_id": 105
        },
        {
            "method_signature": "org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper:<init>(Ljava/lang/Object;)V",
            "method_body": "public HashCodeAndEqualsMockWrapper(Object mockInstance) {\nthis.mockInstance = mockInstance;\n}",
            "method_id": 106
        },
        {
            "method_signature": "org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper:hashCode()I",
            "method_body": "public int hashCode() {\nreturn System.identityHashCode(mockInstance);\n}",
            "method_id": 107
        },
        {
            "method_signature": "org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper:of(Ljava/lang/Object;)Lorg/mockito/internal/util/collections/HashCodeAndEqualsMockWrapper;",
            "method_body": "public static HashCodeAndEqualsMockWrapper of(Object mock) {\nreturn new HashCodeAndEqualsMockWrapper(mock);\n}",
            "method_id": 108
        },
        {
            "method_signature": "org.mockito.internal.creation.instance.ObjenesisInstantiator:newInstance(Ljava/lang/Class;)Ljava/lang/Object;",
            "method_body": "public <T> T newInstance(Class<T> cls) {\nreturn objenesis.newInstance(cls);\n}",
            "method_id": 109
        },
        {
            "method_signature": "org.mockito.internal.progress.ThreadSafeMockingProgress:mockingStarted(Ljava/lang/Object;Ljava/lang/Class;)V",
            "method_body": "public void mockingStarted(Object mock, Class classToMock) {\nthreadSafely().mockingStarted(mock, classToMock);\n}",
            "method_id": 110
        },
        {
            "method_signature": "org.mockito.internal.progress.MockingProgressImpl:mockingStarted(Ljava/lang/Object;Ljava/lang/Class;)V",
            "method_body": "public void mockingStarted(Object mock, Class classToMock) {\nif (listener instanceof MockingStartedListener) {\nvalidateMostStuff();\n}",
            "method_id": 111
        },
        {
            "method_signature": "org.mockito.internal.creation.settings.CreationSettings:getTypeToMock()Ljava/lang/Class;",
            "method_body": "public Class<T> getTypeToMock() {\nreturn typeToMock;\n}",
            "method_id": 112
        },
        {
            "method_signature": "org.mockito.internal.creation.settings.CreationSettings:getInvocationListeners()Ljava/util/List;",
            "method_body": "public List<InvocationListener> getInvocationListeners() {\nreturn invocationListeners;\n}",
            "method_id": 113
        },
        {
            "method_signature": "org.mockito.internal.creation.settings.CreationSettings:isStubOnly()Z",
            "method_body": "public boolean isStubOnly() {\nreturn stubOnly;\n}",
            "method_id": 114
        },
        {
            "method_signature": "org.mockito.internal.creation.MockSettingsImpl:getOuterClassInstance()Ljava/lang/Object;",
            "method_body": "public Object getOuterClassInstance() {\nreturn outerClassInstance;\n}",
            "method_id": 115
        },
        {
            "method_signature": "org.mockito.internal.stubbing.InvocationContainerImpl:<init>(Lorg/mockito/internal/progress/MockingProgress;Lorg/mockito/mock/MockCreationSettings;)V",
            "method_body": "public InvocationContainerImpl(MockingProgress mockingProgress, MockCreationSettings mockSettings) {\nthis.mockingProgress = mockingProgress;\nthis.registeredInvocations = createRegisteredInvocations(mockSettings);\n}",
            "method_id": 116
        },
        {
            "method_signature": "org.mockito.internal.stubbing.InvocationContainerImpl:createRegisteredInvocations(Lorg/mockito/mock/MockCreationSettings;)Lorg/mockito/internal/verification/RegisteredInvocations;",
            "method_body": "private RegisteredInvocations createRegisteredInvocations(MockCreationSettings mockSettings) {\nreturn mockSettings.isStubOnly()\n}",
            "method_id": 117
        },
        {
            "method_signature": "org.mockito.internal.util.reflection.FieldReader:<init>(Ljava/lang/Object;Ljava/lang/reflect/Field;)V",
            "method_body": "public FieldReader(Object target, Field field) {\nthis.target = target;\nthis.field = field;\nchanger.enableAccess(field);\n}",
            "method_id": 118
        },
        {
            "method_signature": "org.mockito.internal.util.reflection.FieldReader:read()Ljava/lang/Object;",
            "method_body": "public Object read() {\nreturn field.get(target);\n}",
            "method_id": 119
        }
    ]
}