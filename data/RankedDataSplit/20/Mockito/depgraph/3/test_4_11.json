{
    "bug_id": 3,
    "test_id": 4,
    "test_name": "org.mockitousage.matchers.CapturingArgumentsTest.should_capture_byte_vararg_by_creating_captor_with_primitive_wrapper",
    "test_body": "240: public void should_capture_byte_vararg_by_creating_captor_with_primitive_wrapper() throws Exception {\n241: // given\n242: ArgumentCaptor<Byte> argumentCaptor = ArgumentCaptor.forClass(Byte.class);\n243: 244: // when\n245: mock.varargsbyte((byte) 1, (byte) 2);\n246: 247: // then\n248: verify(mock).varargsbyte(argumentCaptor.capture());\n249: assertEquals((byte) 2, (byte) argumentCaptor.getValue());\n250: Assertions.assertThat(argumentCaptor.getAllValues()).containsExactly((byte) 1, (byte) 2);",
    "stack_trace": "java.lang.ClassCastException: [B cannot be cast to java.lang.Byte\nat org.mockitousage.matchers.CapturingArgumentsTest.should_capture_byte_vararg_by_creating_captor_with_primitive_wrapper(CapturingArgumentsTest.java:249)",
    "covered_methods": [
        {
            "method_signature": "org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet$1:<init>(Lorg/mockito/internal/util/collections/HashCodeAndEqualsSafeSet;)V",
            "method_body": "public Iterator<Object> iterator() {\nreturn new Iterator<Object>() {\nprivate final Iterator<HashCodeAndEqualsMockWrapper> iterator = backingHashSet.iterator();\nreturn iterator.hasNext();\nreturn iterator.next().get();\n}",
            "method_id": 220
        }
    ]
}