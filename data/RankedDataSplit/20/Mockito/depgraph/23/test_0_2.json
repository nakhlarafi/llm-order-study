{
    "bug_id": 23,
    "test_id": 0,
    "test_name": "org.mockitousage.stubbing.DeepStubsSerializableTest.should_serialize_and_deserialize_mock_created_by_deep_stubs",
    "test_body": "18: public void should_serialize_and_deserialize_mock_created_by_deep_stubs() throws Exception {\n19: // given\n20: SampleClass sampleClass = mock(SampleClass.class, withSettings().defaultAnswer(Mockito.RETURNS_DEEP_STUBS).serializable());\n21: when(sampleClass.getSample().isSth()).thenReturn(STUBBED_BOOLEAN_VALUE);\n22: when(sampleClass.getSample().getNumber()).thenReturn(STUBBED_INTEGER_VALUE);\n23: 24: // when\n25: Object o = SimpleSerializationUtil.serializeAndBack(sampleClass);\n26: 27: // then\n28: assertThat(o).isInstanceOf(SampleClass.class);\n29: SampleClass deserializedSample = (SampleClass) o;\n30: assertThat(deserializedSample.getSample().isSth()).isEqualTo(STUBBED_BOOLEAN_VALUE);\n31: assertThat(deserializedSample.getSample().getNumber()).isEqualTo(STUBBED_INTEGER_VALUE);\n32: }\n",
    "stack_trace": "java.io.NotSerializableException: org.mockito.internal.stubbing.defaultanswers.ReturnsDeepStubs$2\nat java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1184)\nat java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:348)\nat java.util.concurrent.ConcurrentLinkedQueue.writeObject(ConcurrentLinkedQueue.java:769)\nat sun.reflect.GeneratedMethodAccessor33.invoke(Unknown Source)\nat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\nat java.lang.reflect.Method.invoke(Method.java:498)\nat java.io.ObjectStreamClass.invokeWriteObject(ObjectStreamClass.java:1140)\nat java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1496)\nat java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1432)\nat java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1178)\nat java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1548)\nat java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1509)\nat java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1432)\nat java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1178)\nat java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1548)\nat java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1509)\nat java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1432)\nat java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1178)\nat java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1548)\nat java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1509)\nat java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1432)\nat java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1178)\nat java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1548)\nat java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1509)\nat java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1432)\nat java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1178)\nat java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1548)\nat java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1509)\nat java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1432)\nat java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1178)\nat java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1548)\nat java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1509)\nat java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1432)\nat java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1178)\nat java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1548)\nat java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1509)\nat java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1432)\nat java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1178)\nat java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1548)\nat java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1509)\nat java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1432)\nat java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1178)\nat java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1548)\nat java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1509)\nat java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1432)\nat java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1178)\nat java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1548)\nat java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1509)\nat java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1432)\nat java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1178)\nat java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:348)\nat org.mockitoutil.SimpleSerializationUtil.serializeMock(SimpleSerializationUtil.java:34)\nat org.mockitoutil.SimpleSerializationUtil.serializeAndBack(SimpleSerializationUtil.java:16)\nat org.mockitousage.stubbing.DeepStubsSerializableTest.should_serialize_and_deserialize_mock_created_by_deep_stubs(DeepStubsSerializableTest.java:25)",
    "covered_methods": [
        {
            "method_signature": "org.mockito.internal.util.reflection.GenericMetadataSupport$NotGenericReturnTypeSupport:rawType()Ljava/lang/Class;",
            "method_body": "public Class<?> rawType() {\nreturn returnType;\n}",
            "method_id": 40
        },
        {
            "method_signature": "org.mockito.internal.stubbing.InvocationContainerImpl:getStubbedInvocations()Ljava/util/List;",
            "method_body": "public List<StubbedInvocationMatcher> getStubbedInvocations() {\nreturn stubbed;\n}",
            "method_id": 41
        },
        {
            "method_signature": "org.mockito.internal.creation.SerializableMockitoMethodProxy:<init>(Lorg/mockito/cglib/proxy/MethodProxy;)V",
            "method_body": "public SerializableMockitoMethodProxy(MethodProxy methodProxy) {\nObject info = Whitebox.getInternalState(methodProxy, \"createInfo\");\nc1 = (Class<?>) Whitebox.getInternalState(info, \"c1\");\nc2 = (Class<?>) Whitebox.getInternalState(info, \"c2\");\ndesc = methodProxy.getSignature().getDescriptor();\nname = methodProxy.getSignature().getName();\nsuperName = methodProxy.getSuperName();\nthis.methodProxy = methodProxy;\n}",
            "method_id": 42
        },
        {
            "method_signature": "org.mockito.internal.creation.SerializableMockitoMethodProxy:getMethodProxy()Lorg/mockito/cglib/proxy/MethodProxy;",
            "method_body": "public MethodProxy getMethodProxy() {\nif (methodProxy == null)\nreturn methodProxy;\n}",
            "method_id": 43
        },
        {
            "method_signature": "org.mockito.internal.util.Primitives:primitiveTypeOf(Ljava/lang/Class;)Ljava/lang/Class;",
            "method_body": "public static <T> Class<T> primitiveTypeOf(Class<T> clazz) {\nif (clazz.isPrimitive()) {\nreturn clazz;\nreturn (Class<T>) primitiveTypes.get(clazz);\n}",
            "method_id": 44
        },
        {
            "method_signature": "org.mockito.internal.MockitoCore:isTypeMockable(Ljava/lang/Class;)Z",
            "method_body": "public boolean isTypeMockable(Class<?> typeToMock) {\nreturn mockUtil.isTypeMockable(typeToMock);\n}",
            "method_id": 45
        },
        {
            "method_signature": "org.mockito.internal.util.reflection.Whitebox:getInternalState(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;",
            "method_body": "public static Object getInternalState(Object target, String field) {\nClass<?> c = target.getClass();\nField f = getFieldFromHierarchy(c, field);\nf.setAccessible(true);\nreturn f.get(target);\n}",
            "method_id": 46
        },
        {
            "method_signature": "org.mockito.internal.util.reflection.GenericMetadataSupport:resolveGenericReturnType(Ljava/lang/reflect/Method;)Lorg/mockito/internal/util/reflection/GenericMetadataSupport;",
            "method_body": "public GenericMetadataSupport resolveGenericReturnType(Method method) {\nType genericReturnType = method.getGenericReturnType();\nif (genericReturnType instanceof Class) {\nreturn new NotGenericReturnTypeSupport(genericReturnType);\n}",
            "method_id": 47
        },
        {
            "method_signature": "org.mockito.internal.util.reflection.Whitebox:getFieldFromHierarchy(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/reflect/Field;",
            "method_body": "private static Field getFieldFromHierarchy(Class<?> clazz, String field) {\nField f = getField(clazz, field);\nwhile (f == null && clazz != Object.class) {\nif (f == null) {\nreturn f;\n}",
            "method_id": 48
        },
        {
            "method_signature": "org.mockito.internal.util.reflection.Whitebox:getField(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/reflect/Field;",
            "method_body": "private static Field getField(Class<?> clazz, String field) {\nreturn clazz.getDeclaredField(field);\n}",
            "method_id": 49
        },
        {
            "method_signature": "org.mockito.internal.util.reflection.GenericMetadataSupport:registerTypeParametersOn([Ljava/lang/reflect/TypeVariable;)V",
            "method_body": "protected void registerTypeParametersOn(TypeVariable[] typeParameters) {\nfor (TypeVariable typeParameter : typeParameters) {\n}",
            "method_id": 50
        },
        {
            "method_signature": "org.mockito.internal.util.reflection.GenericMetadataSupport$FromClassGenericMetadataSupport:<init>(Ljava/lang/Class;)V",
            "method_body": "public FromClassGenericMetadataSupport(Class<?> clazz) {\nthis.clazz = clazz;\nreadActualTypeParametersOnDeclaringClass();\n}",
            "method_id": 51
        },
        {
            "method_signature": "org.mockito.internal.util.reflection.GenericMetadataSupport$FromClassGenericMetadataSupport:readActualTypeParametersOnDeclaringClass()V",
            "method_body": "private void readActualTypeParametersOnDeclaringClass() {\nregisterTypeParametersOn(clazz.getTypeParameters());\nregisterTypeVariablesOn(clazz.getGenericSuperclass());\nfor (Type genericInterface : clazz.getGenericInterfaces()) {\nregisterTypeVariablesOn(genericInterface);\n}",
            "method_id": 52
        },
        {
            "method_signature": "org.mockito.internal.util.reflection.GenericMetadataSupport:registerTypeVariablesOn(Ljava/lang/reflect/Type;)V",
            "method_body": "protected void registerTypeVariablesOn(Type classType) {\nif (!(classType instanceof ParameterizedType)) {\nreturn;\n}",
            "method_id": 53
        },
        {
            "method_signature": "org.mockito.internal.util.reflection.GenericMetadataSupport:inferFrom(Ljava/lang/reflect/Type;)Lorg/mockito/internal/util/reflection/GenericMetadataSupport;",
            "method_body": "public static GenericMetadataSupport inferFrom(Type type) {\nChecks.checkNotNull(type, \"type\");\nif (type instanceof Class) {\nreturn new FromClassGenericMetadataSupport((Class<?>) type);\n}",
            "method_id": 54
        },
        {
            "method_signature": "org.mockito.internal.creation.MockSettingsImpl:serializable()Lorg/mockito/MockSettings;",
            "method_body": "public MockSettings serializable() {\nreturn serializable(SerializableMode.BASIC);\n}",
            "method_id": 55
        },
        {
            "method_signature": "org.mockito.internal.creation.MockSettingsImpl:serializable(Lorg/mockito/mock/SerializableMode;)Lorg/mockito/MockSettings;",
            "method_body": "public MockSettings serializable(SerializableMode mode) {\nthis.serializableMode = mode;\nreturn this;\n}",
            "method_id": 56
        },
        {
            "method_signature": "org.mockito.internal.invocation.SerializableMethod:getJavaMethod()Ljava/lang/reflect/Method;",
            "method_body": "public Method getJavaMethod() {\nreturn declaringClass.getDeclaredMethod(methodName, parameterTypes);\n}",
            "method_id": 57
        },
        {
            "method_signature": "org.mockito.internal.util.Primitives:defaultValueForPrimitiveOrWrapper(Ljava/lang/Class;)Ljava/lang/Object;",
            "method_body": "public static <T> T defaultValueForPrimitiveOrWrapper(Class<T> primitiveOrWrapperType) {\nreturn (T) primitiveOrWrapperDefaultValues.get(primitiveOrWrapperType);\n}",
            "method_id": 58
        },
        {
            "method_signature": "org.mockito.internal.util.MockNameImpl:toInstanceName(Ljava/lang/Class;)Ljava/lang/String;",
            "method_body": "private static String toInstanceName(Class<?> clazz) {\nString className = clazz.getSimpleName();\nif (className.length() == 0) {\nreturn className.substring(0, 1).toLowerCase() + className.substring(1);\n}",
            "method_id": 59
        }
    ]
}