{
    "bug_id": 3,
    "test_id": 7,
    "test_name": "org.mockitousage.matchers.CapturingArgumentsTest.captures_correctly_when_captor_used_multiple_times",
    "test_body": "public void captures_correctly_when_captor_used_multiple_times() throws Exception {\n// given\nArgumentCaptor<String> argumentCaptor = ArgumentCaptor.forClass(String.class);\n299: // when\nmock.mixedVarargs(42, \"a\", \"b\", \"c\");\n302: // then\n// this is only for backwards compatibility. It does not make sense in real to do so.\nverify(mock).mixedVarargs(any(), argumentCaptor.capture(), argumentCaptor.capture(), argumentCaptor.capture());\nAssertions.assertThat(argumentCaptor.getAllValues()).containsExactly(\"a\", \"b\", \"c\");",
    "stack_trace": "java.lang.ArrayIndexOutOfBoundsException: 2\nat org.mockito.internal.invocation.InvocationMatcher.captureArgumentsFrom(InvocationMatcher.java:130)\nat org.mockito.internal.invocation.InvocationMarker.markVerified(InvocationMarker.java:22)\nat org.mockito.internal.invocation.InvocationMarker.markVerified(InvocationMarker.java:16)\nat org.mockito.internal.verification.checkers.NumberOfInvocationsChecker.check(NumberOfInvocationsChecker.java:48)\nat org.mockito.internal.verification.Times.verify(Times.java:39)\nat org.mockito.internal.verification.MockAwareVerificationMode.verify(MockAwareVerificationMode.java:21)\nat org.mockito.internal.handler.MockHandlerImpl.handle(MockHandlerImpl.java:76)\nat org.mockito.internal.handler.NullResultGuardian.handle(NullResultGuardian.java:29)\nat org.mockito.internal.handler.InvocationNotifierHandler.handle(InvocationNotifierHandler.java:37)\nat org.mockito.internal.creation.bytebuddy.MockMethodInterceptor.doIntercept(MockMethodInterceptor.java:82)\nat org.mockito.internal.creation.bytebuddy.MockMethodInterceptor.interceptAbstract(MockMethodInterceptor.java:70)\nat org.mockitousage.IMethods$MockitoMock$263271281.mixedVarargs(Unknown Source)\nat org.mockitousage.matchers.CapturingArgumentsTest.captures_correctly_when_captor_used_multiple_times(CapturingArgumentsTest.java:304)",
    "covered_methods": [
        {
            "method_signature": "org.mockito.internal.util.reflection.AccessibilityChanger:enableAccess(Ljava/lang/reflect/AccessibleObject;)V",
            "method_body": "public void enableAccess(AccessibleObject accessibleObject) {\nwasAccessible = accessibleObject.isAccessible();\naccessibleObject.setAccessible(true);\n}",
            "method_id": 200
        },
        {
            "method_signature": "org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper:of(Ljava/lang/Object;)Lorg/mockito/internal/util/collections/HashCodeAndEqualsMockWrapper;",
            "method_body": "public static HashCodeAndEqualsMockWrapper of(Object mock) {\nreturn new HashCodeAndEqualsMockWrapper(mock);\n}",
            "method_id": 201
        },
        {
            "method_signature": "org.mockito.internal.invocation.MatchersBinder:validateMatchers(Lorg/mockito/invocation/Invocation;Ljava/util/List;)V",
            "method_body": "private void validateMatchers(Invocation invocation, List<LocalizedMatcher> lastMatchers) {\nif (!lastMatchers.isEmpty()) {\nint recordedMatchersSize = lastMatchers.size();\nint expectedMatchersSize = invocation.getArguments().length;\nif (expectedMatchersSize != recordedMatchersSize) {\n}",
            "method_id": 202
        },
        {
            "method_signature": "org.mockito.internal.util.MockCreationValidator:validateExtraInterfaces(Ljava/lang/Class;Ljava/util/Collection;)V",
            "method_body": "public void validateExtraInterfaces(Class classToMock, Collection<Class> extraInterfaces) {\nif (extraInterfaces == null) {\nfor (Class i : extraInterfaces) {\n}",
            "method_id": 203
        },
        {
            "method_signature": "org.mockito.Matchers:argThat(Lorg/hamcrest/Matcher;)Ljava/lang/Object;",
            "method_body": "public static <T> T argThat(Matcher<T> matcher) {\nreturn reportMatcher(matcher).<T>returnNull();\n}",
            "method_id": 204
        },
        {
            "method_signature": "org.mockito.internal.stubbing.InvocationContainerImpl:createRegisteredInvocations(Lorg/mockito/mock/MockCreationSettings;)Lorg/mockito/internal/verification/RegisteredInvocations;",
            "method_body": "private RegisteredInvocations createRegisteredInvocations(MockCreationSettings mockSettings) {\nreturn mockSettings.isStubOnly()\n}",
            "method_id": 205
        },
        {
            "method_signature": "org.mockito.internal.configuration.injection.MockInjection$OngoingMockInjection:apply()V",
            "method_body": "public void apply() {\nfor (Field field : fields) {\n}",
            "method_id": 206
        },
        {
            "method_signature": "org.mockito.internal.util.ObjectMethodsGuru:isToString(Lorg/mockito/internal/invocation/MockitoMethod;)Z",
            "method_body": "public boolean isToString(MockitoMethod method) {\nreturn method.getReturnType() == String.class\n}",
            "method_id": 207
        },
        {
            "method_signature": "org.mockito.Matchers:reportMatcher(Lorg/hamcrest/Matcher;)Lorg/mockito/internal/progress/HandyReturnValues;",
            "method_body": "private static HandyReturnValues reportMatcher(Matcher<?> matcher) {\nreturn MOCKING_PROGRESS.getArgumentMatcherStorage().reportMatcher(matcher);\n}",
            "method_id": 208
        },
        {
            "method_signature": "org.mockito.internal.creation.util.SearchingClassLoader:combine(Ljava/util/List;)Ljava/lang/ClassLoader;",
            "method_body": "private static ClassLoader combine(List<ClassLoader> parentLoaders) {\nClassLoader loader = parentLoaders.get(parentLoaders.size()-1);\nfor (int i = parentLoaders.size()-2; i >= 0; i--) {\nreturn loader;\n}",
            "method_id": 209
        },
        {
            "method_signature": "org.mockito.internal.stubbing.InvocationContainerImpl:hasAnswersForStubbing()Z",
            "method_body": "public boolean hasAnswersForStubbing() {\nreturn !answersForStubbing.isEmpty();\n}",
            "method_id": 210
        },
        {
            "method_signature": "org.mockito.internal.util.MockNameImpl:isDefault()Z",
            "method_body": "public boolean isDefault() {\nreturn defaultName;\n}",
            "method_id": 211
        },
        {
            "method_signature": "org.mockito.internal.progress.MockingProgressImpl:mockingStarted(Ljava/lang/Object;Ljava/lang/Class;)V",
            "method_body": "public void mockingStarted(Object mock, Class classToMock) {\nif (listener instanceof MockingStartedListener) {\nvalidateMostStuff();\n}",
            "method_id": 212
        },
        {
            "method_signature": "org.mockito.internal.verification.DefaultRegisteredInvocations:getAll()Ljava/util/List;",
            "method_body": "public List<Invocation> getAll() {\nsynchronized (invocations) {\ncopiedList = new LinkedList<Invocation>(invocations) ;\n}\nreturn ListUtil.filter(copiedList, new RemoveToString());\n}",
            "method_id": 213
        },
        {
            "method_signature": "org.mockito.internal.verification.checkers.MissingInvocationChecker:<init>(Lorg/mockito/internal/invocation/InvocationsFinder;Lorg/mockito/exceptions/Reporter;)V",
            "method_body": "MissingInvocationChecker(InvocationsFinder finder, Reporter reporter) {\nthis.finder = finder;\nthis.reporter = reporter;\n}",
            "method_id": 214
        },
        {
            "method_signature": "org.mockito.internal.util.ObjectMethodsGuru:isCompareToMethod(Ljava/lang/reflect/Method;)Z",
            "method_body": "public boolean isCompareToMethod(Method method) {\nreturn Comparable.class.isAssignableFrom(method.getDeclaringClass())\n}",
            "method_id": 215
        },
        {
            "method_signature": "org.mockito.internal.matchers.LocalizedMatcher:<init>(Lorg/hamcrest/Matcher;)V",
            "method_body": "public LocalizedMatcher(Matcher actualMatcher) {\nthis.actualMatcher = actualMatcher;\nthis.location = new LocationImpl();\n}",
            "method_id": 216
        },
        {
            "method_signature": "org.mockito.internal.progress.SequenceNumber:next()I",
            "method_body": "public static synchronized int next() {\nreturn sequenceNumber++;\n}",
            "method_id": 217
        },
        {
            "method_signature": "org.mockito.internal.invocation.InvocationMarker:markVerified(Ljava/util/List;Lorg/mockito/internal/invocation/CapturesArgumensFromInvocation;)V",
            "method_body": "public void markVerified(List<Invocation> invocations, CapturesArgumensFromInvocation wanted) {\nfor (Invocation invocation : invocations) {\nmarkVerified(invocation, wanted);\n}\n}",
            "method_id": 218
        },
        {
            "method_signature": "org.mockito.internal.progress.ThreadSafeMockingProgress:verificationStarted(Lorg/mockito/verification/VerificationMode;)V",
            "method_body": "public void verificationStarted(VerificationMode verify) {\nthreadSafely().verificationStarted(verify);\n}",
            "method_id": 219
        }
    ]
}