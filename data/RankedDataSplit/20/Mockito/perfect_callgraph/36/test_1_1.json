{
    "bug_id": 36,
    "test_id": 1,
    "test_name": "org.mockito.internal.invocation.InvocationTest.shouldScreamWhenCallingRealMethodOnInterface",
    "test_body": "public void shouldScreamWhenCallingRealMethodOnInterface() throws Throwable {\n//given\nInvocation invocationOnInterface = new InvocationBuilder().toInvocation();\n173: try {\n//when\ninvocationOnInterface.callRealMethod();\n//then",
    "stack_trace": "java.lang.NullPointerException\nat org.mockito.internal.invocation.Invocation.callRealMethod(Invocation.java:202)\nat org.mockito.internal.invocation.InvocationTest.shouldScreamWhenCallingRealMethodOnInterface(InvocationTest.java:175)",
    "covered_methods": [
        {
            "method_signature": "org.mockito.internal.MockHandler:<init>(Lorg/mockito/internal/util/MockName;Lorg/mockito/internal/progress/MockingProgress;Lorg/mockito/internal/invocation/MatchersBinder;Lorg/mockito/internal/creation/MockSettingsImpl;)V",
            "method_body": "public MockHandler(MockName mockName, MockingProgress mockingProgress, MatchersBinder matchersBinder,\nMockSettingsImpl mockSettings) {\nthis.mockName = mockName;\nthis.mockingProgress = mockingProgress;\nthis.matchersBinder = matchersBinder;\nthis.mockSettings = mockSettings;\nthis.mockitoStubber = new MockitoStubber(mockingProgress);\nthis.registeredInvocations = new RegisteredInvocations();\n}",
            "method_id": 20
        },
        {
            "method_signature": "org.mockito.internal.invocation.SerializableMockitoMethod:isVarArgs()Z",
            "method_body": "public boolean isVarArgs() {\nreturn isVarArgs;\n}",
            "method_id": 21
        },
        {
            "method_signature": "org.mockito.internal.util.CreationValidator:validateType(Ljava/lang/Class;)V",
            "method_body": "public void validateType(Class classToMock) {\nif (!ClassImposterizer.INSTANCE.canImposterise(classToMock)) {\n}",
            "method_id": 22
        },
        {
            "method_signature": "org.mockito.internal.configuration.GlobalConfiguration:getIt()Lorg/mockito/configuration/IMockitoConfiguration;",
            "method_body": "IMockitoConfiguration getIt() {\nreturn globalConfiguration.get();\n}",
            "method_id": 23
        },
        {
            "method_signature": "org.mockito.internal.creation.jmock.ClassImposterizer$3:<init>(Lorg/mockito/internal/creation/jmock/ClassImposterizer;)V",
            "method_body": "private <T> Class<?> createProxyClass(Class<?> mockedType, Class<?>...interfaces) {\nif (mockedType == Object.class) {\nEnhancer enhancer = new Enhancer() {\nenhancer.setClassLoader(SearchingClassLoader.combineLoadersOf(mockedType));\nenhancer.setUseFactory(true);\nif (mockedType.isInterface()) {\nenhancer.setSuperclass(Object.class);\nenhancer.setInterfaces(prepend(mockedType, interfaces));\nenhancer.setCallbackTypes(new Class[]{MethodInterceptor.class, NoOp.class});\nenhancer.setCallbackFilter(IGNORE_BRIDGE_METHODS);\nif (mockedType.getSigners() != null) {\nenhancer.setNamingPolicy(MockitoNamingPolicy.INSTANCE);\nreturn enhancer.createClass();\n}",
            "method_id": 24
        },
        {
            "method_signature": "org.mockito.internal.progress.ArgumentMatcherStorageImpl:validateState()V",
            "method_body": "public void validateState() {\nif (!matcherStack.isEmpty()) {\n}",
            "method_id": 25
        },
        {
            "method_signature": "org.mockito.internal.invocation.SerializableMockitoMethod:<init>(Ljava/lang/reflect/Method;)V",
            "method_body": "public SerializableMockitoMethod(Method method) {\ndeclaringClass = method.getDeclaringClass();\nmethodName = method.getName();\nparameterTypes = method.getParameterTypes();\nreturnType = method.getReturnType();\nexceptionTypes = method.getExceptionTypes();\nisVarArgs = method.isVarArgs();\n}",
            "method_id": 26
        },
        {
            "method_signature": "org.mockito.internal.invocation.Invocation:expandVarArgs(Z[Ljava/lang/Object;)[Ljava/lang/Object;",
            "method_body": "private static Object[] expandVarArgs(final boolean isVarArgs, final Object[] args) {\nif (!isVarArgs || args[args.length - 1] != null && !args[args.length - 1].getClass().isArray()) {\nreturn args == null ? new Object[0] : args;\n}",
            "method_id": 27
        },
        {
            "method_signature": "org.mockito.MockitoAnnotations:initMocks(Ljava/lang/Object;)V",
            "method_body": "public static void initMocks(Object testClass) {\nif (testClass == null) {\nClass<?> clazz = testClass.getClass();\nwhile (clazz != Object.class) {\nscan(testClass, clazz);\nclazz = clazz.getSuperclass();\n}",
            "method_id": 28
        },
        {
            "method_signature": "org.mockito.internal.configuration.GlobalConfiguration:getAnnotationEngine()Lorg/mockito/configuration/AnnotationEngine;",
            "method_body": "public AnnotationEngine getAnnotationEngine() {\nreturn globalConfiguration.get().getAnnotationEngine();\n}",
            "method_id": 29
        },
        {
            "method_signature": "org.mockito.internal.progress.MockingProgressImpl:resetOngoingStubbing()V",
            "method_body": "public void resetOngoingStubbing() {\niOngoingStubbing = null;\n}",
            "method_id": 30
        },
        {
            "method_signature": "org.mockito.Mockito:mock(Ljava/lang/Class;Lorg/mockito/MockSettings;)Ljava/lang/Object;",
            "method_body": "public static <T> T mock(Class<T> classToMock, MockSettings mockSettings) {\nreturn MOCKITO_CORE.mock(classToMock, mockSettings);\n}",
            "method_id": 31
        },
        {
            "method_signature": "org.mockito.internal.debugging.Location:<init>(Lorg/mockito/internal/exceptions/base/StackTraceFilter;)V",
            "method_body": "public Location(StackTraceFilter filter) {\nStackTraceElement[] stackTrace = Thread.currentThread().getStackTrace();\nStackTraceElement[] filtered = filter.filter(stackTrace, false);\nif (filtered.length == 0) {\nwhere = \"-> at \" + filtered[0].toString();\n}",
            "method_id": 32
        },
        {
            "method_signature": "org.mockito.internal.util.MockName:<init>(Ljava/lang/String;Ljava/lang/Class;)V",
            "method_body": "public MockName(String mockName, Class classToMock) {\nif (mockName == null) {\nthis.mockName = toInstanceName(classToMock);\nthis.surrogate = true;\n}",
            "method_id": 33
        },
        {
            "method_signature": "org.mockito.internal.creation.jmock.ClassImposterizer:createProxy(Ljava/lang/Class;Lorg/mockito/cglib/proxy/MethodInterceptor;)Ljava/lang/Object;",
            "method_body": "private Object createProxy(Class<?> proxyClass, final MethodInterceptor interceptor) {\nFactory proxy = (Factory) objenesis.newInstance(proxyClass);\nproxy.setCallbacks(new Callback[] {interceptor, SerializableNoOp.SERIALIZABLE_INSTANCE });\nreturn proxy;\n}",
            "method_id": 34
        },
        {
            "method_signature": "org.mockito.Mockito:mock(Ljava/lang/Class;)Ljava/lang/Object;",
            "method_body": "public static <T> T mock(Class<T> classToMock) {\nreturn mock(classToMock, withSettings().defaultAnswer(RETURNS_DEFAULTS));\n}",
            "method_id": 35
        },
        {
            "method_signature": "org.mockito.internal.creation.jmock.ClassImposterizer:createProxyClass(Ljava/lang/Class;[Ljava/lang/Class;)Ljava/lang/Class;",
            "method_body": "private <T> Class<?> createProxyClass(Class<?> mockedType, Class<?>...interfaces) {\nif (mockedType == Object.class) {\nEnhancer enhancer = new Enhancer() {\nenhancer.setClassLoader(SearchingClassLoader.combineLoadersOf(mockedType));\nenhancer.setUseFactory(true);\nif (mockedType.isInterface()) {\nenhancer.setSuperclass(Object.class);\nenhancer.setInterfaces(prepend(mockedType, interfaces));\nenhancer.setCallbackTypes(new Class[]{MethodInterceptor.class, NoOp.class});\nenhancer.setCallbackFilter(IGNORE_BRIDGE_METHODS);\nif (mockedType.getSigners() != null) {\nenhancer.setNamingPolicy(MockitoNamingPolicy.INSTANCE);\nreturn enhancer.createClass();\n}",
            "method_id": 36
        },
        {
            "method_signature": "org.mockito.internal.creation.MockSettingsImpl:getSpiedInstance()Ljava/lang/Object;",
            "method_body": "public Object getSpiedInstance() {\nreturn spiedInstance;\n}",
            "method_id": 37
        },
        {
            "method_signature": "org.mockito.internal.configuration.GlobalConfiguration:validate()V",
            "method_body": "public static void validate() {\nnew GlobalConfiguration();\n}",
            "method_id": 38
        },
        {
            "method_signature": "org.mockito.internal.creation.jmock.SearchingClassLoader:combine(Ljava/util/List;)Ljava/lang/ClassLoader;",
            "method_body": "private static ClassLoader combine(List<ClassLoader> parentLoaders) {\nClassLoader loader = parentLoaders.get(parentLoaders.size()-1);\nfor (int i = parentLoaders.size()-2; i >= 0; i--) {\nreturn loader;\n}",
            "method_id": 39
        }
    ]
}