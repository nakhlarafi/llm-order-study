{
    "bug_id": 1,
    "test_id": 17,
    "test_name": "org.mockitousage.basicapi.UsingVarargsTest.shouldVerifyWithNullVarArgArray",
    "test_body": "public void shouldVerifyWithNullVarArgArray() {\nFoo foo = Mockito.mock(Foo.class);\nfoo.varArgs((String[]) null);    \nMockito.verify(foo).varArgs((String[]) Mockito.anyObject());\nMockito.verify(foo).varArgs((String[]) null);",
    "stack_trace": "java.lang.UnsupportedOperationException\nat org.mockito.internal.invocation.InvocationMatcher.captureArgumentsFrom(InvocationMatcher.java:123)\nat org.mockito.internal.invocation.InvocationMarker.markVerified(InvocationMarker.java:22)\nat org.mockito.internal.invocation.InvocationMarker.markVerified(InvocationMarker.java:16)\nat org.mockito.internal.verification.checkers.NumberOfInvocationsChecker.check(NumberOfInvocationsChecker.java:48)\nat org.mockito.internal.verification.Times.verify(Times.java:39)\nat org.mockito.internal.verification.MockAwareVerificationMode.verify(MockAwareVerificationMode.java:21)\nat org.mockito.internal.handler.MockHandlerImpl.handle(MockHandlerImpl.java:76)\nat org.mockito.internal.handler.NullResultGuardian.handle(NullResultGuardian.java:29)\nat org.mockito.internal.handler.InvocationNotifierHandler.handle(InvocationNotifierHandler.java:37)\nat org.mockito.internal.creation.bytebuddy.MockMethodInterceptor.doIntercept(MockMethodInterceptor.java:82)\nat org.mockito.internal.creation.bytebuddy.MockMethodInterceptor.interceptSuperCallable(MockMethodInterceptor.java:44)\nat org.mockitousage.basicapi.UsingVarargsTest$Foo$MockitoMock$1438278408.varArgs(Unknown Source)\nat org.mockitousage.basicapi.UsingVarargsTest.shouldVerifyWithNullVarArgArray(UsingVarargsTest.java:129)",
    "covered_methods": [
        {
            "method_signature": "org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet:iterator()Ljava/util/Iterator;",
            "method_body": "public Iterator<Object> iterator() {\nreturn new Iterator<Object>() {\nprivate final Iterator<HashCodeAndEqualsMockWrapper> iterator = backingHashSet.iterator();\nreturn iterator.hasNext();\nreturn iterator.next().get();\n}",
            "method_id": 160
        },
        {
            "method_signature": "org.mockito.internal.util.MockCreationValidator:validateMockedType(Ljava/lang/Class;Ljava/lang/Object;)V",
            "method_body": "public void validateMockedType(Class classToMock, Object spiedInstance) {\nif (classToMock == null || spiedInstance == null) {\nreturn;\n}",
            "method_id": 161
        },
        {
            "method_signature": "org.mockito.internal.handler.MockHandlerImpl:<init>(Lorg/mockito/mock/MockCreationSettings;)V",
            "method_body": "public MockHandlerImpl(MockCreationSettings mockSettings) {\nthis.mockSettings = mockSettings;\nthis.mockingProgress = new ThreadSafeMockingProgress();\nthis.matchersBinder = new MatchersBinder();\nthis.invocationContainerImpl = new InvocationContainerImpl(mockingProgress, mockSettings);\n}",
            "method_id": 162
        },
        {
            "method_signature": "org.mockito.internal.debugging.Localized:<init>(Ljava/lang/Object;)V",
            "method_body": "public Localized(T object) {\nthis.object = object;\nlocation = new LocationImpl();\n}",
            "method_id": 163
        },
        {
            "method_signature": "org.mockito.internal.verification.checkers.MissingInvocationChecker:check(Ljava/util/List;Lorg/mockito/internal/invocation/InvocationMatcher;)V",
            "method_body": "public void check(List<Invocation> invocations, InvocationMatcher wanted) {\nList<Invocation> actualInvocations = finder.findInvocations(invocations, wanted);\nif (actualInvocations.isEmpty()) {\n}",
            "method_id": 164
        },
        {
            "method_signature": "org.mockito.internal.creation.settings.CreationSettings:getInvocationListeners()Ljava/util/List;",
            "method_body": "public List<InvocationListener> getInvocationListeners() {\nreturn invocationListeners;\n}",
            "method_id": 165
        },
        {
            "method_signature": "org.mockito.internal.creation.DelegatingMethod:getJavaMethod()Ljava/lang/reflect/Method;",
            "method_body": "public Method getJavaMethod() {\nreturn method;\n}",
            "method_id": 166
        },
        {
            "method_signature": "org.mockito.internal.util.collections.Sets:newMockSafeHashSet([Ljava/lang/Object;)Ljava/util/Set;",
            "method_body": "public static Set<Object> newMockSafeHashSet(Object... mocks) {\nreturn HashCodeAndEqualsSafeSet.of(mocks);\n}",
            "method_id": 167
        },
        {
            "method_signature": "org.mockito.internal.configuration.DefaultAnnotationEngine:registerAnnotationProcessor(Ljava/lang/Class;Lorg/mockito/internal/configuration/FieldAnnotationProcessor;)V",
            "method_body": "private <A extends Annotation> void registerAnnotationProcessor(Class<A> annotationClass, FieldAnnotationProcessor<A> fieldAnnotationProcessor) {\nannotationProcessorMap.put(annotationClass, fieldAnnotationProcessor);\n}",
            "method_id": 168
        },
        {
            "method_signature": "org.mockito.internal.verification.MockAwareVerificationMode:getMock()Ljava/lang/Object;",
            "method_body": "public Object getMock() {\nreturn mock;\n}",
            "method_id": 169
        },
        {
            "method_signature": "org.mockito.internal.handler.InvocationNotifierHandler:handle(Lorg/mockito/invocation/Invocation;)Ljava/lang/Object;",
            "method_body": "public Object handle(Invocation invocation) throws Throwable {\nObject returnedValue = mockHandler.handle(invocation);\nnotifyMethodCall(invocation, returnedValue);\nreturn returnedValue;\n} catch (Throwable t){\nnotifyMethodCallException(invocation, t);\nthrow t;\n}",
            "method_id": 170
        },
        {
            "method_signature": "org.mockito.internal.creation.instance.InstantiatorProvider:getInstantiator(Lorg/mockito/mock/MockCreationSettings;)Lorg/mockito/internal/creation/instance/Instantiator;",
            "method_body": "public Instantiator getInstantiator(MockCreationSettings settings) {\nif (settings.isUsingConstructor()) {\nreturn INSTANCE;\n}",
            "method_id": 171
        },
        {
            "method_signature": "org.mockito.internal.configuration.GlobalConfiguration:<init>()V",
            "method_body": "public GlobalConfiguration() {\nif (GLOBAL_CONFIGURATION.get() == null) {\n}",
            "method_id": 172
        },
        {
            "method_signature": "org.mockito.internal.configuration.DefaultInjectionEngine:injectMocksOnFields(Ljava/util/Set;Ljava/util/Set;Ljava/lang/Object;)V",
            "method_body": "public void injectMocksOnFields(Set<Field> needingInjection, Set<Object> mocks, Object testClassInstance) {\nMockInjection.onFields(needingInjection, testClassInstance)\n}",
            "method_id": 173
        },
        {
            "method_signature": "org.mockito.internal.creation.settings.CreationSettings:isUsingConstructor()Z",
            "method_body": "public boolean isUsingConstructor() {\nreturn useConstructor;\n}",
            "method_id": 174
        },
        {
            "method_signature": "org.mockito.internal.util.reflection.FieldReader:<init>(Ljava/lang/Object;Ljava/lang/reflect/Field;)V",
            "method_body": "public FieldReader(Object target, Field field) {\nthis.target = target;\nthis.field = field;\nchanger.enableAccess(field);\n}",
            "method_id": 175
        },
        {
            "method_signature": "org.mockito.internal.configuration.injection.filter.TypeBasedCandidateFilter:<init>(Lorg/mockito/internal/configuration/injection/filter/MockCandidateFilter;)V",
            "method_body": "public TypeBasedCandidateFilter(MockCandidateFilter next) {\nthis.next = next;\n}",
            "method_id": 176
        },
        {
            "method_signature": "org.mockito.MockitoAnnotations:processAnnotationDeprecatedWay(Lorg/mockito/configuration/AnnotationEngine;Ljava/lang/Object;Ljava/lang/reflect/Field;)V",
            "method_body": "static void processAnnotationDeprecatedWay(AnnotationEngine annotationEngine, Object testClass, Field field) {\nboolean alreadyAssigned = false;\nfor(Annotation annotation : field.getAnnotations()) {\nObject mock = annotationEngine.createMockFor(annotation, field);\nif (mock != null) {\nthrowIfAlreadyAssigned(field, alreadyAssigned);\nalreadyAssigned = true;\nnew FieldSetter(testClass, field).set(mock);\n}\n}",
            "method_id": 177
        },
        {
            "method_signature": "org.mockito.internal.creation.settings.CreationSettings:getTypeToMock()Ljava/lang/Class;",
            "method_body": "public Class<T> getTypeToMock() {\nreturn typeToMock;\n}",
            "method_id": 178
        },
        {
            "method_signature": "org.mockito.internal.verification.VerificationDataImpl:<init>(Lorg/mockito/internal/stubbing/InvocationContainer;Lorg/mockito/internal/invocation/InvocationMatcher;)V",
            "method_body": "public VerificationDataImpl(InvocationContainer invocations, InvocationMatcher wanted) {\nthis.invocations = invocations;\nthis.wanted = wanted;\nthis.assertWantedIsVerifiable();\n}",
            "method_id": 179
        }
    ]
}