{
    "bug_id": 25,
    "test_id": 5,
    "test_name": "org.mockito.internal.stubbing.defaultanswers.ReturnsGenericDeepStubsTest.generic_deep_mock_frenzy__look_at_these_chained_calls",
    "test_body": "public void generic_deep_mock_frenzy__look_at_these_chained_calls() throws Exception {\nGenericsNest<?> mock = mock(GenericsNest.class, RETURNS_DEEP_STUBS);\n37: Set<? extends Map.Entry<? extends Cloneable, Set<Number>>> entries = mock.entrySet();\nIterator<? extends Map.Entry<? extends Cloneable,Set<Number>>> entriesIterator = mock.entrySet().iterator();\nMap.Entry<? extends Cloneable, Set<Number>> nextEntry = mock.entrySet().iterator().next();\n41: Cloneable cloneableKey = mock.entrySet().iterator().next().getKey();\nComparable<?> comparableKey = mock.entrySet().iterator().next().getKey();\n44: Set<Number> value = mock.entrySet().iterator().next().getValue();\nIterator<Number> numbersIterator = mock.entrySet().iterator().next().getValue().iterator();\nNumber number = mock.entrySet().iterator().next().getValue().iterator().next();\n}\n",
    "stack_trace": "java.lang.ClassCastException: org.mockito.internal.creation.jmock.ClassImposterizer$ClassWithSuperclassToWorkAroundCglibBug$$EnhancerByMockitoWithCGLIB$$2f702d3d cannot be cast to java.util.Map$Entry\nat org.mockito.internal.stubbing.defaultanswers.ReturnsGenericDeepStubsTest.generic_deep_mock_frenzy__look_at_these_chained_calls(ReturnsGenericDeepStubsTest.java:39)",
    "covered_methods": [
        {
            "method_signature": "org.mockito.internal.util.MockUtil:isMockitoMock(Ljava/lang/Object;)Z",
            "method_body": "private <T> boolean isMockitoMock(T mock) {\nreturn mockMaker.getHandler(mock) != null;\n}",
            "method_id": 120
        },
        {
            "method_signature": "org.mockito.internal.creation.MockSettingsImpl:isSerializable()Z",
            "method_body": "public boolean isSerializable() {\nreturn serializable;\n}",
            "method_id": 121
        },
        {
            "method_signature": "org.mockito.internal.handler.InvocationNotifierHandler:notifyMethodCall(Lorg/mockito/invocation/Invocation;Ljava/lang/Object;)V",
            "method_body": "private void notifyMethodCall(Invocation invocation, Object returnValue) {\nfor (InvocationListener listener : invocationListeners) {\n}",
            "method_id": 122
        },
        {
            "method_signature": "org.mockito.internal.progress.MockingProgressImpl:validateMostStuff()V",
            "method_body": "private void validateMostStuff() {\nGlobalConfiguration.validate();\nif (verificationMode != null) {\ngetArgumentMatcherStorage().validateState();\n}",
            "method_id": 123
        },
        {
            "method_signature": "org.mockito.internal.creation.CglibMockMaker:getHandler(Ljava/lang/Object;)Lorg/mockito/invocation/MockHandler;",
            "method_body": "public MockHandler getHandler(Object mock) {\nif (!(mock instanceof Factory)) {\nFactory factory = (Factory) mock;\nCallback callback = factory.getCallback(0);\nif (!(callback instanceof MethodInterceptorFilter)) {\nreturn ((MethodInterceptorFilter) callback).getHandler();\n}",
            "method_id": 124
        },
        {
            "method_signature": "org.mockito.internal.util.reflection.GenericMetadataSupport$TypeVariableReturnType:<init>(Lorg/mockito/internal/util/reflection/GenericMetadataSupport;[Ljava/lang/reflect/TypeVariable;Ljava/lang/reflect/TypeVariable;)V",
            "method_body": "public TypeVariableReturnType(GenericMetadataSupport source, TypeVariable[] typeParameters, TypeVariable typeVariable) {\nthis.typeParameters = typeParameters;\nthis.typeVariable = typeVariable;\nthis.contextualActualTypeParameters = source.contextualActualTypeParameters;\nreadTypeParameters();\nreadTypeVariables();\n}",
            "method_id": 125
        },
        {
            "method_signature": "org.mockito.internal.invocation.InvocationMatcher:<init>(Lorg/mockito/invocation/Invocation;Ljava/util/List;)V",
            "method_body": "public InvocationMatcher(Invocation invocation, List<Matcher> matchers) {\nthis.invocation = invocation;\nif (matchers.isEmpty()) {\nthis.matchers = ArgumentsProcessor.argumentsToMatchers(invocation.getArguments());\nthis.matchers = matchers;\n}",
            "method_id": 126
        },
        {
            "method_signature": "org.mockito.internal.progress.ThreadSafeMockingProgress:reportOngoingStubbing(Lorg/mockito/internal/progress/IOngoingStubbing;)V",
            "method_body": "public void reportOngoingStubbing(IOngoingStubbing iOngoingStubbing) {\nthreadSafely().reportOngoingStubbing(iOngoingStubbing);\n}",
            "method_id": 127
        },
        {
            "method_signature": "org.mockito.internal.verification.DefaultRegisteredInvocations:add(Lorg/mockito/invocation/Invocation;)V",
            "method_body": "public void add(Invocation invocation) {\nsynchronized (invocations) {\ninvocations.add(invocation);\n}\n}",
            "method_id": 128
        },
        {
            "method_signature": "org.mockito.Mockito:withSettings()Lorg/mockito/MockSettings;",
            "method_body": "public static MockSettings withSettings() {\nreturn new MockSettingsImpl().defaultAnswer(RETURNS_DEFAULTS);\n}",
            "method_id": 129
        },
        {
            "method_signature": "org.mockito.internal.creation.MockSettingsImpl:getExtraInterfaces()Ljava/util/Set;",
            "method_body": "public Set<Class> getExtraInterfaces() {\nreturn extraInterfaces;\n}",
            "method_id": 130
        },
        {
            "method_signature": "org.mockito.internal.util.reflection.GenericMetadataSupport:boundsOf(Ljava/lang/reflect/TypeVariable;)Lorg/mockito/internal/util/reflection/GenericMetadataSupport$BoundedType;",
            "method_body": "private BoundedType boundsOf(TypeVariable typeParameter) {\nif (typeParameter.getBounds()[0] instanceof TypeVariable) {\nreturn boundsOf((TypeVariable) typeParameter.getBounds()[0]);\nreturn new TypeVarBoundedType(typeParameter);\n}",
            "method_id": 131
        },
        {
            "method_signature": "org.mockito.internal.creation.jmock.ClassImposterizer:setConstructorsAccessible(Ljava/lang/Class;Z)V",
            "method_body": "private void setConstructorsAccessible(Class<?> mockedType, boolean accessible) {\nfor (Constructor<?> constructor : mockedType.getDeclaredConstructors()) {\nconstructor.setAccessible(accessible);\n}",
            "method_id": 132
        },
        {
            "method_signature": "org.mockito.internal.invocation.InvocationImpl:markStubbed(Lorg/mockito/invocation/StubInfo;)V",
            "method_body": "public void markStubbed(StubInfo stubInfo) {\nthis.stubInfo = stubInfo;\n}",
            "method_id": 133
        },
        {
            "method_signature": "org.mockito.internal.creation.cglib.MockitoNamingPolicy:getTag()Ljava/lang/String;",
            "method_body": "protected String getTag() {\nreturn \"ByMockitoWithCGLIB\";\n}",
            "method_id": 134
        },
        {
            "method_signature": "org.mockito.internal.progress.MockingProgressImpl:stubbingCompleted(Lorg/mockito/invocation/Invocation;)V",
            "method_body": "public void stubbingCompleted(Invocation invocation) {\nstubbingInProgress = null;\n}",
            "method_id": 135
        },
        {
            "method_signature": "org.mockito.internal.util.reflection.GenericMetadataSupport$FromClassGenericMetadataSupport:<init>(Ljava/lang/Class;)V",
            "method_body": "public FromClassGenericMetadataSupport(Class<?> clazz) {\nthis.clazz = clazz;\nreadActualTypeParametersOnDeclaringClass();\n}",
            "method_id": 136
        },
        {
            "method_signature": "org.mockito.internal.handler.MockHandlerImpl:getInvocationContainer()Lorg/mockito/internal/stubbing/InvocationContainer;",
            "method_body": "public InvocationContainer getInvocationContainer() {\nreturn invocationContainerImpl;\n}",
            "method_id": 137
        },
        {
            "method_signature": "org.mockito.internal.util.reflection.GenericMetadataSupport:inferFrom(Ljava/lang/reflect/Type;)Lorg/mockito/internal/util/reflection/GenericMetadataSupport;",
            "method_body": "public static GenericMetadataSupport inferFrom(Type type) {\nChecks.checkNotNull(type, \"type\");\nif (type instanceof Class) {\nreturn new FromClassGenericMetadataSupport((Class<?>) type);\n}",
            "method_id": 138
        },
        {
            "method_signature": "org.mockito.internal.creation.MockSettingsImpl:prepareExtraInterfaces(Lorg/mockito/internal/creation/settings/CreationSettings;)Ljava/util/Set;",
            "method_body": "private static Set<Class> prepareExtraInterfaces(CreationSettings settings) {\nSet<Class> interfaces = new HashSet<Class>(settings.getExtraInterfaces());\nif(settings.isSerializable()) {\nif (settings.getSpiedInstance() != null) {\nreturn interfaces;\n}",
            "method_id": 139
        }
    ]
}