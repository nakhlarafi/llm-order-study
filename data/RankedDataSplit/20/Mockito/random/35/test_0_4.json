{
    "bug_id": 35,
    "test_id": 0,
    "test_name": "org.mockitousage.bugs.NPEWithCertainMatchersTest.shouldNotThrowNPEWhenIntegerPassed",
    "test_body": "public void shouldNotThrowNPEWhenIntegerPassed() {\nmock.intArgumentMethod(100);\n31: verify(mock).intArgumentMethod(isA(Integer.class));\n}\n",
    "stack_trace": "java.lang.NullPointerException\nat org.mockitousage.bugs.NPEWithCertainMatchersTest.shouldNotThrowNPEWhenIntegerPassed(NPEWithCertainMatchersTest.java:31)",
    "covered_methods": [
        {
            "method_signature": "org.mockito.internal.progress.MockingProgressImpl:reset()V",
            "method_body": "public void reset() {\nstubbingInProgress = null;\nverificationMode = null;\ngetArgumentMatcherStorage().reset();\n}",
            "method_id": 80
        },
        {
            "method_signature": "org.mockito.internal.progress.HandyReturnValues:returnNull()Ljava/lang/Object;",
            "method_body": "public <T> T returnNull() {\nreturn null;\n}",
            "method_id": 81
        },
        {
            "method_signature": "org.mockito.internal.util.CreationValidator:validateType(Ljava/lang/Class;)V",
            "method_body": "public void validateType(Class classToMock) {\nif (!ClassImposterizer.INSTANCE.canImposterise(classToMock)) {\n}",
            "method_id": 82
        },
        {
            "method_signature": "org.mockito.internal.progress.MockingProgressImpl:validateState()V",
            "method_body": "public void validateState() {\nGlobalConfiguration.validate();\nif (verificationMode != null) {\nif (stubbingInProgress != null) {\ngetArgumentMatcherStorage().validateState();\n}",
            "method_id": 83
        },
        {
            "method_signature": "org.mockito.internal.util.CreationValidator:validateExtraInterfaces(Ljava/lang/Class;[Ljava/lang/Class;)V",
            "method_body": "public void validateExtraInterfaces(Class classToMock, Class ... extraInterfaces) {\nif (extraInterfaces == null) {\nreturn;\n}",
            "method_id": 84
        },
        {
            "method_signature": "org.mockito.internal.progress.ThreadSafeMockingProgress:verificationStarted(Lorg/mockito/internal/verification/api/VerificationMode;)V",
            "method_body": "public void verificationStarted(VerificationMode verify) {\nthreadSafely().verificationStarted(verify);\n}",
            "method_id": 85
        },
        {
            "method_signature": "org.mockito.internal.configuration.GlobalConfiguration:getDefaultAnswer()Lorg/mockito/stubbing/Answer;",
            "method_body": "public Answer<Object> getDefaultAnswer() {\nreturn globalConfiguration.get().getDefaultAnswer();\n}",
            "method_id": 86
        },
        {
            "method_signature": "org.mockito.internal.creation.cglib.CGLIBHacker:setMockitoNamingPolicy(Lorg/mockito/internal/creation/MockitoMethodProxy;)V",
            "method_body": "public void setMockitoNamingPolicy(MockitoMethodProxy methodProxy) {\nmethodProxy.setNamingPolicyField(MockitoNamingPolicy.INSTANCE);\n}",
            "method_id": 87
        },
        {
            "method_signature": "org.mockito.internal.progress.ArgumentMatcherStorageImpl:reportMatcher(Lorg/hamcrest/Matcher;)Lorg/mockito/internal/progress/HandyReturnValues;",
            "method_body": "public HandyReturnValues reportMatcher(Matcher matcher) {\nmatcherStack.push(new LocalizedMatcher(matcher));\nreturn new HandyReturnValues();\n}",
            "method_id": 88
        },
        {
            "method_signature": "org.mockito.MockitoAnnotations:initMocks(Ljava/lang/Object;)V",
            "method_body": "public static void initMocks(Object testClass) {\nif (testClass == null) {\nClass<?> clazz = testClass.getClass();\nwhile (clazz != Object.class) {\nscan(testClass, clazz);\nclazz = clazz.getSuperclass();\n}",
            "method_id": 89
        },
        {
            "method_signature": "org.mockito.internal.creation.DelegatingMethod:getReturnType()Ljava/lang/Class;",
            "method_body": "public Class<?> getReturnType() {\nreturn method.getReturnType();\n}",
            "method_id": 90
        },
        {
            "method_signature": "org.mockito.internal.creation.jmock.ClassImposterizer:prepend(Ljava/lang/Class;[Ljava/lang/Class;)[Ljava/lang/Class;",
            "method_body": "private Class<?>[] prepend(Class<?> first, Class<?>... rest) {\nClass<?>[] all = new Class<?>[rest.length+1];\nall[0] = first;\nSystem.arraycopy(rest, 0, all, 1, rest.length);\nreturn all;\n}",
            "method_id": 91
        },
        {
            "method_signature": "org.mockito.internal.util.ObjectMethodsGuru:isHashCodeMethod(Ljava/lang/reflect/Method;)Z",
            "method_body": "public boolean isHashCodeMethod(Method method) {\nreturn method.getName().equals(\"hashCode\") && method.getParameterTypes().length == 0;\n}",
            "method_id": 92
        },
        {
            "method_signature": "org.mockito.internal.util.ObjectMethodsGuru:isToString(Lorg/mockito/internal/invocation/MockitoMethod;)Z",
            "method_body": "public boolean isToString(MockitoMethod method) {\nreturn method.getReturnType() == String.class && method.getParameterTypes().length == 0\n}",
            "method_id": 93
        },
        {
            "method_signature": "org.mockito.internal.creation.jmock.SearchingClassLoader:combineLoadersOf([Ljava/lang/Class;)Ljava/lang/ClassLoader;",
            "method_body": "public static ClassLoader combineLoadersOf(Class<?>... classes) {\nreturn combineLoadersOf(classes[0], classes);\n}",
            "method_id": 94
        },
        {
            "method_signature": "org.mockito.internal.creation.AbstractMockitoMethodProxy:setNamingPolicyField(Lorg/mockito/internal/creation/cglib/MockitoNamingPolicy;)V",
            "method_body": "public void setNamingPolicyField(MockitoNamingPolicy namingPolicy) {\nMethodProxy methodProxy = getMethodProxy();\nField createInfoField = reflectOnCreateInfo(methodProxy);\ncreateInfoField.setAccessible(true);\nObject createInfo = createInfoField.get(methodProxy);\nField namingPolicyField = createInfo.getClass().getDeclaredField(\"namingPolicy\");\nnamingPolicyField.setAccessible(true);\nif (namingPolicyField.get(createInfo) == null) {\nnamingPolicyField.set(createInfo, MockitoNamingPolicy.INSTANCE);\n}\n}",
            "method_id": 95
        },
        {
            "method_signature": "org.mockito.internal.matchers.Equals:<init>(Ljava/lang/Object;)V",
            "method_body": "public Equals(Object wanted) {\nthis.wanted = wanted;\n}",
            "method_id": 96
        },
        {
            "method_signature": "org.mockito.Matchers:reportMatcher(Lorg/hamcrest/Matcher;)Lorg/mockito/internal/progress/HandyReturnValues;",
            "method_body": "private static HandyReturnValues reportMatcher(Matcher<?> matcher) {\nreturn mockingProgress.getArgumentMatcherStorage().reportMatcher(matcher);\n}",
            "method_id": 97
        },
        {
            "method_signature": "org.mockito.internal.stubbing.MockitoStubber:hasAnswersForStubbing()Z",
            "method_body": "public boolean hasAnswersForStubbing() {\nreturn !answersForStubbing.isEmpty();\n}",
            "method_id": 98
        },
        {
            "method_signature": "org.mockito.internal.creation.jmock.ClassImposterizer:imposterise(Lorg/mockito/cglib/proxy/MethodInterceptor;Ljava/lang/Class;[Ljava/lang/Class;)Ljava/lang/Object;",
            "method_body": "public <T> T imposterise(final MethodInterceptor interceptor, Class<T> mockedType, Class<?>... ancillaryTypes) {\nsetConstructorsAccessible(mockedType, true);\nClass<?> proxyClass = createProxyClass(mockedType, ancillaryTypes);\nreturn mockedType.cast(createProxy(proxyClass, interceptor));\nsetConstructorsAccessible(mockedType, false);\n}",
            "method_id": 99
        }
    ]
}