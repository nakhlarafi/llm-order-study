{
    "bug_id": 23,
    "test_id": 0,
    "test_name": "org.mockitousage.stubbing.DeepStubsSerializableTest.should_serialize_and_deserialize_mock_created_by_deep_stubs",
    "test_body": "public void should_serialize_and_deserialize_mock_created_by_deep_stubs() throws Exception {\n// given\nSampleClass sampleClass = mock(SampleClass.class, withSettings().defaultAnswer(Mockito.RETURNS_DEEP_STUBS).serializable());\nwhen(sampleClass.getSample().isSth()).thenReturn(STUBBED_BOOLEAN_VALUE);\nwhen(sampleClass.getSample().getNumber()).thenReturn(STUBBED_INTEGER_VALUE);\n24: // when\nObject o = SimpleSerializationUtil.serializeAndBack(sampleClass);\n27: // then\nassertThat(o).isInstanceOf(SampleClass.class);\nSampleClass deserializedSample = (SampleClass) o;\nassertThat(deserializedSample.getSample().isSth()).isEqualTo(STUBBED_BOOLEAN_VALUE);\nassertThat(deserializedSample.getSample().getNumber()).isEqualTo(STUBBED_INTEGER_VALUE);\n}\n",
    "stack_trace": "java.io.NotSerializableException: org.mockito.internal.stubbing.defaultanswers.ReturnsDeepStubs$2\nat java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1184)\nat java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:348)\nat java.util.concurrent.ConcurrentLinkedQueue.writeObject(ConcurrentLinkedQueue.java:769)\nat sun.reflect.GeneratedMethodAccessor33.invoke(Unknown Source)\nat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\nat java.lang.reflect.Method.invoke(Method.java:498)\nat java.io.ObjectStreamClass.invokeWriteObject(ObjectStreamClass.java:1140)\nat java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1496)\nat java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1432)\nat java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1178)\nat java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1548)\nat java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1509)\nat java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1432)\nat java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1178)\nat java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1548)\nat java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1509)\nat java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1432)\nat java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1178)\nat java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1548)\nat java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1509)\nat java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1432)\nat java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1178)\nat java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1548)\nat java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1509)\nat java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1432)\nat java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1178)\nat java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1548)\nat java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1509)\nat java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1432)\nat java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1178)\nat java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1548)\nat java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1509)\nat java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1432)\nat java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1178)\nat java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1548)\nat java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1509)\nat java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1432)\nat java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1178)\nat java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1548)\nat java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1509)\nat java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1432)\nat java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1178)\nat java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1548)\nat java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1509)\nat java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1432)\nat java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1178)\nat java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1548)\nat java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1509)\nat java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1432)\nat java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1178)\nat java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:348)\nat org.mockitoutil.SimpleSerializationUtil.serializeMock(SimpleSerializationUtil.java:34)\nat org.mockitoutil.SimpleSerializationUtil.serializeAndBack(SimpleSerializationUtil.java:16)\nat org.mockitousage.stubbing.DeepStubsSerializableTest.should_serialize_and_deserialize_mock_created_by_deep_stubs(DeepStubsSerializableTest.java:25)",
    "covered_methods": [
        {
            "method_signature": "org.mockito.internal.stubbing.defaultanswers.ReturnsDeepStubs$2:<init>(Lorg/mockito/internal/stubbing/defaultanswers/ReturnsDeepStubs;Ljava/lang/Object;)V",
            "method_body": "private Object recordDeepStubMock(final Object mock, InvocationContainerImpl container) throws Throwable {\ncontainer.addAnswer(new Answer<Object>() {\nreturn mock;\nreturn mock;\n}",
            "method_id": 40
        },
        {
            "method_signature": "org.mockito.internal.creation.jmock.ClassImposterizer:createProxy(Ljava/lang/Class;Lorg/mockito/cglib/proxy/MethodInterceptor;)Ljava/lang/Object;",
            "method_body": "private Object createProxy(Class<?> proxyClass, final MethodInterceptor interceptor) {\nFactory proxy = (Factory) objenesis.newInstance(proxyClass);\nproxy.setCallbacks(new Callback[] {interceptor, SerializableNoOp.SERIALIZABLE_INSTANCE });\nreturn proxy;\n}",
            "method_id": 41
        },
        {
            "method_signature": "org.mockito.internal.creation.cglib.CGLIBHacker:setMockitoNamingPolicy(Lorg/mockito/internal/creation/MockitoMethodProxy;)V",
            "method_body": "public void setMockitoNamingPolicy(MockitoMethodProxy mockitoMethodProxy) {\nMethodProxy methodProxy = mockitoMethodProxy.getMethodProxy();\nField createInfoField = reflectOnCreateInfo(methodProxy);\ncreateInfoField.setAccessible(true);\nObject createInfo = createInfoField.get(methodProxy);\nField namingPolicyField = createInfo.getClass().getDeclaredField(\"namingPolicy\");\nnamingPolicyField.setAccessible(true);\nif (namingPolicyField.get(createInfo) == null) {\nnamingPolicyField.set(createInfo, MockitoNamingPolicy.INSTANCE);\n}\n}",
            "method_id": 42
        },
        {
            "method_signature": "org.mockito.internal.stubbing.defaultanswers.ReturnsDeepStubs$2:answer(Lorg/mockito/invocation/InvocationOnMock;)Ljava/lang/Object;",
            "method_body": "private Object recordDeepStubMock(final Object mock, InvocationContainerImpl container) throws Throwable {\ncontainer.addAnswer(new Answer<Object>() {\nreturn mock;\nreturn mock;\n}",
            "method_id": 43
        },
        {
            "method_signature": "org.mockito.internal.invocation.ArgumentsComparator:argumentsMatch(Lorg/mockito/internal/invocation/InvocationMatcher;[Ljava/lang/Object;)Z",
            "method_body": "public boolean argumentsMatch(InvocationMatcher invocationMatcher, Object[] actualArgs) {\nif (actualArgs.length != invocationMatcher.getMatchers().size()) {\nfor (int i = 0; i < actualArgs.length; i++) {\nreturn true;\n}",
            "method_id": 44
        },
        {
            "method_signature": "org.mockito.internal.creation.MockSettingsImpl:prepareExtraInterfaces(Lorg/mockito/internal/creation/settings/CreationSettings;)Ljava/util/Set;",
            "method_body": "private static Set<Class> prepareExtraInterfaces(CreationSettings settings) {\nSet<Class> interfaces = new HashSet<Class>(settings.getExtraInterfaces());\nif(settings.isSerializable()) {\ninterfaces.add(Serializable.class);\nreturn interfaces;\n}",
            "method_id": 45
        },
        {
            "method_signature": "org.mockito.internal.util.Primitives:defaultValueForPrimitiveOrWrapper(Ljava/lang/Class;)Ljava/lang/Object;",
            "method_body": "public static <T> T defaultValueForPrimitiveOrWrapper(Class<T> primitiveOrWrapperType) {\nreturn (T) primitiveOrWrapperDefaultValues.get(primitiveOrWrapperType);\n}",
            "method_id": 46
        },
        {
            "method_signature": "org.mockito.internal.invocation.InvocationImpl:getArguments()[Ljava/lang/Object;",
            "method_body": "public Object[] getArguments() {\nreturn arguments;\n}",
            "method_id": 47
        },
        {
            "method_signature": "org.mockito.internal.invocation.InvocationMatcher:hasSameMethod(Lorg/mockito/invocation/Invocation;)Z",
            "method_body": "public boolean hasSameMethod(Invocation candidate) {\nMethod m1 = invocation.getMethod();\nMethod m2 = candidate.getMethod();\nif (m1.getName() != null && m1.getName().equals(m2.getName())) {\nClass[] params1 = m1.getParameterTypes();\nClass[] params2 = m2.getParameterTypes();\nif (params1.length == params2.length) {\nfor (int i = 0; i < params1.length; i++) {\nreturn true;\nreturn false;\n}",
            "method_id": 48
        },
        {
            "method_signature": "org.mockito.internal.creation.MockSettingsImpl:serializable()Lorg/mockito/MockSettings;",
            "method_body": "public MockSettings serializable() {\nreturn serializable(SerializableMode.BASIC);\n}",
            "method_id": 49
        },
        {
            "method_signature": "org.mockito.internal.MockitoCore:when(Ljava/lang/Object;)Lorg/mockito/stubbing/OngoingStubbing;",
            "method_body": "public <T> OngoingStubbing<T> when(T methodCall) {\nmockingProgress.stubbingStarted();\nreturn (OngoingStubbing) stub();\n}",
            "method_id": 50
        },
        {
            "method_signature": "org.mockito.internal.util.reflection.GenericMetadataSupport:resolveGenericReturnType(Ljava/lang/reflect/Method;)Lorg/mockito/internal/util/reflection/GenericMetadataSupport;",
            "method_body": "public GenericMetadataSupport resolveGenericReturnType(Method method) {\nType genericReturnType = method.getGenericReturnType();\nif (genericReturnType instanceof Class) {\nreturn new NotGenericReturnTypeSupport(genericReturnType);\n}",
            "method_id": 51
        },
        {
            "method_signature": "org.mockito.internal.creation.jmock.SearchingClassLoader:combineLoadersOf([Ljava/lang/Class;)Ljava/lang/ClassLoader;",
            "method_body": "public static ClassLoader combineLoadersOf(Class<?>... classes) {\nreturn combineLoadersOf(classes[0], classes);\n}",
            "method_id": 52
        },
        {
            "method_signature": "org.mockito.internal.creation.AcrossJVMSerializationFeature:enableSerializationAcrossJVM(Lorg/mockito/mock/MockCreationSettings;)V",
            "method_body": "public <T> void enableSerializationAcrossJVM(MockCreationSettings<T> settings) {\nif (settings.getSerializableMode() == SerializableMode.ACROSS_CLASSLOADERS) {\n}",
            "method_id": 53
        },
        {
            "method_signature": "org.mockito.internal.progress.ThreadSafeMockingProgress:threadSafely()Lorg/mockito/internal/progress/MockingProgress;",
            "method_body": "static MockingProgress threadSafely() {\nif (mockingProgress.get() == null) {\nreturn mockingProgress.get();\n}",
            "method_id": 54
        },
        {
            "method_signature": "org.mockito.internal.creation.cglib.CGLIBHacker:reflectOnCreateInfo(Lorg/mockito/cglib/proxy/MethodProxy;)Ljava/lang/reflect/Field;",
            "method_body": "private Field reflectOnCreateInfo(MethodProxy methodProxy) throws SecurityException, NoSuchFieldException {\nClass cglibMethodProxyClass = methodProxy.getClass();\nwhile (cglibMethodProxyClass != MethodProxy.class) {\nreturn cglibMethodProxyClass.getDeclaredField(\"createInfo\");\n}",
            "method_id": 55
        },
        {
            "method_signature": "org.mockito.internal.creation.settings.CreationSettings:setMockName(Lorg/mockito/mock/MockName;)Lorg/mockito/internal/creation/settings/CreationSettings;",
            "method_body": "public CreationSettings<T> setMockName(MockName mockName) {\nthis.mockName = mockName;\nreturn this;\n}",
            "method_id": 56
        },
        {
            "method_signature": "org.mockito.internal.handler.NullResultGuardian:getInvocationContainer()Lorg/mockito/internal/stubbing/InvocationContainer;",
            "method_body": "public InvocationContainer getInvocationContainer() {\nreturn delegate.getInvocationContainer();\n}",
            "method_id": 57
        },
        {
            "method_signature": "org.mockito.internal.util.reflection.Whitebox:getInternalState(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;",
            "method_body": "public static Object getInternalState(Object target, String field) {\nClass<?> c = target.getClass();\nField f = getFieldFromHierarchy(c, field);\nf.setAccessible(true);\nreturn f.get(target);\n}",
            "method_id": 58
        },
        {
            "method_signature": "org.mockito.internal.stubbing.StubbedInvocationMatcher:<init>(Lorg/mockito/internal/invocation/InvocationMatcher;Lorg/mockito/stubbing/Answer;)V",
            "method_body": "public StubbedInvocationMatcher(InvocationMatcher invocation, Answer answer) {\nsuper(invocation.getInvocation(), invocation.getMatchers());\nthis.answers.add(answer);\n}",
            "method_id": 59
        }
    ]
}