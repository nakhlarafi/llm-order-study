{
    "bug_id": 28,
    "test_id": 0,
    "test_name": "org.mockitousage.bugs.InjectionByTypeShouldFirstLookForExactTypeThenAncestorTest.mock_should_be_injected_once_and_in_the_best_matching_type",
    "test_body": "public void mock_should_be_injected_once_and_in_the_best_matching_type() {\nassertSame(REFERENCE, illegalInjectionExample.mockShouldNotGoInHere);\nassertSame(mockedBean, illegalInjectionExample.mockShouldGoInHere);",
    "stack_trace": "junit.framework.AssertionFailedError: expected same:<java.lang.Object@1a6aecec> was not:<mockedBean>\nat org.junit.Assert.fail(Assert.java:88)\nat org.junit.Assert.failNotSame(Assert.java:737)\nat org.junit.Assert.assertSame(Assert.java:680)\nat org.junit.Assert.assertSame(Assert.java:691)\nat org.mockitousage.bugs.InjectionByTypeShouldFirstLookForExactTypeThenAncestorTest.mock_should_be_injected_once_and_in_the_best_matching_type(InjectionByTypeShouldFirstLookForExactTypeThenAncestorTest.java:33)",
    "covered_methods": [
        {
            "method_signature": "org.mockito.internal.configuration.DefaultAnnotationEngine:createMockFor(Ljava/lang/annotation/Annotation;Ljava/lang/reflect/Field;)Ljava/lang/Object;",
            "method_body": "public Object createMockFor(Annotation annotation, Field field) {\nif (annotation instanceof Mock) {\nreturn processAnnotationOn((Mock) annotation, field);\nif (annotation instanceof MockitoAnnotations.Mock) {\nif (annotation instanceof Captor) {\nreturn null;\n}",
            "method_id": 20
        },
        {
            "method_signature": "org.mockito.internal.util.ObjectMethodsGuru:isEqualsMethod(Ljava/lang/reflect/Method;)Z",
            "method_body": "public boolean isEqualsMethod(Method method) {\nreturn method.getName().equals(\"equals\") && method.getParameterTypes().length == 1 && method.getParameterTypes()[0] == Object.class;\n}",
            "method_id": 21
        },
        {
            "method_signature": "org.mockito.internal.creation.jmock.ClassImposterizer:createProxy(Ljava/lang/Class;Lorg/mockito/cglib/proxy/MethodInterceptor;)Ljava/lang/Object;",
            "method_body": "private Object createProxy(Class<?> proxyClass, final MethodInterceptor interceptor) {\nFactory proxy = (Factory) objenesis.newInstance(proxyClass);\nproxy.setCallbacks(new Callback[] {interceptor, SerializableNoOp.SERIALIZABLE_INSTANCE });\nreturn proxy;\n}",
            "method_id": 22
        },
        {
            "method_signature": "org.mockito.internal.configuration.injection.FinalMockCandidateFilter$1:<init>(Lorg/mockito/internal/configuration/injection/FinalMockCandidateFilter;Ljava/lang/Object;Ljava/lang/reflect/Field;Ljava/lang/Object;)V",
            "method_body": "public OngoingInjecter filterCandidate(final Collection<Object> mocks, final Field field, final Object fieldInstance) {\nif(mocks.size() == 1) {\nfinal Object matchingMock = mocks.iterator().next();\nreturn new OngoingInjecter() {\nif (!new BeanPropertySetter(fieldInstance, field).set(matchingMock)) {\nnew FieldSetter(fieldInstance, field).set(matchingMock);\n}\nreturn matchingMock;\n}",
            "method_id": 23
        },
        {
            "method_signature": "org.mockito.internal.progress.MockingProgressImpl:validateState()V",
            "method_body": "public void validateState() {\nvalidateMostStuff();\nif (stubbingInProgress != null) {\n}",
            "method_id": 24
        },
        {
            "method_signature": "org.mockito.internal.configuration.injection.TypeBasedCandidateFilter:<init>(Lorg/mockito/internal/configuration/injection/MockCandidateFilter;)V",
            "method_body": "public TypeBasedCandidateFilter(MockCandidateFilter next) {\nthis.next = next;\n}",
            "method_id": 25
        },
        {
            "method_signature": "org.mockito.internal.runners.JUnit45AndHigherRunnerImpl$1:withBefores(Lorg/junit/runners/model/FrameworkMethod;Ljava/lang/Object;Lorg/junit/runners/model/Statement;)Lorg/junit/runners/model/Statement;",
            "method_body": "protected Statement withBefores(FrameworkMethod method, Object target,\nMockitoAnnotations.initMocks(target);\nreturn super.withBefores(method, target, statement);\n}",
            "method_id": 26
        },
        {
            "method_signature": "org.mockito.internal.debugging.Location:<init>()V",
            "method_body": "public Location() {\nthis(new StackTraceFilter());\n}",
            "method_id": 27
        },
        {
            "method_signature": "org.mockito.internal.creation.DelegatingMethod:getParameterTypes()[Ljava/lang/Class;",
            "method_body": "public Class<?>[] getParameterTypes() {\nreturn method.getParameterTypes();\n}",
            "method_id": 28
        },
        {
            "method_signature": "org.mockito.internal.runners.RunnerFactory:<init>(Lorg/mockito/internal/runners/util/RunnerProvider;)V",
            "method_body": "RunnerFactory(RunnerProvider runnerProvider) {\nthis.runnerProvider = runnerProvider;\n}",
            "method_id": 29
        },
        {
            "method_signature": "org.mockito.internal.creation.jmock.SearchingClassLoader:addIfNewElement(Ljava/util/List;Ljava/lang/ClassLoader;)V",
            "method_body": "private static void addIfNewElement(List<ClassLoader> loaders, ClassLoader c) {\nif (c != null && !loaders.contains(c)) {\nloaders.add(c);\n}",
            "method_id": 30
        },
        {
            "method_signature": "org.mockito.internal.stubbing.InvocationContainerImpl:resetInvocationForPotentialStubbing(Lorg/mockito/internal/invocation/InvocationMatcher;)V",
            "method_body": "public void resetInvocationForPotentialStubbing(InvocationMatcher invocationMatcher) {\nthis.invocationForStubbing = invocationMatcher;\n}",
            "method_id": 31
        },
        {
            "method_signature": "org.mockito.internal.creation.MethodInterceptorFilter:getHandler()Lorg/mockito/internal/MockitoInvocationHandler;",
            "method_body": "public MockitoInvocationHandler getHandler() {\nreturn handler;\n}",
            "method_id": 32
        },
        {
            "method_signature": "org.mockito.internal.progress.MockingProgressImpl:pullVerificationMode()Lorg/mockito/verification/VerificationMode;",
            "method_body": "public VerificationMode pullVerificationMode() {\nif (verificationMode == null) {\nreturn null;\n}",
            "method_id": 33
        },
        {
            "method_signature": "org.mockito.internal.invocation.realmethod.FilteredCGLIBProxyRealMethod:<init>(Lorg/mockito/internal/creation/MockitoMethodProxy;)V",
            "method_body": "public FilteredCGLIBProxyRealMethod(MockitoMethodProxy methodProxy) {\nthis(new CGLIBProxyRealMethod(methodProxy));\n}",
            "method_id": 34
        },
        {
            "method_signature": "org.mockito.internal.runners.JUnit45AndHigherRunnerImpl:filter(Lorg/junit/runner/manipulation/Filter;)V",
            "method_body": "public void filter(Filter filter) throws NoTestsRemainException {\nrunner.filter(filter);\n}",
            "method_id": 35
        },
        {
            "method_signature": "org.mockito.internal.invocation.Invocation:getMethod()Ljava/lang/reflect/Method;",
            "method_body": "public Method getMethod() {\nreturn method.getJavaMethod();\n}",
            "method_id": 36
        },
        {
            "method_signature": "org.mockito.internal.invocation.MatchersBinder:bindMatchers(Lorg/mockito/internal/progress/ArgumentMatcherStorage;Lorg/mockito/internal/invocation/Invocation;)Lorg/mockito/internal/invocation/InvocationMatcher;",
            "method_body": "public InvocationMatcher bindMatchers(ArgumentMatcherStorage argumentMatcherStorage, Invocation invocation) {\nList<Matcher> lastMatchers = argumentMatcherStorage.pullMatchers();\nvalidateMatchers(invocation, lastMatchers);\nInvocationMatcher invocationWithMatchers = new InvocationMatcher(invocation, lastMatchers);\nreturn invocationWithMatchers;\n}",
            "method_id": 37
        },
        {
            "method_signature": "org.mockito.internal.creation.MockSettingsImpl:getExtraInterfaces()[Ljava/lang/Class;",
            "method_body": "public Class<?>[] getExtraInterfaces() {\nreturn extraInterfaces;\n}",
            "method_id": 38
        },
        {
            "method_signature": "org.mockito.internal.configuration.InjectingAnnotationEngine:process(Ljava/lang/Class;Ljava/lang/Object;)V",
            "method_body": "public void process(Class<?> clazz, Object testInstance) {\nprocessIndependentAnnotations(testInstance.getClass(), testInstance);\nprocessInjectMocks(testInstance.getClass(), testInstance);\n}",
            "method_id": 39
        }
    ]
}