{
    "bug_id": 3,
    "test_id": 4,
    "test_name": "org.mockitousage.matchers.CapturingArgumentsTest.should_capture_byte_vararg_by_creating_captor_with_primitive_wrapper",
    "test_body": "public void should_capture_byte_vararg_by_creating_captor_with_primitive_wrapper() throws Exception {\n// given\nArgumentCaptor<Byte> argumentCaptor = ArgumentCaptor.forClass(Byte.class);\n244: // when\nmock.varargsbyte((byte) 1, (byte) 2);\n247: // then\nverify(mock).varargsbyte(argumentCaptor.capture());\nassertEquals((byte) 2, (byte) argumentCaptor.getValue());\nAssertions.assertThat(argumentCaptor.getAllValues()).containsExactly((byte) 1, (byte) 2);",
    "stack_trace": "java.lang.ClassCastException: [B cannot be cast to java.lang.Byte\nat org.mockitousage.matchers.CapturingArgumentsTest.should_capture_byte_vararg_by_creating_captor_with_primitive_wrapper(CapturingArgumentsTest.java:249)",
    "covered_methods": [
        {
            "method_signature": "org.mockito.internal.invocation.ArgumentsComparator:argumentsMatch(Lorg/mockito/internal/invocation/InvocationMatcher;Lorg/mockito/invocation/Invocation;)Z",
            "method_body": "public boolean argumentsMatch(InvocationMatcher invocationMatcher, Invocation actual) {\nObject[] actualArgs = actual.getArguments();\nreturn argumentsMatch(invocationMatcher, actualArgs) || varArgsMatch(invocationMatcher, actual);\n}",
            "method_id": 120
        },
        {
            "method_signature": "org.mockito.internal.handler.NullResultGuardian:handle(Lorg/mockito/invocation/Invocation;)Ljava/lang/Object;",
            "method_body": "public Object handle(Invocation invocation) throws Throwable {\nObject result = delegate.handle(invocation);\nClass<?> returnType = invocation.getMethod().getReturnType();\nif(result == null && returnType.isPrimitive()) {\nreturn new HandyReturnValues().returnFor(returnType);\nreturn result;\n}",
            "method_id": 121
        },
        {
            "method_signature": "org.mockito.internal.util.collections.HashCodeAndEqualsMockWrapper:get()Ljava/lang/Object;",
            "method_body": "public Object get() {\nreturn mockInstance;\n}",
            "method_id": 122
        },
        {
            "method_signature": "org.mockito.internal.stubbing.InvocationContainerImpl:getInvocations()Ljava/util/List;",
            "method_body": "public List<Invocation> getInvocations() {\nreturn registeredInvocations.getAll();\n}",
            "method_id": 123
        },
        {
            "method_signature": "org.mockito.internal.handler.MockHandlerImpl:createVerificationData(Lorg/mockito/internal/stubbing/InvocationContainerImpl;Lorg/mockito/internal/invocation/InvocationMatcher;)Lorg/mockito/internal/verification/VerificationDataImpl;",
            "method_body": "private VerificationDataImpl createVerificationData(InvocationContainerImpl invocationContainerImpl, InvocationMatcher invocationMatcher) {\nif (mockSettings.isStubOnly()) {\nreturn new VerificationDataImpl(invocationContainerImpl, invocationMatcher);\n}",
            "method_id": 124
        },
        {
            "method_signature": "org.mockito.internal.verification.MockAwareVerificationMode:verify(Lorg/mockito/internal/verification/api/VerificationData;)V",
            "method_body": "public void verify(VerificationData data) {\nmode.verify(data);\n}",
            "method_id": 125
        },
        {
            "method_signature": "org.mockito.internal.creation.DelegatingMethod:isVarArgs()Z",
            "method_body": "public boolean isVarArgs() {\nreturn method.isVarArgs();\n}",
            "method_id": 126
        },
        {
            "method_signature": "org.mockito.internal.util.MockUtil:isMock(Ljava/lang/Object;)Z",
            "method_body": "public boolean isMock(Object mock) {\nreturn isMockitoMock(mock);\n}",
            "method_id": 127
        },
        {
            "method_signature": "org.mockito.internal.handler.MockHandlerImpl:<init>(Lorg/mockito/mock/MockCreationSettings;)V",
            "method_body": "public MockHandlerImpl(MockCreationSettings mockSettings) {\nthis.mockSettings = mockSettings;\nthis.mockingProgress = new ThreadSafeMockingProgress();\nthis.matchersBinder = new MatchersBinder();\nthis.invocationContainerImpl = new InvocationContainerImpl(mockingProgress, mockSettings);\n}",
            "method_id": 128
        },
        {
            "method_signature": "org.mockito.internal.configuration.injection.MockInjectionStrategy$1:<init>()V",
            "method_body": "public static final MockInjectionStrategy nop() {\nreturn new MockInjectionStrategy() {\n}",
            "method_id": 129
        },
        {
            "method_signature": "org.mockito.internal.invocation.InvocationMarker:markVerified(Lorg/mockito/invocation/Invocation;Lorg/mockito/internal/invocation/CapturesArgumensFromInvocation;)V",
            "method_body": "public void markVerified(Invocation invocation, CapturesArgumensFromInvocation wanted) {\ninvocation.markVerified();\nwanted.captureArgumentsFrom(invocation);\n}",
            "method_id": 130
        },
        {
            "method_signature": "org.mockito.internal.util.MockUtil:maybeRedefineMockName(Ljava/lang/Object;Ljava/lang/String;)V",
            "method_body": "public void maybeRedefineMockName(Object mock, String newName) {\nMockName mockName = getMockName(mock);\nif (mockName.isDefault() && getMockHandler(mock).getMockSettings() instanceof CreationSettings) {\n((CreationSettings) getMockHandler(mock).getMockSettings()).setMockName(new MockNameImpl(newName));\n}",
            "method_id": 131
        },
        {
            "method_signature": "org.mockito.internal.verification.Times:verify(Lorg/mockito/internal/verification/api/VerificationData;)V",
            "method_body": "public void verify(VerificationData data) {\nif (wantedCount > 0) {\nMissingInvocationChecker missingInvocation = new MissingInvocationChecker();\nmissingInvocation.check(data.getAllInvocations(), data.getWanted());\nNumberOfInvocationsChecker numberOfInvocations = new NumberOfInvocationsChecker();\nnumberOfInvocations.check(data.getAllInvocations(), data.getWanted(), wantedCount);\n}",
            "method_id": 132
        },
        {
            "method_signature": "org.mockito.internal.util.MockCreationValidator:validateExtraInterfaces(Ljava/lang/Class;Ljava/util/Collection;)V",
            "method_body": "public void validateExtraInterfaces(Class classToMock, Collection<Class> extraInterfaces) {\nif (extraInterfaces == null) {\nfor (Class i : extraInterfaces) {\n}",
            "method_id": 133
        },
        {
            "method_signature": "org.mockito.Answers:answer(Lorg/mockito/invocation/InvocationOnMock;)Ljava/lang/Object;",
            "method_body": "public Object answer(InvocationOnMock invocation) throws Throwable {\nreturn implementation.answer(invocation);\n}",
            "method_id": 134
        },
        {
            "method_signature": "org.mockito.internal.invocation.InvocationMatcher:getMatchers()Ljava/util/List;",
            "method_body": "public List<Matcher> getMatchers() {\nreturn this.matchers;\n}",
            "method_id": 135
        },
        {
            "method_signature": "org.mockito.configuration.DefaultMockitoConfiguration:getAnnotationEngine()Lorg/mockito/configuration/AnnotationEngine;",
            "method_body": "public AnnotationEngine getAnnotationEngine() {\nreturn new InjectingAnnotationEngine();\n}",
            "method_id": 136
        },
        {
            "method_signature": "org.mockito.internal.stubbing.defaultanswers.ReturnsEmptyValues:answer(Lorg/mockito/invocation/InvocationOnMock;)Ljava/lang/Object;",
            "method_body": "public Object answer(InvocationOnMock invocation) {\nif (methodsGuru.isToString(invocation.getMethod())) {\n} else if (methodsGuru.isCompareToMethod(invocation.getMethod())) {\nClass<?> returnType = invocation.getMethod().getReturnType();\nreturn returnValueFor(returnType);\n}",
            "method_id": 137
        },
        {
            "method_signature": "org.mockito.internal.matchers.LocalizedMatcher:<init>(Lorg/hamcrest/Matcher;)V",
            "method_body": "public LocalizedMatcher(Matcher actualMatcher) {\nthis.actualMatcher = actualMatcher;\nthis.location = new LocationImpl();\n}",
            "method_id": 138
        },
        {
            "method_signature": "org.mockito.internal.creation.settings.CreationSettings:isUsingConstructor()Z",
            "method_body": "public boolean isUsingConstructor() {\nreturn useConstructor;\n}",
            "method_id": 139
        }
    ]
}