{
    "bug_id": 19,
    "test_id": 0,
    "test_name": "org.mockitousage.annotation.MockInjectionUsingSetterOrPropertyTest.shouldInsertFieldWithCorrectNameWhenMultipleTypesAvailable",
    "test_body": "public void shouldInsertFieldWithCorrectNameWhenMultipleTypesAvailable() {\nMockitoAnnotations.initMocks(this);\nassertNull(otherSuperUnderTesting.candidate1);\nassertNotNull(otherSuperUnderTesting.candidate2);",
    "stack_trace": "junit.framework.AssertionFailedError: Expected: <null> but was: candidate2\nat junit.framework.Assert.fail(Assert.java:57)\nat junit.framework.Assert.assertTrue(Assert.java:22)\nat junit.framework.Assert.assertNull(Assert.java:277)\nat junit.framework.Assert.assertNull(Assert.java:268)\nat org.mockitousage.annotation.MockInjectionUsingSetterOrPropertyTest.shouldInsertFieldWithCorrectNameWhenMultipleTypesAvailable(MockInjectionUsingSetterOrPropertyTest.java:115)",
    "covered_methods": [
        {
            "method_signature": "org.mockito.internal.creation.MockSettingsImpl:name(Ljava/lang/String;)Lorg/mockito/MockSettings;",
            "method_body": "public MockSettings name(String name) {\nthis.name = name;\nreturn this;\n}",
            "method_id": 160
        },
        {
            "method_signature": "org.mockito.internal.configuration.DefaultAnnotationEngine:<init>()V",
            "method_body": "public DefaultAnnotationEngine() {\nregisterAnnotationProcessor(Mock.class, new MockAnnotationProcessor());\nregisterAnnotationProcessor(MockitoAnnotations.Mock.class, new MockitoAnnotationsMockAnnotationProcessor());\nregisterAnnotationProcessor(Captor.class, new CaptorAnnotationProcessor());\n}",
            "method_id": 161
        },
        {
            "method_signature": "org.mockito.internal.configuration.SpyAnnotationEngine:assertNotInterface(Ljava/lang/Object;Ljava/lang/Class;)V",
            "method_body": "private static void assertNotInterface(Object testInstance, Class<?> type) {\ntype = testInstance != null? testInstance.getClass() : type;\nif (type.isInterface()) {\n}",
            "method_id": 162
        },
        {
            "method_signature": "org.mockito.internal.util.reflection.FieldInitializationReport:fieldClass()Ljava/lang/Class;",
            "method_body": "public Class<?> fieldClass() {\nreturn fieldInstance != null ? fieldInstance.getClass() : null;\n}",
            "method_id": 163
        },
        {
            "method_signature": "org.mockito.internal.configuration.injection.filter.FinalMockCandidateFilter:filterCandidate(Ljava/util/Collection;Ljava/lang/reflect/Field;Ljava/lang/Object;)Lorg/mockito/internal/configuration/injection/filter/OngoingInjecter;",
            "method_body": "public OngoingInjecter filterCandidate(final Collection<Object> mocks, final Field field, final Object fieldInstance) {\nif(mocks.size() == 1) {\nfinal Object matchingMock = mocks.iterator().next();\nreturn new OngoingInjecter() {\nif (!new BeanPropertySetter(fieldInstance, field).set(matchingMock)) {\nnew FieldSetter(fieldInstance, field).set(matchingMock);\n}\nreturn matchingMock;\nreturn new OngoingInjecter() {\nreturn null;\n}",
            "method_id": 164
        },
        {
            "method_signature": "org.mockito.internal.util.reflection.FieldInitializationReport:fieldInstance()Ljava/lang/Object;",
            "method_body": "public Object fieldInstance() {\nreturn fieldInstance;\n}",
            "method_id": 165
        },
        {
            "method_signature": "org.mockito.internal.util.reflection.BeanPropertySetter:reportNoSetterFound()V",
            "method_body": "private void reportNoSetterFound() {\nif(reportNoSetterFound) {\n}",
            "method_id": 166
        },
        {
            "method_signature": "org.mockito.internal.util.reflection.FieldInitializer:<init>(Ljava/lang/Object;Ljava/lang/reflect/Field;Lorg/mockito/internal/util/reflection/FieldInitializer$ConstructorInstantiator;)V",
            "method_body": "private FieldInitializer(Object fieldOwner, Field field, ConstructorInstantiator instantiator) {\nif(new FieldReader(fieldOwner, field).isNull()) {\ncheckNotLocal(field);\ncheckNotInner(field);\ncheckNotInterface(field);\ncheckNotAbstract(field);\nthis.fieldOwner = fieldOwner;\nthis.field = field;\nthis.instantiator = instantiator;\n}",
            "method_id": 167
        },
        {
            "method_signature": "org.mockito.internal.configuration.injection.PropertyAndSetterInjection:injectMockCandidatesOnFields(Ljava/util/Set;Ljava/lang/Object;ZLjava/util/List;)Z",
            "method_body": "private boolean injectMockCandidatesOnFields(Set<Object> mocks, Object instance, boolean injectionOccurred, List<Field> orderedInstanceFields) {\nfor (Iterator<Field> it = orderedInstanceFields.iterator(); it.hasNext(); ) {\nField field = it.next();\nObject injected = mockCandidateFilter.filterCandidate(mocks, field, instance).thenInject();\nif (injected != null) {\ninjectionOccurred |= true;\nmocks.remove(injected);\nit.remove();\n}\nreturn injectionOccurred;\n}",
            "method_id": 168
        },
        {
            "method_signature": "org.mockito.internal.handler.NullResultGuardian:<init>(Lorg/mockito/internal/InternalMockHandler;)V",
            "method_body": "public NullResultGuardian(InternalMockHandler delegate) {\nthis.delegate = delegate;\n}",
            "method_id": 169
        },
        {
            "method_signature": "org.mockito.exceptions.base.MockitoException:filterStackTrace()V",
            "method_body": "private void filterStackTrace() {\nunfilteredStackTrace = getStackTrace();\nConditionalStackTraceFilter filter = new ConditionalStackTraceFilter();\nfilter.filter(this);\n}",
            "method_id": 170
        },
        {
            "method_signature": "org.mockito.internal.creation.MockSettingsImpl:validatedSettings(Ljava/lang/Class;Lorg/mockito/internal/creation/settings/CreationSettings;)Lorg/mockito/internal/creation/settings/CreationSettings;",
            "method_body": "private static <T> CreationSettings<T> validatedSettings(Class<T> typeToMock, CreationSettings<T> source) {\nMockCreationValidator validator = new MockCreationValidator();\nvalidator.validateType(typeToMock);\nvalidator.validateExtraInterfaces(typeToMock, source.getExtraInterfaces());\nvalidator.validateMockedType(typeToMock, source.getSpiedInstance());\nvalidator.validateSerializable(typeToMock, source.isSerializable());\nvalidator.validateConstructorUse(source.isUsingConstructor(), source.getSerializableMode());\nCreationSettings<T> settings = new CreationSettings<T>(source);\nsettings.setMockName(new MockNameImpl(source.getName(), typeToMock));\nsettings.setTypeToMock(typeToMock);\nsettings.setExtraInterfaces(prepareExtraInterfaces(source));\nreturn settings;\n}",
            "method_id": 171
        },
        {
            "method_signature": "org.mockito.internal.invocation.MatchersBinder:validateMatchers(Lorg/mockito/invocation/Invocation;Ljava/util/List;)V",
            "method_body": "private void validateMatchers(Invocation invocation, List<LocalizedMatcher> lastMatchers) {\nif (!lastMatchers.isEmpty()) {\n}",
            "method_id": 172
        },
        {
            "method_signature": "org.mockito.internal.creation.DelegatingMethod:getReturnType()Ljava/lang/Class;",
            "method_body": "public Class<?> getReturnType() {\nreturn method.getReturnType();\n}",
            "method_id": 173
        },
        {
            "method_signature": "org.mockito.internal.configuration.injection.MockInjectionStrategy$1:processInjection(Ljava/lang/reflect/Field;Ljava/lang/Object;Ljava/util/Set;)Z",
            "method_body": "public static final MockInjectionStrategy nop() {\nreturn new MockInjectionStrategy() {\nreturn false;\n}",
            "method_id": 174
        },
        {
            "method_signature": "org.mockito.internal.configuration.DefaultAnnotationEngine$1:<init>(Lorg/mockito/internal/configuration/DefaultAnnotationEngine;)V",
            "method_body": "private <A extends Annotation> FieldAnnotationProcessor<A> forAnnotation(A annotation) {\nif (annotationProcessorMap.containsKey(annotation.annotationType())) {\nreturn (FieldAnnotationProcessor<A>) annotationProcessorMap.get(annotation.annotationType());\nreturn new FieldAnnotationProcessor<A>() {\nreturn null;\n}",
            "method_id": 175
        },
        {
            "method_signature": "org.mockito.internal.configuration.injection.scanner.MockScanner:<init>(Ljava/lang/Object;Ljava/lang/Class;)V",
            "method_body": "public MockScanner(Object instance, Class<?> clazz) {\nthis.instance = instance;\nthis.clazz = clazz;\n}",
            "method_id": 176
        },
        {
            "method_signature": "org.mockito.internal.util.reflection.FieldInitializer:checkNotInner(Ljava/lang/reflect/Field;)V",
            "method_body": "private void checkNotInner(Field field) {\nif(field.getType().isMemberClass() && !Modifier.isStatic(field.getType().getModifiers())) {\n}",
            "method_id": 177
        },
        {
            "method_signature": "org.mockito.internal.creation.DelegatingMethod:getParameterTypes()[Ljava/lang/Class;",
            "method_body": "public Class<?>[] getParameterTypes() {\nreturn method.getParameterTypes();\n}",
            "method_id": 178
        },
        {
            "method_signature": "org.mockito.internal.debugging.LocationImpl:<init>(Lorg/mockito/internal/exceptions/stacktrace/StackTraceFilter;)V",
            "method_body": "public LocationImpl(StackTraceFilter stackTraceFilter) {\nthis.stackTraceFilter = stackTraceFilter;\nstackTraceHolder = new Throwable();\n}",
            "method_id": 179
        }
    ]
}