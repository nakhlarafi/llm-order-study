{
    "bug_id": 34,
    "test_id": 5,
    "test_name": "org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchy",
    "test_body": "313: public void testReflectionHierarchy() {\n314: ReflectionTestFixtureA baseA = new ReflectionTestFixtureA();\n315: String baseStr = this.toBaseString(baseA);\n316: assertEquals(baseStr + \"[a=a]\", ToStringBuilder.reflectionToString(baseA));\n317: assertEquals(baseStr + \"[a=a]\", ToStringBuilder.reflectionToString(baseA, null));\n318: assertEquals(baseStr + \"[a=a]\", ToStringBuilder.reflectionToString(baseA, null, false));\n319: assertEquals(baseStr + \"[a=a,transientA=t]\", ToStringBuilder.reflectionToString(baseA, null, true));\n320: assertEquals(baseStr + \"[a=a]\", ToStringBuilder.reflectionToString(baseA, null, false, null));\n321: assertEquals(baseStr + \"[a=a]\", ToStringBuilder.reflectionToString(baseA, null, false, Object.class));\n322: assertEquals(baseStr + \"[a=a]\", ToStringBuilder.reflectionToString(baseA, null, false, ReflectionTestFixtureA.class));\n323: 324: ReflectionTestFixtureB baseB = new ReflectionTestFixtureB();\n325: baseStr = this.toBaseString(baseB);\n326: assertEquals(baseStr + \"[b=b,a=a]\", ToStringBuilder.reflectionToString(baseB));\n327: assertEquals(baseStr + \"[b=b,a=a]\", ToStringBuilder.reflectionToString(baseB));\n328: assertEquals(baseStr + \"[b=b,a=a]\", ToStringBuilder.reflectionToString(baseB, null));\n329: assertEquals(baseStr + \"[b=b,a=a]\", ToStringBuilder.reflectionToString(baseB, null, false));\n330: assertEquals(baseStr + \"[b=b,transientB=t,a=a,transientA=t]\", ToStringBuilder.reflectionToString(baseB, null, true));\n331: assertEquals(baseStr + \"[b=b,a=a]\", ToStringBuilder.reflectionToString(baseB, null, false, null));\n332: assertEquals(baseStr + \"[b=b,a=a]\", ToStringBuilder.reflectionToString(baseB, null, false, Object.class));\n333: assertEquals(baseStr + \"[b=b,a=a]\", ToStringBuilder.reflectionToString(baseB, null, false, ReflectionTestFixtureA.class));\n334: assertEquals(baseStr + \"[b=b]\", ToStringBuilder.reflectionToString(baseB, null, false, ReflectionTestFixtureB.class));\n335: this.validateNullToStringStyleRegistry();\n336: }\n",
    "stack_trace": "junit.framework.AssertionFailedError: Expected: <null> but was: {}\nat junit.framework.Assert.fail(Assert.java:57)\nat junit.framework.Assert.assertTrue(Assert.java:22)\nat junit.framework.Assert.assertNull(Assert.java:277)\nat junit.framework.Assert.assertNull(Assert.java:268)\nat junit.framework.TestCase.assertNull(TestCase.java:438)\nat org.apache.commons.lang3.builder.ToStringBuilderTest.validateNullToStringStyleRegistry(ToStringBuilderTest.java:586)\nat org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchy(ToStringBuilderTest.java:335)",
    "covered_methods": [
        {
            "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendClassName(Ljava/lang/StringBuffer;Ljava/lang/Object;)V",
            "method_body": "protected void appendClassName(StringBuffer buffer, Object object) {\nif (useClassName && object != null) {\nregister(object);\nif (useShortClassName) {\nbuffer.append(object.getClass().getName());\n}",
            "method_id": 20
        },
        {
            "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendIdentityHashCode(Ljava/lang/StringBuffer;Ljava/lang/Object;)V",
            "method_body": "protected void appendIdentityHashCode(StringBuffer buffer, Object object) {\nif (this.isUseIdentityHashCode() && object!=null) {\nregister(object);\nbuffer.append('@');\nbuffer.append(Integer.toHexString(System.identityHashCode(object)));\n}",
            "method_id": 21
        },
        {
            "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendContentStart(Ljava/lang/StringBuffer;)V",
            "method_body": "protected void appendContentStart(StringBuffer buffer) {\nbuffer.append(contentStart);\n}",
            "method_id": 22
        },
        {
            "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:isUseIdentityHashCode()Z",
            "method_body": "protected boolean isUseIdentityHashCode() {\nreturn useIdentityHashCode;\n}",
            "method_id": 23
        },
        {
            "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:<init>(Ljava/lang/Object;Lorg/apache/commons/lang3/builder/ToStringStyle;Ljava/lang/StringBuffer;)V",
            "method_body": "public ToStringBuilder(Object object, ToStringStyle style, StringBuffer buffer) {\nif (style == null) {\nstyle = getDefaultStyle();\nif (buffer == null) {\nbuffer = new StringBuffer(512);\nthis.buffer = buffer;\nthis.style = style;\nthis.object = object;\nstyle.appendStart(buffer, object);\n}",
            "method_id": 24
        },
        {
            "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:getObject()Ljava/lang/Object;",
            "method_body": "public Object getObject() {\nreturn object;\n}",
            "method_id": 25
        },
        {
            "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendStart(Ljava/lang/StringBuffer;Ljava/lang/Object;)V",
            "method_body": "public void appendStart(StringBuffer buffer, Object object) {\nif (object != null) {\nappendClassName(buffer, object);\nappendIdentityHashCode(buffer, object);\nappendContentStart(buffer);\nif (fieldSeparatorAtStart) {\n}",
            "method_id": 26
        },
        {
            "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:accept(Ljava/lang/reflect/Field;)Z",
            "method_body": "protected boolean accept(Field field) {\nif (field.getName().indexOf(ClassUtils.INNER_CLASS_SEPARATOR_CHAR) != -1) {\nif (Modifier.isTransient(field.getModifiers()) && !this.isAppendTransients()) {\nreturn false;\nif (Modifier.isStatic(field.getModifiers()) && !this.isAppendStatics()) {\nif (this.excludeFieldNames != null\nreturn true;\n}",
            "method_id": 27
        },
        {
            "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:getValue(Ljava/lang/reflect/Field;)Ljava/lang/Object;",
            "method_body": "protected Object getValue(Field field) throws IllegalArgumentException, IllegalAccessException {\nreturn field.get(this.getObject());\n}",
            "method_id": 28
        },
        {
            "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendDetail(Ljava/lang/StringBuffer;Ljava/lang/String;Ljava/lang/Object;)V",
            "method_body": "protected void appendDetail(StringBuffer buffer, String fieldName, Object value) {\nbuffer.append(value);\n}",
            "method_id": 29
        },
        {
            "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:toString(Ljava/lang/Object;Lorg/apache/commons/lang3/builder/ToStringStyle;)Ljava/lang/String;",
            "method_body": "public static String toString(Object object, ToStringStyle style) {\nreturn toString(object, style, false, false, null);\n}",
            "method_id": 30
        },
        {
            "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:reflectionToString(Ljava/lang/Object;Lorg/apache/commons/lang3/builder/ToStringStyle;)Ljava/lang/String;",
            "method_body": "public static String reflectionToString(Object object, ToStringStyle style) {\nreturn ReflectionToStringBuilder.toString(object, style);\n}",
            "method_id": 31
        },
        {
            "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:reflectionToString(Ljava/lang/Object;Lorg/apache/commons/lang3/builder/ToStringStyle;Z)Ljava/lang/String;",
            "method_body": "public static String reflectionToString(Object object, ToStringStyle style, boolean outputTransients) {\nreturn ReflectionToStringBuilder.toString(object, style, outputTransients, false, null);\n}",
            "method_id": 32
        },
        {
            "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:reflectionToString(Ljava/lang/Object;Lorg/apache/commons/lang3/builder/ToStringStyle;ZLjava/lang/Class;)Ljava/lang/String;",
            "method_body": "public static <T> String reflectionToString(\nreturn ReflectionToStringBuilder.toString(object, style, outputTransients, false, reflectUpToClass);\n}",
            "method_id": 33
        },
        {
            "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:isAppendTransients()Z",
            "method_body": "public boolean isAppendTransients() {\nreturn this.appendTransients;\n}",
            "method_id": 34
        },
        {
            "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:append(Ljava/lang/String;Ljava/lang/Object;)Lorg/apache/commons/lang3/builder/ToStringBuilder;",
            "method_body": "public ToStringBuilder append(String fieldName, Object obj) {\nstyle.append(buffer, fieldName, obj, null);\nreturn this;\n}",
            "method_id": 35
        },
        {
            "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:append(Ljava/lang/StringBuffer;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Boolean;)V",
            "method_body": "public void append(StringBuffer buffer, String fieldName, Object value, Boolean fullDetail) {\nappendFieldStart(buffer, fieldName);\nif (value == null) {\nappendInternal(buffer, fieldName, value, isFullDetail(fullDetail));\nappendFieldEnd(buffer, fieldName);\n}",
            "method_id": 36
        },
        {
            "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:isFullDetail(Ljava/lang/Boolean;)Z",
            "method_body": "protected boolean isFullDetail(Boolean fullDetailRequest) {\nif (fullDetailRequest == null) {\nreturn defaultFullDetail;\n}",
            "method_id": 37
        },
        {
            "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendFieldStart(Ljava/lang/StringBuffer;Ljava/lang/String;)V",
            "method_body": "protected void appendFieldStart(StringBuffer buffer, String fieldName) {\nif (useFieldNames && fieldName != null) {\nbuffer.append(fieldName);\nbuffer.append(fieldNameValueSeparator);\n}",
            "method_id": 38
        },
        {
            "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendFieldEnd(Ljava/lang/StringBuffer;Ljava/lang/String;)V",
            "method_body": "protected void appendFieldEnd(StringBuffer buffer, String fieldName) {\nappendFieldSeparator(buffer);\n}",
            "method_id": 39
        }
    ]
}