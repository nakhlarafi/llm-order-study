{
    "bug_id": 34,
    "test_id": 5,
    "test_name": "org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchy",
    "test_body": "313: public void testReflectionHierarchy() {\n314: ReflectionTestFixtureA baseA = new ReflectionTestFixtureA();\n315: String baseStr = this.toBaseString(baseA);\n316: assertEquals(baseStr + \"[a=a]\", ToStringBuilder.reflectionToString(baseA));\n317: assertEquals(baseStr + \"[a=a]\", ToStringBuilder.reflectionToString(baseA, null));\n318: assertEquals(baseStr + \"[a=a]\", ToStringBuilder.reflectionToString(baseA, null, false));\n319: assertEquals(baseStr + \"[a=a,transientA=t]\", ToStringBuilder.reflectionToString(baseA, null, true));\n320: assertEquals(baseStr + \"[a=a]\", ToStringBuilder.reflectionToString(baseA, null, false, null));\n321: assertEquals(baseStr + \"[a=a]\", ToStringBuilder.reflectionToString(baseA, null, false, Object.class));\n322: assertEquals(baseStr + \"[a=a]\", ToStringBuilder.reflectionToString(baseA, null, false, ReflectionTestFixtureA.class));\n323: 324: ReflectionTestFixtureB baseB = new ReflectionTestFixtureB();\n325: baseStr = this.toBaseString(baseB);\n326: assertEquals(baseStr + \"[b=b,a=a]\", ToStringBuilder.reflectionToString(baseB));\n327: assertEquals(baseStr + \"[b=b,a=a]\", ToStringBuilder.reflectionToString(baseB));\n328: assertEquals(baseStr + \"[b=b,a=a]\", ToStringBuilder.reflectionToString(baseB, null));\n329: assertEquals(baseStr + \"[b=b,a=a]\", ToStringBuilder.reflectionToString(baseB, null, false));\n330: assertEquals(baseStr + \"[b=b,transientB=t,a=a,transientA=t]\", ToStringBuilder.reflectionToString(baseB, null, true));\n331: assertEquals(baseStr + \"[b=b,a=a]\", ToStringBuilder.reflectionToString(baseB, null, false, null));\n332: assertEquals(baseStr + \"[b=b,a=a]\", ToStringBuilder.reflectionToString(baseB, null, false, Object.class));\n333: assertEquals(baseStr + \"[b=b,a=a]\", ToStringBuilder.reflectionToString(baseB, null, false, ReflectionTestFixtureA.class));\n334: assertEquals(baseStr + \"[b=b]\", ToStringBuilder.reflectionToString(baseB, null, false, ReflectionTestFixtureB.class));\n335: this.validateNullToStringStyleRegistry();\n336: }\n",
    "stack_trace": "junit.framework.AssertionFailedError: Expected: <null> but was: {}\nat junit.framework.Assert.fail(Assert.java:57)\nat junit.framework.Assert.assertTrue(Assert.java:22)\nat junit.framework.Assert.assertNull(Assert.java:277)\nat junit.framework.Assert.assertNull(Assert.java:268)\nat junit.framework.TestCase.assertNull(TestCase.java:438)\nat org.apache.commons.lang3.builder.ToStringBuilderTest.validateNullToStringStyleRegistry(ToStringBuilderTest.java:586)\nat org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchy(ToStringBuilderTest.java:335)",
    "covered_methods": [
        {
            "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendFieldSeparator(Ljava/lang/StringBuffer;)V",
            "method_body": "protected void appendFieldSeparator(StringBuffer buffer) {\nbuffer.append(fieldSeparator);\n}",
            "method_id": 40
        }
    ]
}