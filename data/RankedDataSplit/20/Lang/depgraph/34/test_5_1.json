{
    "bug_id": 34,
    "test_id": 5,
    "test_name": "org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchy",
    "test_body": "313: public void testReflectionHierarchy() {\n314: ReflectionTestFixtureA baseA = new ReflectionTestFixtureA();\n315: String baseStr = this.toBaseString(baseA);\n316: assertEquals(baseStr + \"[a=a]\", ToStringBuilder.reflectionToString(baseA));\n317: assertEquals(baseStr + \"[a=a]\", ToStringBuilder.reflectionToString(baseA, null));\n318: assertEquals(baseStr + \"[a=a]\", ToStringBuilder.reflectionToString(baseA, null, false));\n319: assertEquals(baseStr + \"[a=a,transientA=t]\", ToStringBuilder.reflectionToString(baseA, null, true));\n320: assertEquals(baseStr + \"[a=a]\", ToStringBuilder.reflectionToString(baseA, null, false, null));\n321: assertEquals(baseStr + \"[a=a]\", ToStringBuilder.reflectionToString(baseA, null, false, Object.class));\n322: assertEquals(baseStr + \"[a=a]\", ToStringBuilder.reflectionToString(baseA, null, false, ReflectionTestFixtureA.class));\n323: 324: ReflectionTestFixtureB baseB = new ReflectionTestFixtureB();\n325: baseStr = this.toBaseString(baseB);\n326: assertEquals(baseStr + \"[b=b,a=a]\", ToStringBuilder.reflectionToString(baseB));\n327: assertEquals(baseStr + \"[b=b,a=a]\", ToStringBuilder.reflectionToString(baseB));\n328: assertEquals(baseStr + \"[b=b,a=a]\", ToStringBuilder.reflectionToString(baseB, null));\n329: assertEquals(baseStr + \"[b=b,a=a]\", ToStringBuilder.reflectionToString(baseB, null, false));\n330: assertEquals(baseStr + \"[b=b,transientB=t,a=a,transientA=t]\", ToStringBuilder.reflectionToString(baseB, null, true));\n331: assertEquals(baseStr + \"[b=b,a=a]\", ToStringBuilder.reflectionToString(baseB, null, false, null));\n332: assertEquals(baseStr + \"[b=b,a=a]\", ToStringBuilder.reflectionToString(baseB, null, false, Object.class));\n333: assertEquals(baseStr + \"[b=b,a=a]\", ToStringBuilder.reflectionToString(baseB, null, false, ReflectionTestFixtureA.class));\n334: assertEquals(baseStr + \"[b=b]\", ToStringBuilder.reflectionToString(baseB, null, false, ReflectionTestFixtureB.class));\n335: this.validateNullToStringStyleRegistry();\n336: }\n",
    "stack_trace": "junit.framework.AssertionFailedError: Expected: <null> but was: {}\nat junit.framework.Assert.fail(Assert.java:57)\nat junit.framework.Assert.assertTrue(Assert.java:22)\nat junit.framework.Assert.assertNull(Assert.java:277)\nat junit.framework.Assert.assertNull(Assert.java:268)\nat junit.framework.TestCase.assertNull(TestCase.java:438)\nat org.apache.commons.lang3.builder.ToStringBuilderTest.validateNullToStringStyleRegistry(ToStringBuilderTest.java:586)\nat org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchy(ToStringBuilderTest.java:335)",
    "covered_methods": [
        {
            "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendContentEnd(Ljava/lang/StringBuffer;)V",
            "method_body": "protected void appendContentEnd(StringBuffer buffer) {\nbuffer.append(contentEnd);\n}",
            "method_id": 20
        },
        {
            "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendContentStart(Ljava/lang/StringBuffer;)V",
            "method_body": "protected void appendContentStart(StringBuffer buffer) {\nbuffer.append(contentStart);\n}",
            "method_id": 21
        },
        {
            "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:getObject()Ljava/lang/Object;",
            "method_body": "public Object getObject() {\nreturn object;\n}",
            "method_id": 22
        },
        {
            "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:getStringBuffer()Ljava/lang/StringBuffer;",
            "method_body": "public StringBuffer getStringBuffer() {\nreturn buffer;\n}",
            "method_id": 23
        },
        {
            "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:getRegistry()Ljava/util/Map;",
            "method_body": "static Map<Object, Object> getRegistry() {\nreturn REGISTRY.get() != null ? REGISTRY.get() : Collections.<Object, Object>emptyMap();\n}",
            "method_id": 24
        },
        {
            "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:toString(Ljava/lang/Object;Lorg/apache/commons/lang3/builder/ToStringStyle;ZZLjava/lang/Class;)Ljava/lang/String;",
            "method_body": "public static <T> String toString(\nreturn new ReflectionToStringBuilder(object, style, null, reflectUpToClass, outputTransients, outputStatics)\n}",
            "method_id": 25
        },
        {
            "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:toString(Ljava/lang/Object;)Ljava/lang/String;",
            "method_body": "public static String toString(Object object) {\nreturn toString(object, null, false, false, null);\n}",
            "method_id": 26
        },
        {
            "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:reflectionToString(Ljava/lang/Object;)Ljava/lang/String;",
            "method_body": "public static String reflectionToString(Object object) {\nreturn ReflectionToStringBuilder.toString(object);\n}",
            "method_id": 27
        },
        {
            "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:getUpToClass()Ljava/lang/Class;",
            "method_body": "public Class<?> getUpToClass() {\nreturn this.upToClass;\n}",
            "method_id": 28
        },
        {
            "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:isUseIdentityHashCode()Z",
            "method_body": "protected boolean isUseIdentityHashCode() {\nreturn useIdentityHashCode;\n}",
            "method_id": 29
        },
        {
            "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:getValue(Ljava/lang/reflect/Field;)Ljava/lang/Object;",
            "method_body": "protected Object getValue(Field field) throws IllegalArgumentException, IllegalAccessException {\nreturn field.get(this.getObject());\n}",
            "method_id": 30
        },
        {
            "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:isAppendTransients()Z",
            "method_body": "public boolean isAppendTransients() {\nreturn this.appendTransients;\n}",
            "method_id": 31
        },
        {
            "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:toString(Ljava/lang/Object;Lorg/apache/commons/lang3/builder/ToStringStyle;)Ljava/lang/String;",
            "method_body": "public static String toString(Object object, ToStringStyle style) {\nreturn toString(object, style, false, false, null);\n}",
            "method_id": 32
        },
        {
            "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:reflectionToString(Ljava/lang/Object;Lorg/apache/commons/lang3/builder/ToStringStyle;)Ljava/lang/String;",
            "method_body": "public static String reflectionToString(Object object, ToStringStyle style) {\nreturn ReflectionToStringBuilder.toString(object, style);\n}",
            "method_id": 33
        },
        {
            "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:reflectionToString(Ljava/lang/Object;Lorg/apache/commons/lang3/builder/ToStringStyle;Z)Ljava/lang/String;",
            "method_body": "public static String reflectionToString(Object object, ToStringStyle style, boolean outputTransients) {\nreturn ReflectionToStringBuilder.toString(object, style, outputTransients, false, null);\n}",
            "method_id": 34
        },
        {
            "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:reflectionToString(Ljava/lang/Object;Lorg/apache/commons/lang3/builder/ToStringStyle;ZLjava/lang/Class;)Ljava/lang/String;",
            "method_body": "public static <T> String reflectionToString(\nreturn ReflectionToStringBuilder.toString(object, style, outputTransients, false, reflectUpToClass);\n}",
            "method_id": 35
        },
        {
            "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:setAppendStatics(Z)V",
            "method_body": "public void setAppendStatics(boolean appendStatics) {\nthis.appendStatics = appendStatics;\n}",
            "method_id": 36
        },
        {
            "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:setAppendTransients(Z)V",
            "method_body": "public void setAppendTransients(boolean appendTransients) {\nthis.appendTransients = appendTransients;\n}",
            "method_id": 37
        },
        {
            "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:setUpToClass(Ljava/lang/Class;)V",
            "method_body": "public void setUpToClass(Class<?> clazz) {\nif (clazz != null) {\nObject object = getObject();\nif (object != null && clazz.isInstance(object) == false) {\nthis.upToClass = clazz;\n}",
            "method_id": 38
        },
        {
            "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:getDefaultStyle()Lorg/apache/commons/lang3/builder/ToStringStyle;",
            "method_body": "public static ToStringStyle getDefaultStyle() {\nreturn defaultStyle;\n}",
            "method_id": 39
        }
    ]
}