{
    "bug_id": 10,
    "test_id": 0,
    "test_name": "org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLANG_831",
    "test_body": null,
    "stack_trace": "junit.framework.AssertionFailedError: Parsed dates should be equal expected:<null> but was:<Mon Mar 02 21:00:00 PST 1970>\nat org.junit.Assert.fail(Assert.java:88)\nat org.junit.Assert.failNotEquals(Assert.java:743)\nat org.junit.Assert.assertEquals(Assert.java:118)\nat org.apache.commons.lang3.time.FastDateParserTest.testSdfAndFdp(FastDateParserTest.java:388)\nat org.apache.commons.lang3.time.FastDateParserTest.testLANG_831(FastDateParserTest.java:348)",
    "covered_methods": [
        {
            "method_signature": "org.apache.commons.lang3.time.FastDateParser:parse(Ljava/lang/String;)Ljava/util/Date;",
            "method_body": "public Date parse(String source) throws ParseException {\nDate date= parse(source, new ParsePosition(0));\nif(date==null) {\nreturn date;\n}",
            "method_id": 20,
            "loc": 5
        },
        {
            "method_signature": "org.apache.commons.lang3.time.FastDateParser$NumberStrategy:addRegex(Lorg/apache/commons/lang3/time/FastDateParser;Ljava/lang/StringBuilder;)Z",
            "method_body": "public boolean addRegex(FastDateParser parser, StringBuilder regex) {\nif(parser.isNextNumber()) {\nregex.append(\"(\\\\p{IsNd}++)\");\nreturn true;\n}",
            "method_id": 21,
            "loc": 5
        },
        {
            "method_signature": "org.apache.commons.lang3.time.FastDateParser$CopyQuotedStrategy:isNumber()Z",
            "method_body": "public boolean isNumber() {\nchar c= formatField.charAt(0);\nif(c=='\\'') {\nreturn Character.isDigit(c);\n}",
            "method_id": 22,
            "loc": 5
        },
        {
            "method_signature": "org.apache.commons.lang3.time.FastDateParser$KeyValue:<init>(Ljava/lang/String;I)V",
            "method_body": "public KeyValue(String key, int value) {\nthis.key= key;\nthis.value= value;\n}",
            "method_id": 23,
            "loc": 4
        },
        {
            "method_signature": "org.apache.commons.lang3.time.FastDateFormat:<init>(Ljava/lang/String;Ljava/util/TimeZone;Ljava/util/Locale;)V",
            "method_body": "protected FastDateFormat(String pattern, TimeZone timeZone, Locale locale) {\nprinter= new FastDatePrinter(pattern, timeZone, locale);\nparser= new FastDateParser(pattern, timeZone, locale);\n}",
            "method_id": 24,
            "loc": 4
        },
        {
            "method_signature": "org.apache.commons.lang3.time.FastDateParser$CopyQuotedStrategy:addRegex(Lorg/apache/commons/lang3/time/FastDateParser;Ljava/lang/StringBuilder;)Z",
            "method_body": "public boolean addRegex(FastDateParser parser, StringBuilder regex) {\nescapeRegex(regex, formatField, true);\nreturn false;\n}",
            "method_id": 25,
            "loc": 4
        },
        {
            "method_signature": "org.apache.commons.lang3.time.FastDatePrinter$TextField:<init>(I[Ljava/lang/String;)V",
            "method_body": "TextField(int field, String[] values) {\nmField = field;\nmValues = values;\n}",
            "method_id": 26,
            "loc": 4
        },
        {
            "method_signature": "org.apache.commons.lang3.time.FastDateParser$3:modify(I)I",
            "method_body": "public int modify(int iValue) {\nreturn iValue-1;\n}",
            "method_id": 27,
            "loc": 3
        },
        {
            "method_signature": "org.apache.commons.lang3.time.FastDateFormat$1:createInstance(Ljava/lang/String;Ljava/util/TimeZone;Ljava/util/Locale;)Lorg/apache/commons/lang3/time/FastDateFormat;",
            "method_body": "protected FastDateFormat createInstance(String pattern, TimeZone timeZone, Locale locale) {\nreturn new FastDateFormat(pattern, timeZone, locale);\n}",
            "method_id": 28,
            "loc": 3
        },
        {
            "method_signature": "org.apache.commons.lang3.time.FastDatePrinter$UnpaddedMonthField:estimateLength()I",
            "method_body": "public int estimateLength() {\nreturn 2;\n}",
            "method_id": 29,
            "loc": 3
        },
        {
            "method_signature": "org.apache.commons.lang3.time.FastDateFormat:getInstance(Ljava/lang/String;Ljava/util/TimeZone;Ljava/util/Locale;)Lorg/apache/commons/lang3/time/FastDateFormat;",
            "method_body": "public static FastDateFormat getInstance(String pattern, TimeZone timeZone, Locale locale) {\nreturn cache.getInstance(pattern, timeZone, locale);\n}",
            "method_id": 30,
            "loc": 3
        },
        {
            "method_signature": "org.apache.commons.lang3.time.FastDateFormat:parse(Ljava/lang/String;)Ljava/util/Date;",
            "method_body": "public Date parse(String source) throws ParseException {\nreturn parser.parse(source);\n}",
            "method_id": 31,
            "loc": 3
        },
        {
            "method_signature": "org.apache.commons.lang3.time.FastDateParser:isNextNumber()Z",
            "method_body": "boolean isNextNumber() {\nreturn nextStrategy!=null && nextStrategy.isNumber();\n}",
            "method_id": 32,
            "loc": 3
        },
        {
            "method_signature": "org.apache.commons.lang3.time.FastDateParser$1:compare(Lorg/apache/commons/lang3/time/FastDateParser$KeyValue;Lorg/apache/commons/lang3/time/FastDateParser$KeyValue;)I",
            "method_body": "public int compare(KeyValue left, KeyValue right) {\nreturn left.key.compareToIgnoreCase(right.key);\n}",
            "method_id": 33,
            "loc": 3
        },
        {
            "method_signature": "org.apache.commons.lang3.time.FormatCache$MultipartKey:<init>([Ljava/lang/Object;)V",
            "method_body": "public MultipartKey(Object... keys) {\nthis.keys = keys;\n}",
            "method_id": 34,
            "loc": 3
        },
        {
            "method_signature": "org.apache.commons.lang3.time.FastDateParser$NumberStrategy:setCalendar(Lorg/apache/commons/lang3/time/FastDateParser;Ljava/util/Calendar;Ljava/lang/String;)V",
            "method_body": "public void setCalendar(FastDateParser parser, Calendar cal, String value) {\ncal.set(field, modify(Integer.parseInt(value)));\n}",
            "method_id": 35,
            "loc": 3
        },
        {
            "method_signature": "org.apache.commons.lang3.time.FastDateParser$CopyQuotedStrategy:<init>(Ljava/lang/String;)V",
            "method_body": "CopyQuotedStrategy(String formatField) {\nthis.formatField= formatField;\n}",
            "method_id": 36,
            "loc": 3
        }
    ]
}