{
    "bug_id": 1,
    "test_id": 0,
    "test_name": "org.apache.commons.csv.CSVParserTest.testGetLineNumberWithCR",
    "test_body": "public void testGetLineNumberWithCR() throws Exception {\nCSVParser parser = new CSVParser(\"a\\rb\\rc\", CSVFormat.DEFAULT.withLineSeparator(\"\\r\"));\n508: assertEquals(0, parser.getLineNumber());\nassertNotNull(parser.getRecord());\nassertEquals(1, parser.getLineNumber());\nassertNotNull(parser.getRecord());",
    "stack_trace": "junit.framework.AssertionFailedError: expected:<1> but was:<0>\nat org.junit.Assert.fail(Assert.java:88)\nat org.junit.Assert.failNotEquals(Assert.java:743)\nat org.junit.Assert.assertEquals(Assert.java:118)\nat org.junit.Assert.assertEquals(Assert.java:555)\nat org.junit.Assert.assertEquals(Assert.java:542)\nat org.apache.commons.csv.CSVParserTest.testGetLineNumberWithCR(CSVParserTest.java:510)",
    "covered_methods": [
        {
            "method_signature": "org.apache.commons.csv.Lexer:isDelimiter(I)Z",
            "method_body": "abstract Token nextToken(Token reusableToken) throws IOException;\nreturn c == delimiter;\n}",
            "method_id": 40,
            "loc": 3
        },
        {
            "method_signature": "org.apache.commons.csv.Lexer:isEscape(I)Z",
            "method_body": "boolean isEscape(int c) {\nreturn isEscaping && c == escape;\n}",
            "method_id": 41,
            "loc": 3
        },
        {
            "method_signature": "org.apache.commons.csv.Lexer:isEncapsulator(I)Z",
            "method_body": "boolean isEncapsulator(int c) {\nreturn isEncapsulating && c == encapsulator;\n}",
            "method_id": 42,
            "loc": 3
        },
        {
            "method_signature": "org.apache.commons.csv.Lexer:isCommentStart(I)Z",
            "method_body": "boolean isCommentStart(int c) {\nreturn isCommentEnabled && c == commmentStart;\n}",
            "method_id": 43,
            "loc": 3
        },
        {
            "method_signature": "org.apache.commons.csv.CSVLexer:<init>(Lorg/apache/commons/csv/CSVFormat;Lorg/apache/commons/csv/ExtendedBufferedReader;)V",
            "method_body": "public CSVLexer(CSVFormat format, ExtendedBufferedReader in) {\nsuper(format, in);\n}",
            "method_id": 44,
            "loc": 3
        },
        {
            "method_signature": "org.apache.commons.csv.ExtendedBufferedReader:readAgain()I",
            "method_body": "int readAgain() {\nreturn lastChar;\n}",
            "method_id": 45,
            "loc": 3
        },
        {
            "method_signature": "org.apache.commons.csv.ExtendedBufferedReader:getLineNumber()I",
            "method_body": "int getLineNumber() {\nreturn lineCounter;\n}",
            "method_id": 46,
            "loc": 3
        }
    ]
}