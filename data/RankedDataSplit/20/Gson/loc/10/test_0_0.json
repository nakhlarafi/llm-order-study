{
    "bug_id": 10,
    "test_id": 0,
    "test_name": "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testPrimitiveFieldAnnotationTakesPrecedenceOverDefault",
    "test_body": "public void testPrimitiveFieldAnnotationTakesPrecedenceOverDefault() {\nGson gson = new Gson();\nString json = gson.toJson(new GadgetWithPrimitivePart(42));\nassertEquals(\"{\\\"part\\\":\\\"42\\\"}\", json);\nGadgetWithPrimitivePart gadget = gson.fromJson(json, GadgetWithPrimitivePart.class);",
    "stack_trace": "junit.framework.ComparisonFailure: expected:<{\"part\":[\"42\"]}> but was:<{\"part\":[42]}>\nat junit.framework.Assert.assertEquals(Assert.java:100)\nat junit.framework.Assert.assertEquals(Assert.java:107)\nat junit.framework.TestCase.assertEquals(TestCase.java:269)\nat com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testPrimitiveFieldAnnotationTakesPrecedenceOverDefault(JsonAdapterAnnotationOnFieldsTest.java:236)",
    "covered_methods": [
        {
            "method_signature": "com.google.gson.Gson:<init>(Lcom/google/gson/internal/Excluder;Lcom/google/gson/FieldNamingStrategy;Ljava/util/Map;ZZZZZZZLcom/google/gson/LongSerializationPolicy;Ljava/util/List;)V",
            "method_body": "Gson(final Excluder excluder, final FieldNamingStrategy fieldNamingStrategy,\nList<TypeAdapterFactory> typeAdapterFactories) {\nthis.constructorConstructor = new ConstructorConstructor(instanceCreators);\nthis.excluder = excluder;\nthis.fieldNamingStrategy = fieldNamingStrategy;\nthis.serializeNulls = serializeNulls;\nthis.generateNonExecutableJson = generateNonExecutableGson;\nthis.htmlSafe = htmlSafe;\nthis.prettyPrinting = prettyPrinting;\nthis.lenient = lenient;\nList<TypeAdapterFactory> factories = new ArrayList<TypeAdapterFactory>();\nfactories.add(TypeAdapters.JSON_ELEMENT_FACTORY);\nfactories.add(ObjectTypeAdapter.FACTORY);\nfactories.add(excluder);\nfactories.addAll(typeAdapterFactories);\nfactories.add(TypeAdapters.STRING_FACTORY);\nfactories.add(TypeAdapters.INTEGER_FACTORY);\nfactories.add(TypeAdapters.BOOLEAN_FACTORY);\nfactories.add(TypeAdapters.BYTE_FACTORY);\nfactories.add(TypeAdapters.SHORT_FACTORY);\nTypeAdapter<Number> longAdapter = longAdapter(longSerializationPolicy);\nfactories.add(TypeAdapters.newFactory(long.class, Long.class, longAdapter));\nfactories.add(TypeAdapters.newFactory(double.class, Double.class,\nfactories.add(TypeAdapters.newFactory(float.class, Float.class,\nfactories.add(TypeAdapters.NUMBER_FACTORY);\nfactories.add(TypeAdapters.ATOMIC_INTEGER_FACTORY);\nfactories.add(TypeAdapters.ATOMIC_BOOLEAN_FACTORY);\nfactories.add(TypeAdapters.newFactory(AtomicLong.class, atomicLongAdapter(longAdapter)));\nfactories.add(TypeAdapters.newFactory(AtomicLongArray.class, atomicLongArrayAdapter(longAdapter)));\nfactories.add(TypeAdapters.ATOMIC_INTEGER_ARRAY_FACTORY);\nfactories.add(TypeAdapters.CHARACTER_FACTORY);\nfactories.add(TypeAdapters.STRING_BUILDER_FACTORY);\nfactories.add(TypeAdapters.STRING_BUFFER_FACTORY);\nfactories.add(TypeAdapters.newFactory(BigDecimal.class, TypeAdapters.BIG_DECIMAL));\nfactories.add(TypeAdapters.newFactory(BigInteger.class, TypeAdapters.BIG_INTEGER));\nfactories.add(TypeAdapters.URL_FACTORY);\nfactories.add(TypeAdapters.URI_FACTORY);\nfactories.add(TypeAdapters.UUID_FACTORY);\nfactories.add(TypeAdapters.CURRENCY_FACTORY);\nfactories.add(TypeAdapters.LOCALE_FACTORY);\nfactories.add(TypeAdapters.INET_ADDRESS_FACTORY);\nfactories.add(TypeAdapters.BIT_SET_FACTORY);\nfactories.add(DateTypeAdapter.FACTORY);\nfactories.add(TypeAdapters.CALENDAR_FACTORY);\nfactories.add(TimeTypeAdapter.FACTORY);\nfactories.add(SqlDateTypeAdapter.FACTORY);\nfactories.add(TypeAdapters.TIMESTAMP_FACTORY);\nfactories.add(ArrayTypeAdapter.FACTORY);\nfactories.add(TypeAdapters.CLASS_FACTORY);\nfactories.add(new CollectionTypeAdapterFactory(constructorConstructor));\nfactories.add(new MapTypeAdapterFactory(constructorConstructor, complexMapKeySerialization));\nfactories.add(new JsonAdapterAnnotationTypeAdapterFactory(constructorConstructor));\nfactories.add(TypeAdapters.ENUM_FACTORY);\nfactories.add(new ReflectiveTypeAdapterFactory(\nthis.factories = Collections.unmodifiableList(factories);\n}",
            "method_id": 0,
            "loc": 56
        },
        {
            "method_signature": "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory:getBoundFields(Lcom/google/gson/Gson;Lcom/google/gson/reflect/TypeToken;Ljava/lang/Class;)Ljava/util/Map;",
            "method_body": "private Map<String, BoundField> getBoundFields(Gson context, TypeToken<?> type, Class<?> raw) {\nMap<String, BoundField> result = new LinkedHashMap<String, BoundField>();\nif (raw.isInterface()) {\nType declaredType = type.getType();\nwhile (raw != Object.class) {\nField[] fields = raw.getDeclaredFields();\nfor (Field field : fields) {\nboolean serialize = excludeField(field, true);\nboolean deserialize = excludeField(field, false);\nif (!serialize && !deserialize) {\nfield.setAccessible(true);\nType fieldType = $Gson$Types.resolve(type.getType(), raw, field.getGenericType());\nList<String> fieldNames = getFieldNames(field);\nBoundField previous = null;\nfor (int i = 0; i < fieldNames.size(); ++i) {\nString name = fieldNames.get(i);\nif (i != 0) serialize = false; // only serialize the default name\nBoundField boundField = createBoundField(context, field, name,\nBoundField replaced = result.put(name, boundField);\nif (previous == null) previous = replaced;\nif (previous != null) {\ntype = TypeToken.get($Gson$Types.resolve(type.getType(), raw, raw.getGenericSuperclass()));\nraw = type.getRawType();\n}\nreturn result;\n}",
            "method_id": 1,
            "loc": 26
        },
        {
            "method_signature": "com.google.gson.Gson:getAdapter(Lcom/google/gson/reflect/TypeToken;)Lcom/google/gson/TypeAdapter;",
            "method_body": "public <T> TypeAdapter<T> getAdapter(TypeToken<T> type) {\nTypeAdapter<?> cached = typeTokenCache.get(type == null ? NULL_KEY_SURROGATE : type);\nif (cached != null) {\nMap<TypeToken<?>, FutureTypeAdapter<?>> threadCalls = calls.get();\nboolean requiresThreadLocalCleanup = false;\nif (threadCalls == null) {\nthreadCalls = new HashMap<TypeToken<?>, FutureTypeAdapter<?>>();\ncalls.set(threadCalls);\nrequiresThreadLocalCleanup = true;\nFutureTypeAdapter<T> ongoingCall = (FutureTypeAdapter<T>) threadCalls.get(type);\nif (ongoingCall != null) {\nFutureTypeAdapter<T> call = new FutureTypeAdapter<T>();\nthreadCalls.put(type, call);\nfor (TypeAdapterFactory factory : factories) {\nTypeAdapter<T> candidate = factory.create(this, type);\nif (candidate != null) {\ncall.setDelegate(candidate);\ntypeTokenCache.put(type, candidate);\nreturn candidate;\n}\nthreadCalls.remove(type);\nif (requiresThreadLocalCleanup) {\ncalls.remove();\n}",
            "method_id": 2,
            "loc": 24
        },
        {
            "method_signature": "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory:createBoundField(Lcom/google/gson/Gson;Ljava/lang/reflect/Field;Ljava/lang/String;Lcom/google/gson/reflect/TypeToken;ZZ)Lcom/google/gson/internal/bind/ReflectiveTypeAdapterFactory$BoundField;",
            "method_body": "private ReflectiveTypeAdapterFactory.BoundField createBoundField(\nfinal boolean isPrimitive = Primitives.isPrimitive(fieldType.getRawType());\nJsonAdapter annotation = field.getAnnotation(JsonAdapter.class);\nTypeAdapter<?> mapped = null;\nif (annotation != null) {\nmapped = getTypeAdapter(constructorConstructor, context, fieldType, annotation);\nfinal boolean jsonAdapterPresent = mapped != null;\nif (mapped == null) mapped = context.getAdapter(fieldType);\nfinal TypeAdapter<?> typeAdapter = mapped;\nreturn new ReflectiveTypeAdapterFactory.BoundField(name, serialize, deserialize) {\nObject fieldValue = field.get(value);\nTypeAdapter t =\nt.write(writer, fieldValue);\n}\nif (!serialized) return false;\nObject fieldValue = field.get(value);\nreturn fieldValue != value; // avoid recursion for example for Throwable.cause\n}",
            "method_id": 3,
            "loc": 18
        },
        {
            "method_signature": "com.google.gson.stream.JsonWriter:<clinit>()V",
            "method_body": "private static final String[] REPLACEMENT_CHARS;\nREPLACEMENT_CHARS = new String[128];\nfor (int i = 0; i <= 0x1f; i++) {\nREPLACEMENT_CHARS[i] = String.format(\"\\\\u%04x\", (int) i);\nREPLACEMENT_CHARS['\"'] = \"\\\\\\\"\";\nREPLACEMENT_CHARS['\\\\'] = \"\\\\\\\\\";\nREPLACEMENT_CHARS['\\t'] = \"\\\\t\";\nREPLACEMENT_CHARS['\\b'] = \"\\\\b\";\nREPLACEMENT_CHARS['\\n'] = \"\\\\n\";\nREPLACEMENT_CHARS['\\r'] = \"\\\\r\";\nREPLACEMENT_CHARS['\\f'] = \"\\\\f\";\nHTML_SAFE_REPLACEMENT_CHARS = REPLACEMENT_CHARS.clone();\nHTML_SAFE_REPLACEMENT_CHARS['<'] = \"\\\\u003c\";\nHTML_SAFE_REPLACEMENT_CHARS['>'] = \"\\\\u003e\";\nHTML_SAFE_REPLACEMENT_CHARS['&'] = \"\\\\u0026\";\nHTML_SAFE_REPLACEMENT_CHARS['='] = \"\\\\u003d\";\nHTML_SAFE_REPLACEMENT_CHARS['\\''] = \"\\\\u0027\";\n}",
            "method_id": 4,
            "loc": 18
        },
        {
            "method_signature": "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1:write(Lcom/google/gson/stream/JsonWriter;Ljava/lang/Object;)V",
            "method_body": "private ReflectiveTypeAdapterFactory.BoundField createBoundField(\nfinal boolean isPrimitive = Primitives.isPrimitive(fieldType.getRawType());\nJsonAdapter annotation = field.getAnnotation(JsonAdapter.class);\nTypeAdapter<?> mapped = null;\nif (annotation != null) {\nmapped = getTypeAdapter(constructorConstructor, context, fieldType, annotation);\nfinal boolean jsonAdapterPresent = mapped != null;\nif (mapped == null) mapped = context.getAdapter(fieldType);\nfinal TypeAdapter<?> typeAdapter = mapped;\nreturn new ReflectiveTypeAdapterFactory.BoundField(name, serialize, deserialize) {\nObject fieldValue = field.get(value);\nTypeAdapter t =\nt.write(writer, fieldValue);\n}\nif (!serialized) return false;\nObject fieldValue = field.get(value);\nreturn fieldValue != value; // avoid recursion for example for Throwable.cause\n}",
            "method_id": 5,
            "loc": 18
        },
        {
            "method_signature": "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1:writeField(Ljava/lang/Object;)Z",
            "method_body": "private ReflectiveTypeAdapterFactory.BoundField createBoundField(\nfinal boolean isPrimitive = Primitives.isPrimitive(fieldType.getRawType());\nJsonAdapter annotation = field.getAnnotation(JsonAdapter.class);\nTypeAdapter<?> mapped = null;\nif (annotation != null) {\nmapped = getTypeAdapter(constructorConstructor, context, fieldType, annotation);\nfinal boolean jsonAdapterPresent = mapped != null;\nif (mapped == null) mapped = context.getAdapter(fieldType);\nfinal TypeAdapter<?> typeAdapter = mapped;\nreturn new ReflectiveTypeAdapterFactory.BoundField(name, serialize, deserialize) {\nObject fieldValue = field.get(value);\nTypeAdapter t =\nt.write(writer, fieldValue);\n}\nif (!serialized) return false;\nObject fieldValue = field.get(value);\nreturn fieldValue != value; // avoid recursion for example for Throwable.cause\n}",
            "method_id": 6,
            "loc": 18
        },
        {
            "method_signature": "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter:<init>(Lcom/google/gson/internal/ObjectConstructor;Ljava/util/Map;)V",
            "method_body": "abstract boolean writeField(Object value) throws IOException, IllegalAccessException;\nAdapter(ObjectConstructor<T> constructor, Map<String, BoundField> boundFields) {\nthis.constructor = constructor;\nthis.boundFields = boundFields;\n}\nif (value == null) {\nout.beginObject();\nfor (BoundField boundField : boundFields.values()) {\nif (boundField.writeField(value)) {\nout.name(boundField.name);\nboundField.write(out, value);\n}\n}\nout.endObject();\n}\n}",
            "method_id": 7,
            "loc": 16
        },
        {
            "method_signature": "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter:write(Lcom/google/gson/stream/JsonWriter;Ljava/lang/Object;)V",
            "method_body": "abstract boolean writeField(Object value) throws IOException, IllegalAccessException;\nAdapter(ObjectConstructor<T> constructor, Map<String, BoundField> boundFields) {\nthis.constructor = constructor;\nthis.boundFields = boundFields;\n}\nif (value == null) {\nout.beginObject();\nfor (BoundField boundField : boundFields.values()) {\nif (boundField.writeField(value)) {\nout.name(boundField.name);\nboundField.write(out, value);\n}\n}\nout.endObject();\n}\n}",
            "method_id": 8,
            "loc": 16
        },
        {
            "method_signature": "com.google.gson.stream.JsonWriter:string(Ljava/lang/String;)V",
            "method_body": "private void string(String value) throws IOException {\nString[] replacements = htmlSafe ? HTML_SAFE_REPLACEMENT_CHARS : REPLACEMENT_CHARS;\nout.write(\"\\\"\");\nint last = 0;\nint length = value.length();\nfor (int i = 0; i < length; i++) {\nchar c = value.charAt(i);\nif (c < 128) {\nreplacement = replacements[c];\nif (replacement == null) {\ncontinue;\nif (last < length) {\nout.write(value, last, length - last);\nout.write(\"\\\"\");\n}",
            "method_id": 9,
            "loc": 15
        },
        {
            "method_signature": "com.google.gson.internal.Primitives:<clinit>()V",
            "method_body": "private static final Map<Class<?>, Class<?>> PRIMITIVE_TO_WRAPPER_TYPE;\nMap<Class<?>, Class<?>> primToWrap = new HashMap<Class<?>, Class<?>>(16);\nMap<Class<?>, Class<?>> wrapToPrim = new HashMap<Class<?>, Class<?>>(16);\nadd(primToWrap, wrapToPrim, boolean.class, Boolean.class);\nadd(primToWrap, wrapToPrim, byte.class, Byte.class);\nadd(primToWrap, wrapToPrim, char.class, Character.class);\nadd(primToWrap, wrapToPrim, double.class, Double.class);\nadd(primToWrap, wrapToPrim, float.class, Float.class);\nadd(primToWrap, wrapToPrim, int.class, Integer.class);\nadd(primToWrap, wrapToPrim, long.class, Long.class);\nadd(primToWrap, wrapToPrim, short.class, Short.class);\nadd(primToWrap, wrapToPrim, void.class, Void.class);\nPRIMITIVE_TO_WRAPPER_TYPE = Collections.unmodifiableMap(primToWrap);\nWRAPPER_TO_PRIMITIVE_TYPE = Collections.unmodifiableMap(wrapToPrim);\n}",
            "method_id": 10,
            "loc": 15
        },
        {
            "method_signature": "com.google.gson.Gson:toJson(Ljava/lang/Object;Ljava/lang/reflect/Type;Lcom/google/gson/stream/JsonWriter;)V",
            "method_body": "public void toJson(Object src, Type typeOfSrc, JsonWriter writer) throws JsonIOException {\nTypeAdapter<?> adapter = getAdapter(TypeToken.get(typeOfSrc));\nboolean oldLenient = writer.isLenient();\nwriter.setLenient(true);\nboolean oldHtmlSafe = writer.isHtmlSafe();\nwriter.setHtmlSafe(htmlSafe);\nboolean oldSerializeNulls = writer.getSerializeNulls();\nwriter.setSerializeNulls(serializeNulls);\n((TypeAdapter<Object>) adapter).write(writer, src);\nwriter.setLenient(oldLenient);\nwriter.setHtmlSafe(oldHtmlSafe);\nwriter.setSerializeNulls(oldSerializeNulls);\n}\n}",
            "method_id": 11,
            "loc": 14
        },
        {
            "method_signature": "com.google.gson.internal.ConstructorConstructor:get(Lcom/google/gson/reflect/TypeToken;)Lcom/google/gson/internal/ObjectConstructor;",
            "method_body": "public <T> ObjectConstructor<T> get(TypeToken<T> typeToken) {\nfinal Type type = typeToken.getType();\nfinal Class<? super T> rawType = typeToken.getRawType();\nfinal InstanceCreator<T> typeCreator = (InstanceCreator<T>) instanceCreators.get(type);\nif (typeCreator != null) {\nfinal InstanceCreator<T> rawTypeCreator =\nif (rawTypeCreator != null) {\nObjectConstructor<T> defaultConstructor = newDefaultConstructor(rawType);\nif (defaultConstructor != null) {\nreturn defaultConstructor;\nObjectConstructor<T> defaultImplementation = newDefaultImplementationConstructor(type, rawType);\nif (defaultImplementation != null) {\nreturn newUnsafeAllocator(type, rawType);\n}",
            "method_id": 12,
            "loc": 14
        },
        {
            "method_signature": "com.google.gson.internal.Excluder:excludeField(Ljava/lang/reflect/Field;Z)Z",
            "method_body": "public boolean excludeField(Field field, boolean serialize) {\nif ((modifiers & field.getModifiers()) != 0) {\nif (version != Excluder.IGNORE_VERSIONS\nif (field.isSynthetic()) {\nif (requireExpose) {\nif (!serializeInnerClasses && isInnerClass(field.getType())) {\nif (isAnonymousOrLocal(field.getType())) {\nList<ExclusionStrategy> list = serialize ? serializationStrategies : deserializationStrategies;\nif (!list.isEmpty()) {\nreturn false;\n}",
            "method_id": 13,
            "loc": 11
        },
        {
            "method_signature": "com.google.gson.internal.bind.JsonAdapterAnnotationTypeAdapterFactory:getTypeAdapter(Lcom/google/gson/internal/ConstructorConstructor;Lcom/google/gson/Gson;Lcom/google/gson/reflect/TypeToken;Lcom/google/gson/annotations/JsonAdapter;)Lcom/google/gson/TypeAdapter;",
            "method_body": "static TypeAdapter<?> getTypeAdapter(ConstructorConstructor constructorConstructor, Gson gson,\nClass<?> value = annotation.value();\nif (TypeAdapter.class.isAssignableFrom(value)) {\n} else if (TypeAdapterFactory.class.isAssignableFrom(value)) {\nClass<TypeAdapterFactory> typeAdapterFactory = (Class<TypeAdapterFactory>) value;\ntypeAdapter = constructorConstructor.get(TypeToken.get(typeAdapterFactory))\n} else {\nif (typeAdapter != null) {\ntypeAdapter = typeAdapter.nullSafe();\nreturn typeAdapter;\n}",
            "method_id": 14,
            "loc": 11
        },
        {
            "method_signature": "com.google.gson.internal.ConstructorConstructor:newDefaultConstructor(Ljava/lang/Class;)Lcom/google/gson/internal/ObjectConstructor;",
            "method_body": "private <T> ObjectConstructor<T> newDefaultConstructor(Class<? super T> rawType) {\nfinal Constructor<? super T> constructor = rawType.getDeclaredConstructor();\nif (!constructor.isAccessible()) {\nconstructor.setAccessible(true);\nreturn new ObjectConstructor<T>() {\nObject[] args = null;\nreturn (T) constructor.newInstance(args);\n} catch (NoSuchMethodException e) {\nreturn null;\n}",
            "method_id": 15,
            "loc": 10
        },
        {
            "method_signature": "com.google.gson.stream.JsonWriter:close(IILjava/lang/String;)Lcom/google/gson/stream/JsonWriter;",
            "method_body": "private JsonWriter close(int empty, int nonempty, String closeBracket)\nint context = peek();\nif (context != nonempty && context != empty) {\nif (deferredName != null) {\nstackSize--;\nif (context == nonempty) {\nnewline();\nout.write(closeBracket);\nreturn this;\n}",
            "method_id": 16,
            "loc": 10
        },
        {
            "method_signature": "com.google.gson.internal.ConstructorConstructor$3:construct()Ljava/lang/Object;",
            "method_body": "private <T> ObjectConstructor<T> newDefaultConstructor(Class<? super T> rawType) {\nfinal Constructor<? super T> constructor = rawType.getDeclaredConstructor();\nif (!constructor.isAccessible()) {\nconstructor.setAccessible(true);\nreturn new ObjectConstructor<T>() {\nObject[] args = null;\nreturn (T) constructor.newInstance(args);\n} catch (NoSuchMethodException e) {\nreturn null;\n}",
            "method_id": 17,
            "loc": 10
        },
        {
            "method_signature": "com.google.gson.stream.JsonWriter:value(Ljava/lang/Number;)Lcom/google/gson/stream/JsonWriter;",
            "method_body": "public JsonWriter value(Number value) throws IOException {\nif (value == null) {\nwriteDeferredName();\nString string = value.toString();\nif (!lenient\nbeforeValue();\nout.append(string);\nreturn this;\n}",
            "method_id": 18,
            "loc": 9
        },
        {
            "method_signature": "com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper:write(Lcom/google/gson/stream/JsonWriter;Ljava/lang/Object;)V",
            "method_body": "public void write(JsonWriter out, T value) throws IOException {\nTypeAdapter chosen = delegate;\nType runtimeType = getRuntimeTypeIfMoreSpecific(type, value);\nif (runtimeType != type) {\nTypeAdapter runtimeTypeAdapter = context.getAdapter(TypeToken.get(runtimeType));\nif (!(runtimeTypeAdapter instanceof ReflectiveTypeAdapterFactory.Adapter)) {\nchosen = runtimeTypeAdapter;\nchosen.write(out, value);\n}",
            "method_id": 19,
            "loc": 9
        }
    ]
}