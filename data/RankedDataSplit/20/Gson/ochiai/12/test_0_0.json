{
    "bug_id": 12,
    "test_id": 0,
    "test_name": "com.google.gson.internal.bind.JsonTreeReaderTest.testSkipValue_filledJsonObject",
    "test_body": "public void testSkipValue_filledJsonObject() throws IOException {\nJsonObject jsonObject = new JsonObject();\nJsonArray jsonArray = new JsonArray();\njsonArray.add('c');\njsonArray.add(\"text\");\njsonObject.add(\"a\", jsonArray);\njsonObject.addProperty(\"b\", true);\njsonObject.addProperty(\"i\", 1);\njsonObject.add(\"n\", JsonNull.INSTANCE);\nJsonObject jsonObject2 = new JsonObject();\njsonObject2.addProperty(\"n\", 2L);\njsonObject.add(\"o\", jsonObject2);\njsonObject.addProperty(\"s\", \"text\");\nJsonTreeReader in = new JsonTreeReader(jsonObject);\nin.skipValue();\nassertEquals(JsonToken.END_DOCUMENT, in.peek());",
    "stack_trace": "java.lang.ArrayIndexOutOfBoundsException: -1\nat com.google.gson.internal.bind.JsonTreeReader.skipValue(JsonTreeReader.java:262)\nat com.google.gson.internal.bind.JsonTreeReaderTest.testSkipValue_filledJsonObject(JsonTreeReaderTest.java:47)",
    "covered_methods": [
        {
            "method_signature": "com.google.gson.JsonObject:addProperty(Ljava/lang/String;Ljava/lang/Boolean;)V",
            "method_body": "public void addProperty(String property, Boolean value) {\nadd(property, createJsonElement(value));\n}",
            "method_id": 0
        },
        {
            "method_signature": "com.google.gson.internal.bind.JsonTreeReader:skipValue()V",
            "method_body": "@Override public void skipValue() throws IOException {\nif (peek() == JsonToken.NAME) {\npopStack();\npathNames[stackSize - 1] = \"null\";\n}",
            "method_id": 1
        },
        {
            "method_signature": "com.google.gson.JsonArray:add(Ljava/lang/Character;)V",
            "method_body": "public void add(Character character) {\nelements.add(character == null ? JsonNull.INSTANCE : new JsonPrimitive(character));\n}",
            "method_id": 2
        },
        {
            "method_signature": "com.google.gson.JsonArray:add(Ljava/lang/String;)V",
            "method_body": "public void add(String string) {\nelements.add(string == null ? JsonNull.INSTANCE : new JsonPrimitive(string));\n}",
            "method_id": 3
        },
        {
            "method_signature": "com.google.gson.JsonObject:addProperty(Ljava/lang/String;Ljava/lang/Number;)V",
            "method_body": "public void addProperty(String property, Number value) {\nadd(property, createJsonElement(value));\n}",
            "method_id": 4
        },
        {
            "method_signature": "com.google.gson.JsonPrimitive:<init>(Ljava/lang/Character;)V",
            "method_body": "public JsonPrimitive(Character c) {\nsetValue(c);\n}",
            "method_id": 5
        },
        {
            "method_signature": "com.google.gson.internal.bind.JsonTreeReader:popStack()Ljava/lang/Object;",
            "method_body": "private Object popStack() {\nObject result = stack[--stackSize];\nstack[stackSize] = null;\nreturn result;\n}",
            "method_id": 6
        },
        {
            "method_signature": "com.google.gson.internal.bind.JsonTreeReader:<init>(Lcom/google/gson/JsonElement;)V",
            "method_body": "private static final Object SENTINEL_CLOSED = new Object();\nprivate Object[] stack = new Object[32];\nprivate int stackSize = 0;\nprivate String[] pathNames = new String[32];\nprivate int[] pathIndices = new int[32];\nsuper(UNREADABLE_READER);\npush(element);\n}",
            "method_id": 7
        },
        {
            "method_signature": "com.google.gson.internal.bind.JsonTreeReader:<clinit>()V",
            "method_body": "private static final Object SENTINEL_CLOSED = new Object();\nprivate Object[] stack = new Object[32];\nprivate int stackSize = 0;\nprivate String[] pathNames = new String[32];\nprivate int[] pathIndices = new int[32];\nsuper(UNREADABLE_READER);\npush(element);\n}",
            "method_id": 8
        },
        {
            "method_signature": "com.google.gson.internal.bind.JsonTreeReader:peek()Lcom/google/gson/stream/JsonToken;",
            "method_body": "@Override public JsonToken peek() throws IOException {\nif (stackSize == 0) {\nObject o = peekStack();\nif (o instanceof Iterator) {\n} else if (o instanceof JsonObject) {\nreturn JsonToken.BEGIN_OBJECT;\n}",
            "method_id": 9
        },
        {
            "method_signature": "com.google.gson.internal.bind.JsonTreeReader:peekStack()Ljava/lang/Object;",
            "method_body": "private Object peekStack() {\nreturn stack[stackSize - 1];\n}",
            "method_id": 10
        },
        {
            "method_signature": "com.google.gson.internal.bind.JsonTreeReader:push(Ljava/lang/Object;)V",
            "method_body": "private void push(Object newTop) {\nif (stackSize == stack.length) {\nstack[stackSize++] = newTop;\n}",
            "method_id": 11
        },
        {
            "method_signature": "com.google.gson.internal.LinkedTreeMap:rotateLeft(Lcom/google/gson/internal/LinkedTreeMap$Node;)V",
            "method_body": "private void rotateLeft(Node<K, V> root) {\nNode<K, V> left = root.left;\nNode<K, V> pivot = root.right;\nNode<K, V> pivotLeft = pivot.left;\nNode<K, V> pivotRight = pivot.right;\nroot.right = pivotLeft;\nif (pivotLeft != null) {\npivotLeft.parent = root;\nreplaceInParent(root, pivot);\npivot.left = root;\nroot.parent = pivot;\nroot.height = Math.max(left != null ? left.height : 0,\npivot.height = Math.max(root.height,\n}",
            "method_id": 12
        },
        {
            "method_signature": "com.google.gson.JsonObject:addProperty(Ljava/lang/String;Ljava/lang/String;)V",
            "method_body": "public void addProperty(String property, String value) {\nadd(property, createJsonElement(value));\n}",
            "method_id": 13
        },
        {
            "method_signature": "com.google.gson.JsonPrimitive:<init>(Ljava/lang/Object;)V",
            "method_body": "JsonPrimitive(Object primitive) {\nsetValue(primitive);\n}",
            "method_id": 14
        },
        {
            "method_signature": "com.google.gson.JsonObject:createJsonElement(Ljava/lang/Object;)Lcom/google/gson/JsonElement;",
            "method_body": "private JsonElement createJsonElement(Object value) {\nreturn value == null ? JsonNull.INSTANCE : new JsonPrimitive(value);\n}",
            "method_id": 15
        },
        {
            "method_signature": "com.google.gson.internal.LinkedTreeMap:replaceInParent(Lcom/google/gson/internal/LinkedTreeMap$Node;Lcom/google/gson/internal/LinkedTreeMap$Node;)V",
            "method_body": "private void replaceInParent(Node<K, V> node, Node<K, V> replacement) {\nNode<K, V> parent = node.parent;\nnode.parent = null;\nif (replacement != null) {\nreplacement.parent = parent;\nif (parent != null) {\nif (parent.left == node) {\nassert (parent.right == node);\nparent.right = replacement;\nroot = replacement;\n}",
            "method_id": 16
        },
        {
            "method_signature": "com.google.gson.JsonObject:<init>()V",
            "method_body": "private final LinkedTreeMap<String, JsonElement> members =\n}",
            "method_id": 17
        },
        {
            "method_signature": "com.google.gson.internal.LinkedTreeMap:<init>()V",
            "method_body": "public LinkedTreeMap() {\nthis((Comparator<? super K>) NATURAL_ORDER);\n}",
            "method_id": 18
        },
        {
            "method_signature": "com.google.gson.internal.LinkedTreeMap:<init>(Ljava/util/Comparator;)V",
            "method_body": "Comparator<? super K> comparator;\nint size = 0;\nint modCount = 0;\nfinal Node<K, V> header = new Node<K, V>();\nthis((Comparator<? super K>) NATURAL_ORDER);\n}",
            "method_id": 19
        }
    ]
}