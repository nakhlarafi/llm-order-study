{
    "bug_id": 10,
    "test_id": 0,
    "test_name": "com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testPrimitiveFieldAnnotationTakesPrecedenceOverDefault",
    "test_body": "public void testPrimitiveFieldAnnotationTakesPrecedenceOverDefault() {\nGson gson = new Gson();\nString json = gson.toJson(new GadgetWithPrimitivePart(42));\nassertEquals(\"{\\\"part\\\":\\\"42\\\"}\", json);\nGadgetWithPrimitivePart gadget = gson.fromJson(json, GadgetWithPrimitivePart.class);",
    "stack_trace": "junit.framework.ComparisonFailure: expected:<{\"part\":[\"42\"]}> but was:<{\"part\":[42]}>\nat junit.framework.Assert.assertEquals(Assert.java:100)\nat junit.framework.Assert.assertEquals(Assert.java:107)\nat junit.framework.TestCase.assertEquals(TestCase.java:269)\nat com.google.gson.functional.JsonAdapterAnnotationOnFieldsTest.testPrimitiveFieldAnnotationTakesPrecedenceOverDefault(JsonAdapterAnnotationOnFieldsTest.java:236)",
    "covered_methods": [
        {
            "method_signature": "com.google.gson.internal.bind.JsonAdapterAnnotationTypeAdapterFactory:getTypeAdapter(Lcom/google/gson/internal/ConstructorConstructor;Lcom/google/gson/Gson;Lcom/google/gson/reflect/TypeToken;Lcom/google/gson/annotations/JsonAdapter;)Lcom/google/gson/TypeAdapter;",
            "method_body": "static TypeAdapter<?> getTypeAdapter(ConstructorConstructor constructorConstructor, Gson gson,\nClass<?> value = annotation.value();\nif (TypeAdapter.class.isAssignableFrom(value)) {\n} else if (TypeAdapterFactory.class.isAssignableFrom(value)) {\nClass<TypeAdapterFactory> typeAdapterFactory = (Class<TypeAdapterFactory>) value;\ntypeAdapter = constructorConstructor.get(TypeToken.get(typeAdapterFactory))\n} else {\nif (typeAdapter != null) {\ntypeAdapter = typeAdapter.nullSafe();\nreturn typeAdapter;\n}",
            "method_id": 0
        },
        {
            "method_signature": "com.google.gson.internal.bind.TypeAdapters$12:write(Lcom/google/gson/stream/JsonWriter;Ljava/lang/Number;)V",
            "method_body": "public void write(JsonWriter out, Number value) throws IOException {\nout.value(value);\n}",
            "method_id": 1
        },
        {
            "method_signature": "com.google.gson.reflect.TypeToken:get(Ljava/lang/Class;)Lcom/google/gson/reflect/TypeToken;",
            "method_body": "public static <T> TypeToken<T> get(Class<T> type) {\nreturn new TypeToken<T>(type);\n}",
            "method_id": 2
        },
        {
            "method_signature": "com.google.gson.internal.ConstructorConstructor:newUnsafeAllocator(Ljava/lang/reflect/Type;Ljava/lang/Class;)Lcom/google/gson/internal/ObjectConstructor;",
            "method_body": "private <T> ObjectConstructor<T> newUnsafeAllocator(\nreturn new ObjectConstructor<T>() {\n}",
            "method_id": 3
        },
        {
            "method_signature": "com.google.gson.internal.UnsafeAllocator:create()Lcom/google/gson/internal/UnsafeAllocator;",
            "method_body": "public abstract <T> T newInstance(Class<T> c) throws Exception;\nClass<?> unsafeClass = Class.forName(\"sun.misc.Unsafe\");\nField f = unsafeClass.getDeclaredField(\"theUnsafe\");\nf.setAccessible(true);\nfinal Object unsafe = f.get(null);\nfinal Method allocateInstance = unsafeClass.getMethod(\"allocateInstance\", Class.class);\nreturn new UnsafeAllocator() {\n}",
            "method_id": 4
        },
        {
            "method_signature": "com.google.gson.internal.ConstructorConstructor$3:construct()Ljava/lang/Object;",
            "method_body": "private <T> ObjectConstructor<T> newDefaultConstructor(Class<? super T> rawType) {\nfinal Constructor<? super T> constructor = rawType.getDeclaredConstructor();\nif (!constructor.isAccessible()) {\nconstructor.setAccessible(true);\nreturn new ObjectConstructor<T>() {\nObject[] args = null;\nreturn (T) constructor.newInstance(args);\n} catch (NoSuchMethodException e) {\nreturn null;\n}",
            "method_id": 5
        },
        {
            "method_signature": "com.google.gson.stream.JsonWriter:value(Ljava/lang/Number;)Lcom/google/gson/stream/JsonWriter;",
            "method_body": "public JsonWriter value(Number value) throws IOException {\nif (value == null) {\nwriteDeferredName();\nString string = value.toString();\nif (!lenient\nbeforeValue();\nout.append(string);\nreturn this;\n}",
            "method_id": 6
        },
        {
            "method_signature": "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1:write(Lcom/google/gson/stream/JsonWriter;Ljava/lang/Object;)V",
            "method_body": "private ReflectiveTypeAdapterFactory.BoundField createBoundField(\nfinal boolean isPrimitive = Primitives.isPrimitive(fieldType.getRawType());\nJsonAdapter annotation = field.getAnnotation(JsonAdapter.class);\nTypeAdapter<?> mapped = null;\nif (annotation != null) {\nmapped = getTypeAdapter(constructorConstructor, context, fieldType, annotation);\nfinal boolean jsonAdapterPresent = mapped != null;\nif (mapped == null) mapped = context.getAdapter(fieldType);\nfinal TypeAdapter<?> typeAdapter = mapped;\nreturn new ReflectiveTypeAdapterFactory.BoundField(name, serialize, deserialize) {\nObject fieldValue = field.get(value);\nTypeAdapter t =\nt.write(writer, fieldValue);\n}\nif (!serialized) return false;\nObject fieldValue = field.get(value);\nreturn fieldValue != value; // avoid recursion for example for Throwable.cause\n}",
            "method_id": 7
        },
        {
            "method_signature": "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1:writeField(Ljava/lang/Object;)Z",
            "method_body": "private ReflectiveTypeAdapterFactory.BoundField createBoundField(\nfinal boolean isPrimitive = Primitives.isPrimitive(fieldType.getRawType());\nJsonAdapter annotation = field.getAnnotation(JsonAdapter.class);\nTypeAdapter<?> mapped = null;\nif (annotation != null) {\nmapped = getTypeAdapter(constructorConstructor, context, fieldType, annotation);\nfinal boolean jsonAdapterPresent = mapped != null;\nif (mapped == null) mapped = context.getAdapter(fieldType);\nfinal TypeAdapter<?> typeAdapter = mapped;\nreturn new ReflectiveTypeAdapterFactory.BoundField(name, serialize, deserialize) {\nObject fieldValue = field.get(value);\nTypeAdapter t =\nt.write(writer, fieldValue);\n}\nif (!serialized) return false;\nObject fieldValue = field.get(value);\nreturn fieldValue != value; // avoid recursion for example for Throwable.cause\n}",
            "method_id": 8
        },
        {
            "method_signature": "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter:write(Lcom/google/gson/stream/JsonWriter;Ljava/lang/Object;)V",
            "method_body": "abstract boolean writeField(Object value) throws IOException, IllegalAccessException;\nAdapter(ObjectConstructor<T> constructor, Map<String, BoundField> boundFields) {\nthis.constructor = constructor;\nthis.boundFields = boundFields;\n}\nif (value == null) {\nout.beginObject();\nfor (BoundField boundField : boundFields.values()) {\nif (boundField.writeField(value)) {\nout.name(boundField.name);\nboundField.write(out, value);\n}\n}\nout.endObject();\n}\n}",
            "method_id": 9
        },
        {
            "method_signature": "com.google.gson.stream.JsonWriter:beforeName()V",
            "method_body": "private void beforeName() throws IOException {\nint context = peek();\nif (context == NONEMPTY_OBJECT) { // first in object\n} else if (context != EMPTY_OBJECT) { // not in an object!\nnewline();\nreplaceTop(DANGLING_NAME);\n}",
            "method_id": 10
        },
        {
            "method_signature": "com.google.gson.stream.JsonWriter:name(Ljava/lang/String;)Lcom/google/gson/stream/JsonWriter;",
            "method_body": "public JsonWriter name(String name) throws IOException {\nif (name == null) {\nif (deferredName != null) {\nif (stackSize == 0) {\ndeferredName = name;\nreturn this;\n}",
            "method_id": 11
        },
        {
            "method_signature": "com.google.gson.stream.JsonWriter:endObject()Lcom/google/gson/stream/JsonWriter;",
            "method_body": "public JsonWriter beginObject() throws IOException {\nwriteDeferredName();\nreturn open(EMPTY_OBJECT, \"{\");\nreturn close(EMPTY_OBJECT, NONEMPTY_OBJECT, \"}\");\n}",
            "method_id": 12
        },
        {
            "method_signature": "com.google.gson.internal.ConstructorConstructor:newDefaultImplementationConstructor(Ljava/lang/reflect/Type;Ljava/lang/Class;)Lcom/google/gson/internal/ObjectConstructor;",
            "method_body": "private <T> ObjectConstructor<T> newDefaultImplementationConstructor(\nif (Collection.class.isAssignableFrom(rawType)) {\nif (Map.class.isAssignableFrom(rawType)) {\nreturn null;\n}",
            "method_id": 13
        },
        {
            "method_signature": "com.google.gson.stream.JsonWriter:beginObject()Lcom/google/gson/stream/JsonWriter;",
            "method_body": "public JsonWriter beginObject() throws IOException {\nwriteDeferredName();\nreturn open(EMPTY_OBJECT, \"{\");\nreturn close(EMPTY_OBJECT, NONEMPTY_OBJECT, \"}\");\n}",
            "method_id": 14
        },
        {
            "method_signature": "com.google.gson.FieldNamingPolicy$1:translateName(Ljava/lang/reflect/Field;)Ljava/lang/String;",
            "method_body": "@Override public String translateName(Field f) {\nreturn f.getName();\n}",
            "method_id": 15
        },
        {
            "method_signature": "com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper:write(Lcom/google/gson/stream/JsonWriter;Ljava/lang/Object;)V",
            "method_body": "public void write(JsonWriter out, T value) throws IOException {\nTypeAdapter chosen = delegate;\nType runtimeType = getRuntimeTypeIfMoreSpecific(type, value);\nif (runtimeType != type) {\nTypeAdapter runtimeTypeAdapter = context.getAdapter(TypeToken.get(runtimeType));\nif (!(runtimeTypeAdapter instanceof ReflectiveTypeAdapterFactory.Adapter)) {\nchosen = runtimeTypeAdapter;\nchosen.write(out, value);\n}",
            "method_id": 16
        },
        {
            "method_signature": "com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper:getRuntimeTypeIfMoreSpecific(Ljava/lang/reflect/Type;Ljava/lang/Object;)Ljava/lang/reflect/Type;",
            "method_body": "private Type getRuntimeTypeIfMoreSpecific(Type type, Object value) {\nif (value != null\ntype = value.getClass();\nreturn type;\n}",
            "method_id": 17
        },
        {
            "method_signature": "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory:getFieldNames(Ljava/lang/reflect/Field;)Ljava/util/List;",
            "method_body": "private List<String> getFieldNames(Field f) {\nSerializedName annotation = f.getAnnotation(SerializedName.class);\nif (annotation == null) {\nString name = fieldNamingPolicy.translateName(f);\nreturn Collections.singletonList(name);\n}",
            "method_id": 18
        },
        {
            "method_signature": "com.google.gson.internal.bind.ReflectiveTypeAdapterFactory:createBoundField(Lcom/google/gson/Gson;Ljava/lang/reflect/Field;Ljava/lang/String;Lcom/google/gson/reflect/TypeToken;ZZ)Lcom/google/gson/internal/bind/ReflectiveTypeAdapterFactory$BoundField;",
            "method_body": "private ReflectiveTypeAdapterFactory.BoundField createBoundField(\nfinal boolean isPrimitive = Primitives.isPrimitive(fieldType.getRawType());\nJsonAdapter annotation = field.getAnnotation(JsonAdapter.class);\nTypeAdapter<?> mapped = null;\nif (annotation != null) {\nmapped = getTypeAdapter(constructorConstructor, context, fieldType, annotation);\nfinal boolean jsonAdapterPresent = mapped != null;\nif (mapped == null) mapped = context.getAdapter(fieldType);\nfinal TypeAdapter<?> typeAdapter = mapped;\nreturn new ReflectiveTypeAdapterFactory.BoundField(name, serialize, deserialize) {\nObject fieldValue = field.get(value);\nTypeAdapter t =\nt.write(writer, fieldValue);\n}\nif (!serialized) return false;\nObject fieldValue = field.get(value);\nreturn fieldValue != value; // avoid recursion for example for Throwable.cause\n}",
            "method_id": 19
        }
    ]
}