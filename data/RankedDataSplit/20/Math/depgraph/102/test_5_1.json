{
    "bug_id": 102,
    "test_id": 5,
    "test_name": "org.apache.commons.math.stat.inference.ChiSquareTestTest.testChiSquare",
    "test_body": "46: public void testChiSquare() throws Exception {\n47: 48: // Target values computed using R version 1.8.1 \n49: // Some assembly required ;-)  \n50: //      Use sum((obs - exp)^2/exp) for the chi-square statistic and\n51: //      1 - pchisq(sum((obs - exp)^2/exp), length(obs) - 1) for the p-value\n52: 53: long[] observed = {10, 9, 11};\n54: double[] expected = {10, 10, 10};\n55: assertEquals(\"chi-square statistic\", 0.2,  testStatistic.chiSquare(expected, observed), 10E-12);\n56: assertEquals(\"chi-square p-value\", 0.904837418036, testStatistic.chiSquareTest(expected, observed), 1E-10);\n57: 58: long[] observed1 = { 500, 623, 72, 70, 31 };\n59: double[] expected1 = { 485, 541, 82, 61, 37 };\n60: assertEquals( \"chi-square test statistic\", 9.023307936427388, testStatistic.chiSquare(expected1, observed1), 1E-10);\n61: assertEquals(\"chi-square p-value\", 0.06051952647453607, testStatistic.chiSquareTest(expected1, observed1), 1E-9);",
    "stack_trace": "junit.framework.AssertionFailedError: chi-square test statistic expected:<9.023307936427388> but was:<16.413107036160778>\nat junit.framework.Assert.fail(Assert.java:57)\nat junit.framework.Assert.failNotEquals(Assert.java:329)\nat junit.framework.Assert.assertEquals(Assert.java:120)\nat junit.framework.TestCase.assertEquals(TestCase.java:279)\nat org.apache.commons.math.stat.inference.ChiSquareTestTest.testChiSquare(ChiSquareTestTest.java:60)",
    "covered_methods": [
        {
            "method_signature": "org.apache.commons.math.distribution.GammaDistributionImpl:setAlpha(D)V",
            "method_body": "public void setAlpha(double alpha) {\nif (alpha <= 0.0) {\nthis.alpha = alpha;\n}",
            "method_id": 20
        },
        {
            "method_signature": "org.apache.commons.math.distribution.GammaDistributionImpl:setBeta(D)V",
            "method_body": "public void setBeta(double beta) {\nif (beta <= 0.0) {\nthis.beta = beta;\n}",
            "method_id": 21
        },
        {
            "method_signature": "org.apache.commons.math.distribution.AbstractContinuousDistribution:<init>()V",
            "method_body": "protected AbstractContinuousDistribution() {\nsuper();\n}",
            "method_id": 22
        },
        {
            "method_signature": "org.apache.commons.math.distribution.AbstractDistribution:<init>()V",
            "method_body": "protected AbstractDistribution() {\nsuper();\n}",
            "method_id": 23
        }
    ]
}