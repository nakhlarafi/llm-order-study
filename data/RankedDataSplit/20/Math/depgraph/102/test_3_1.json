{
    "bug_id": 102,
    "test_id": 3,
    "test_name": "org.apache.commons.math.stat.inference.TestUtilsTest.testChiSquare",
    "test_body": "44: public void testChiSquare() throws Exception {\n45: 46: // Target values computed using R version 1.8.1 \n47: // Some assembly required ;-)  \n48: //      Use sum((obs - exp)^2/exp) for the chi-square statistic and\n49: //      1 - pchisq(sum((obs - exp)^2/exp), length(obs) - 1) for the p-value\n50: 51: long[] observed = {10, 9, 11};\n52: double[] expected = {10, 10, 10};\n53: assertEquals(\"chi-square statistic\", 0.2,  TestUtils.chiSquare(expected, observed), 10E-12);\n54: assertEquals(\"chi-square p-value\", 0.904837418036, TestUtils.chiSquareTest(expected, observed), 1E-10);\n55: 56: long[] observed1 = { 500, 623, 72, 70, 31 };\n57: double[] expected1 = { 485, 541, 82, 61, 37 };\n58: assertEquals( \"chi-square test statistic\", 9.023307936427388, TestUtils.chiSquare(expected1, observed1), 1E-10);\n59: assertEquals(\"chi-square p-value\", 0.06051952647453607, TestUtils.chiSquareTest(expected1, observed1), 1E-9);",
    "stack_trace": "junit.framework.AssertionFailedError: chi-square test statistic expected:<9.023307936427388> but was:<16.413107036160778>\nat junit.framework.Assert.fail(Assert.java:57)\nat junit.framework.Assert.failNotEquals(Assert.java:329)\nat junit.framework.Assert.assertEquals(Assert.java:120)\nat junit.framework.TestCase.assertEquals(TestCase.java:279)\nat org.apache.commons.math.stat.inference.TestUtilsTest.testChiSquare(TestUtilsTest.java:58)",
    "covered_methods": [
        {
            "method_signature": "org.apache.commons.math.stat.descriptive.rank.Max:<init>()V",
            "method_body": "public Max() {\nn = 0;\nvalue = Double.NaN;\n}",
            "method_id": 20
        },
        {
            "method_signature": "org.apache.commons.math.stat.descriptive.rank.Min:<init>()V",
            "method_body": "public Min() {\nn = 0;\nvalue = Double.NaN;\n}",
            "method_id": 21
        },
        {
            "method_signature": "org.apache.commons.math.stat.descriptive.summary.SumOfLogs:<init>()V",
            "method_body": "public SumOfLogs() {\nvalue = 0d;\nn = 0;\n}",
            "method_id": 22
        },
        {
            "method_signature": "org.apache.commons.math.stat.descriptive.summary.Sum:<init>()V",
            "method_body": "public Sum() {\nn = 0;\nvalue = Double.NaN;\n}",
            "method_id": 23
        },
        {
            "method_signature": "org.apache.commons.math.stat.descriptive.moment.Variance:<init>()V",
            "method_body": "public Variance() {\nmoment = new SecondMoment();\n}",
            "method_id": 24
        },
        {
            "method_signature": "org.apache.commons.math.stat.descriptive.moment.Mean:<init>()V",
            "method_body": "public Mean() {\nincMoment = true;\nmoment = new FirstMoment();\n}",
            "method_id": 25
        },
        {
            "method_signature": "org.apache.commons.math.stat.descriptive.moment.SecondMoment:<init>()V",
            "method_body": "public SecondMoment() {\nsuper();\nm2 = Double.NaN;\n}",
            "method_id": 26
        },
        {
            "method_signature": "org.apache.commons.math.stat.descriptive.moment.FirstMoment:<init>()V",
            "method_body": "public FirstMoment() {\nn = 0;\nm1 = Double.NaN;\ndev = Double.NaN;\nnDev = Double.NaN;\n}",
            "method_id": 27
        }
    ]
}