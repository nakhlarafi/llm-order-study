{
    "bug_id": 51,
    "test_id": 0,
    "test_name": "org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest.testIssue631",
    "test_body": "public void testIssue631() {\nfinal UnivariateRealFunction f = new UnivariateRealFunction() {\n@Override\npublic double value(double x) {\nreturn Math.exp(x) - Math.pow(Math.PI, 3.0);\n}\n};\n52: final UnivariateRealSolver solver = new RegulaFalsiSolver();\nfinal double root = solver.solve(3624, f, 1, 10);\nAssert.assertEquals(3.4341896575482003, root, 1e-15);",
    "stack_trace": "org.apache.commons.math.exception.TooManyEvaluationsException: illegal state: maximal count (3,624) exceeded: evaluations\nat org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver.incrementEvaluationCount(BaseAbstractUnivariateRealSolver.java:296)\nat org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver.computeObjectiveValue(BaseAbstractUnivariateRealSolver.java:153)\nat org.apache.commons.math.analysis.solvers.BaseSecantSolver.doSolve(BaseSecantSolver.java:161)\nat org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver.solve(BaseAbstractUnivariateRealSolver.java:190)\nat org.apache.commons.math.analysis.solvers.BaseSecantSolver.solve(BaseSecantSolver.java:117)\nat org.apache.commons.math.analysis.solvers.BaseSecantSolver.solve(BaseSecantSolver.java:124)\nat org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver.solve(BaseAbstractUnivariateRealSolver.java:195)\nat org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest.testIssue631(RegulaFalsiSolverTest.java:53)",
    "covered_methods": [
        {
            "method_signature": "org.apache.commons.math.util.Incrementor:incrementCount()V",
            "method_body": "public void incrementCount() {\nif (++count > maximalCount) {\nthrow new MaxCountExceededException(maximalCount);\n}",
            "method_id": 20
        },
        {
            "method_signature": "org.apache.commons.math.exception.util.ExceptionContext:addMessage(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V",
            "method_body": "public void addMessage(Localizable pattern,\nmsgPatterns.add(pattern);\nmsgArguments.add(ArgUtils.flatten(arguments));\n}",
            "method_id": 21
        },
        {
            "method_signature": "org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver:computeObjectiveValue(D)D",
            "method_body": "protected double computeObjectiveValue(double point)\nincrementEvaluationCount();\nreturn function.value(point);\n}",
            "method_id": 22
        },
        {
            "method_signature": "org.apache.commons.math.exception.MathIllegalStateException:getContext()Lorg/apache/commons/math/exception/util/ExceptionContext;",
            "method_body": "public ExceptionContext getContext() {\nreturn context;\n}",
            "method_id": 23
        },
        {
            "method_signature": "org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver:getAbsoluteAccuracy()D",
            "method_body": "public double getAbsoluteAccuracy() {\nreturn absoluteAccuracy;\n}",
            "method_id": 24
        },
        {
            "method_signature": "org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver:setup(ILorg/apache/commons/math/analysis/UnivariateRealFunction;DDD)V",
            "method_body": "protected void setup(int maxEval,\nMathUtils.checkNotNull(f);\nsearchMin = min;\nsearchMax = max;\nsearchStart = startValue;\nfunction = f;\nevaluations.setMaximalCount(maxEval);\nevaluations.resetCount();\n}",
            "method_id": 25
        },
        {
            "method_signature": "org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver:getRelativeAccuracy()D",
            "method_body": "public double getRelativeAccuracy() {\nreturn relativeAccuracy;\n}",
            "method_id": 26
        },
        {
            "method_signature": "org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver:getMin()D",
            "method_body": "public double getMin() {\nreturn searchMin;\n}",
            "method_id": 27
        },
        {
            "method_signature": "org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver:solve(ILorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D",
            "method_body": "public double solve(int maxEval, FUNC f, double min, double max) {\nreturn solve(maxEval, f, min, max, min + 0.5 * (max - min));\n}",
            "method_id": 28
        },
        {
            "method_signature": "org.apache.commons.math.util.Incrementor:setMaximalCount(I)V",
            "method_body": "public void setMaximalCount(int max) {\nmaximalCount = max;\n}",
            "method_id": 29
        },
        {
            "method_signature": "org.apache.commons.math.exception.util.ArgUtils:flatten([Ljava/lang/Object;)[Ljava/lang/Object;",
            "method_body": "public static Object[] flatten(Object[] array) {\nfinal List<Object> list = new ArrayList<Object>();\nif (array != null) {\nfor (Object o : array) {\nif (o instanceof Object[]) {\nfor (Object oR : flatten((Object[]) o)) {\nlist.add(o);\nreturn list.toArray();\n}",
            "method_id": 30
        },
        {
            "method_signature": "org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver:<init>(D)V",
            "method_body": "protected BaseAbstractUnivariateRealSolver(final double absoluteAccuracy) {\nthis(DEFAULT_RELATIVE_ACCURACY,\n}",
            "method_id": 31
        },
        {
            "method_signature": "org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils:verifyInterval(DD)V",
            "method_body": "public static void verifyInterval(final double lower,\nif (lower >= upper) {\n}",
            "method_id": 32
        },
        {
            "method_signature": "org.apache.commons.math.util.MathUtils:checkNotNull(Ljava/lang/Object;)V",
            "method_body": "public static void checkNotNull(Object o)\nif (o == null) {\n}",
            "method_id": 33
        },
        {
            "method_signature": "org.apache.commons.math.exception.TooManyEvaluationsException:<init>(Ljava/lang/Number;)V",
            "method_body": "public TooManyEvaluationsException(Number max) {\nsuper(max);\ngetContext().addMessage(LocalizedFormats.EVALUATIONS);\n}",
            "method_id": 34
        },
        {
            "method_signature": "org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver:verifyBracketing(DD)V",
            "method_body": "protected void verifyBracketing(final double lower,\nUnivariateRealSolverUtils.verifyBracketing(function, lower, upper);\n}",
            "method_id": 35
        },
        {
            "method_signature": "org.apache.commons.math.analysis.solvers.BaseSecantSolver:doSolve()D",
            "method_body": "protected final double doSolve() {\ndouble x0 = getMin();\ndouble x1 = getMax();\ndouble f0 = computeObjectiveValue(x0);\ndouble f1 = computeObjectiveValue(x1);\nif (f0 == 0.0) {\nif (f1 == 0.0) {\nverifyBracketing(x0, x1);\nfinal double ftol = getFunctionValueAccuracy();\nfinal double atol = getAbsoluteAccuracy();\nfinal double rtol = getRelativeAccuracy();\nboolean inverted = false;\nfinal double x = x1 - ((f1 * (x1 - x0)) / (f1 - f0));\nfinal double fx = computeObjectiveValue(x);\nif (fx == 0.0) {\nif (f1 * fx < 0) {\nx0 = x1;\nf0 = f1;\ninverted = !inverted;\nswitch (method) {\nx1 = x;\nf1 = fx;\nif (FastMath.abs(f1) <= ftol) {\nif (FastMath.abs(x1 - x0) < FastMath.max(rtol * FastMath.abs(x1),\n}\n}",
            "method_id": 36
        }
    ]
}