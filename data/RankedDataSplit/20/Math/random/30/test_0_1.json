{
    "bug_id": 30,
    "test_id": 0,
    "test_name": "org.apache.commons.math3.stat.inference.MannWhitneyUTestTest.testBigDataSet",
    "test_body": "public void testBigDataSet() throws Exception {\ndouble[] d1 = new double[1500];\ndouble[] d2 = new double[1500];\nfor (int i = 0; i < 1500; i++) {\nd1[i] = 2 * i;\nd2[i] = 2 * i + 1;\n}\ndouble result = testStatistic.mannWhitneyUTest(d1, d2);\nAssert.assertTrue(result > 0.1);\n}\n",
    "stack_trace": "junit.framework.AssertionFailedError\nat org.junit.Assert.fail(Assert.java:86)\nat org.junit.Assert.assertTrue(Assert.java:41)\nat org.junit.Assert.assertTrue(Assert.java:52)\nat org.apache.commons.math3.stat.inference.MannWhitneyUTestTest.testBigDataSet(MannWhitneyUTestTest.java:113)",
    "covered_methods": [
        {
            "method_signature": "org.apache.commons.math3.distribution.NormalDistribution:cumulativeProbability(D)D",
            "method_body": "public double cumulativeProbability(double x)  {\nfinal double dev = x - mean;\nif (FastMath.abs(dev) > 40 * standardDeviation) {\nreturn 0.5 * (1 + Erf.erf(dev / (standardDeviation * SQRT2)));\n}",
            "method_id": 20
        },
        {
            "method_signature": "org.apache.commons.math3.stat.inference.MannWhitneyUTest:calculateAsymptoticPValue(DII)D",
            "method_body": "private double calculateAsymptoticPValue(final double Umin,\nfinal int n1n2prod = n1 * n2;\nfinal double EU = n1n2prod / 2.0;\nfinal double VarU = n1n2prod * (n1 + n2 + 1) / 12.0;\nfinal double z = (Umin - EU) / FastMath.sqrt(VarU);\nfinal NormalDistribution standardNormal = new NormalDistribution(0, 1);\nreturn 2 * standardNormal.cumulativeProbability(z);\n}",
            "method_id": 21
        }
    ]
}