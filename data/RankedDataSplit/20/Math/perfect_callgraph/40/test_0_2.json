{
    "bug_id": 40,
    "test_id": 0,
    "test_name": "org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest.testIssue716",
    "test_body": "public void testIssue716() {\nBracketingNthOrderBrentSolver solver =\nnew BracketingNthOrderBrentSolver(1.0e-12, 1.0e-10, 1.0e-22, 5);\nUnivariateFunction sharpTurn = new UnivariateFunction() {\npublic double value(double x) {\nreturn (2 * x + 1) / (1.0e9 * (x + 1));\n}\n};\ndouble result = solver.solve(100, sharpTurn, -0.9999999, 30, 15, AllowedSolution.RIGHT_SIDE);\nAssert.assertEquals(0, sharpTurn.value(result), solver.getFunctionValueAccuracy());",
    "stack_trace": "org.apache.commons.math.exception.TooManyEvaluationsException: illegal state: maximal count (100) exceeded: evaluations\nat org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver.incrementEvaluationCount(BaseAbstractUnivariateRealSolver.java:296)\nat org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver.computeObjectiveValue(BaseAbstractUnivariateRealSolver.java:153)\nat org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver.doSolve(BracketingNthOrderBrentSolver.java:283)\nat org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver.solve(BaseAbstractUnivariateRealSolver.java:190)\nat org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver.solve(BracketingNthOrderBrentSolver.java:394)\nat org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolverTest.testIssue716(BracketingNthOrderBrentSolverTest.java:93)",
    "covered_methods": [
        {
            "method_signature": "org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver:solve(ILorg/apache/commons/math/analysis/UnivariateFunction;DDDLorg/apache/commons/math/analysis/solvers/AllowedSolution;)D",
            "method_body": "public double solve(int maxEval, UnivariateFunction f, double min,\nthis.allowed = allowedSolution;\nreturn super.solve(maxEval, f, min, max, startValue);\n}",
            "method_id": 40
        }
    ]
}