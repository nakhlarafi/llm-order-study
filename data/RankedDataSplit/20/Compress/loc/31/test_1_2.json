{
    "bug_id": 31,
    "test_id": 1,
    "test_name": "org.apache.commons.compress.archivers.TarTestCase.testCOMPRESS178",
    "test_body": "319: public void testCOMPRESS178() throws Exception {\n320: final File input = getFile(\"COMPRESS-178.tar\");\n321: final InputStream is = new FileInputStream(input);\n322: final ArchiveInputStream in = new ArchiveStreamFactory().createArchiveInputStream(\"tar\", is);\n323: try {\n324: in.getNextEntry();\n325: fail(\"Expected IOException\");\n326: } catch (IOException e) {\n327: Throwable t = e.getCause();\n328: assertTrue(\"Expected cause = IllegalArgumentException\", t instanceof IllegalArgumentException);\n329: }\n330: in.close();\n331: }\n",
    "stack_trace": "",
    "covered_methods": [
        {
            "method_signature": "org.apache.commons.compress.archivers.tar.TarArchiveInputStream:<init>(Ljava/io/InputStream;)V",
            "method_body": "public TarArchiveInputStream(InputStream is) {\nthis(is, TarConstants.DEFAULT_BLKSIZE, TarConstants.DEFAULT_RCDSIZE);\n}",
            "method_id": 40,
            "loc": 3
        },
        {
            "method_signature": "org.apache.commons.compress.archivers.tar.TarArchiveInputStream:<init>(Ljava/io/InputStream;II)V",
            "method_body": "public TarArchiveInputStream(InputStream is, int blockSize, int recordSize) {\nthis(is, blockSize, recordSize, null);\n}",
            "method_id": 41,
            "loc": 3
        },
        {
            "method_signature": "org.apache.commons.compress.archivers.tar.TarArchiveInputStream:isEOFRecord([B)Z",
            "method_body": "protected boolean isEOFRecord(byte[] record) {\nreturn record == null || ArchiveUtils.isArrayZero(record, recordSize);\n}",
            "method_id": 42,
            "loc": 3
        },
        {
            "method_signature": "org.apache.commons.compress.archivers.tar.TarArchiveInputStream:getNextEntry()Lorg/apache/commons/compress/archivers/ArchiveEntry;",
            "method_body": "public ArchiveEntry getNextEntry() throws IOException {\nreturn getNextTarEntry();\n}",
            "method_id": 43,
            "loc": 3
        }
    ]
}