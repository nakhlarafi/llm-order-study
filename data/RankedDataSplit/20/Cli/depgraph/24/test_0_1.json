{
    "bug_id": 24,
    "test_id": 0,
    "test_name": "org.apache.commons.cli.bug.BugCLI162Test.testLongLineChunkingIndentIgnored",
    "test_body": "264: public void testLongLineChunkingIndentIgnored() throws ParseException, IOException {\n265: Options options = new Options();\n266: options.addOption(\"x\", \"extralongarg\", false, \"This description is Long.\" );\n267: HelpFormatter formatter = new HelpFormatter();\n268: StringWriter sw = new StringWriter();\n269: formatter.printHelp(new PrintWriter(sw), 22, this.getClass().getName(), \"Header\", options, 0, 5, \"Footer\");\n270: String expected = \"usage:\\n\" +",
    "stack_trace": "java.lang.IllegalStateException: Total width is less than the width of the argument and indent - no room for the description\nat org.apache.commons.cli.HelpFormatter.renderWrappedText(HelpFormatter.java:825)\nat org.apache.commons.cli.HelpFormatter.renderOptions(HelpFormatter.java:787)\nat org.apache.commons.cli.HelpFormatter.printOptions(HelpFormatter.java:666)\nat org.apache.commons.cli.HelpFormatter.printHelp(HelpFormatter.java:489)\nat org.apache.commons.cli.HelpFormatter.printHelp(HelpFormatter.java:443)\nat org.apache.commons.cli.bug.BugCLI162Test.testLongLineChunkingIndentIgnored(BugCLI162Test.java:269)",
    "covered_methods": [
        {
            "method_signature": "org.apache.commons.cli.Options:helpOptions()Ljava/util/List;",
            "method_body": "List helpOptions()\nreturn new ArrayList(shortOpts.values());\n}",
            "method_id": 20
        },
        {
            "method_signature": "org.apache.commons.cli.HelpFormatter:getOptionComparator()Ljava/util/Comparator;",
            "method_body": "public Comparator getOptionComparator()\nreturn optionComparator;\n}",
            "method_id": 21
        },
        {
            "method_signature": "org.apache.commons.cli.Option:getDescription()Ljava/lang/String;",
            "method_body": "public String getDescription()\nreturn description;\n}",
            "method_id": 22
        },
        {
            "method_signature": "org.apache.commons.cli.HelpFormatter:<init>()V",
            "method_body": "public static final int DEFAULT_WIDTH = 74;\npublic int defaultWidth = DEFAULT_WIDTH;\npublic int defaultLeftPad = DEFAULT_LEFT_PAD;\npublic int defaultDescPad = DEFAULT_DESC_PAD;\npublic String defaultSyntaxPrefix = DEFAULT_SYNTAX_PREFIX;\npublic String defaultNewLine = System.getProperty(\"line.separator\");\npublic String defaultOptPrefix = DEFAULT_OPT_PREFIX;\npublic String defaultLongOptPrefix = DEFAULT_LONG_OPT_PREFIX;\npublic String defaultArgName = DEFAULT_ARG_NAME;\nprotected Comparator optionComparator = new OptionComparator();\n}",
            "method_id": 23
        },
        {
            "method_signature": "org.apache.commons.cli.OptionValidator:isValidOpt(C)Z",
            "method_body": "private static boolean isValidOpt(char c)\nreturn isValidChar(c) || c == ' ' || c == '?' || c == '@';\n}",
            "method_id": 24
        },
        {
            "method_signature": "org.apache.commons.cli.OptionValidator:isValidChar(C)Z",
            "method_body": "private static boolean isValidChar(char c)\nreturn Character.isJavaIdentifierPart(c);\n}",
            "method_id": 25
        },
        {
            "method_signature": "org.apache.commons.cli.OptionValidator:validateOption(Ljava/lang/String;)V",
            "method_body": "static void validateOption(String opt) throws IllegalArgumentException\nif (opt == null)\nelse if (opt.length() == 1)\nchar ch = opt.charAt(0);\nif (!isValidOpt(ch))\n}\n}",
            "method_id": 26
        }
    ]
}