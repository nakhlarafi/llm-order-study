{
    "bug_id": 15,
    "test_id": 1,
    "test_name": "org.apache.commons.cli2.bug.BugCLI158Test.testSingleOptionMaximumNumberOfArgument",
    "test_body": "public void testSingleOptionMaximumNumberOfArgument() throws Exception {\nString[] args = new String[]{\"-b\", \"1\", \"2\"};\nfinal ArgumentBuilder abuilder = new ArgumentBuilder();\nfinal DefaultOptionBuilder obuilder = new DefaultOptionBuilder();\nfinal GroupBuilder gbuilder = new GroupBuilder();\n89: DefaultOption bOption = obuilder.withShortName(\"b\")\n.withLongName(\"b\")\n.withArgument(abuilder.withName(\"b\")\n.withMinimum(2)\n.withMaximum(4)\n.withDefault(\"100\")\n.withDefault(\"1000\")\n.withDefault(\"10000\")\n.create())\n.create();\n100: Group options = gbuilder\n.withName(\"options\")\n.withOption(bOption)\n.create();\n105: Parser parser = new Parser();\nparser.setHelpTrigger(\"--help\");\nparser.setGroup(options);\nCommandLine cl = parser.parse(args);\nCommandLine cmd = cl;\nassertNotNull(cmd);\nList b = cmd.getValues(\"-b\");\nassertEquals(\"[1, 2, 10000]\", b + \"\");\n}\n",
    "stack_trace": "junit.framework.ComparisonFailure: expected:<[1, 2[, 10000]]> but was:<[1, 2[]]>\nat junit.framework.Assert.assertEquals(Assert.java:100)\nat junit.framework.Assert.assertEquals(Assert.java:107)\nat junit.framework.TestCase.assertEquals(TestCase.java:269)\nat org.apache.commons.cli2.bug.BugCLI158Test.testSingleOptionMaximumNumberOfArgument(BugCLI158Test.java:112)",
    "covered_methods": [
        {
            "method_signature": "org.apache.commons.cli2.commandline.WriteableCommandLineImpl:getValues(Lorg/apache/commons/cli2/Option;Ljava/util/List;)Ljava/util/List;",
            "method_body": "public List getValues(final Option option,\nList valueList = (List) values.get(option);\nif ((valueList == null) || valueList.isEmpty()) {\nif ((valueList == null) || valueList.isEmpty()) {\nreturn valueList == null ? Collections.EMPTY_LIST : valueList;\n}",
            "method_id": 0
        },
        {
            "method_signature": "org.apache.commons.cli2.builder.ArgumentBuilder:<init>()V",
            "method_body": "public ArgumentBuilder() {\nreset();\n}",
            "method_id": 1
        },
        {
            "method_signature": "org.apache.commons.cli2.builder.DefaultOptionBuilder:<init>()V",
            "method_body": "public DefaultOptionBuilder() {\nthis(DefaultOption.DEFAULT_SHORT_PREFIX, DefaultOption.DEFAULT_LONG_PREFIX,\n}",
            "method_id": 2
        },
        {
            "method_signature": "org.apache.commons.cli2.resource.ResourceHelper:getResourceHelper()Lorg/apache/commons/cli2/resource/ResourceHelper;",
            "method_body": "public static ResourceHelper getResourceHelper() {\nString bundleName = System.getProperty(PROP_LOCALE);\nif (helper == null || !helper.getBundleName().equals(bundleName)) {\nhelper = new ResourceHelper();\nreturn helper;\n}",
            "method_id": 3
        },
        {
            "method_signature": "org.apache.commons.cli2.resource.ResourceHelper:<init>()V",
            "method_body": "private ResourceHelper() {\nString bundleName = System.getProperty(PROP_LOCALE);\nif (bundleName == null) {\nbundleName = DEFAULT_BUNDLE;\nthis.prop = bundleName;\nint firstUnderscore = bundleName.indexOf('_');\nint secondUnderscore = bundleName.indexOf('_', firstUnderscore + 1);\nif (firstUnderscore != -1) {\nString language = bundleName.substring(firstUnderscore + 1, secondUnderscore);\nString country = bundleName.substring(secondUnderscore + 1);\nlocale = new Locale(language, country);\n}\nbundle = ResourceBundle.getBundle(bundleName, locale);\n}\n}",
            "method_id": 4
        },
        {
            "method_signature": "org.apache.commons.cli2.builder.DefaultOptionBuilder:reset()Lorg/apache/commons/cli2/builder/DefaultOptionBuilder;",
            "method_body": "public DefaultOptionBuilder reset() {\npreferredName = null;\ndescription = null;\naliases = new HashSet();\nburstAliases = new HashSet();\nrequired = false;\nargument = null;\nchildren = null;\nid = 0;\nreturn this;\n}",
            "method_id": 5
        },
        {
            "method_signature": "org.apache.commons.cli2.builder.GroupBuilder:<init>()V",
            "method_body": "public GroupBuilder() {\nreset();\n}",
            "method_id": 6
        },
        {
            "method_signature": "org.apache.commons.cli2.builder.GroupBuilder:reset()Lorg/apache/commons/cli2/builder/GroupBuilder;",
            "method_body": "public GroupBuilder reset() {\nname = null;\ndescription = null;\noptions = new ArrayList();\nminimum = 0;\nmaximum = Integer.MAX_VALUE;\nreturn this;\n}",
            "method_id": 7
        },
        {
            "method_signature": "org.apache.commons.cli2.builder.DefaultOptionBuilder:withShortName(Ljava/lang/String;)Lorg/apache/commons/cli2/builder/DefaultOptionBuilder;",
            "method_body": "public DefaultOptionBuilder withShortName(final String shortName) {\nfinal String name = shortPrefix + shortName;\nif (preferredName == null) {\npreferredName = name;\nif (burstEnabled && (name.length() == (shortPrefix.length() + 1))) {\nburstAliases.add(name);\nreturn this;\n}",
            "method_id": 8
        },
        {
            "method_signature": "org.apache.commons.cli2.builder.DefaultOptionBuilder:withLongName(Ljava/lang/String;)Lorg/apache/commons/cli2/builder/DefaultOptionBuilder;",
            "method_body": "public DefaultOptionBuilder withLongName(final String longName) {\nfinal String name = longPrefix + longName;\nif (preferredName == null) {\naliases.add(name);\nreturn this;\n}",
            "method_id": 9
        },
        {
            "method_signature": "org.apache.commons.cli2.builder.ArgumentBuilder:withName(Ljava/lang/String;)Lorg/apache/commons/cli2/builder/ArgumentBuilder;",
            "method_body": "public final ArgumentBuilder withName(final String newName) {\nif (newName == null) {\nif (\"\".equals(newName)) {\nthis.name = newName;\nreturn this;\n}",
            "method_id": 10
        },
        {
            "method_signature": "org.apache.commons.cli2.builder.ArgumentBuilder:withMinimum(I)Lorg/apache/commons/cli2/builder/ArgumentBuilder;",
            "method_body": "public final ArgumentBuilder withMinimum(final int newMinimum) {\nif (newMinimum < 0) {\nthis.minimum = newMinimum;\nreturn this;\n}",
            "method_id": 11
        },
        {
            "method_signature": "org.apache.commons.cli2.builder.ArgumentBuilder:withMaximum(I)Lorg/apache/commons/cli2/builder/ArgumentBuilder;",
            "method_body": "public final ArgumentBuilder withMaximum(final int newMaximum) {\nif (newMaximum < 0) {\nthis.maximum = newMaximum;\nreturn this;\n}",
            "method_id": 12
        },
        {
            "method_signature": "org.apache.commons.cli2.builder.ArgumentBuilder:withDefault(Ljava/lang/Object;)Lorg/apache/commons/cli2/builder/ArgumentBuilder;",
            "method_body": "public final ArgumentBuilder withDefault(final Object defaultValue) {\nif (defaultValue == null) {\nif (this.defaultValues == null) {\nthis.defaultValues = new ArrayList(1);\nthis.defaultValues.add(defaultValue);\nreturn this;\n}",
            "method_id": 13
        },
        {
            "method_signature": "org.apache.commons.cli2.builder.ArgumentBuilder:create()Lorg/apache/commons/cli2/Argument;",
            "method_body": "public final Argument create() {\nfinal Argument argument =\nreset();\nreturn argument;\n}",
            "method_id": 14
        },
        {
            "method_signature": "org.apache.commons.cli2.builder.DefaultOptionBuilder:create()Lorg/apache/commons/cli2/option/DefaultOption;",
            "method_body": "public DefaultOption create()\nif (preferredName == null) {\nfinal DefaultOption option =\nreset();\nreturn option;\n}",
            "method_id": 15
        },
        {
            "method_signature": "org.apache.commons.cli2.option.ParentImpl:getPrefixes()Ljava/util/Set;",
            "method_body": "public Set getPrefixes() {\nreturn (children == null) ? Collections.EMPTY_SET : children.getPrefixes();\n}",
            "method_id": 16
        },
        {
            "method_signature": "org.apache.commons.cli2.builder.GroupBuilder:create()Lorg/apache/commons/cli2/Group;",
            "method_body": "public Group create() {\nfinal GroupImpl group =\nreset();\nreturn group;\n}",
            "method_id": 17
        },
        {
            "method_signature": "org.apache.commons.cli2.commandline.Parser:<init>()V",
            "method_body": "private HelpFormatter helpFormatter = new HelpFormatter();\nprivate Option helpOption = null;\nprivate String helpTrigger = null;\nprivate Group group = null;\nfinal List argumentList = new LinkedList();\nfor (int i = 0; i < arguments.length; i++) {\nfinal String argument = arguments[i];\nargumentList.add(new String(argument));\nfinal WriteableCommandLine commandLine = new WriteableCommandLineImpl(group, argumentList);\ngroup.defaults(commandLine);\nfinal ListIterator iterator = argumentList.listIterator();\nObject previous = null;\nwhile (group.canProcess(commandLine, iterator)) {\nfinal Object next = iterator.next();\niterator.previous();\nif (next == previous) {\nprevious = next;\ngroup.process(commandLine, iterator);\n}\nif (iterator.hasNext()) {\nif (!commandLine.hasOption(helpOption) && !commandLine.hasOption(helpTrigger)) {\ngroup.validate(commandLine);\nreturn commandLine;\n}",
            "method_id": 18
        },
        {
            "method_signature": "org.apache.commons.cli2.util.HelpFormatter:<init>()V",
            "method_body": "public HelpFormatter() {\nthis(DEFAULT_GUTTER_LEFT, DEFAULT_GUTTER_CENTER, DEFAULT_GUTTER_RIGHT, DEFAULT_FULL_WIDTH);\n}",
            "method_id": 19
        }
    ]
}