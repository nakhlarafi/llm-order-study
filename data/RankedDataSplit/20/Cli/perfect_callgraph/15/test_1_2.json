{
    "bug_id": 15,
    "test_id": 1,
    "test_name": "org.apache.commons.cli2.bug.BugCLI158Test.testSingleOptionMaximumNumberOfArgument",
    "test_body": "public void testSingleOptionMaximumNumberOfArgument() throws Exception {\nString[] args = new String[]{\"-b\", \"1\", \"2\"};\nfinal ArgumentBuilder abuilder = new ArgumentBuilder();\nfinal DefaultOptionBuilder obuilder = new DefaultOptionBuilder();\nfinal GroupBuilder gbuilder = new GroupBuilder();\n89: DefaultOption bOption = obuilder.withShortName(\"b\")\n.withLongName(\"b\")\n.withArgument(abuilder.withName(\"b\")\n.withMinimum(2)\n.withMaximum(4)\n.withDefault(\"100\")\n.withDefault(\"1000\")\n.withDefault(\"10000\")\n.create())\n.create();\n100: Group options = gbuilder\n.withName(\"options\")\n.withOption(bOption)\n.create();\n105: Parser parser = new Parser();\nparser.setHelpTrigger(\"--help\");\nparser.setGroup(options);\nCommandLine cl = parser.parse(args);\nCommandLine cmd = cl;\nassertNotNull(cmd);\nList b = cmd.getValues(\"-b\");\nassertEquals(\"[1, 2, 10000]\", b + \"\");\n}\n",
    "stack_trace": "junit.framework.ComparisonFailure: expected:<[1, 2[, 10000]]> but was:<[1, 2[]]>\nat junit.framework.Assert.assertEquals(Assert.java:100)\nat junit.framework.Assert.assertEquals(Assert.java:107)\nat junit.framework.TestCase.assertEquals(TestCase.java:269)\nat org.apache.commons.cli2.bug.BugCLI158Test.testSingleOptionMaximumNumberOfArgument(BugCLI158Test.java:112)",
    "covered_methods": [
        {
            "method_signature": "org.apache.commons.cli2.option.ParentImpl:validate(Lorg/apache/commons/cli2/WriteableCommandLine;)V",
            "method_body": "public void validate(WriteableCommandLine commandLine)\nif (commandLine.hasOption(this)) {\nif (argument != null) {\nargument.validate(commandLine, this);\nif (children != null) {\n}",
            "method_id": 40
        },
        {
            "method_signature": "org.apache.commons.cli2.option.ParentImpl:getDescription()Ljava/lang/String;",
            "method_body": "public String getDescription() {\nreturn description;\n}",
            "method_id": 41
        },
        {
            "method_signature": "org.apache.commons.cli2.option.ParentImpl:handleInitialSeparator(Ljava/util/ListIterator;C)V",
            "method_body": "private void handleInitialSeparator(final ListIterator arguments,\nfinal String newArgument = (String) arguments.next();\nfinal int initialIndex = newArgument.indexOf(separator);\nif (initialIndex > 0) {\narguments.previous();\n}",
            "method_id": 42
        },
        {
            "method_signature": "org.apache.commons.cli2.option.ParentImpl:defaults(Lorg/apache/commons/cli2/WriteableCommandLine;)V",
            "method_body": "public void defaults(final WriteableCommandLine commandLine) {\nsuper.defaults(commandLine);\nif (argument != null) {\nargument.defaultValues(commandLine, this);\nif (children != null) {\n}",
            "method_id": 43
        },
        {
            "method_signature": "org.apache.commons.cli2.option.DefaultOption:<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;Ljava/lang/String;Ljava/util/Set;Ljava/util/Set;ZLorg/apache/commons/cli2/Argument;Lorg/apache/commons/cli2/Group;I)V",
            "method_body": "public DefaultOption(final String shortPrefix,\nsuper(argument, children, description, id, required);\nthis.shortPrefix = shortPrefix;\nthis.burstEnabled = burstEnabled;\nthis.burstLength = shortPrefix.length() + 1;\nthis.preferredName = preferredName;\nthis.aliases =\nthis.burstAliases =\nfinal Set newTriggers = new HashSet();\nnewTriggers.add(preferredName);\nnewTriggers.addAll(this.aliases);\nnewTriggers.addAll(this.burstAliases);\nthis.triggers = Collections.unmodifiableSet(newTriggers);\nfinal Set newPrefixes = new HashSet(super.getPrefixes());\nnewPrefixes.add(shortPrefix);\nnewPrefixes.add(longPrefix);\nthis.prefixes = Collections.unmodifiableSet(newPrefixes);\ncheckPrefixes(newPrefixes);\n}",
            "method_id": 44
        },
        {
            "method_signature": "org.apache.commons.cli2.option.DefaultOption:processParent(Lorg/apache/commons/cli2/WriteableCommandLine;Ljava/util/ListIterator;)V",
            "method_body": "public void processParent(WriteableCommandLine commandLine,\nfinal String argument = (String) arguments.next();\nif (triggers.contains(argument)) {\ncommandLine.addOption(this);\narguments.set(preferredName);\n}",
            "method_id": 45
        },
        {
            "method_signature": "org.apache.commons.cli2.option.DefaultOption:getTriggers()Ljava/util/Set;",
            "method_body": "public Set getTriggers() {\nreturn triggers;\n}",
            "method_id": 46
        },
        {
            "method_signature": "org.apache.commons.cli2.option.DefaultOption:getPrefixes()Ljava/util/Set;",
            "method_body": "public Set getPrefixes() {\nreturn prefixes;\n}",
            "method_id": 47
        },
        {
            "method_signature": "org.apache.commons.cli2.option.DefaultOption:validate(Lorg/apache/commons/cli2/WriteableCommandLine;)V",
            "method_body": "public void validate(WriteableCommandLine commandLine)\nif (isRequired() && !commandLine.hasOption(this)) {\nsuper.validate(commandLine);\n}",
            "method_id": 48
        },
        {
            "method_signature": "org.apache.commons.cli2.option.DefaultOption:getPreferredName()Ljava/lang/String;",
            "method_body": "public String getPreferredName() {\nreturn preferredName;\n}",
            "method_id": 49
        },
        {
            "method_signature": "org.apache.commons.cli2.builder.ArgumentBuilder:<clinit>()V",
            "method_body": "private final static ResourceHelper resources = ResourceHelper.getResourceHelper();\npublic ArgumentBuilder() {\nreset();\n}",
            "method_id": 50
        },
        {
            "method_signature": "org.apache.commons.cli2.builder.ArgumentBuilder:reset()Lorg/apache/commons/cli2/builder/ArgumentBuilder;",
            "method_body": "public final ArgumentBuilder reset() {\nname = \"arg\";\ndescription = null;\nminimum = 0;\nmaximum = Integer.MAX_VALUE;\ninitialSeparator = ArgumentImpl.DEFAULT_INITIAL_SEPARATOR;\nsubsequentSeparator = ArgumentImpl.DEFAULT_SUBSEQUENT_SEPARATOR;\nvalidator = null;\nconsumeRemaining = \"--\";\ndefaultValues = null;\nid = 0;\nreturn this;\n}",
            "method_id": 51
        },
        {
            "method_signature": "org.apache.commons.cli2.resource.ResourceHelper:getBundleName()Ljava/lang/String;",
            "method_body": "public String getBundleName() {\nreturn this.prop;\n}",
            "method_id": 52
        },
        {
            "method_signature": "org.apache.commons.cli2.option.ArgumentImpl:<init>(Ljava/lang/String;Ljava/lang/String;IICCLorg/apache/commons/cli2/validation/Validator;Ljava/lang/String;Ljava/util/List;I)V",
            "method_body": "public ArgumentImpl(final String name,\nsuper(id, false);\nthis.name = (name == null) ? \"arg\" : name;\nthis.description = description;\nthis.minimum = minimum;\nthis.maximum = maximum;\nthis.initialSeparator = initialSeparator;\nthis.subsequentSeparator = subsequentSeparator;\nthis.subsequentSplit = subsequentSeparator != NUL;\nthis.validator = validator;\nthis.consumeRemaining = consumeRemaining;\nthis.defaultValues = valueDefaults;\nif (minimum > maximum) {\nif ((valueDefaults != null) && (valueDefaults.size() > 0)) {\nif (valueDefaults.size() < minimum) {\nif (valueDefaults.size() > maximum) {\n}",
            "method_id": 53
        },
        {
            "method_signature": "org.apache.commons.cli2.option.ArgumentImpl:processValues(Lorg/apache/commons/cli2/WriteableCommandLine;Ljava/util/ListIterator;Lorg/apache/commons/cli2/Option;)V",
            "method_body": "public void processValues(final WriteableCommandLine commandLine,\nint argumentCount = commandLine.getUndefaultedValues(option).size();\nwhile (arguments.hasNext() && (argumentCount < maximum)) {\nfinal String allValuesQuoted = (String) arguments.next();\nfinal String allValues = stripBoundaryQuotes(allValuesQuoted);\nif (allValuesQuoted.equals(consumeRemaining)) {\nelse if (commandLine.looksLikeOption(allValuesQuoted)) {\nelse if (subsequentSplit) {\n++argumentCount;\ncommandLine.addValue(option, allValues);\n}\n}",
            "method_id": 54
        },
        {
            "method_signature": "org.apache.commons.cli2.option.ArgumentImpl:getInitialSeparator()C",
            "method_body": "public char getInitialSeparator() {\nreturn this.initialSeparator;\n}",
            "method_id": 55
        },
        {
            "method_signature": "org.apache.commons.cli2.option.ArgumentImpl:validate(Lorg/apache/commons/cli2/WriteableCommandLine;Lorg/apache/commons/cli2/Option;)V",
            "method_body": "public void validate(final WriteableCommandLine commandLine,\nfinal List values = commandLine.getValues(option);\nif (values.size() < minimum) {\nif (values.size() > maximum) {\nif (validator != null) {\n}",
            "method_id": 56
        },
        {
            "method_signature": "org.apache.commons.cli2.option.ArgumentImpl:stripBoundaryQuotes(Ljava/lang/String;)Ljava/lang/String;",
            "method_body": "public String stripBoundaryQuotes(String token) {\nif (!token.startsWith(\"\\\"\") || !token.endsWith(\"\\\"\")) {\nreturn token;\n}",
            "method_id": 57
        },
        {
            "method_signature": "org.apache.commons.cli2.option.ArgumentImpl:defaultValues(Lorg/apache/commons/cli2/WriteableCommandLine;Lorg/apache/commons/cli2/Option;)V",
            "method_body": "public void defaultValues(final WriteableCommandLine commandLine,\ncommandLine.setDefaultValues(option, defaultValues);\n}",
            "method_id": 58
        },
        {
            "method_signature": "org.apache.commons.cli2.builder.GroupBuilder:withName(Ljava/lang/String;)Lorg/apache/commons/cli2/builder/GroupBuilder;",
            "method_body": "public GroupBuilder withName(final String newName) {\nthis.name = newName;\nreturn this;\n}",
            "method_id": 59
        }
    ]
}