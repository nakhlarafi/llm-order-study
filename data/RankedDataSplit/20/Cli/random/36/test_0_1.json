{
    "bug_id": 36,
    "test_id": 0,
    "test_name": "org.apache.commons.cli.bug.BugCLI266Test.testOptionComparatorInsertedOrder",
    "test_body": "public void testOptionComparatorInsertedOrder() throws ParseException {\nCollection<Option> options = getOptions().getOptions();\nint i = 0;\nfor(Option o: options) {\nAssert.assertEquals(o.getOpt(), insertedOrder.get(i));\ni++;",
    "stack_trace": "junit.framework.AssertionFailedError: expected:<[p]> but was:<[x]>\nat org.junit.Assert.assertEquals(Assert.java:115)\nat org.junit.Assert.assertEquals(Assert.java:144)\nat org.apache.commons.cli.bug.BugCLI266Test.testOptionComparatorInsertedOrder(BugCLI266Test.java:39)",
    "covered_methods": [
        {
            "method_signature": "org.apache.commons.cli.OptionGroup:addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/OptionGroup;",
            "method_body": "public OptionGroup addOption(Option option)\noptionMap.put(option.getKey(), option);\nreturn this;\n}",
            "method_id": 20
        },
        {
            "method_signature": "org.apache.commons.cli.Option$Builder:required(Z)Lorg/apache/commons/cli/Option$Builder;",
            "method_body": "public Builder required(final boolean required)\nthis.required = required;\nreturn this;\n}",
            "method_id": 21
        },
        {
            "method_signature": "org.apache.commons.cli.Options:addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;",
            "method_body": "public Options addOption(Option opt)\n\n{\n}\n{\n{\n}\n\n}",
            "method_id": 22
        },
        {
            "method_signature": "org.apache.commons.cli.OptionValidator:isValidOpt(C)Z",
            "method_body": "private static boolean isValidOpt(char c)\nreturn isValidChar(c) || c == '?' || c == '@';\n}",
            "method_id": 23
        },
        {
            "method_signature": "org.apache.commons.cli.Option:getKey()Ljava/lang/String;",
            "method_body": "String getKey()\nreturn (opt == null) ? longOpt : opt;\n}",
            "method_id": 24
        },
        {
            "method_signature": "org.apache.commons.cli.Options:helpOptions()Ljava/util/List;",
            "method_body": "List<Option> helpOptions()\n}",
            "method_id": 25
        },
        {
            "method_signature": "org.apache.commons.cli.OptionGroup:isRequired()Z",
            "method_body": "public boolean isRequired()\nreturn required;\n}",
            "method_id": 26
        },
        {
            "method_signature": "org.apache.commons.cli.OptionValidator:isValidChar(C)Z",
            "method_body": "private static boolean isValidChar(char c)\nreturn Character.isJavaIdentifierPart(c);\n}",
            "method_id": 27
        },
        {
            "method_signature": "org.apache.commons.cli.Option:builder(Ljava/lang/String;)Lorg/apache/commons/cli/Option$Builder;",
            "method_body": "public static Builder builder(final String opt)\nreturn new Builder(opt);\n}",
            "method_id": 28
        }
    ]
}