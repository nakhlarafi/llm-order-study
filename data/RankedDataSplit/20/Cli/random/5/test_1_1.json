{
    "bug_id": 5,
    "test_id": 1,
    "test_name": "org.apache.commons.cli.bug.BugCLI133Test.testOrder",
    "test_body": "public void testOrder() throws ParseException {\nOption optionA = new Option(\"a\", \"first\");\nOptions opts = new Options();\nopts.addOption(optionA);\nPosixParser posixParser = new PosixParser();\nCommandLine line = posixParser.parse(opts, null);\nassertFalse(line.hasOption(null));\n}\n",
    "stack_trace": "java.lang.NullPointerException\nat org.apache.commons.cli.Util.stripLeadingHyphens(Util.java:36)\nat org.apache.commons.cli.CommandLine.resolveOption(CommandLine.java:166)\nat org.apache.commons.cli.CommandLine.hasOption(CommandLine.java:68)\nat org.apache.commons.cli.bug.BugCLI133Test.testOrder(BugCLI133Test.java:32)",
    "covered_methods": [
        {
            "method_signature": "org.apache.commons.cli.Parser:parse(Lorg/apache/commons/cli/Options;[Ljava/lang/String;)Lorg/apache/commons/cli/CommandLine;",
            "method_body": "public CommandLine parse(Options options, String[] arguments)\nreturn parse(options, arguments, null, false);\n}",
            "method_id": 20
        },
        {
            "method_signature": "org.apache.commons.cli.PosixParser:init()V",
            "method_body": "private void init()\neatTheRest = false;\ntokens.clear();\ncurrentOption = null;\n}",
            "method_id": 21
        },
        {
            "method_signature": "org.apache.commons.cli.Util:stripLeadingHyphens(Ljava/lang/String;)Ljava/lang/String;",
            "method_body": "static String stripLeadingHyphens(String str)\nif (str.startsWith(\"--\"))\nreturn str.substring(2, str.length());\nelse if (str.startsWith(\"-\"))\nreturn str.substring(1, str.length());\n}",
            "method_id": 22
        },
        {
            "method_signature": "org.apache.commons.cli.Options:addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/Options;",
            "method_body": "public Options addOption(Option opt)\nString key = opt.getKey();\nif (opt.hasLongOpt())\nif (opt.isRequired() )\nshortOpts.put(key, opt);\nreturn this;\n}",
            "method_id": 23
        }
    ]
}