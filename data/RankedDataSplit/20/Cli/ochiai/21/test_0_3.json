{
    "bug_id": 21,
    "test_id": 0,
    "test_name": "org.apache.commons.cli2.bug.BugCLI150Test.testNegativeNumber",
    "test_body": "public void testNegativeNumber() throws OptionException\n{\nfinal DefaultOptionBuilder oBuilder = new DefaultOptionBuilder();\nfinal ArgumentBuilder aBuilder = new ArgumentBuilder();\nfinal GroupBuilder gBuilder = new GroupBuilder();\n46: final Argument numArg = aBuilder.withValidator(\nNumberValidator.getNumberInstance()).withMinimum(1)\n.withMaximum(1).create();\nfinal Option numOpt = oBuilder.withLongName(\"num\").withArgument(numArg)\n.create();\nfinal Group options = gBuilder.withOption(numOpt).create();\n53: final Parser parser = new Parser();\nparser.setGroup(options);\n56: CommandLine cl = parser.parse(new String[] {\n\"--num\", \"-42\"",
    "stack_trace": "org.apache.commons.cli2.OptionException: Unexpected -42 while processing --num\nat org.apache.commons.cli2.commandline.Parser.parse(Parser.java:99)\nat org.apache.commons.cli2.bug.BugCLI150Test.testNegativeNumber(BugCLI150Test.java:56)",
    "covered_methods": [
        {
            "method_signature": "org.apache.commons.cli2.commandline.WriteableCommandLineImpl:<init>(Lorg/apache/commons/cli2/Option;Ljava/util/List;)V",
            "method_body": "private final Map optionToProperties = new HashMap();\nprivate final List options = new ArrayList();\nprivate final Map nameToOption = new HashMap();\nprivate final Map values = new HashMap();\nprivate final Map switches = new HashMap();\nprivate final Map defaultValues = new HashMap();\nprivate final Map defaultSwitches = new HashMap();\nfinal List arguments) {\nthis.prefixes = rootOption.getPrefixes();\nthis.normalised = arguments;\n}",
            "method_id": 60
        },
        {
            "method_signature": "org.apache.commons.cli2.option.OptionImpl:getId()I",
            "method_body": "public int getId() {\nreturn id;\n}",
            "method_id": 61
        },
        {
            "method_signature": "org.apache.commons.cli2.resource.ResourceHelper:getBundleName()Ljava/lang/String;",
            "method_body": "public String getBundleName() {\nreturn this.prop;\n}",
            "method_id": 62
        },
        {
            "method_signature": "org.apache.commons.cli2.builder.DefaultOptionBuilder:withLongName(Ljava/lang/String;)Lorg/apache/commons/cli2/builder/DefaultOptionBuilder;",
            "method_body": "public DefaultOptionBuilder withLongName(final String longName) {\nfinal String name = longPrefix + longName;\nif (preferredName == null) {\npreferredName = name;\nreturn this;\n}",
            "method_id": 63
        },
        {
            "method_signature": "org.apache.commons.cli2.builder.GroupBuilder:create()Lorg/apache/commons/cli2/Group;",
            "method_body": "public Group create() {\nfinal GroupImpl group =\nreset();\nreturn group;\n}",
            "method_id": 64
        },
        {
            "method_signature": "org.apache.commons.cli2.builder.GroupBuilder:withOption(Lorg/apache/commons/cli2/Option;)Lorg/apache/commons/cli2/builder/GroupBuilder;",
            "method_body": "public GroupBuilder withOption(final Option option) {\nthis.options.add(option);\nreturn this;\n}",
            "method_id": 65
        },
        {
            "method_signature": "org.apache.commons.cli2.builder.GroupBuilder:<init>()V",
            "method_body": "public GroupBuilder() {\nreset();\n}",
            "method_id": 66
        },
        {
            "method_signature": "org.apache.commons.cli2.builder.GroupBuilder:reset()Lorg/apache/commons/cli2/builder/GroupBuilder;",
            "method_body": "public GroupBuilder reset() {\nname = null;\ndescription = null;\noptions = new ArrayList();\nminimum = 0;\nmaximum = Integer.MAX_VALUE;\nrequired = true;\nreturn this;\n}",
            "method_id": 67
        },
        {
            "method_signature": "org.apache.commons.cli2.builder.DefaultOptionBuilder:create()Lorg/apache/commons/cli2/option/DefaultOption;",
            "method_body": "public DefaultOption create()\nif (preferredName == null) {\nfinal DefaultOption option =\nreset();\nreturn option;\n}",
            "method_id": 68
        },
        {
            "method_signature": "org.apache.commons.cli2.builder.DefaultOptionBuilder:<init>()V",
            "method_body": "public DefaultOptionBuilder() {\nthis(DefaultOption.DEFAULT_SHORT_PREFIX, DefaultOption.DEFAULT_LONG_PREFIX,\n}",
            "method_id": 69
        },
        {
            "method_signature": "org.apache.commons.cli2.builder.DefaultOptionBuilder:<init>(Ljava/lang/String;Ljava/lang/String;Z)V",
            "method_body": "public DefaultOptionBuilder(final String shortPrefix,\nthrows IllegalArgumentException {\nif ((shortPrefix == null) || (shortPrefix.length() == 0)) {\nif ((longPrefix == null) || (longPrefix.length() == 0)) {\nthis.shortPrefix = shortPrefix;\nthis.longPrefix = longPrefix;\nthis.burstEnabled = burstEnabled;\nreset();\n}",
            "method_id": 70
        },
        {
            "method_signature": "org.apache.commons.cli2.builder.DefaultOptionBuilder:reset()Lorg/apache/commons/cli2/builder/DefaultOptionBuilder;",
            "method_body": "public DefaultOptionBuilder reset() {\npreferredName = null;\ndescription = null;\naliases = new HashSet();\nburstAliases = new HashSet();\nrequired = false;\nargument = null;\nchildren = null;\nid = 0;\nreturn this;\n}",
            "method_id": 71
        },
        {
            "method_signature": "org.apache.commons.cli2.option.DefaultOption:getPrefixes()Ljava/util/Set;",
            "method_body": "public Set getPrefixes() {\nreturn prefixes;\n}",
            "method_id": 72
        },
        {
            "method_signature": "org.apache.commons.cli2.option.DefaultOption:<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;Ljava/lang/String;Ljava/util/Set;Ljava/util/Set;ZLorg/apache/commons/cli2/Argument;Lorg/apache/commons/cli2/Group;I)V",
            "method_body": "public DefaultOption(final String shortPrefix,\nsuper(argument, children, description, id, required);\nthis.shortPrefix = shortPrefix;\nthis.burstEnabled = burstEnabled;\nthis.burstLength = shortPrefix.length() + 1;\nthis.preferredName = preferredName;\nthis.aliases =\nthis.burstAliases =\nfinal Set newTriggers = new HashSet();\nnewTriggers.add(preferredName);\nnewTriggers.addAll(this.aliases);\nnewTriggers.addAll(this.burstAliases);\nthis.triggers = Collections.unmodifiableSet(newTriggers);\nfinal Set newPrefixes = new HashSet(super.getPrefixes());\nnewPrefixes.add(shortPrefix);\nnewPrefixes.add(longPrefix);\nthis.prefixes = Collections.unmodifiableSet(newPrefixes);\ncheckPrefixes(newPrefixes);\n}",
            "method_id": 73
        },
        {
            "method_signature": "org.apache.commons.cli2.option.DefaultOption:getTriggers()Ljava/util/Set;",
            "method_body": "public Set getTriggers() {\nreturn triggers;\n}",
            "method_id": 74
        },
        {
            "method_signature": "org.apache.commons.cli2.option.DefaultOption:getPreferredName()Ljava/lang/String;",
            "method_body": "public String getPreferredName() {\nreturn preferredName;\n}",
            "method_id": 75
        },
        {
            "method_signature": "org.apache.commons.cli2.option.OptionImpl:setParent(Lorg/apache/commons/cli2/Option;)V",
            "method_body": "public void setParent(Option parent) {\nthis.parent = parent;\n}",
            "method_id": 76
        },
        {
            "method_signature": "org.apache.commons.cli2.option.GroupImpl:<init>(Ljava/util/List;Ljava/lang/String;Ljava/lang/String;IIZ)V",
            "method_body": "public GroupImpl(final List options,\nsuper(0, required);\nthis.name = name;\nthis.description = description;\nthis.minimum = minimum;\nthis.maximum = maximum;\nthis.options = Collections.unmodifiableList(options);\nfinal List newAnonymous = new ArrayList();\nfinal SortedMap newOptionMap = new TreeMap(ReverseStringComparator.getInstance());\nfinal Set newPrefixes = new HashSet();\nfor (final Iterator i = options.iterator(); i.hasNext();) {\nfinal Option option = (Option) i.next();\noption.setParent(this);\nif (option instanceof Argument) {\nfinal Set triggers = option.getTriggers();\nfor (Iterator j = triggers.iterator(); j.hasNext();) {\nnewOptionMap.put(j.next(), option);\nnewPrefixes.addAll(option.getPrefixes());\n}\nthis.anonymous = Collections.unmodifiableList(newAnonymous);\nthis.optionMap = Collections.unmodifiableSortedMap(newOptionMap);\nthis.prefixes = Collections.unmodifiableSet(newPrefixes);\n}",
            "method_id": 77
        },
        {
            "method_signature": "org.apache.commons.cli2.option.OptionImpl:checkPrefixes(Ljava/util/Set;)V",
            "method_body": "protected void checkPrefixes(final Set prefixes) {\nif (prefixes.isEmpty()) {\ncheckPrefix(prefixes, getPreferredName());\nthis.getTriggers();\nfor (final Iterator i = getTriggers().iterator(); i.hasNext();) {\ncheckPrefix(prefixes, (String) i.next());\n}",
            "method_id": 78
        },
        {
            "method_signature": "org.apache.commons.cli2.option.OptionImpl:checkPrefix(Ljava/util/Set;Ljava/lang/String;)V",
            "method_body": "private void checkPrefix(final Set prefixes,\nfor (final Iterator i = prefixes.iterator(); i.hasNext();) {\nString prefix = (String) i.next();\nif (trigger.startsWith(prefix)) {\nreturn;\n}",
            "method_id": 79
        }
    ]
}