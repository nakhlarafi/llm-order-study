{
    "bug_id": 19,
    "test_id": 0,
    "test_name": "org.apache.commons.cli.PosixParserTest.testUnrecognizedOption2",
    "test_body": "public void testUnrecognizedOption2() throws Exception\n{\nString[] args = new String[] { \"-z\", \"-abtoast\", \"foo\", \"bar\" };\n107: try\n{\nparser.parse(options, args);\nfail(\"UnrecognizedOptionException wasn't thrown\");\n}",
    "stack_trace": "junit.framework.AssertionFailedError: UnrecognizedOptionException wasn't thrown\nat junit.framework.Assert.fail(Assert.java:57)\nat junit.framework.TestCase.fail(TestCase.java:227)\nat org.apache.commons.cli.PosixParserTest.testUnrecognizedOption2(PosixParserTest.java:110)",
    "covered_methods": [
        {
            "method_signature": "org.apache.commons.cli.Parser:parse(Lorg/apache/commons/cli/Options;[Ljava/lang/String;Ljava/util/Properties;Z)Lorg/apache/commons/cli/CommandLine;",
            "method_body": "public CommandLine parse(Options options, String[] arguments,\nfor (Iterator it = options.helpOptions().iterator(); it.hasNext();) {\nOption opt = (Option) it.next();\nopt.clearValues();\n}\nsetOptions(options);\ncmd = new CommandLine();\nboolean eatTheRest = false;\nif (arguments == null)\nList tokenList = Arrays.asList(flatten(getOptions(),\nListIterator iterator = tokenList.listIterator();\nwhile (iterator.hasNext())\nString t = (String) iterator.next();\nif (\"--\".equals(t))\nelse if (\"-\".equals(t))\nelse if (t.startsWith(\"-\"))\nif (stopAtNonOption && !getOptions().hasOption(t))\nprocessOption(t, iterator);\ncmd.addArg(t);\nif (stopAtNonOption)\nif (eatTheRest)\n}\nprocessProperties(properties);\ncheckRequiredOptions();\nreturn cmd;\n}",
            "method_id": 40
        },
        {
            "method_signature": "org.apache.commons.cli.CommandLine:<init>()V",
            "method_body": "private static final long serialVersionUID = 1L;\nprivate List args = new LinkedList();\nprivate List options = new ArrayList();\n{\n}",
            "method_id": 41
        },
        {
            "method_signature": "org.apache.commons.cli.Option:clearValues()V",
            "method_body": "void clearValues() {\nthis.values.clear();\n}",
            "method_id": 42
        },
        {
            "method_signature": "org.apache.commons.cli.Util:stripLeadingHyphens(Ljava/lang/String;)Ljava/lang/String;",
            "method_body": "static String stripLeadingHyphens(String str)\nif (str == null) {\nif (str.startsWith(\"--\"))\nelse if (str.startsWith(\"-\"))\nreturn str.substring(1, str.length());\nreturn str;\n}",
            "method_id": 43
        },
        {
            "method_signature": "org.apache.commons.cli.Options:getOptionGroup(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/OptionGroup;",
            "method_body": "public OptionGroup getOptionGroup(Option opt)\nreturn (OptionGroup) optionGroups.get(opt.getKey());\n}",
            "method_id": 44
        }
    ]
}