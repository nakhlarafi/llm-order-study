{
    "bug_id": 14,
    "test_id": 0,
    "test_name": "org.apache.commons.cli2.bug.BugCLI144Test.testFileValidator",
    "test_body": "public void testFileValidator() {\nfinal DefaultOptionBuilder obuilder = new DefaultOptionBuilder();\nfinal ArgumentBuilder abuilder = new ArgumentBuilder();\nfinal GroupBuilder gbuilder = new GroupBuilder();\nDefaultOption fileNameOption = obuilder.withShortName(\"f\")\n.withLongName(\"file-name\").withRequired(true).withDescription(\n\"name of an existing file\").withArgument(\nabuilder.withName(\"file-name\").withValidator(\nFileValidator.getExistingFileInstance())\n.create()).create();\nGroup options = gbuilder.withName(\"options\").withOption(fileNameOption)\n.create();\nParser parser = new Parser();\nparser.setHelpTrigger(\"--help\");\nparser.setGroup(options);\n60: final String fileName = \"src/test/org/apache/commons/cli2/bug/BugCLI144Test.java\";\nCommandLine cl = parser\n.parseAndHelp(new String[] { \"--file-name\", fileName });",
    "stack_trace": "java.lang.ClassCastException: java.io.File cannot be cast to java.lang.String\nat org.apache.commons.cli2.validation.FileValidator.validate(FileValidator.java:123)\nat org.apache.commons.cli2.option.ArgumentImpl.validate(ArgumentImpl.java:251)\nat org.apache.commons.cli2.option.ParentImpl.validate(ParentImpl.java:124)\nat org.apache.commons.cli2.option.DefaultOption.validate(DefaultOption.java:176)\nat org.apache.commons.cli2.option.GroupImpl.validate(GroupImpl.java:262)\nat org.apache.commons.cli2.commandline.Parser.parse(Parser.java:104)\nat org.apache.commons.cli2.commandline.Parser.parseAndHelp(Parser.java:124)\nat org.apache.commons.cli2.bug.BugCLI144Test.testFileValidator(BugCLI144Test.java:61)",
    "covered_methods": [
        {
            "method_signature": "org.apache.commons.cli2.commandline.CommandLineImpl:hasOption(Ljava/lang/String;)Z",
            "method_body": "public final boolean hasOption(final String trigger) {\nreturn hasOption(getOption(trigger));\n}",
            "method_id": 40
        },
        {
            "method_signature": "org.apache.commons.cli2.builder.DefaultOptionBuilder:withShortName(Ljava/lang/String;)Lorg/apache/commons/cli2/builder/DefaultOptionBuilder;",
            "method_body": "public DefaultOptionBuilder withShortName(final String shortName) {\nfinal String name = shortPrefix + shortName;\nif (preferredName == null) {\npreferredName = name;\nif (burstEnabled && (name.length() == (shortPrefix.length() + 1))) {\nburstAliases.add(name);\nreturn this;\n}",
            "method_id": 41
        },
        {
            "method_signature": "org.apache.commons.cli2.commandline.WriteableCommandLineImpl:hasOption(Lorg/apache/commons/cli2/Option;)Z",
            "method_body": "public boolean hasOption(final Option option) {\nfinal boolean present = options.contains(option);\nreturn present;\n}",
            "method_id": 42
        },
        {
            "method_signature": "org.apache.commons.cli2.builder.ArgumentBuilder:create()Lorg/apache/commons/cli2/Argument;",
            "method_body": "public final Argument create() {\nfinal Argument argument =\nreset();\nreturn argument;\n}",
            "method_id": 43
        },
        {
            "method_signature": "org.apache.commons.cli2.option.OptionImpl:isRequired()Z",
            "method_body": "public boolean isRequired() {\nreturn required;\n}",
            "method_id": 44
        },
        {
            "method_signature": "org.apache.commons.cli2.commandline.WriteableCommandLineImpl:getValues(Lorg/apache/commons/cli2/Option;Ljava/util/List;)Ljava/util/List;",
            "method_body": "public List getValues(final Option option,\nList valueList = (List) values.get(option);\nif ((valueList == null) || valueList.isEmpty()) {\nif ((valueList == null) || valueList.isEmpty()) {\nif (valueList == null) {\nreturn valueList;\n}",
            "method_id": 45
        },
        {
            "method_signature": "org.apache.commons.cli2.commandline.WriteableCommandLineImpl:getOption(Ljava/lang/String;)Lorg/apache/commons/cli2/Option;",
            "method_body": "public Option getOption(final String trigger) {\nreturn (Option) nameToOption.get(trigger);\n}",
            "method_id": 46
        },
        {
            "method_signature": "org.apache.commons.cli2.commandline.CommandLineImpl:getValues(Lorg/apache/commons/cli2/Option;)Ljava/util/List;",
            "method_body": "public final List getValues(final Option option) {\nreturn getValues(option, Collections.EMPTY_LIST);\n}",
            "method_id": 47
        },
        {
            "method_signature": "org.apache.commons.cli2.builder.ArgumentBuilder:<init>()V",
            "method_body": "public ArgumentBuilder() {\nreset();\n}",
            "method_id": 48
        },
        {
            "method_signature": "org.apache.commons.cli2.builder.ArgumentBuilder:<clinit>()V",
            "method_body": "private final static ResourceHelper resources = ResourceHelper.getResourceHelper();\npublic ArgumentBuilder() {\nreset();\n}",
            "method_id": 49
        },
        {
            "method_signature": "org.apache.commons.cli2.builder.ArgumentBuilder:reset()Lorg/apache/commons/cli2/builder/ArgumentBuilder;",
            "method_body": "public final ArgumentBuilder reset() {\nname = \"arg\";\ndescription = null;\nminimum = 0;\nmaximum = Integer.MAX_VALUE;\ninitialSeparator = ArgumentImpl.DEFAULT_INITIAL_SEPARATOR;\nsubsequentSeparator = ArgumentImpl.DEFAULT_SUBSEQUENT_SEPARATOR;\nvalidator = null;\nconsumeRemaining = \"--\";\ndefaultValues = null;\nid = 0;\nreturn this;\n}",
            "method_id": 50
        },
        {
            "method_signature": "org.apache.commons.cli2.commandline.WriteableCommandLineImpl:addValue(Lorg/apache/commons/cli2/Option;Ljava/lang/Object;)V",
            "method_body": "public void addValue(final Option option,\nif (option instanceof Argument) {\nList valueList = (List) values.get(option);\nif (valueList == null) {\nvalueList = new ArrayList();\nvalues.put(option, valueList);\nvalueList.add(value);\n}",
            "method_id": 51
        },
        {
            "method_signature": "org.apache.commons.cli2.DisplaySetting:<init>(Ljava/lang/String;)V",
            "method_body": "private DisplaySetting(final String name) {\nthis.name = name;\nthis.hashCode = name.hashCode();\nall.add(this);\n}",
            "method_id": 52
        },
        {
            "method_signature": "org.apache.commons.cli2.DisplaySetting:<clinit>()V",
            "method_body": "private static final Set all = new HashSet();\npublic static final Set ALL = Collections.unmodifiableSet(all);\npublic static final Set NONE = Collections.EMPTY_SET;\npublic static final DisplaySetting DISPLAY_ALIASES =\npublic static final DisplaySetting DISPLAY_OPTIONAL =\npublic static final DisplaySetting DISPLAY_PROPERTY_OPTION =\npublic static final DisplaySetting DISPLAY_SWITCH_ENABLED =\npublic static final DisplaySetting DISPLAY_SWITCH_DISABLED =\npublic static final DisplaySetting DISPLAY_GROUP_NAME =\npublic static final DisplaySetting DISPLAY_GROUP_EXPANDED =\npublic static final DisplaySetting DISPLAY_GROUP_ARGUMENT =\npublic static final DisplaySetting DISPLAY_GROUP_OUTER =\npublic static final DisplaySetting DISPLAY_ARGUMENT_NUMBERED =\npublic static final DisplaySetting DISPLAY_ARGUMENT_BRACKETED =\npublic static final DisplaySetting DISPLAY_PARENT_ARGUMENT =\npublic static final DisplaySetting DISPLAY_PARENT_CHILDREN =\nprivate DisplaySetting(final String name) {\nthis.name = name;\nthis.hashCode = name.hashCode();\nall.add(this);\n}",
            "method_id": 53
        },
        {
            "method_signature": "org.apache.commons.cli2.DisplaySetting:hashCode()I",
            "method_body": "public int hashCode() {\nreturn hashCode;\n}",
            "method_id": 54
        },
        {
            "method_signature": "org.apache.commons.cli2.option.OptionImpl:equals(Ljava/lang/Object;Ljava/lang/Object;)Z",
            "method_body": "private boolean equals(Object left,\nif ((left == null) && (right == null)) {\n} else if ((left == null) || (right == null)) {\nreturn left.equals(right);\n}",
            "method_id": 55
        },
        {
            "method_signature": "org.apache.commons.cli2.option.GroupImpl:getPrefixes()Ljava/util/Set;",
            "method_body": "public Set getPrefixes() {\nreturn prefixes;\n}",
            "method_id": 56
        },
        {
            "method_signature": "org.apache.commons.cli2.option.OptionImpl:equals(Ljava/lang/Object;)Z",
            "method_body": "public boolean equals(final Object thatObj) {\nif (thatObj instanceof OptionImpl) {\nfinal OptionImpl that = (OptionImpl) thatObj;\nreturn (getId() == that.getId()) &&\n}",
            "method_id": 57
        },
        {
            "method_signature": "org.apache.commons.cli2.commandline.WriteableCommandLineImpl:addOption(Lorg/apache/commons/cli2/Option;)V",
            "method_body": "public void addOption(Option option) {\noptions.add(option);\nnameToOption.put(option.getPreferredName(), option);\nfor (Iterator i = option.getTriggers().iterator(); i.hasNext();) {\nnameToOption.put(i.next(), option);\n}",
            "method_id": 58
        },
        {
            "method_signature": "org.apache.commons.cli2.option.OptionImpl:hashCode()I",
            "method_body": "public int hashCode() {\nint hashCode = getId();\nhashCode = (hashCode * 37) + getPreferredName().hashCode();\nif (getDescription() != null) {\nhashCode = (hashCode * 37) + getDescription().hashCode();\nhashCode = (hashCode * 37) + getPrefixes().hashCode();\nhashCode = (hashCode * 37) + getTriggers().hashCode();\nreturn hashCode;\n}",
            "method_id": 59
        }
    ]
}