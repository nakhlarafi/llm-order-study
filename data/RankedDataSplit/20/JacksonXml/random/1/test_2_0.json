{
    "bug_id": 1,
    "test_id": 2,
    "test_name": "com.fasterxml.jackson.dataformat.xml.lists.NestedUnwrappedListsTest.testNestedWithEmpty2",
    "test_body": "public void testNestedWithEmpty2() throws Exception\n{\nfinal String XML =\n\"<ServiceDelivery>\\n\"\n+\"  <ResponseTimestamp>2012-09-12T09:28:17.213-04:00</ResponseTimestamp>\\n\"\n+\"  <VehicleMonitoringDelivery>\\n\"\n+\"    <VehicleActivity>\\n\"\n+\"    </VehicleActivity>\\n\"\n+\"  </VehicleMonitoringDelivery>\\n\"\n+\"</ServiceDelivery>\\n\"\n;\n115: ServiceDelivery svc = _xmlMapper.readValue(XML, ServiceDelivery.class);\nassertNotNull(svc);\nassertNotNull(svc.vehicleMonitoringDelivery);\nassertEquals(1, svc.vehicleMonitoringDelivery.size());\nVehicleMonitoringDelivery del = svc.vehicleMonitoringDelivery.get(0);\nassertNotNull(del.vehicleActivity);\n// 06-Jan-2015, tatu: Really should have one empty entry, not 0\nassertEquals(1, del.vehicleActivity.size());\n}\n",
    "stack_trace": "junit.framework.AssertionFailedError: expected:<1> but was:<0>\nat junit.framework.Assert.fail(Assert.java:57)\nat junit.framework.Assert.failNotEquals(Assert.java:329)\nat junit.framework.Assert.assertEquals(Assert.java:78)\nat junit.framework.Assert.assertEquals(Assert.java:234)\nat junit.framework.Assert.assertEquals(Assert.java:241)\nat junit.framework.TestCase.assertEquals(TestCase.java:409)\nat com.fasterxml.jackson.dataformat.xml.lists.NestedUnwrappedListsTest.testNestedWithEmpty2(NestedUnwrappedListsTest.java:122)",
    "covered_methods": [
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser:addVirtualWrapping(Ljava/util/Set;)V",
            "method_body": "public void addVirtualWrapping(Set<String> namesToWrap)\nString name = _xmlTokens.getLocalName();\nif (name != null && namesToWrap.contains(name)) {\n_xmlTokens.repeatStartElement();\n_namesToWrap = namesToWrap;\n_parsingContext.setNamesToWrap(namesToWrap);\n}",
            "method_id": 0
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.JacksonXmlAnnotationIntrospector:isOutputAsAttribute(Lcom/fasterxml/jackson/databind/introspect/Annotated;)Ljava/lang/Boolean;",
            "method_body": "public Boolean isOutputAsAttribute(Annotated ann)\nJacksonXmlProperty prop = ann.getAnnotation(JacksonXmlProperty.class);\nif (prop != null) {\nreturn null;\n}",
            "method_id": 1
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.XmlFactory:<init>(Lcom/fasterxml/jackson/core/ObjectCodec;IILjavax/xml/stream/XMLInputFactory;Ljavax/xml/stream/XMLOutputFactory;Ljava/lang/String;)V",
            "method_body": "protected XmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures,\nsuper(oc);\n_xmlParserFeatures = xpFeatures;\n_xmlGeneratorFeatures = xgFeatures;\n_cfgNameForTextElement = nameForTextElem;\nif (xmlIn == null) {\nxmlIn = XMLInputFactory.newInstance();\nif (xmlOut == null) {\nxmlOut = XMLOutputFactory.newInstance();\n_initFactories(xmlIn, xmlOut);\n_xmlInputFactory = xmlIn;\n_xmlOutputFactory = xmlOut;\n}",
            "method_id": 2
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser$Feature:<clinit>()V",
            "method_body": "public final static String DEFAULT_UNNAMED_TEXT_PROPERTY = \"\";\npublic enum Feature implements FormatFeature\nint flags = 0;\nfor (Feature f : values()) {\nreturn flags;\n}",
            "method_id": 3
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream:repeatStartElement()V",
            "method_body": "protected void repeatStartElement()\nif (_currentState != XML_START_ELEMENT) {\nif (_currentWrapper == null) {\n_currentWrapper = ElementWrapper.matchingWrapper(_currentWrapper, _localName, _namespaceURI);\n_currentWrapper = ElementWrapper.matchingWrapper(_currentWrapper.getParent(), _localName, _namespaceURI);\n_repeatElement = REPLAY_START_DUP;\n}",
            "method_id": 4
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext:getCurrentName()Ljava/lang/String;",
            "method_body": "public final String getCurrentName() { return _currentName; }\npublic final String getCurrentName() { return _currentName; }",
            "method_id": 5
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream:getLocalName()Ljava/lang/String;",
            "method_body": "public String getLocalName() { return _localName; }\npublic String getLocalName() { return _localName; }",
            "method_id": 6
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.deser.XmlBeanDeserializerModifier:updateProperties(Lcom/fasterxml/jackson/databind/DeserializationConfig;Lcom/fasterxml/jackson/databind/BeanDescription;Ljava/util/List;)Ljava/util/List;",
            "method_body": "public List<BeanPropertyDefinition> updateProperties(DeserializationConfig config,\nfinal AnnotationIntrospector intr = config.getAnnotationIntrospector();\nint changed = 0;\nfor (int i = 0, propCount = propDefs.size(); i < propCount; ++i) {\nBeanPropertyDefinition prop = propDefs.get(i);\nAnnotatedMember acc = prop.getPrimaryMember();\nif (acc == null) {\nBoolean b = AnnotationUtil.findIsTextAnnotation(intr, acc);\nif (b != null && b.booleanValue()) {\nPropertyName wrapperName = prop.getWrapperName();\nif (wrapperName != null && wrapperName != PropertyName.NO_NAME) {\nString localName = wrapperName.getSimpleName();\nif ((localName != null && localName.length() > 0)\nreturn propDefs;\n}",
            "method_id": 7
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider:<clinit>()V",
            "method_body": "private static final long serialVersionUID = 1L;\nprotected final static QName ROOT_NAME_FOR_NULL = new QName(\"null\");\nsuper();\n_rootNameLookup = rootNames;\n}",
            "method_id": 8
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser:close()V",
            "method_body": "public void close() throws IOException\nif (!_closed) {\n_closed = true;\nif (_ioContext.isResourceManaged() || isEnabled(JsonParser.Feature.AUTO_CLOSE_SOURCE)) {\n_xmlTokens.closeCompletely();\n_releaseBuffers();\n}\n}",
            "method_id": 9
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.XmlFactory:_initFactories(Ljavax/xml/stream/XMLInputFactory;Ljavax/xml/stream/XMLOutputFactory;)V",
            "method_body": "protected void _initFactories(XMLInputFactory xmlIn, XMLOutputFactory xmlOut)\nxmlOut.setProperty(XMLOutputFactory.IS_REPAIRING_NAMESPACES, Boolean.TRUE);\nxmlIn.setProperty(XMLInputFactory.IS_COALESCING, Boolean.TRUE);\n}",
            "method_id": 10
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.XmlFactory:_createParser(Ljava/io/Reader;Lcom/fasterxml/jackson/core/io/IOContext;)Lcom/fasterxml/jackson/dataformat/xml/deser/FromXmlParser;",
            "method_body": "protected FromXmlParser _createParser(Reader r, IOContext ctxt) throws IOException\nsr = _xmlInputFactory.createXMLStreamReader(r);\nsr = _initializeXmlReader(sr);\n}\nFromXmlParser xp = new FromXmlParser(ctxt, _generatorFeatures, _xmlGeneratorFeatures,\nif (_cfgNameForTextElement != null) {\nreturn xp;\n}",
            "method_id": 11
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.ser.XmlBeanSerializerModifier:<init>()V",
            "method_body": "public XmlBeanSerializerModifier() { }\npublic XmlBeanSerializerModifier() { }",
            "method_id": 12
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter$Lf2SpacesIndenter:<init>()V",
            "method_body": "public Lf2SpacesIndenter() { }\npublic Lf2SpacesIndenter() { }",
            "method_id": 13
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream:_skipUntilTag()I",
            "method_body": "private final int _skipUntilTag() throws XMLStreamException\nwhile (_xmlReader.hasNext()) {\nswitch (type = _xmlReader.next()) {\nreturn type;\n}\n}",
            "method_id": 14
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.util.XmlRootNameLookup:<init>()V",
            "method_body": "private static final long serialVersionUID = 1L;\nprotected final transient LRUMap<ClassKey,QName> _rootNames = new LRUMap<ClassKey,QName>(40, 200);\npublic XmlRootNameLookup() { }",
            "method_id": 15
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream:_next()I",
            "method_body": "private final int _next() throws XMLStreamException\nswitch (_currentState) {\n++_nextAttributeIndex;\nif (_nextAttributeIndex < _attributeCount) {\n_localName = _xmlReader.getAttributeLocalName(_nextAttributeIndex);\n_namespaceURI = _xmlReader.getAttributeNamespace(_nextAttributeIndex);\n_textValue = _xmlReader.getAttributeValue(_nextAttributeIndex);\nreturn (_currentState = XML_ATTRIBUTE_NAME);\nString text = _collectUntilTag();\nif (_xmlReader.getEventType() == XMLStreamReader.START_ELEMENT) {\nreturn _initStartElement();\nif (text != null) {\n_textValue = text;\nreturn (_currentState = XML_TEXT);\nreturn _handleEndElement();\nreturn (_currentState = XML_ATTRIBUTE_VALUE);\nreturn _handleEndElement();\nswitch (_skipUntilTag()) {\nreturn _handleEndElement();\nreturn _initStartElement();\n}",
            "method_id": 16
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.deser.XmlBeanDeserializerModifier:<init>(Ljava/lang/String;)V",
            "method_body": "public XmlBeanDeserializerModifier(String nameForTextValue)\n{\n_cfgNameForTextValue = nameForTextValue;\n}",
            "method_id": 17
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.XmlFactory:<init>()V",
            "method_body": "public XmlFactory() { this(null, null, null); }\npublic XmlFactory() { this(null, null, null); }",
            "method_id": 18
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext:setCurrentName(Ljava/lang/String;)V",
            "method_body": "public void setCurrentName(String name) {\n_currentName = name;\n}",
            "method_id": 19
        }
    ]
}