{
    "bug_id": 1,
    "test_id": 0,
    "test_name": "com.fasterxml.jackson.dataformat.xml.lists.NestedUnwrappedLists180Test.testNestedUnwrappedLists180",
    "test_body": "38: public void testNestedUnwrappedLists180() throws Exception\n39: {\n40: /*\n41: Records recs = new Records();\n42: recs.records.add(new Record());\n43: recs.records.add(new Record());\n44: recs.records.add(new Record());\n45: recs.records.get(0).fields.add(new Field(\"a\"));\n46: recs.records.get(2).fields.add(new Field(\"b\"));\n47: 48: String xml = MAPPER.writerWithDefaultPrettyPrinter().writeValueAsString(recs);\n49: */\n50: 51: String xml =\n52: \"<Records>\\n\"\n53: // Important: it's the empty CDATA here that causes breakage -- empty element alone would be fine\n54: //+\"<records>\\n</records>\\n\"\n55: +\"<records></records>\\n\"\n56: +\"  <records>\\n\"\n57: +\"   <fields name='b'/>\\n\"\n58: +\"  </records>\\n\"\n59: +\"</Records>\\n\"\n60: ;\n61: 62: //System.out.println(\"XML: \"+xml);\n63: 64: Records result = MAPPER.readValue(xml, Records.class);\n65: assertNotNull(result.records);\n66: assertEquals(2, result.records.size());\n67: assertNotNull(result.records.get(1));\n68: assertEquals(1, result.records.get(1).fields.size());\n69: assertEquals(\"b\", result.records.get(1).fields.get(0).name);\n70: 71: // also, first one ought not be null should it? Ideally not...\n72: assertNotNull(result.records.get(0));\n73: }\n",
    "stack_trace": "junit.framework.AssertionFailedError\nat junit.framework.Assert.fail(Assert.java:55)\nat junit.framework.Assert.assertTrue(Assert.java:22)\nat junit.framework.Assert.assertNotNull(Assert.java:256)\nat junit.framework.Assert.assertNotNull(Assert.java:248)\nat junit.framework.TestCase.assertNotNull(TestCase.java:417)\nat com.fasterxml.jackson.dataformat.xml.lists.NestedUnwrappedLists180Test.testNestedUnwrappedLists180(NestedUnwrappedLists180Test.java:72)",
    "covered_methods": [
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.deser.ElementWrapper:getParent()Lcom/fasterxml/jackson/dataformat/xml/deser/ElementWrapper;",
            "method_body": "public ElementWrapper getParent() { return _parent; }\npublic ElementWrapper getParent() { return _parent; }",
            "method_id": 80
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream:_handleEndElement()I",
            "method_body": "private final int _handleEndElement()\nif (_currentWrapper != null) {\nElementWrapper w = _currentWrapper;\nif (w.isMatching()) {\n_repeatElement = REPLAY_END;\n_localName = w.getWrapperLocalName();\n_namespaceURI = w.getWrapperNamespace();\n_currentWrapper = _currentWrapper.getParent();\n_currentWrapper = _currentWrapper.getParent();\nreturn (_currentState = XML_END_ELEMENT);\n}",
            "method_id": 81
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream:_skipUntilTag()I",
            "method_body": "private final int _skipUntilTag() throws XMLStreamException\nwhile (_xmlReader.hasNext()) {\nswitch (type = _xmlReader.next()) {\nreturn type;\n}\n}",
            "method_id": 82
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext:convertToArray()V",
            "method_body": "protected void convertToArray() {\n_type = TYPE_ARRAY;\n}",
            "method_id": 83
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream:skipAttributes()V",
            "method_body": "protected void skipAttributes()\nif (_currentState == XML_ATTRIBUTE_NAME) {\n} else if (_currentState == XML_START_ELEMENT) {\n}",
            "method_id": 84
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext:getParent()Lcom/fasterxml/jackson/dataformat/xml/deser/XmlReadContext;",
            "method_body": "public final XmlReadContext getParent() { return _parent; }\npublic final XmlReadContext getParent() { return _parent; }",
            "method_id": 85
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext:getNamesToWrap()Ljava/util/Set;",
            "method_body": "public Set<String> getNamesToWrap() {\nreturn _namesToWrap;\n}",
            "method_id": 86
        }
    ]
}