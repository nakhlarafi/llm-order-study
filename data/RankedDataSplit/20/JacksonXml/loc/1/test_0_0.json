{
    "bug_id": 1,
    "test_id": 0,
    "test_name": "com.fasterxml.jackson.dataformat.xml.lists.NestedUnwrappedLists180Test.testNestedUnwrappedLists180",
    "test_body": "public void testNestedUnwrappedLists180() throws Exception\n{\n/*\nRecords recs = new Records();\nrecs.records.add(new Record());\nrecs.records.add(new Record());\nrecs.records.add(new Record());\nrecs.records.get(0).fields.add(new Field(\"a\"));\nrecs.records.get(2).fields.add(new Field(\"b\"));\n48: String xml = MAPPER.writerWithDefaultPrettyPrinter().writeValueAsString(recs);\n*/\n51: String xml =\n\"<Records>\\n\"\n// Important: it's the empty CDATA here that causes breakage -- empty element alone would be fine\n//+\"<records>\\n</records>\\n\"\n+\"<records></records>\\n\"\n+\"  <records>\\n\"\n+\"   <fields name='b'/>\\n\"\n+\"  </records>\\n\"\n+\"</Records>\\n\"\n;\n62: //System.out.println(\"XML: \"+xml);\n64: Records result = MAPPER.readValue(xml, Records.class);\nassertNotNull(result.records);\nassertEquals(2, result.records.size());\nassertNotNull(result.records.get(1));\nassertEquals(1, result.records.get(1).fields.size());\nassertEquals(\"b\", result.records.get(1).fields.get(0).name);\n71: // also, first one ought not be null should it? Ideally not...\nassertNotNull(result.records.get(0));\n}\n",
    "stack_trace": "junit.framework.AssertionFailedError\nat junit.framework.Assert.fail(Assert.java:55)\nat junit.framework.Assert.assertTrue(Assert.java:22)\nat junit.framework.Assert.assertNotNull(Assert.java:256)\nat junit.framework.Assert.assertNotNull(Assert.java:248)\nat junit.framework.TestCase.assertNotNull(TestCase.java:417)\nat com.fasterxml.jackson.dataformat.xml.lists.NestedUnwrappedLists180Test.testNestedUnwrappedLists180(NestedUnwrappedLists180Test.java:72)",
    "covered_methods": [
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser:nextToken()Lcom/fasterxml/jackson/core/JsonToken;",
            "method_body": "public JsonToken nextToken() throws IOException\n_binaryValue = null;\nif (_nextToken != null) {\nJsonToken t = _nextToken;\n_currToken = t;\n_nextToken = null;\nswitch (t) {\n_parsingContext = _parsingContext.createChildObjectContext(-1, -1);\nbreak;\n_parsingContext.setCurrentName(_xmlTokens.getLocalName());\nbreak;\nreturn t;\nint token = _xmlTokens.next();\nwhile (token == XmlTokenStream.XML_START_ELEMENT) {\nif (_mayBeLeaf) {\n_nextToken = JsonToken.FIELD_NAME;\n_parsingContext = _parsingContext.createChildObjectContext(-1, -1);\nreturn (_currToken = JsonToken.START_OBJECT);\nif (_parsingContext.inArray()) {\ntoken = _xmlTokens.next();\n_mayBeLeaf = true;\ncontinue;\nString name = _xmlTokens.getLocalName();\n_parsingContext.setCurrentName(name);\nif (_namesToWrap != null && _namesToWrap.contains(name)) {\n_xmlTokens.repeatStartElement();\n_mayBeLeaf = true;\nreturn (_currToken = JsonToken.FIELD_NAME);\nswitch (token) {\nif (_mayBeLeaf) {\n_mayBeLeaf = false;\nreturn (_currToken = JsonToken.VALUE_NULL);\n_currToken = _parsingContext.inArray() ? JsonToken.END_ARRAY : JsonToken.END_OBJECT;\n_parsingContext = _parsingContext.getParent();\n_namesToWrap = _parsingContext.getNamesToWrap();\nreturn _currToken;\nif (_mayBeLeaf) {\n_mayBeLeaf = false;\n_nextToken = JsonToken.FIELD_NAME;\n_currText = _xmlTokens.getText();\n_parsingContext = _parsingContext.createChildObjectContext(-1, -1);\nreturn (_currToken = JsonToken.START_OBJECT);\n_currText = _xmlTokens.getText();\nreturn (_currToken = JsonToken.VALUE_STRING);\n_currText = _xmlTokens.getText();\nif (_mayBeLeaf) {\n_mayBeLeaf = false;\n_xmlTokens.skipEndElement();\nif (_parsingContext.inArray()) {\nif (_isEmpty(_currText)) {\n_currToken = JsonToken.END_ARRAY;\n_parsingContext = _parsingContext.getParent();\n_namesToWrap = _parsingContext.getNamesToWrap();\nreturn _currToken;\nreturn (_currToken = JsonToken.VALUE_STRING);\n}",
            "method_id": 0,
            "loc": 56
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser$1:<clinit>()V",
            "method_body": "public JsonToken nextToken() throws IOException\n_binaryValue = null;\nif (_nextToken != null) {\nJsonToken t = _nextToken;\n_currToken = t;\n_nextToken = null;\nswitch (t) {\n_parsingContext = _parsingContext.createChildObjectContext(-1, -1);\nbreak;\n_parsingContext.setCurrentName(_xmlTokens.getLocalName());\nbreak;\nreturn t;\nint token = _xmlTokens.next();\nwhile (token == XmlTokenStream.XML_START_ELEMENT) {\nif (_mayBeLeaf) {\n_nextToken = JsonToken.FIELD_NAME;\n_parsingContext = _parsingContext.createChildObjectContext(-1, -1);\nreturn (_currToken = JsonToken.START_OBJECT);\nif (_parsingContext.inArray()) {\ntoken = _xmlTokens.next();\n_mayBeLeaf = true;\ncontinue;\nString name = _xmlTokens.getLocalName();\n_parsingContext.setCurrentName(name);\nif (_namesToWrap != null && _namesToWrap.contains(name)) {\n_xmlTokens.repeatStartElement();\n_mayBeLeaf = true;\nreturn (_currToken = JsonToken.FIELD_NAME);\nswitch (token) {\nif (_mayBeLeaf) {\n_mayBeLeaf = false;\nreturn (_currToken = JsonToken.VALUE_NULL);\n_currToken = _parsingContext.inArray() ? JsonToken.END_ARRAY : JsonToken.END_OBJECT;\n_parsingContext = _parsingContext.getParent();\n_namesToWrap = _parsingContext.getNamesToWrap();\nreturn _currToken;\nif (_mayBeLeaf) {\n_mayBeLeaf = false;\n_nextToken = JsonToken.FIELD_NAME;\n_currText = _xmlTokens.getText();\n_parsingContext = _parsingContext.createChildObjectContext(-1, -1);\nreturn (_currToken = JsonToken.START_OBJECT);\n_currText = _xmlTokens.getText();\nreturn (_currToken = JsonToken.VALUE_STRING);\n_currText = _xmlTokens.getText();\nif (_mayBeLeaf) {\n_mayBeLeaf = false;\n_xmlTokens.skipEndElement();\nif (_parsingContext.inArray()) {\nif (_isEmpty(_currText)) {\n_currToken = JsonToken.END_ARRAY;\n_parsingContext = _parsingContext.getParent();\n_namesToWrap = _parsingContext.getNamesToWrap();\nreturn _currToken;\nreturn (_currToken = JsonToken.VALUE_STRING);\n}",
            "method_id": 1,
            "loc": 56
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.deser.WrapperHandlingDeserializer:createContextual(Lcom/fasterxml/jackson/databind/DeserializationContext;Lcom/fasterxml/jackson/databind/BeanProperty;)Lcom/fasterxml/jackson/databind/JsonDeserializer;",
            "method_body": "public JsonDeserializer<?> createContextual(DeserializationContext ctxt,\nJsonDeserializer<?> del = ctxt.handleSecondaryContextualization(_delegatee, property, _type);\nBeanDeserializerBase newDelegatee = _verifyDeserType(del);\nIterator<SettableBeanProperty> it = newDelegatee.properties();\nHashSet<String> unwrappedNames = null;\nwhile (it.hasNext()) {\nSettableBeanProperty prop = it.next();\nJavaType type = prop.getType();\nif (!TypeUtil.isIndexedType(type)) {\ncontinue;\nPropertyName wrapperName = prop.getWrapperName();\nif (wrapperName != null && wrapperName != PropertyName.NO_NAME) {\nif (unwrappedNames == null) {\nunwrappedNames = new HashSet<String>();\nunwrappedNames.add(prop.getName());\n}\nif (unwrappedNames == null) {\nreturn newDelegatee;\nreturn new WrapperHandlingDeserializer(newDelegatee, unwrappedNames);\n}",
            "method_id": 2,
            "loc": 20
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.deser.XmlBeanDeserializerModifier:updateProperties(Lcom/fasterxml/jackson/databind/DeserializationConfig;Lcom/fasterxml/jackson/databind/BeanDescription;Ljava/util/List;)Ljava/util/List;",
            "method_body": "public List<BeanPropertyDefinition> updateProperties(DeserializationConfig config,\nfinal AnnotationIntrospector intr = config.getAnnotationIntrospector();\nint changed = 0;\nfor (int i = 0, propCount = propDefs.size(); i < propCount; ++i) {\nBeanPropertyDefinition prop = propDefs.get(i);\nAnnotatedMember acc = prop.getPrimaryMember();\nif (acc == null) {\nBoolean b = AnnotationUtil.findIsTextAnnotation(intr, acc);\nif (b != null && b.booleanValue()) {\nPropertyName wrapperName = prop.getWrapperName();\nif (wrapperName != null && wrapperName != PropertyName.NO_NAME) {\nString localName = wrapperName.getSimpleName();\nif ((localName != null && localName.length() > 0)\nreturn propDefs;\n}",
            "method_id": 3,
            "loc": 15
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator$Feature:<clinit>()V",
            "method_body": "protected final static String DEFAULT_UNKNOWN_ELEMENT = \"unknown\";\npublic enum Feature implements FormatFeature\nWRITE_XML_DECLARATION(false),\nWRITE_XML_1_1(false)\nint flags = 0;\nfor (Feature f : values()) {\nif (f.enabledByDefault()) {\nreturn flags;\nprivate Feature(boolean defaultState) {\n_defaultState = defaultState;\n_mask = (1 << ordinal());\n}\n@Override public boolean enabledByDefault() { return _defaultState; }\n}",
            "method_id": 4,
            "loc": 14
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.XmlFactory:<init>(Lcom/fasterxml/jackson/core/ObjectCodec;IILjavax/xml/stream/XMLInputFactory;Ljavax/xml/stream/XMLOutputFactory;Ljava/lang/String;)V",
            "method_body": "protected XmlFactory(ObjectCodec oc, int xpFeatures, int xgFeatures,\nsuper(oc);\n_xmlParserFeatures = xpFeatures;\n_xmlGeneratorFeatures = xgFeatures;\n_cfgNameForTextElement = nameForTextElem;\nif (xmlIn == null) {\nxmlIn = XMLInputFactory.newInstance();\nif (xmlOut == null) {\nxmlOut = XMLOutputFactory.newInstance();\n_initFactories(xmlIn, xmlOut);\n_xmlInputFactory = xmlIn;\n_xmlOutputFactory = xmlOut;\n}",
            "method_id": 5,
            "loc": 13
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.deser.XmlBeanDeserializerModifier:_findSoleTextProp(Lcom/fasterxml/jackson/databind/DeserializationConfig;Ljava/util/Iterator;)Lcom/fasterxml/jackson/databind/deser/SettableBeanProperty;",
            "method_body": "private SettableBeanProperty _findSoleTextProp(DeserializationConfig config,\nfinal AnnotationIntrospector ai = config.getAnnotationIntrospector();\nSettableBeanProperty textProp = null;\nwhile (propIt.hasNext()) {\nSettableBeanProperty prop = propIt.next();\nAnnotatedMember m = prop.getMember();\nif (m != null) {\nPropertyName n = prop.getFullName();\nif (_cfgNameForTextValue.equals(n.getSimpleName())) {\nBoolean b = AnnotationUtil.findIsAttributeAnnotation(ai, m);\nif (b != null && b.booleanValue()) {\nreturn null;\n}",
            "method_id": 6,
            "loc": 13
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream:_handleRepeatElement()I",
            "method_body": "protected int _handleRepeatElement() throws IOException\nint type = _repeatElement;\n_repeatElement = 0;\nif (type == REPLAY_START_DUP) {\n_currentWrapper = _currentWrapper.intermediateWrapper();\nreturn XML_START_ELEMENT;\nif (type == REPLAY_END) {\n_localName = _xmlReader.getLocalName();\n_namespaceURI = _xmlReader.getNamespaceURI();\nif (_currentWrapper != null) {\n_currentWrapper = _currentWrapper.getParent();\nreturn XML_END_ELEMENT;\n}",
            "method_id": 7,
            "loc": 13
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream:_initStartElement()I",
            "method_body": "private final int _initStartElement() throws XMLStreamException\nfinal String ns = _xmlReader.getNamespaceURI();\nfinal String localName = _xmlReader.getLocalName();\n_attributeCount = _xmlReader.getAttributeCount();\n_nextAttributeIndex = 0;\nif (_currentWrapper != null) {\nif (_currentWrapper.matchesWrapper(localName, ns)) {\n_currentWrapper = _currentWrapper.intermediateWrapper();\n_localName = localName;\n_namespaceURI = ns;\nreturn (_currentState = XML_START_ELEMENT);\n}",
            "method_id": 8,
            "loc": 12
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream:_handleEndElement()I",
            "method_body": "private final int _handleEndElement()\nif (_currentWrapper != null) {\nElementWrapper w = _currentWrapper;\nif (w.isMatching()) {\n_repeatElement = REPLAY_END;\n_localName = w.getWrapperLocalName();\n_namespaceURI = w.getWrapperNamespace();\n_currentWrapper = _currentWrapper.getParent();\n_currentWrapper = _currentWrapper.getParent();\nreturn (_currentState = XML_END_ELEMENT);\n}",
            "method_id": 9,
            "loc": 11
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream:<init>(Ljavax/xml/stream/XMLStreamReader;Ljava/lang/Object;)V",
            "method_body": "public XmlTokenStream(XMLStreamReader xmlReader, Object sourceRef)\n{\n_sourceReference = sourceRef;\nif (xmlReader.getEventType() != XMLStreamConstants.START_ELEMENT) {\n_xmlReader = Stax2ReaderAdapter.wrapIfNecessary(xmlReader);\n_currentState = XML_START_ELEMENT;\n_localName = _xmlReader.getLocalName();\n_namespaceURI = _xmlReader.getNamespaceURI();\n_attributeCount = _xmlReader.getAttributeCount();\n}",
            "method_id": 10,
            "loc": 10
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.deser.XmlBeanDeserializerModifier:modifyDeserializer(Lcom/fasterxml/jackson/databind/DeserializationConfig;Lcom/fasterxml/jackson/databind/BeanDescription;Lcom/fasterxml/jackson/databind/JsonDeserializer;)Lcom/fasterxml/jackson/databind/JsonDeserializer;",
            "method_body": "public JsonDeserializer<?> modifyDeserializer(DeserializationConfig config,\nif (!(deser0 instanceof BeanDeserializerBase)) {\nreturn deser0;\nBeanDeserializerBase deser = (BeanDeserializerBase) deser0;\nif (!deser.getValueInstantiator().canCreateFromString()) {\nSettableBeanProperty textProp = _findSoleTextProp(config, deser.properties());\nif (textProp != null) {\nreturn new WrapperHandlingDeserializer(deser);\n}",
            "method_id": 11,
            "loc": 9
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser:<init>(Lcom/fasterxml/jackson/core/io/IOContext;IILcom/fasterxml/jackson/core/ObjectCodec;Ljavax/xml/stream/XMLStreamReader;)V",
            "method_body": "public FromXmlParser(IOContext ctxt, int genericParserFeatures, int xmlFeatures,\nsuper(genericParserFeatures);\n_formatFeatures = xmlFeatures;\n_ioContext = ctxt;\n_objectCodec = codec;\n_parsingContext = XmlReadContext.createRootContext(-1, -1);\n_nextToken = JsonToken.START_OBJECT;\n_xmlTokens = new XmlTokenStream(xmlReader, ctxt.getSourceReference());\n}",
            "method_id": 12,
            "loc": 9
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser:isExpectedStartArrayToken()Z",
            "method_body": "public boolean isExpectedStartArrayToken()\nJsonToken t = _currToken;\nif (t == JsonToken.START_OBJECT) {\n_currToken = JsonToken.START_ARRAY;\n_parsingContext.convertToArray();\n_nextToken = null;\n_xmlTokens.skipAttributes();\nreturn true;\n}",
            "method_id": 13,
            "loc": 9
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.util.AnnotationUtil:findIsAttributeAnnotation(Lcom/fasterxml/jackson/databind/AnnotationIntrospector;Lcom/fasterxml/jackson/databind/introspect/AnnotatedMember;)Ljava/lang/Boolean;",
            "method_body": "public static Boolean findIsAttributeAnnotation(AnnotationIntrospector ai,\nfor (AnnotationIntrospector intr : ai.allIntrospectors()) {\nif (intr instanceof XmlAnnotationIntrospector) {\nBoolean b = ((XmlAnnotationIntrospector) intr).isOutputAsAttribute(prop);\nif (b != null) {\n} else  if (intr instanceof JaxbAnnotationIntrospector) {\n}\nreturn null;\n}",
            "method_id": 14,
            "loc": 9
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.util.AnnotationUtil:findIsTextAnnotation(Lcom/fasterxml/jackson/databind/AnnotationIntrospector;Lcom/fasterxml/jackson/databind/introspect/AnnotatedMember;)Ljava/lang/Boolean;",
            "method_body": "public static Boolean findIsTextAnnotation(AnnotationIntrospector ai,\nfor (AnnotationIntrospector intr : ai.allIntrospectors()) {\nif (intr instanceof XmlAnnotationIntrospector) {\nBoolean b = ((XmlAnnotationIntrospector) intr).isOutputAsText(prop);\nif (b != null) {\n} else  if (intr instanceof JaxbAnnotationIntrospector) {\n}\nreturn null;\n}",
            "method_id": 15,
            "loc": 9
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.XmlFactory:_createParser(Ljava/io/Reader;Lcom/fasterxml/jackson/core/io/IOContext;)Lcom/fasterxml/jackson/dataformat/xml/deser/FromXmlParser;",
            "method_body": "protected FromXmlParser _createParser(Reader r, IOContext ctxt) throws IOException\nsr = _xmlInputFactory.createXMLStreamReader(r);\nsr = _initializeXmlReader(sr);\n}\nFromXmlParser xp = new FromXmlParser(ctxt, _generatorFeatures, _xmlGeneratorFeatures,\nif (_cfgNameForTextElement != null) {\nreturn xp;\n}",
            "method_id": 16,
            "loc": 8
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.JacksonXmlAnnotationIntrospector:findNameForDeserialization(Lcom/fasterxml/jackson/databind/introspect/Annotated;)Lcom/fasterxml/jackson/databind/PropertyName;",
            "method_body": "public PropertyName findNameForDeserialization(Annotated a)\nPropertyName name = _findXmlName(a);\nif (name == null) {\nname = super.findNameForDeserialization(a);\nif (name == null) {\nif (a.hasAnnotation(JacksonXmlText.class)) {\nreturn name;\n}",
            "method_id": 17,
            "loc": 8
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser:close()V",
            "method_body": "public void close() throws IOException\nif (!_closed) {\n_closed = true;\nif (_ioContext.isResourceManaged() || isEnabled(JsonParser.Feature.AUTO_CLOSE_SOURCE)) {\n_xmlTokens.closeCompletely();\n_releaseBuffers();\n}\n}",
            "method_id": 18,
            "loc": 8
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext:<init>(Lcom/fasterxml/jackson/dataformat/xml/deser/XmlReadContext;III)V",
            "method_body": "public XmlReadContext(XmlReadContext parent, int type, int lineNr, int colNr)\nsuper();\n_type = type;\n_parent = parent;\n_lineNr = lineNr;\n_columnNr = colNr;\n_index = -1;\n}",
            "method_id": 19,
            "loc": 8
        }
    ]
}