{
    "bug_id": 1,
    "test_id": 1,
    "test_name": "com.fasterxml.jackson.dataformat.xml.lists.NestedUnwrappedListsTest.testNestedWithEmpty",
    "test_body": "public void testNestedWithEmpty() throws Exception\n{\nfinal String XML =\n\"<ServiceDelivery>\\n\"\n+\"  <ResponseTimestamp>2012-09-12T09:28:17.213-04:00</ResponseTimestamp>\\n\"\n+\"  <VehicleMonitoringDelivery>\\n\"\n+\"  </VehicleMonitoringDelivery>\\n\"\n+\"</ServiceDelivery>\\n\"\n;\n96: ServiceDelivery svc = _xmlMapper.readValue(XML, ServiceDelivery.class);\nassertNotNull(svc);\nassertNotNull(svc.vehicleMonitoringDelivery);\n// 06-Jan-2015, tatu: Really should have one empty entry, not 0\nassertEquals(1, svc.vehicleMonitoringDelivery.size());\n}\n",
    "stack_trace": "junit.framework.AssertionFailedError: expected:<1> but was:<0>\nat junit.framework.Assert.fail(Assert.java:57)\nat junit.framework.Assert.failNotEquals(Assert.java:329)\nat junit.framework.Assert.assertEquals(Assert.java:78)\nat junit.framework.Assert.assertEquals(Assert.java:234)\nat junit.framework.Assert.assertEquals(Assert.java:241)\nat junit.framework.TestCase.assertEquals(TestCase.java:409)\nat com.fasterxml.jackson.dataformat.xml.lists.NestedUnwrappedListsTest.testNestedWithEmpty(NestedUnwrappedListsTest.java:100)",
    "covered_methods": [
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.util.TypeUtil:isIndexedType(Lcom/fasterxml/jackson/databind/JavaType;)Z",
            "method_body": "public static boolean isIndexedType(JavaType type)\nif (type.isContainerType()) {\nClass<?> cls = type.getRawClass();\nif (cls == byte[].class || cls == char[].class) {\nif (Map.class.isAssignableFrom(cls)) {\nreturn true;\nreturn false;\n}",
            "method_id": 20,
            "loc": 8
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.XmlMapper:setDefaultUseWrapper(Z)Lcom/fasterxml/jackson/dataformat/xml/XmlMapper;",
            "method_body": "public XmlMapper setDefaultUseWrapper(boolean state) {\nAnnotationIntrospector ai0 = getDeserializationConfig().getAnnotationIntrospector();\nfor (AnnotationIntrospector ai : ai0.allIntrospectors()) {\nif (ai instanceof XmlAnnotationIntrospector) {\n((XmlAnnotationIntrospector) ai).setDefaultUseWrapper(state);\n}\nreturn this;\n}",
            "method_id": 21,
            "loc": 8
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.XmlMapper:<init>(Lcom/fasterxml/jackson/dataformat/xml/XmlFactory;Lcom/fasterxml/jackson/dataformat/xml/JacksonXmlModule;)V",
            "method_body": "public XmlMapper(XmlFactory xmlFactory, JacksonXmlModule module)\nsuper(xmlFactory, new XmlSerializerProvider(new XmlRootNameLookup()), null);\n_xmlModule = module;\nif (module != null) {\nregisterModule(module);\n_serializationConfig = _serializationConfig.withDefaultPrettyPrinter(DEFAULT_XML_PRETTY_PRINTER);\n}",
            "method_id": 22,
            "loc": 7
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.JacksonXmlModule:setupModule(Lcom/fasterxml/jackson/databind/Module$SetupContext;)V",
            "method_body": "public void setupModule(SetupContext context)\ncontext.addBeanSerializerModifier(new XmlBeanSerializerModifier());\ncontext.addBeanDeserializerModifier(new XmlBeanDeserializerModifier(_cfgNameForTextElement));\ncontext.insertAnnotationIntrospector(_constructIntrospector());\nif (_cfgNameForTextElement != FromXmlParser.DEFAULT_UNNAMED_TEXT_PROPERTY) {\nsuper.setupModule(context);\n}",
            "method_id": 23,
            "loc": 7
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser:addVirtualWrapping(Ljava/util/Set;)V",
            "method_body": "public void addVirtualWrapping(Set<String> namesToWrap)\nString name = _xmlTokens.getLocalName();\nif (name != null && namesToWrap.contains(name)) {\n_xmlTokens.repeatStartElement();\n_namesToWrap = namesToWrap;\n_parsingContext.setNamesToWrap(namesToWrap);\n}",
            "method_id": 24,
            "loc": 7
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream:repeatStartElement()V",
            "method_body": "protected void repeatStartElement()\nif (_currentState != XML_START_ELEMENT) {\nif (_currentWrapper == null) {\n_currentWrapper = ElementWrapper.matchingWrapper(_currentWrapper, _localName, _namespaceURI);\n_currentWrapper = ElementWrapper.matchingWrapper(_currentWrapper.getParent(), _localName, _namespaceURI);\n_repeatElement = REPLAY_START_DUP;\n}",
            "method_id": 25,
            "loc": 7
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream:_collectUntilTag()Ljava/lang/String;",
            "method_body": "private final String _collectUntilTag() throws XMLStreamException\nString text = null;\nswitch (_xmlReader.next()) {\nreturn text;\nif (text == null) {\ntext = _xmlReader.getText();\n}",
            "method_id": 26,
            "loc": 7
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser:_isEmpty(Ljava/lang/String;)Z",
            "method_body": "protected boolean _isEmpty(String str)\nint len = (str == null) ? 0 : str.length();\nif (len > 0) {\nfor (int i = 0; i < len; ++i) {\nif (str.charAt(i) > ' ') {\nreturn true;\n}",
            "method_id": 27,
            "loc": 7
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.util.DefaultXmlPrettyPrinter:<init>()V",
            "method_body": "public void writeIndentation(JsonGenerator g, int level) throws IOException;\nprotected Indenter _arrayIndenter = new FixedSpaceIndenter();\nprotected Indenter _objectIndenter = new Lf2SpacesIndenter();\nprotected boolean _spacesInObjectEntries = true;\nprotected transient int _nesting = 0;\npublic DefaultXmlPrettyPrinter() { }",
            "method_id": 28,
            "loc": 6
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.XmlFactory:createParser(Ljava/lang/String;)Lcom/fasterxml/jackson/core/JsonParser;",
            "method_body": "public JsonParser createParser(String content) throws IOException {\nReader r = new StringReader(content);\nIOContext ctxt = _createContext(r, true);\nif (_inputDecorator != null) {\nreturn _createParser(r, ctxt);\n}",
            "method_id": 29,
            "loc": 6
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser$Feature:<clinit>()V",
            "method_body": "public final static String DEFAULT_UNNAMED_TEXT_PROPERTY = \"\";\npublic enum Feature implements FormatFeature\nint flags = 0;\nfor (Feature f : values()) {\nreturn flags;\n}",
            "method_id": 30,
            "loc": 6
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.ser.ToXmlGenerator$Feature:collectDefaults()I",
            "method_body": "public static int collectDefaults()\nint flags = 0;\nfor (Feature f : values()) {\nif (f.enabledByDefault()) {\nreturn flags;\n}",
            "method_id": 31,
            "loc": 6
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.JacksonXmlAnnotationIntrospector:_findXmlName(Lcom/fasterxml/jackson/databind/introspect/Annotated;)Lcom/fasterxml/jackson/databind/PropertyName;",
            "method_body": "protected PropertyName _findXmlName(Annotated a)\nJacksonXmlProperty pann = a.getAnnotation(JacksonXmlProperty.class);\nif (pann != null) {\nreturn PropertyName.construct(pann.localName(), pann.namespace());\nreturn null;\n}",
            "method_id": 32,
            "loc": 6
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser:getCurrentName()Ljava/lang/String;",
            "method_body": "public String getCurrentName() throws IOException\nif (_currToken == JsonToken.START_OBJECT || _currToken == JsonToken.START_ARRAY) {\nname = _parsingContext.getCurrentName();\nif (name == null) {\nreturn name;\n}",
            "method_id": 33,
            "loc": 6
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext:createChildObjectContext(II)Lcom/fasterxml/jackson/dataformat/xml/deser/XmlReadContext;",
            "method_body": "public final XmlReadContext createChildObjectContext(int lineNr, int colNr)\nXmlReadContext ctxt = _child;\nif (ctxt == null) {\n_child = ctxt = new XmlReadContext(this, TYPE_OBJECT, lineNr, colNr);\nreturn ctxt;\n}",
            "method_id": 34,
            "loc": 6
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream:_skipUntilTag()I",
            "method_body": "private final int _skipUntilTag() throws XMLStreamException\nwhile (_xmlReader.hasNext()) {\nswitch (type = _xmlReader.next()) {\nreturn type;\n}\n}",
            "method_id": 35,
            "loc": 6
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.deser.ElementWrapper:<init>(Lcom/fasterxml/jackson/dataformat/xml/deser/ElementWrapper;Ljava/lang/String;Ljava/lang/String;)V",
            "method_body": "private ElementWrapper(ElementWrapper parent,\n{\n_parent = parent;\n_wrapperName = wrapperLocalName;\n_wrapperNamespace = (wrapperNamespace == null) ? \"\" : wrapperNamespace;\n}",
            "method_id": 36,
            "loc": 6
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.XmlMapper:<clinit>()V",
            "method_body": "private static final long serialVersionUID = 1L;\nprotected final static JacksonXmlModule DEFAULT_XML_MODULE = new JacksonXmlModule();\nprotected final static DefaultXmlPrettyPrinter DEFAULT_XML_PRETTY_PRINTER = new DefaultXmlPrettyPrinter();\nthis(new XmlFactory());\n}",
            "method_id": 37,
            "loc": 5
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser$Feature:collectDefaults()I",
            "method_body": "public static int collectDefaults()\nint flags = 0;\nfor (Feature f : values()) {\nreturn flags;\n}",
            "method_id": 38,
            "loc": 5
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.ser.XmlSerializerProvider:<clinit>()V",
            "method_body": "private static final long serialVersionUID = 1L;\nprotected final static QName ROOT_NAME_FOR_NULL = new QName(\"null\");\nsuper();\n_rootNameLookup = rootNames;\n}",
            "method_id": 39,
            "loc": 5
        }
    ]
}