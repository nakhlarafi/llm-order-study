{
    "bug_id": 1,
    "test_id": 1,
    "test_name": "com.fasterxml.jackson.dataformat.xml.lists.NestedUnwrappedListsTest.testNestedWithEmpty",
    "test_body": "public void testNestedWithEmpty() throws Exception\n{\nfinal String XML =\n\"<ServiceDelivery>\\n\"\n+\"  <ResponseTimestamp>2012-09-12T09:28:17.213-04:00</ResponseTimestamp>\\n\"\n+\"  <VehicleMonitoringDelivery>\\n\"\n+\"  </VehicleMonitoringDelivery>\\n\"\n+\"</ServiceDelivery>\\n\"\n;\n96: ServiceDelivery svc = _xmlMapper.readValue(XML, ServiceDelivery.class);\nassertNotNull(svc);\nassertNotNull(svc.vehicleMonitoringDelivery);\n// 06-Jan-2015, tatu: Really should have one empty entry, not 0\nassertEquals(1, svc.vehicleMonitoringDelivery.size());\n}\n",
    "stack_trace": "junit.framework.AssertionFailedError: expected:<1> but was:<0>\nat junit.framework.Assert.fail(Assert.java:57)\nat junit.framework.Assert.failNotEquals(Assert.java:329)\nat junit.framework.Assert.assertEquals(Assert.java:78)\nat junit.framework.Assert.assertEquals(Assert.java:234)\nat junit.framework.Assert.assertEquals(Assert.java:241)\nat junit.framework.TestCase.assertEquals(TestCase.java:409)\nat com.fasterxml.jackson.dataformat.xml.lists.NestedUnwrappedListsTest.testNestedWithEmpty(NestedUnwrappedListsTest.java:100)",
    "covered_methods": [
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.deser.XmlBeanDeserializerModifier:_findSoleTextProp(Lcom/fasterxml/jackson/databind/DeserializationConfig;Ljava/util/Iterator;)Lcom/fasterxml/jackson/databind/deser/SettableBeanProperty;",
            "method_body": "private SettableBeanProperty _findSoleTextProp(DeserializationConfig config,\nfinal AnnotationIntrospector ai = config.getAnnotationIntrospector();\nSettableBeanProperty textProp = null;\nwhile (propIt.hasNext()) {\nSettableBeanProperty prop = propIt.next();\nAnnotatedMember m = prop.getMember();\nif (m != null) {\nPropertyName n = prop.getFullName();\nif (_cfgNameForTextValue.equals(n.getSimpleName())) {\nBoolean b = AnnotationUtil.findIsAttributeAnnotation(ai, m);\nif (b != null && b.booleanValue()) {\nreturn null;\n}",
            "method_id": 40
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser:close()V",
            "method_body": "public void close() throws IOException\nif (!_closed) {\n_closed = true;\nif (_ioContext.isResourceManaged() || isEnabled(JsonParser.Feature.AUTO_CLOSE_SOURCE)) {\n_xmlTokens.closeCompletely();\n_releaseBuffers();\n}\n}",
            "method_id": 41
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser:_releaseBuffers()V",
            "method_body": "protected void _releaseBuffers() throws IOException {\n}",
            "method_id": 42
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream:closeCompletely()V",
            "method_body": "public void closeCompletely() throws IOException\n_xmlReader.closeCompletely();\n}\n}",
            "method_id": 43
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.deser.WrapperHandlingDeserializer:<init>(Lcom/fasterxml/jackson/databind/deser/BeanDeserializerBase;)V",
            "method_body": "public WrapperHandlingDeserializer(BeanDeserializerBase delegate) {\nthis(delegate, null);\n}",
            "method_id": 44
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.deser.WrapperHandlingDeserializer:<init>(Lcom/fasterxml/jackson/databind/deser/BeanDeserializerBase;Ljava/util/Set;)V",
            "method_body": "public WrapperHandlingDeserializer(BeanDeserializerBase delegate, Set<String> namesToWrap)\nsuper(delegate);\n_namesToWrap = namesToWrap;\n_type = delegate.getValueType();\n}",
            "method_id": 45
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.deser.WrapperHandlingDeserializer:createContextual(Lcom/fasterxml/jackson/databind/DeserializationContext;Lcom/fasterxml/jackson/databind/BeanProperty;)Lcom/fasterxml/jackson/databind/JsonDeserializer;",
            "method_body": "public JsonDeserializer<?> createContextual(DeserializationContext ctxt,\nJsonDeserializer<?> del = ctxt.handleSecondaryContextualization(_delegatee, property, _type);\nBeanDeserializerBase newDelegatee = _verifyDeserType(del);\nIterator<SettableBeanProperty> it = newDelegatee.properties();\nHashSet<String> unwrappedNames = null;\nwhile (it.hasNext()) {\nSettableBeanProperty prop = it.next();\nJavaType type = prop.getType();\nif (!TypeUtil.isIndexedType(type)) {\ncontinue;\nPropertyName wrapperName = prop.getWrapperName();\nif (wrapperName != null && wrapperName != PropertyName.NO_NAME) {\nif (unwrappedNames == null) {\nunwrappedNames = new HashSet<String>();\nunwrappedNames.add(prop.getName());\n}\nif (unwrappedNames == null) {\nreturn newDelegatee;\nreturn new WrapperHandlingDeserializer(newDelegatee, unwrappedNames);\n}",
            "method_id": 46
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.deser.WrapperHandlingDeserializer:_verifyDeserType(Lcom/fasterxml/jackson/databind/JsonDeserializer;)Lcom/fasterxml/jackson/databind/deser/BeanDeserializerBase;",
            "method_body": "protected BeanDeserializerBase _verifyDeserType(JsonDeserializer<?> deser)\nif (!(deser instanceof BeanDeserializerBase)) {\nreturn (BeanDeserializerBase) deser;\n}",
            "method_id": 47
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser:<init>(Lcom/fasterxml/jackson/core/io/IOContext;IILcom/fasterxml/jackson/core/ObjectCodec;Ljavax/xml/stream/XMLStreamReader;)V",
            "method_body": "public FromXmlParser(IOContext ctxt, int genericParserFeatures, int xmlFeatures,\nsuper(genericParserFeatures);\n_formatFeatures = xmlFeatures;\n_ioContext = ctxt;\n_objectCodec = codec;\n_parsingContext = XmlReadContext.createRootContext(-1, -1);\n_nextToken = JsonToken.START_OBJECT;\n_xmlTokens = new XmlTokenStream(xmlReader, ctxt.getSourceReference());\n}",
            "method_id": 48
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser:addVirtualWrapping(Ljava/util/Set;)V",
            "method_body": "public void addVirtualWrapping(Set<String> namesToWrap)\nString name = _xmlTokens.getLocalName();\nif (name != null && namesToWrap.contains(name)) {\n_xmlTokens.repeatStartElement();\n_namesToWrap = namesToWrap;\n_parsingContext.setNamesToWrap(namesToWrap);\n}",
            "method_id": 49
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext:<init>(Lcom/fasterxml/jackson/dataformat/xml/deser/XmlReadContext;III)V",
            "method_body": "public XmlReadContext(XmlReadContext parent, int type, int lineNr, int colNr)\nsuper();\n_type = type;\n_parent = parent;\n_lineNr = lineNr;\n_columnNr = colNr;\n_index = -1;\n}",
            "method_id": 50
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext:createRootContext(II)Lcom/fasterxml/jackson/dataformat/xml/deser/XmlReadContext;",
            "method_body": "public static XmlReadContext createRootContext(int lineNr, int colNr) {\nreturn new XmlReadContext(null, TYPE_ROOT, lineNr, colNr);\n}",
            "method_id": 51
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext:createChildObjectContext(II)Lcom/fasterxml/jackson/dataformat/xml/deser/XmlReadContext;",
            "method_body": "public final XmlReadContext createChildObjectContext(int lineNr, int colNr)\nXmlReadContext ctxt = _child;\nif (ctxt == null) {\n_child = ctxt = new XmlReadContext(this, TYPE_OBJECT, lineNr, colNr);\nreturn ctxt;\n}",
            "method_id": 52
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext:setNamesToWrap(Ljava/util/Set;)V",
            "method_body": "public void setNamesToWrap(Set<String> namesToWrap) {\n_namesToWrap = namesToWrap;\n}",
            "method_id": 53
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.deser.XmlTokenStream:repeatStartElement()V",
            "method_body": "protected void repeatStartElement()\nif (_currentState != XML_START_ELEMENT) {\nif (_currentWrapper == null) {\n_currentWrapper = ElementWrapper.matchingWrapper(_currentWrapper, _localName, _namespaceURI);\n_currentWrapper = ElementWrapper.matchingWrapper(_currentWrapper.getParent(), _localName, _namespaceURI);\n_repeatElement = REPLAY_START_DUP;\n}",
            "method_id": 54
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser$1:<clinit>()V",
            "method_body": "public JsonToken nextToken() throws IOException\n_binaryValue = null;\nif (_nextToken != null) {\nJsonToken t = _nextToken;\n_currToken = t;\n_nextToken = null;\nswitch (t) {\n_parsingContext = _parsingContext.createChildObjectContext(-1, -1);\nbreak;\n_parsingContext.setCurrentName(_xmlTokens.getLocalName());\nbreak;\nreturn t;\nint token = _xmlTokens.next();\nwhile (token == XmlTokenStream.XML_START_ELEMENT) {\nif (_mayBeLeaf) {\n_nextToken = JsonToken.FIELD_NAME;\n_parsingContext = _parsingContext.createChildObjectContext(-1, -1);\nreturn (_currToken = JsonToken.START_OBJECT);\nif (_parsingContext.inArray()) {\ntoken = _xmlTokens.next();\n_mayBeLeaf = true;\ncontinue;\nString name = _xmlTokens.getLocalName();\n_parsingContext.setCurrentName(name);\nif (_namesToWrap != null && _namesToWrap.contains(name)) {\n_xmlTokens.repeatStartElement();\n_mayBeLeaf = true;\nreturn (_currToken = JsonToken.FIELD_NAME);\nswitch (token) {\nif (_mayBeLeaf) {\n_mayBeLeaf = false;\nreturn (_currToken = JsonToken.VALUE_NULL);\n_currToken = _parsingContext.inArray() ? JsonToken.END_ARRAY : JsonToken.END_OBJECT;\n_parsingContext = _parsingContext.getParent();\n_namesToWrap = _parsingContext.getNamesToWrap();\nreturn _currToken;\nif (_mayBeLeaf) {\n_mayBeLeaf = false;\n_nextToken = JsonToken.FIELD_NAME;\n_currText = _xmlTokens.getText();\n_parsingContext = _parsingContext.createChildObjectContext(-1, -1);\nreturn (_currToken = JsonToken.START_OBJECT);\n_currText = _xmlTokens.getText();\nreturn (_currToken = JsonToken.VALUE_STRING);\n_currText = _xmlTokens.getText();\nif (_mayBeLeaf) {\n_mayBeLeaf = false;\n_xmlTokens.skipEndElement();\nif (_parsingContext.inArray()) {\nif (_isEmpty(_currText)) {\n_currToken = JsonToken.END_ARRAY;\n_parsingContext = _parsingContext.getParent();\n_namesToWrap = _parsingContext.getNamesToWrap();\nreturn _currToken;\nreturn (_currToken = JsonToken.VALUE_STRING);\n}",
            "method_id": 55
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.deser.ElementWrapper:<init>(Lcom/fasterxml/jackson/dataformat/xml/deser/ElementWrapper;Ljava/lang/String;Ljava/lang/String;)V",
            "method_body": "private ElementWrapper(ElementWrapper parent,\n{\n_parent = parent;\n_wrapperName = wrapperLocalName;\n_wrapperNamespace = (wrapperNamespace == null) ? \"\" : wrapperNamespace;\n}",
            "method_id": 56
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.deser.ElementWrapper:matchingWrapper(Lcom/fasterxml/jackson/dataformat/xml/deser/ElementWrapper;Ljava/lang/String;Ljava/lang/String;)Lcom/fasterxml/jackson/dataformat/xml/deser/ElementWrapper;",
            "method_body": "public static ElementWrapper matchingWrapper(ElementWrapper parent,\nreturn new ElementWrapper(parent, wrapperLocalName, wrapperNamespace);\n}",
            "method_id": 57
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.deser.ElementWrapper:intermediateWrapper()Lcom/fasterxml/jackson/dataformat/xml/deser/ElementWrapper;",
            "method_body": "public ElementWrapper intermediateWrapper() {\nreturn new ElementWrapper(this, null, null);\n}",
            "method_id": 58
        },
        {
            "method_signature": "com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser:getParsingContext()Lcom/fasterxml/jackson/dataformat/xml/deser/XmlReadContext;",
            "method_body": "public XmlReadContext getParsingContext() {\nreturn _parsingContext;\n}",
            "method_id": 59
        }
    ]
}