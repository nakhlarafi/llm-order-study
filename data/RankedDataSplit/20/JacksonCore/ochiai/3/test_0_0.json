{
    "bug_id": 3,
    "test_id": 0,
    "test_name": "com.fasterxml.jackson.core.json.TestLocation.testOffsetWithInputOffset",
    "test_body": "public void testOffsetWithInputOffset() throws Exception\n{\nfinal JsonFactory f = new JsonFactory();\nJsonLocation loc;\nJsonParser p;\n// 3 spaces before, 2 after, just for padding\nbyte[] b = \"   { }  \".getBytes(\"UTF-8\");\n63: // and then peel them off\np = f.createParser(b, 3, b.length-5);\nassertToken(JsonToken.START_OBJECT, p.nextToken());\n67: loc = p.getTokenLocation();\nassertEquals(0L, loc.getByteOffset());\nassertEquals(-1L, loc.getCharOffset());",
    "stack_trace": "junit.framework.AssertionFailedError: expected:<0> but was:<3>\nat junit.framework.Assert.fail(Assert.java:57)\nat junit.framework.Assert.failNotEquals(Assert.java:329)\nat junit.framework.Assert.assertEquals(Assert.java:78)\nat junit.framework.Assert.assertEquals(Assert.java:159)\nat junit.framework.Assert.assertEquals(Assert.java:166)\nat junit.framework.TestCase.assertEquals(TestCase.java:324)\nat com.fasterxml.jackson.core.json.TestLocation.testOffsetWithInputOffset(TestLocation.java:68)",
    "covered_methods": [
        {
            "method_signature": "com.fasterxml.jackson.core.JsonFactory:createParser([BII)Lcom/fasterxml/jackson/core/JsonParser;",
            "method_body": "public JsonParser createParser(byte[] data, int offset, int len)\nIOContext ctxt = _createContext(data, true);\nif (_inputDecorator != null) {\nreturn _createParser(data, offset, len, ctxt);\n}",
            "method_id": 0
        },
        {
            "method_signature": "com.fasterxml.jackson.core.JsonLocation:getByteOffset()J",
            "method_body": "public long getByteOffset()\nreturn _totalBytes;\n}",
            "method_id": 1
        },
        {
            "method_signature": "com.fasterxml.jackson.core.base.ParserBase:getTokenCharacterOffset()J",
            "method_body": "public long getTokenCharacterOffset() { return _tokenInputTotal; }\npublic long getTokenCharacterOffset() { return _tokenInputTotal; }",
            "method_id": 2
        },
        {
            "method_signature": "com.fasterxml.jackson.core.base.ParserBase:getTokenLineNr()I",
            "method_body": "public int getTokenLineNr() { return _tokenInputRow; }\npublic int getTokenLineNr() { return _tokenInputRow; }",
            "method_id": 3
        },
        {
            "method_signature": "com.fasterxml.jackson.core.base.ParserBase:getTokenColumnNr()I",
            "method_body": "public int getTokenColumnNr() {\nint col = _tokenInputCol;\nreturn (col < 0) ? col : (col + 1);\n}",
            "method_id": 4
        },
        {
            "method_signature": "com.fasterxml.jackson.core.json.UTF8StreamJsonParser:getTokenLocation()Lcom/fasterxml/jackson/core/JsonLocation;",
            "method_body": "public JsonLocation getTokenLocation()\nreturn new JsonLocation(_ioContext.getSourceReference(),\n}",
            "method_id": 5
        },
        {
            "method_signature": "com.fasterxml.jackson.core.JsonFactory:_createParser([BIILcom/fasterxml/jackson/core/io/IOContext;)Lcom/fasterxml/jackson/core/JsonParser;",
            "method_body": "protected JsonParser _createParser(byte[] data, int offset, int len, IOContext ctxt)\nreturn new ByteSourceJsonBootstrapper(ctxt, data, offset, len).constructParser(_parserFeatures,\n}",
            "method_id": 6
        },
        {
            "method_signature": "com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper:<init>(Lcom/fasterxml/jackson/core/io/IOContext;[BII)V",
            "method_body": "public ByteSourceJsonBootstrapper(IOContext ctxt, byte[] inputBuffer, int inputStart, int inputLen)\n{\n_context = ctxt;\n_in = null;\n_inputBuffer = inputBuffer;\n_inputPtr = inputStart;\n_inputEnd = (inputStart + inputLen);\n_inputProcessed = -inputStart;\n_bufferRecyclable = false;\n}",
            "method_id": 7
        },
        {
            "method_signature": "com.fasterxml.jackson.core.io.IOContext:getSourceReference()Ljava/lang/Object;",
            "method_body": "public Object getSourceReference() { return _sourceRef; }\npublic Object getSourceReference() { return _sourceRef; }",
            "method_id": 8
        },
        {
            "method_signature": "com.fasterxml.jackson.core.JsonLocation:<init>(Ljava/lang/Object;JJII)V",
            "method_body": "public JsonLocation(Object sourceRef, long totalBytes, long totalChars,\n{\n_sourceRef = sourceRef;\n_totalBytes = totalBytes;\n_totalChars = totalChars;\n_lineNr = lineNr;\n_columnNr = columnNr;\n}",
            "method_id": 9
        },
        {
            "method_signature": "com.fasterxml.jackson.core.JsonLocation:<clinit>()V",
            "method_body": "private static final long serialVersionUID = 1L;\npublic final static JsonLocation NA = new JsonLocation(\"N/A\", -1L, -1L, -1, -1);\n}",
            "method_id": 10
        },
        {
            "method_signature": "com.fasterxml.jackson.core.json.JsonReadContext:createChildObjectContext(II)Lcom/fasterxml/jackson/core/json/JsonReadContext;",
            "method_body": "public JsonReadContext createChildObjectContext(int lineNr, int colNr)\nJsonReadContext ctxt = _child;\nif (ctxt == null) {\n_child = ctxt = new JsonReadContext(this,\nreturn ctxt;\n}",
            "method_id": 11
        },
        {
            "method_signature": "com.fasterxml.jackson.core.json.UTF8StreamJsonParser:<init>(Lcom/fasterxml/jackson/core/io/IOContext;ILjava/io/InputStream;Lcom/fasterxml/jackson/core/ObjectCodec;Lcom/fasterxml/jackson/core/sym/BytesToNameCanonicalizer;[BIIZ)V",
            "method_body": "final static byte BYTE_LF = (byte) '\\n';\nprivate final static int[] _icUTF8 = CharTypes.getInputCodeUtf8();\nprotected final static int[] _icLatin1 = CharTypes.getInputCodeLatin1();\nprivate final static int[] _icWS = CharTypes.getInputCodeWS();\nprotected int[] _quadBuffer = new int[16];\nprotected boolean _tokenIncomplete = false;\nsuper(ctxt, features);\n_inputStream = in;\n_objectCodec = codec;\n_symbols = sym;\n_inputBuffer = inputBuffer;\n_inputPtr = start;\n_inputEnd = end;\n_bufferRecyclable = bufferRecyclable;\n}",
            "method_id": 12
        },
        {
            "method_signature": "com.fasterxml.jackson.core.json.UTF8StreamJsonParser:<clinit>()V",
            "method_body": "final static byte BYTE_LF = (byte) '\\n';\nprivate final static int[] _icUTF8 = CharTypes.getInputCodeUtf8();\nprotected final static int[] _icLatin1 = CharTypes.getInputCodeLatin1();\nprivate final static int[] _icWS = CharTypes.getInputCodeWS();\nprotected int[] _quadBuffer = new int[16];\nprotected boolean _tokenIncomplete = false;\nsuper(ctxt, features);\n_inputStream = in;\n_objectCodec = codec;\n_symbols = sym;\n_inputBuffer = inputBuffer;\n_inputPtr = start;\n_inputEnd = end;\n_bufferRecyclable = bufferRecyclable;\n}",
            "method_id": 13
        },
        {
            "method_signature": "com.fasterxml.jackson.core.json.UTF8StreamJsonParser:nextToken()Lcom/fasterxml/jackson/core/JsonToken;",
            "method_body": "public JsonToken nextToken()\n_numTypesValid = NR_UNKNOWN;\nif (_currToken == JsonToken.FIELD_NAME) {\nif (_tokenIncomplete) {\nint i = _skipWSOrEnd();\nif (i < 0) { // end-of-input\n_tokenInputTotal = _currInputProcessed + _inputPtr - 1;\n_tokenInputRow = _currInputRow;\n_tokenInputCol = _inputPtr - _currInputRowStart - 1;\n_binaryValue = null;\nif (i == INT_RBRACKET) {\n}",
            "method_id": 14
        },
        {
            "method_signature": "com.fasterxml.jackson.core.json.UTF8StreamJsonParser:_nextTokenNotInObject(I)Lcom/fasterxml/jackson/core/JsonToken;",
            "method_body": "private final JsonToken _nextTokenNotInObject(int i)\nif (i == INT_QUOTE) {\nswitch (i) {\n_parsingContext = _parsingContext.createChildObjectContext(_tokenInputRow, _tokenInputCol);\nreturn (_currToken = JsonToken.START_OBJECT);\n}",
            "method_id": 15
        },
        {
            "method_signature": "com.fasterxml.jackson.core.json.UTF8StreamJsonParser:_skipWSOrEnd()I",
            "method_body": "private final int _skipWSOrEnd() throws IOException\nfinal int[] codes = _icWS;\nwhile ((_inputPtr < _inputEnd) || loadMore()) {\nfinal int i = _inputBuffer[_inputPtr++] & 0xFF;\nswitch (codes[i]) {\nreturn i;\n}",
            "method_id": 16
        },
        {
            "method_signature": "com.fasterxml.jackson.core.io.CharTypes:getInputCodeUtf8()[I",
            "method_body": "public static int[] getInputCodeUtf8() { return sInputCodesUTF8; }\npublic static int[] getInputCodeUtf8() { return sInputCodesUTF8; }",
            "method_id": 17
        },
        {
            "method_signature": "com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper:detectEncoding()Lcom/fasterxml/jackson/core/JsonEncoding;",
            "method_body": "public JsonEncoding detectEncoding()\nboolean foundEncoding = false;\nif (ensureLoaded(4)) {\nint i16 = ((_inputBuffer[_inputPtr] & 0xFF) << 8)\nif (checkUTF16(i16)) {\nif (!foundEncoding) {\nenc = JsonEncoding.UTF8;\n_context.setEncoding(enc);\nreturn enc;\n}",
            "method_id": 18
        },
        {
            "method_signature": "com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper:constructParser(ILcom/fasterxml/jackson/core/ObjectCodec;Lcom/fasterxml/jackson/core/sym/BytesToNameCanonicalizer;Lcom/fasterxml/jackson/core/sym/CharsToNameCanonicalizer;ZZ)Lcom/fasterxml/jackson/core/JsonParser;",
            "method_body": "public JsonParser constructParser(int parserFeatures, ObjectCodec codec,\nJsonEncoding enc = detectEncoding();\nif (enc == JsonEncoding.UTF8) {\nif (canonicalize) {\nBytesToNameCanonicalizer can = rootByteSymbols.makeChild(canonicalize, intern);\nreturn new UTF8StreamJsonParser(_context, parserFeatures, _in, codec, can, _inputBuffer, _inputPtr, _inputEnd, _bufferRecyclable);\n}",
            "method_id": 19
        }
    ]
}