{
    "bug_id": 15,
    "test_id": 0,
    "test_name": "com.fasterxml.jackson.core.filter.BasicParserFilteringTest.testNotAllowMultipleMatches",
    "test_body": "108: public void testNotAllowMultipleMatches() throws Exception\n109: {\n110: String jsonString = aposToQuotes(\"{'a':123,'array':[1,2],'ob':{'value0':2,'value':3,'value2':4},'value':4,'b':true}\");\n111: JsonParser p0 = JSON_F.createParser(jsonString);\n112: JsonParser p = new FilteringParserDelegate(p0,\n113: new NameMatchFilter(\"value\"),\n114: false, // includePath\n115: false // multipleMatches -false\n116: );\n117: String result = readAndWrite(JSON_F, p);\n118: assertEquals(aposToQuotes(\"3\"), result);\n119: }\n",
    "stack_trace": "junit.framework.ComparisonFailure: expected:<3[]> but was:<3[ 4]>\nat junit.framework.Assert.assertEquals(Assert.java:100)\nat junit.framework.Assert.assertEquals(Assert.java:107)\nat junit.framework.TestCase.assertEquals(TestCase.java:269)\nat com.fasterxml.jackson.core.filter.BasicParserFilteringTest.testNotAllowMultipleMatches(BasicParserFilteringTest.java:118)",
    "covered_methods": [
        {
            "method_signature": "com.fasterxml.jackson.core.io.IOContext:isResourceManaged()Z",
            "method_body": "public boolean isResourceManaged() { return _managedResource; }\npublic boolean isResourceManaged() { return _managedResource; }",
            "method_id": 60
        },
        {
            "method_signature": "com.fasterxml.jackson.core.json.WriterBasedJsonGenerator:_verifyValueWrite(Ljava/lang/String;)V",
            "method_body": "protected void _verifyValueWrite(String typeMsg) throws IOException\nif (_cfgPrettyPrinter != null) {\nfinal int status = _writeContext.writeValue();\nif (status == JsonWriteContext.STATUS_EXPECT_NAME) {\nswitch (status) {\nif (_rootValueSeparator != null) {\nwriteRaw(_rootValueSeparator.getValue());\nreturn;\nreturn;\n}",
            "method_id": 61
        },
        {
            "method_signature": "com.fasterxml.jackson.core.JsonFactory:createGenerator(Ljava/io/Writer;)Lcom/fasterxml/jackson/core/JsonGenerator;",
            "method_body": "public JsonGenerator createGenerator(Writer w) throws IOException {\nIOContext ctxt = _createContext(w, false);\nreturn _createGenerator(_decorate(w, ctxt), ctxt);\n}",
            "method_id": 62
        },
        {
            "method_signature": "com.fasterxml.jackson.core.JsonFactory:_createGenerator(Ljava/io/Writer;Lcom/fasterxml/jackson/core/io/IOContext;)Lcom/fasterxml/jackson/core/JsonGenerator;",
            "method_body": "protected JsonGenerator _createGenerator(Writer out, IOContext ctxt) throws IOException\nWriterBasedJsonGenerator gen = new WriterBasedJsonGenerator(ctxt,\nif (_characterEscapes != null) {\nSerializableString rootSep = _rootValueSeparator;\nif (rootSep != DEFAULT_ROOT_VALUE_SEPARATOR) {\nreturn gen;\n}",
            "method_id": 63
        },
        {
            "method_signature": "com.fasterxml.jackson.core.json.WriterBasedJsonGenerator:close()V",
            "method_body": "public void close() throws IOException\nsuper.close();\nif (_outputBuffer != null\nJsonStreamContext ctxt = getOutputContext();\nif (ctxt.inArray()) {\n} else if (ctxt.inObject()) {\n_flushBuffer();\n_outputHead = 0;\n_outputTail = 0;\nif (_writer != null) {\nif (_ioContext.isResourceManaged() || isEnabled(Feature.AUTO_CLOSE_TARGET)) {\n_writer.close();\n_releaseBuffers();\n}",
            "method_id": 64
        },
        {
            "method_signature": "com.fasterxml.jackson.core.json.WriterBasedJsonGenerator:_releaseBuffers()V",
            "method_body": "protected void _releaseBuffers()\nchar[] buf = _outputBuffer;\nif (buf != null) {\n_outputBuffer = null;\n_ioContext.releaseConcatBuffer(buf);\n}",
            "method_id": 65
        },
        {
            "method_signature": "com.fasterxml.jackson.core.json.WriterBasedJsonGenerator:_flushBuffer()V",
            "method_body": "protected void _flushBuffer() throws IOException\nint len = _outputTail - _outputHead;\nif (len > 0) {\nint offset = _outputHead;\n_outputTail = _outputHead = 0;\n_writer.write(_outputBuffer, offset, len);\n}",
            "method_id": 66
        },
        {
            "method_signature": "com.fasterxml.jackson.core.json.WriterBasedJsonGenerator:<init>(Lcom/fasterxml/jackson/core/io/IOContext;ILcom/fasterxml/jackson/core/ObjectCodec;Ljava/io/Writer;)V",
            "method_body": "public WriterBasedJsonGenerator(IOContext ctxt, int features,\nsuper(ctxt, features, codec);\n_writer = w;\n_outputBuffer = ctxt.allocConcatBuffer();\n_outputEnd = _outputBuffer.length;\n}",
            "method_id": 67
        },
        {
            "method_signature": "com.fasterxml.jackson.core.json.WriterBasedJsonGenerator:<clinit>()V",
            "method_body": "final protected static int SHORT_WRITE = 32;\nfinal protected static char[] HEX_CHARS = CharTypes.copyHexChars();\n* being written using {@link #_writer}.",
            "method_id": 68
        },
        {
            "method_signature": "com.fasterxml.jackson.core.filter.TokenFilter:<init>()V",
            "method_body": "protected TokenFilter() { }\nprotected TokenFilter() { }",
            "method_id": 69
        },
        {
            "method_signature": "com.fasterxml.jackson.core.filter.TokenFilter:<clinit>()V",
            "method_body": "public final static TokenFilter INCLUDE_ALL = new TokenFilter();\nprotected TokenFilter() { }",
            "method_id": 70
        },
        {
            "method_signature": "com.fasterxml.jackson.core.filter.TokenFilter:includeRootValue(I)Lcom/fasterxml/jackson/core/filter/TokenFilter;",
            "method_body": "public TokenFilter includeRootValue(int index) {\nreturn this;\n}",
            "method_id": 71
        },
        {
            "method_signature": "com.fasterxml.jackson.core.filter.TokenFilterContext:<init>(ILcom/fasterxml/jackson/core/filter/TokenFilterContext;Lcom/fasterxml/jackson/core/filter/TokenFilter;Z)V",
            "method_body": "protected TokenFilterContext(int type, TokenFilterContext parent,\nsuper();\n_type = type;\n_parent = parent;\n_filter = filter;\n_index = -1;\n_startHandled = startHandled;\n_needToHandleName = false;\n}",
            "method_id": 72
        },
        {
            "method_signature": "com.fasterxml.jackson.core.filter.TokenFilterContext:createRootContext(Lcom/fasterxml/jackson/core/filter/TokenFilter;)Lcom/fasterxml/jackson/core/filter/TokenFilterContext;",
            "method_body": "public static TokenFilterContext createRootContext(TokenFilter filter) {\nreturn new TokenFilterContext(TYPE_ROOT, null, filter, true);\n}",
            "method_id": 73
        },
        {
            "method_signature": "com.fasterxml.jackson.core.filter.TokenFilterContext:createChildObjectContext(Lcom/fasterxml/jackson/core/filter/TokenFilter;Z)Lcom/fasterxml/jackson/core/filter/TokenFilterContext;",
            "method_body": "public TokenFilterContext createChildObjectContext(TokenFilter filter, boolean writeStart) {\nTokenFilterContext ctxt = _child;\nif (ctxt == null) {\n_child = ctxt = new TokenFilterContext(TYPE_OBJECT, this, filter, writeStart);\nreturn ctxt;\nreturn ctxt.reset(TYPE_OBJECT, filter, writeStart);\n}",
            "method_id": 74
        },
        {
            "method_signature": "com.fasterxml.jackson.core.filter.TokenFilterContext:setFieldName(Ljava/lang/String;)Lcom/fasterxml/jackson/core/filter/TokenFilter;",
            "method_body": "public TokenFilter setFieldName(String name) throws JsonProcessingException {\n_currentName = name;\n_needToHandleName = true;\nreturn _filter;\n}",
            "method_id": 75
        },
        {
            "method_signature": "com.fasterxml.jackson.core.filter.TokenFilterContext:checkValue(Lcom/fasterxml/jackson/core/filter/TokenFilter;)Lcom/fasterxml/jackson/core/filter/TokenFilter;",
            "method_body": "public TokenFilter checkValue(TokenFilter filter) {\nif (_type == TYPE_OBJECT) {\nreturn filter;\nint ix = ++_index;\nif (_type == TYPE_ARRAY) {\nreturn filter.includeElement(ix);\nreturn filter.includeRootValue(ix);\n}",
            "method_id": 76
        },
        {
            "method_signature": "com.fasterxml.jackson.core.filter.TokenFilterContext:getFilter()Lcom/fasterxml/jackson/core/filter/TokenFilter;",
            "method_body": "public TokenFilter getFilter() { return _filter; }\npublic TokenFilter getFilter() { return _filter; }",
            "method_id": 77
        },
        {
            "method_signature": "com.fasterxml.jackson.core.util.BufferRecycler:releaseCharBuffer(I[C)V",
            "method_body": "public void releaseCharBuffer(int ix, char[] buffer) {\n_charBuffers[ix] = buffer;\n}",
            "method_id": 78
        },
        {
            "method_signature": "com.fasterxml.jackson.core.JsonStreamContext:inObject()Z",
            "method_body": "public final boolean inObject() { return _type == TYPE_OBJECT; }\npublic final boolean inObject() { return _type == TYPE_OBJECT; }",
            "method_id": 79
        }
    ]
}