{
    "bug_id": 15,
    "test_id": 0,
    "test_name": "com.fasterxml.jackson.core.filter.BasicParserFilteringTest.testNotAllowMultipleMatches",
    "test_body": "public void testNotAllowMultipleMatches() throws Exception\n{\nString jsonString = aposToQuotes(\"{'a':123,'array':[1,2],'ob':{'value0':2,'value':3,'value2':4},'value':4,'b':true}\");\nJsonParser p0 = JSON_F.createParser(jsonString);\nJsonParser p = new FilteringParserDelegate(p0,\nnew NameMatchFilter(\"value\"),\nfalse, // includePath\nfalse // multipleMatches -false\n);\nString result = readAndWrite(JSON_F, p);\nassertEquals(aposToQuotes(\"3\"), result);\n}\n",
    "stack_trace": "junit.framework.ComparisonFailure: expected:<3[]> but was:<3[ 4]>\nat junit.framework.Assert.assertEquals(Assert.java:100)\nat junit.framework.Assert.assertEquals(Assert.java:107)\nat junit.framework.TestCase.assertEquals(TestCase.java:269)\nat com.fasterxml.jackson.core.filter.BasicParserFilteringTest.testNotAllowMultipleMatches(BasicParserFilteringTest.java:118)",
    "covered_methods": [
        {
            "method_signature": "com.fasterxml.jackson.core.filter.TokenFilterContext:createChildObjectContext(Lcom/fasterxml/jackson/core/filter/TokenFilter;Z)Lcom/fasterxml/jackson/core/filter/TokenFilterContext;",
            "method_body": "public TokenFilterContext createChildObjectContext(TokenFilter filter, boolean writeStart) {\nTokenFilterContext ctxt = _child;\nif (ctxt == null) {\n_child = ctxt = new TokenFilterContext(TYPE_OBJECT, this, filter, writeStart);\nreturn ctxt;\nreturn ctxt.reset(TYPE_OBJECT, filter, writeStart);\n}",
            "method_id": 60,
            "loc": 7
        },
        {
            "method_signature": "com.fasterxml.jackson.core.JsonFactory:<clinit>()V",
            "method_body": "public final static String FORMAT_NAME_JSON = \"JSON\";\nprotected final static int DEFAULT_FACTORY_FEATURE_FLAGS = JsonFactory.Feature.collectDefaults();\nprotected final static int DEFAULT_PARSER_FEATURE_FLAGS = JsonParser.Feature.collectDefaults();\nprotected final static int DEFAULT_GENERATOR_FEATURE_FLAGS = JsonGenerator.Feature.collectDefaults();\nprivate final static SerializableString DEFAULT_ROOT_VALUE_SEPARATOR = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;\n* This <code>ThreadLocal</code> contains a {@link java.lang.ref.SoftReference}",
            "method_id": 61,
            "loc": 6
        },
        {
            "method_signature": "com.fasterxml.jackson.core.JsonFactory$Feature:collectDefaults()I",
            "method_body": "public static int collectDefaults() {\nint flags = 0;\nfor (Feature f : values()) {\nif (f.enabledByDefault()) { flags |= f.getMask(); }\nreturn flags;\n}",
            "method_id": 62,
            "loc": 6
        },
        {
            "method_signature": "com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer:release()V",
            "method_body": "public void release(){\nif (!maybeDirty()) { return; }\nif (_parent != null && _canonicalize) { // canonicalize set to false if max size was reached\n_parent.mergeChild(this);\n_dirty = false;\n}",
            "method_id": 63,
            "loc": 6
        },
        {
            "method_signature": "com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer:_hashToIndex(I)I",
            "method_body": "public int _hashToIndex(int rawHash) {\nrawHash += (rawHash >>> 15);\nrawHash ^= (rawHash << 7);\nrawHash += (rawHash >>> 3);\nreturn (rawHash & _indexMask);\n}",
            "method_id": 64,
            "loc": 6
        },
        {
            "method_signature": "com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer:copyArrays()V",
            "method_body": "private void copyArrays() {\nfinal String[] oldSyms = _symbols;\n_symbols = Arrays.copyOf(oldSyms, oldSyms.length);\nfinal Bucket[] oldBuckets = _buckets;\n_buckets = Arrays.copyOf(oldBuckets, oldBuckets.length);\n}",
            "method_id": 65,
            "loc": 6
        },
        {
            "method_signature": "com.fasterxml.jackson.core.io.IOContext:<init>(Lcom/fasterxml/jackson/core/util/BufferRecycler;Ljava/lang/Object;Z)V",
            "method_body": "public IOContext(BufferRecycler br, Object sourceRef, boolean managedResource)\n{\n_bufferRecycler = br;\n_sourceRef = sourceRef;\n_managedResource = managedResource;\n}",
            "method_id": 66,
            "loc": 6
        },
        {
            "method_signature": "com.fasterxml.jackson.core.io.IOContext:releaseTokenBuffer([C)V",
            "method_body": "public void releaseTokenBuffer(char[] buf) {\nif (buf != null) {\n_verifyRelease(buf, _tokenCBuffer);\n_tokenCBuffer = null;\n_bufferRecycler.releaseCharBuffer(BufferRecycler.CHAR_TOKEN_BUFFER, buf);\n}",
            "method_id": 67,
            "loc": 6
        },
        {
            "method_signature": "com.fasterxml.jackson.core.io.IOContext:releaseConcatBuffer([C)V",
            "method_body": "public void releaseConcatBuffer(char[] buf) {\nif (buf != null) {\n_verifyRelease(buf, _concatCBuffer);\n_concatCBuffer = null;\n_bufferRecycler.releaseCharBuffer(BufferRecycler.CHAR_CONCAT_BUFFER, buf);\n}",
            "method_id": 68,
            "loc": 6
        },
        {
            "method_signature": "com.fasterxml.jackson.core.json.JsonGeneratorImpl:<init>(Lcom/fasterxml/jackson/core/io/IOContext;ILcom/fasterxml/jackson/core/ObjectCodec;)V",
            "method_body": "public JsonGeneratorImpl(IOContext ctxt, int features, ObjectCodec codec)\nsuper(features, codec);\n_ioContext = ctxt;\nif (Feature.ESCAPE_NON_ASCII.enabledIn(features)) {\n_cfgUnqNames = !Feature.QUOTE_FIELD_NAMES.enabledIn(features);\n}",
            "method_id": 69,
            "loc": 6
        },
        {
            "method_signature": "com.fasterxml.jackson.core.json.JsonWriteContext:writeValue()I",
            "method_body": "public int writeValue() {\nif (_type == TYPE_OBJECT) {\nif (_type == TYPE_ARRAY) {\n++_index;\nreturn (_index == 0) ? STATUS_OK_AS_IS : STATUS_OK_AFTER_SPACE;\n}",
            "method_id": 70,
            "loc": 6
        },
        {
            "method_signature": "com.fasterxml.jackson.core.json.WriterBasedJsonGenerator:<init>(Lcom/fasterxml/jackson/core/io/IOContext;ILcom/fasterxml/jackson/core/ObjectCodec;Ljava/io/Writer;)V",
            "method_body": "public WriterBasedJsonGenerator(IOContext ctxt, int features,\nsuper(ctxt, features, codec);\n_writer = w;\n_outputBuffer = ctxt.allocConcatBuffer();\n_outputEnd = _outputBuffer.length;\n}",
            "method_id": 71,
            "loc": 6
        },
        {
            "method_signature": "com.fasterxml.jackson.core.json.WriterBasedJsonGenerator:writeNumber(I)V",
            "method_body": "public void writeNumber(int i) throws IOException\n_verifyValueWrite(WRITE_NUMBER);\nif (_cfgNumbersAsStrings) {\nif ((_outputTail + 11) >= _outputEnd) {\n_outputTail = NumberOutput.outputInt(i, _outputBuffer, _outputTail);\n}",
            "method_id": 72,
            "loc": 6
        },
        {
            "method_signature": "com.fasterxml.jackson.core.json.WriterBasedJsonGenerator:_releaseBuffers()V",
            "method_body": "protected void _releaseBuffers()\nchar[] buf = _outputBuffer;\nif (buf != null) {\n_outputBuffer = null;\n_ioContext.releaseConcatBuffer(buf);\n}",
            "method_id": 73,
            "loc": 6
        },
        {
            "method_signature": "com.fasterxml.jackson.core.json.ReaderBasedJsonParser:_updateLocation()V",
            "method_body": "private final void _updateLocation()\nint ptr = _inputPtr;\n_tokenInputTotal = _currInputProcessed + ptr;\n_tokenInputRow = _currInputRow;\n_tokenInputCol = ptr - _currInputRowStart;\n}",
            "method_id": 74,
            "loc": 6
        },
        {
            "method_signature": "com.fasterxml.jackson.core.json.ReaderBasedJsonParser:_updateNameLocation()V",
            "method_body": "private final void _updateNameLocation()\nint ptr = _inputPtr;\n_nameStartOffset = ptr;\n_nameStartRow = _currInputRow;\n_nameStartCol = ptr - _currInputRowStart;\n}",
            "method_id": 75,
            "loc": 6
        },
        {
            "method_signature": "com.fasterxml.jackson.core.json.JsonReadContext:createChildArrayContext(II)Lcom/fasterxml/jackson/core/json/JsonReadContext;",
            "method_body": "public JsonReadContext createChildArrayContext(int lineNr, int colNr) {\nJsonReadContext ctxt = _child;\nif (ctxt == null) {\n_child = ctxt = new JsonReadContext(this,\nreturn ctxt;\n}",
            "method_id": 76,
            "loc": 6
        },
        {
            "method_signature": "com.fasterxml.jackson.core.io.NumberInput:parseInt([CII)I",
            "method_body": "public static int parseInt(char[] ch, int off, int len)\nint num = ch[off] - '0';\nif (len > 4) {\nif (len > 1) {\nreturn num;\n}",
            "method_id": 77,
            "loc": 6
        },
        {
            "method_signature": "com.fasterxml.jackson.core.filter.TokenFilterContext:createChildArrayContext(Lcom/fasterxml/jackson/core/filter/TokenFilter;Z)Lcom/fasterxml/jackson/core/filter/TokenFilterContext;",
            "method_body": "public TokenFilterContext createChildArrayContext(TokenFilter filter, boolean writeStart) {\nTokenFilterContext ctxt = _child;\nif (ctxt == null) {\n_child = ctxt = new TokenFilterContext(TYPE_ARRAY, this, filter, writeStart);\nreturn ctxt;\n}",
            "method_id": 78,
            "loc": 6
        },
        {
            "method_signature": "com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer:createRoot()Lcom/fasterxml/jackson/core/sym/CharsToNameCanonicalizer;",
            "method_body": "public static CharsToNameCanonicalizer createRoot() {\nlong now = System.currentTimeMillis();\nint seed = (((int) now) + ((int) (now >>> 32))) | 1;\nreturn createRoot(seed);\n}",
            "method_id": 79,
            "loc": 5
        }
    ]
}