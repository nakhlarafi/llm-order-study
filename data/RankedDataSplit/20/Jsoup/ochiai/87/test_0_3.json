{
    "bug_id": 87,
    "test_id": 0,
    "test_name": "org.jsoup.parser.HtmlParserTest.preservedCaseLinksCantNest",
    "test_body": "@Test public void preservedCaseLinksCantNest() {\nString html = \"<A>ONE <A>Two</A></A>\";\nDocument doc = Parser.htmlParser()\n.settings(ParseSettings.preserveCase)\n.parseInput(html, \"\");\nassertEquals(\"<A> ONE </A> <A> Two </A>\", StringUtil.normaliseWhitespace(doc.body().html()));\n}\n",
    "stack_trace": "junit.framework.AssertionFailedError: expected:<<A> ONE <[/A> <A> Two] </A>> but was:<<A> ONE <[A> Two </A>] </A>>\nat org.junit.Assert.assertEquals(Assert.java:115)\nat org.junit.Assert.assertEquals(Assert.java:144)\nat org.jsoup.parser.HtmlParserTest.preservedCaseLinksCantNest(HtmlParserTest.java:1135)",
    "covered_methods": [
        {
            "method_signature": "org.jsoup.parser.Token:isDoctype()Z",
            "method_body": "final boolean isDoctype() {\nreturn type == TokenType.Doctype;\n}",
            "method_id": 60
        },
        {
            "method_signature": "org.jsoup.parser.Token:isStartTag()Z",
            "method_body": "final boolean isStartTag() {\nreturn type == TokenType.StartTag;\n}",
            "method_id": 61
        },
        {
            "method_signature": "org.jsoup.parser.Token:asStartTag()Lorg/jsoup/parser/Token$StartTag;",
            "method_body": "final StartTag asStartTag() {\nreturn (StartTag) this;\n}",
            "method_id": 62
        },
        {
            "method_signature": "org.jsoup.parser.Token:isEndTag()Z",
            "method_body": "final boolean isEndTag() {\nreturn type == TokenType.EndTag;\n}",
            "method_id": 63
        },
        {
            "method_signature": "org.jsoup.parser.Token:asEndTag()Lorg/jsoup/parser/Token$EndTag;",
            "method_body": "final EndTag asEndTag() {\nreturn (EndTag) this;\n}",
            "method_id": 64
        },
        {
            "method_signature": "org.jsoup.parser.Token:isComment()Z",
            "method_body": "final boolean isComment() {\nreturn type == TokenType.Comment;\n}",
            "method_id": 65
        },
        {
            "method_signature": "org.jsoup.parser.Token:isCharacter()Z",
            "method_body": "final boolean isCharacter() {\nreturn type == TokenType.Character;\n}",
            "method_id": 66
        },
        {
            "method_signature": "org.jsoup.parser.Token:isCData()Z",
            "method_body": "final boolean isCData() {\nreturn this instanceof CData;\n}",
            "method_id": 67
        },
        {
            "method_signature": "org.jsoup.parser.Token:asCharacter()Lorg/jsoup/parser/Token$Character;",
            "method_body": "final Character asCharacter() {\nreturn (Character) this;\n}",
            "method_id": 68
        },
        {
            "method_signature": "org.jsoup.parser.Token$Tag:<init>()V",
            "method_body": "protected String tagName;\nprivate StringBuilder pendingAttributeValue = new StringBuilder(); // but values are accumulated, from e.g. & in hrefs\nprivate boolean hasEmptyAttributeValue = false; // distinguish boolean attribute from empty string value\nprivate boolean hasPendingAttributeValue = false;\nboolean selfClosing = false;\ntagName = null;\nnormalName = null;\npendingAttributeName = null;\nreset(pendingAttributeValue);\npendingAttributeValueS = null;\nhasEmptyAttributeValue = false;\nhasPendingAttributeValue = false;\nselfClosing = false;\nattributes = null;\nreturn this;\n}",
            "method_id": 69
        },
        {
            "method_signature": "org.jsoup.parser.Token$Tag:reset()Lorg/jsoup/parser/Token$Tag;",
            "method_body": "Tag reset() {\ntagName = null;\nnormalName = null;\npendingAttributeName = null;\nreset(pendingAttributeValue);\npendingAttributeValueS = null;\nhasEmptyAttributeValue = false;\nhasPendingAttributeValue = false;\nselfClosing = false;\nattributes = null;\nreturn this;\n}",
            "method_id": 70
        },
        {
            "method_signature": "org.jsoup.parser.Token$Tag:finaliseTag()V",
            "method_body": "final void finaliseTag() {\nif (pendingAttributeName != null) {\n}",
            "method_id": 71
        },
        {
            "method_signature": "org.jsoup.parser.Token$Tag:name()Ljava/lang/String;",
            "method_body": "final String name() { // preserves case, for input into Tag.valueOf (which may drop case)\nValidate.isFalse(tagName == null || tagName.length() == 0);\nreturn tagName;\n}",
            "method_id": 72
        },
        {
            "method_signature": "org.jsoup.parser.Token$Tag:normalName()Ljava/lang/String;",
            "method_body": "final String normalName() { // lower case, used in tree building for working out where in tree it should go\nreturn normalName;\n}",
            "method_id": 73
        },
        {
            "method_signature": "org.jsoup.parser.Token$Tag:name(Ljava/lang/String;)Lorg/jsoup/parser/Token$Tag;",
            "method_body": "final Tag name(String name) {\ntagName = name;\nnormalName = lowerCase(name);\nreturn this;\n}",
            "method_id": 74
        },
        {
            "method_signature": "org.jsoup.parser.Token$Tag:isSelfClosing()Z",
            "method_body": "final boolean isSelfClosing() {\nreturn selfClosing;\n}",
            "method_id": 75
        },
        {
            "method_signature": "org.jsoup.parser.Token$Tag:appendTagName(Ljava/lang/String;)V",
            "method_body": "final void appendTagName(String append) {\ntagName = tagName == null ? append : tagName.concat(append);\nnormalName = lowerCase(tagName);\n}",
            "method_id": 76
        },
        {
            "method_signature": "org.jsoup.parser.Token$StartTag:<init>()V",
            "method_body": "StartTag() {\nsuper();\nattributes = new Attributes();\ntype = TokenType.StartTag;\n}",
            "method_id": 77
        },
        {
            "method_signature": "org.jsoup.parser.Token$StartTag:reset()Lorg/jsoup/parser/Token$Tag;",
            "method_body": "Tag reset() {\nsuper.reset();\nattributes = new Attributes();\nreturn this;\n}",
            "method_id": 78
        },
        {
            "method_signature": "org.jsoup.nodes.Attributes:<clinit>()V",
            "method_body": "protected static final String dataPrefix = \"data-\";\nprivate static final String[] Empty = {};",
            "method_id": 79
        }
    ]
}