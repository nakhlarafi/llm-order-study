{
    "bug_id": 90,
    "test_id": 0,
    "test_name": "org.jsoup.helper.HttpConnectionTest.handlesHeaderEncodingOnRequest",
    "test_body": "@Test public void handlesHeaderEncodingOnRequest() {\nConnection.Request req = new HttpConnection.Request();\nreq.addHeader(\"xxx\", \"\u00c3\u00a9\");\n}\n",
    "stack_trace": "java.lang.ArrayIndexOutOfBoundsException: 1\nat org.jsoup.helper.HttpConnection$Base.looksLikeUtf8(HttpConnection.java:427)\nat org.jsoup.helper.HttpConnection$Base.fixHeaderEncoding(HttpConnection.java:389)\nat org.jsoup.helper.HttpConnection$Base.addHeader(HttpConnection.java:375)\nat org.jsoup.helper.HttpConnectionTest.handlesHeaderEncodingOnRequest(HttpConnectionTest.java:256)",
    "covered_methods": [
        {
            "method_signature": "org.jsoup.helper.HttpConnection$Base:headers(Ljava/lang/String;)Ljava/util/List;",
            "method_body": "public List<String> headers(String name) {\nValidate.notEmpty(name);\nreturn getHeadersCaseInsensitive(name);\n}",
            "method_id": 20
        },
        {
            "method_signature": "org.jsoup.helper.HttpConnection$Base:fixHeaderEncoding(Ljava/lang/String;)Ljava/lang/String;",
            "method_body": "private static String fixHeaderEncoding(String val) {\nbyte[] bytes = val.getBytes(\"ISO-8859-1\");\nif (!looksLikeUtf8(bytes))\nreturn new String(bytes, \"UTF-8\");\n}",
            "method_id": 21
        },
        {
            "method_signature": "org.jsoup.helper.HttpConnection$Base:looksLikeUtf8([B)Z",
            "method_body": "private static boolean looksLikeUtf8(byte[] input) {\nint i = 0;\nif (input.length >= 3 && (input[0] & 0xFF) == 0xEF\nfor (int j = input.length; i < j; ++i) {\nint o = input[i];\nif ((o & 0x80) == 0) {\ncontinue; // ASCII\nif ((o & 0xE0) == 0xC0) {\n} else if ((o & 0xF0) == 0xE0) {\nend = i + 2;\nwhile (i < end) {\ni++;\no = input[i];\nreturn true;\n}",
            "method_id": 22
        },
        {
            "method_signature": "org.jsoup.helper.HttpConnection$Base:getHeadersCaseInsensitive(Ljava/lang/String;)Ljava/util/List;",
            "method_body": "private List<String> getHeadersCaseInsensitive(String name) {\nValidate.notNull(name);\nfor (Map.Entry<String, List<String>> entry : headers.entrySet()) {\nif (name.equalsIgnoreCase(entry.getKey()))\n}\nreturn Collections.emptyList();\n}",
            "method_id": 23
        },
        {
            "method_signature": "org.jsoup.helper.HttpConnection$Request:<init>()V",
            "method_body": "Request() {\ntimeoutMilliseconds = 30000; // 30 seconds\nmaxBodySizeBytes = 1024 * 1024; // 1MB\nfollowRedirects = true;\ndata = new ArrayList<>();\nmethod = Method.GET;\naddHeader(\"Accept-Encoding\", \"gzip\");\naddHeader(USER_AGENT, DEFAULT_UA);\nparser = Parser.htmlParser();\n}",
            "method_id": 24
        },
        {
            "method_signature": "org.jsoup.Connection$Method:<init>(Ljava/lang/String;IZ)V",
            "method_body": "Method(boolean hasBody) {\nthis.hasBody = hasBody;\n}",
            "method_id": 25
        }
    ]
}