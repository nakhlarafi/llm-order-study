{
    "bug_id": 40,
    "test_id": 1,
    "test_name": "org.jsoup.parser.HtmlParserTest.handlesInvalidDoctypes",
    "test_body": "@Test public void handlesInvalidDoctypes() {\n// would previously throw invalid name exception on empty doctype\nDocument doc = Jsoup.parse(\"<!DOCTYPE>\");\nassertEquals(",
    "stack_trace": "java.lang.IllegalArgumentException: String must not be empty\nat org.jsoup.helper.Validate.notEmpty(Validate.java:92)\nat org.jsoup.nodes.DocumentType.<init>(DocumentType.java:22)\nat org.jsoup.parser.HtmlTreeBuilderState$1.process(HtmlTreeBuilderState.java:24)\nat org.jsoup.parser.HtmlTreeBuilder.process(HtmlTreeBuilder.java:111)\nat org.jsoup.parser.TreeBuilder.runParser(TreeBuilder.java:48)\nat org.jsoup.parser.TreeBuilder.parse(TreeBuilder.java:41)\nat org.jsoup.parser.HtmlTreeBuilder.parse(HtmlTreeBuilder.java:54)\nat org.jsoup.parser.Parser.parse(Parser.java:90)\nat org.jsoup.Jsoup.parse(Jsoup.java:58)\nat org.jsoup.parser.HtmlParserTest.handlesInvalidDoctypes(HtmlParserTest.java:812)",
    "covered_methods": [
        {
            "method_signature": "org.jsoup.parser.Token$Doctype:getSystemIdentifier()Ljava/lang/String;",
            "method_body": "public String getSystemIdentifier() {\nreturn systemIdentifier.toString();\n}",
            "method_id": 60
        }
    ]
}