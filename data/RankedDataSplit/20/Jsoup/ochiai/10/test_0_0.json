{
    "bug_id": 10,
    "test_id": 0,
    "test_name": "org.jsoup.nodes.NodeTest.absHandlesRelativeQuery",
    "test_body": "@Test public void absHandlesRelativeQuery() {\nDocument doc = Jsoup.parse(\"<a href='?foo'>One</a> <a href='bar.html?foo'>Two</a>\", \"http://jsoup.org/path/file?bar\");\n48: Element a1 = doc.select(\"a\").first();\nassertEquals(\"http://jsoup.org/path/file?foo\", a1.absUrl(\"href\"));\n51: Element a2 = doc.select(\"a\").get(1);\nassertEquals(\"http://jsoup.org/path/bar.html?foo\", a2.absUrl(\"href\"));\n}\n",
    "stack_trace": "junit.framework.AssertionFailedError: expected:<...tp://jsoup.org/path/[file]?foo> but was:<...tp://jsoup.org/path/[]?foo>\nat org.junit.Assert.assertEquals(Assert.java:115)\nat org.junit.Assert.assertEquals(Assert.java:144)\nat org.jsoup.nodes.NodeTest.absHandlesRelativeQuery(NodeTest.java:49)",
    "covered_methods": [
        {
            "method_signature": "org.jsoup.Jsoup:parse(Ljava/lang/String;Ljava/lang/String;)Lorg/jsoup/nodes/Document;",
            "method_body": "public static Document parse(String html, String baseUri) {\nreturn Parser.parse(html, baseUri);\n}",
            "method_id": 0
        },
        {
            "method_signature": "org.jsoup.nodes.Node:absUrl(Ljava/lang/String;)Ljava/lang/String;",
            "method_body": "public String absUrl(String attributeKey) {\nValidate.notEmpty(attributeKey);\nString relUrl = attr(attributeKey);\nif (!hasAttr(attributeKey)) {\nbase = new URL(baseUri);\n}\nURL abs = new URL(base, relUrl);\nreturn abs.toExternalForm();\n}",
            "method_id": 1
        },
        {
            "method_signature": "org.jsoup.nodes.Attribute:hashCode()I",
            "method_body": "public int hashCode() {\nint result = key != null ? key.hashCode() : 0;\nresult = 31 * result + (value != null ? value.hashCode() : 0);\nreturn result;\n}",
            "method_id": 2
        },
        {
            "method_signature": "org.jsoup.nodes.Node:attr(Ljava/lang/String;)Ljava/lang/String;",
            "method_body": "public String attr(String attributeKey) {\nValidate.notNull(attributeKey);\nif (hasAttr(attributeKey))\nreturn attributes.get(attributeKey);\n}",
            "method_id": 3
        },
        {
            "method_signature": "org.jsoup.nodes.Node:hasAttr(Ljava/lang/String;)Z",
            "method_body": "public boolean hasAttr(String attributeKey) {\nValidate.notNull(attributeKey);\nreturn attributes.hasKey(attributeKey);\n}",
            "method_id": 4
        },
        {
            "method_signature": "org.jsoup.nodes.Attributes:hasKey(Ljava/lang/String;)Z",
            "method_body": "public boolean hasKey(String key) {\nreturn attributes.containsKey(key.toLowerCase());\n}",
            "method_id": 5
        },
        {
            "method_signature": "org.jsoup.nodes.Attributes:get(Ljava/lang/String;)Ljava/lang/String;",
            "method_body": "public String get(String key) {\nValidate.notEmpty(key);\nAttribute attr = attributes.get(key.toLowerCase());\nreturn attr != null ? attr.getValue() : \"\";\n}",
            "method_id": 6
        },
        {
            "method_signature": "org.jsoup.nodes.Attribute:getValue()Ljava/lang/String;",
            "method_body": "public String getValue() {\nreturn value;\n}",
            "method_id": 7
        },
        {
            "method_signature": "org.jsoup.parser.TokenQueue:consumeElementSelector()Ljava/lang/String;",
            "method_body": "public String consumeElementSelector() {\nint start = pos;\nwhile (!isEmpty() && (matchesWord() || matchesAny('|', '_', '-')))\npos++;\nreturn queue.substring(start, pos);\n}",
            "method_id": 8
        },
        {
            "method_signature": "org.jsoup.select.Selector:byTag()Lorg/jsoup/select/Elements;",
            "method_body": "private Elements byTag() {\nString tagName = tq.consumeElementSelector();\nValidate.notEmpty(tagName);\nif (tagName.contains(\"|\"))\nreturn root.getElementsByTag(tagName);\n}",
            "method_id": 9
        },
        {
            "method_signature": "org.jsoup.parser.Tag:hashCode()I",
            "method_body": "public int hashCode() {\nint result = tagName != null ? tagName.hashCode() : 0;\nresult = 31 * result + (isBlock ? 1 : 0);\nresult = 31 * result + (canContainBlock ? 1 : 0);\nresult = 31 * result + (canContainInline ? 1 : 0);\nresult = 31 * result + (optionalClosing ? 1 : 0);\nresult = 31 * result + (empty ? 1 : 0);\nreturn result;\n}",
            "method_id": 10
        },
        {
            "method_signature": "org.jsoup.nodes.Node:hashCode()I",
            "method_body": "public int hashCode() {\nint result = parentNode != null ? parentNode.hashCode() : 0;\nresult = 31 * result + (attributes != null ? attributes.hashCode() : 0);\nreturn result;\n}",
            "method_id": 11
        },
        {
            "method_signature": "org.jsoup.nodes.Element:select(Ljava/lang/String;)Lorg/jsoup/select/Elements;",
            "method_body": "public Elements select(String query) {\nreturn Selector.select(query, this);\n}",
            "method_id": 12
        },
        {
            "method_signature": "org.jsoup.nodes.Element:hashCode()I",
            "method_body": "public int hashCode() {\nint result = super.hashCode();\nresult = 31 * result + (tag != null ? tag.hashCode() : 0);\nreturn result;\n}",
            "method_id": 13
        },
        {
            "method_signature": "org.jsoup.nodes.Attributes:hashCode()I",
            "method_body": "public int hashCode() {\nreturn attributes != null ? attributes.hashCode() : 0;\n}",
            "method_id": 14
        },
        {
            "method_signature": "org.jsoup.nodes.Attribute:createFromEncoded(Ljava/lang/String;Ljava/lang/String;)Lorg/jsoup/nodes/Attribute;",
            "method_body": "public static Attribute createFromEncoded(String unencodedKey, String encodedValue) {\nString value = Entities.unescape(encodedValue);\nreturn new Attribute(unencodedKey, value);\n}",
            "method_id": 15
        },
        {
            "method_signature": "org.jsoup.select.Elements:<init>(Ljava/util/Collection;)V",
            "method_body": "public Elements(Collection<Element> elements) {\ncontents = new ArrayList<Element>(elements);\n}",
            "method_id": 16
        },
        {
            "method_signature": "org.jsoup.select.Elements:iterator()Ljava/util/Iterator;",
            "method_body": "public Iterator<Element> iterator() {return contents.iterator();}\npublic Iterator<Element> iterator() {return contents.iterator();}",
            "method_id": 17
        },
        {
            "method_signature": "org.jsoup.select.Selector:<init>(Ljava/lang/String;Lorg/jsoup/nodes/Element;)V",
            "method_body": "private Selector(String query, Element root) {\nValidate.notNull(query);\nquery = query.trim();\nValidate.notEmpty(query);\nValidate.notNull(root);\nthis.elements = new LinkedHashSet<Element>();\nthis.query = query;\nthis.root = root;\nthis.tq = new TokenQueue(query);\n}",
            "method_id": 18
        },
        {
            "method_signature": "org.jsoup.select.Selector:<clinit>()V",
            "method_body": "private final static String[] combinators = {\",\", \">\", \"+\", \"~\", \" \"};\nprivate final static String[] combinators = {\",\", \">\", \"+\", \"~\", \" \"};",
            "method_id": 19
        }
    ]
}