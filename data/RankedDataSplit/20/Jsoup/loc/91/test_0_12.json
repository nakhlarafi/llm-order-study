{
    "bug_id": 91,
    "test_id": 0,
    "test_name": "org.jsoup.integration.ConnectTest.testBinaryThrowsExceptionWhenTypeIgnored",
    "test_body": "495: public void testBinaryThrowsExceptionWhenTypeIgnored() {\n496: Connection con = Jsoup.connect(FileServlet.Url);\n497: con.data(FileServlet.LocationParam, \"/htmltests/thumb.jpg\");\n498: con.data(FileServlet.ContentTypeParam, \"image/jpeg\");\n499: con.ignoreContentType(true);\n500: 501: boolean threw = false;\n502: try {\n503: con.execute();\n504: Document doc = con.response().parse();\n505: } catch (IOException e) {\n506: threw = true;\n507: assertEquals(\"Input is binary and unsupported\", e.getMessage());\n508: }\n509: assertTrue(threw);\n510: }\n",
    "stack_trace": "",
    "covered_methods": [
        {
            "method_signature": "org.jsoup.parser.TokenQueue:remainingLength()I",
            "method_body": "private int remainingLength() {\nreturn queue.length() - pos;\n}",
            "method_id": 240,
            "loc": 3
        },
        {
            "method_signature": "org.jsoup.parser.TokenQueue:matches(Ljava/lang/String;)Z",
            "method_body": "public boolean matches(String seq) {\nreturn queue.regionMatches(true, pos, seq, 0, seq.length());\n}",
            "method_id": 241,
            "loc": 3
        },
        {
            "method_signature": "org.jsoup.parser.TokenQueue:matchesWhitespace()Z",
            "method_body": "public boolean matchesWhitespace() {\nreturn !isEmpty() && StringUtil.isWhitespace(queue.charAt(pos));\n}",
            "method_id": 242,
            "loc": 3
        },
        {
            "method_signature": "org.jsoup.parser.TokenQueue:matchesWord()Z",
            "method_body": "public boolean matchesWord() {\nreturn !isEmpty() && Character.isLetterOrDigit(queue.charAt(pos));\n}",
            "method_id": 243,
            "loc": 3
        },
        {
            "method_signature": "org.jsoup.parser.TokenQueue:consume()C",
            "method_body": "public char consume() {\nreturn queue.charAt(pos++);\n}",
            "method_id": 244,
            "loc": 3
        },
        {
            "method_signature": "org.jsoup.select.CombiningEvaluator:updateNumEvaluators()V",
            "method_body": "void updateNumEvaluators() {\nnum = evaluators.size();\n}",
            "method_id": 245,
            "loc": 3
        },
        {
            "method_signature": "org.jsoup.select.CombiningEvaluator$And:<init>(Ljava/util/Collection;)V",
            "method_body": "And(Collection<Evaluator> evaluators) {\nsuper(evaluators);\n}",
            "method_id": 246,
            "loc": 3
        },
        {
            "method_signature": "org.jsoup.select.Evaluator$AttributeWithValue:<init>(Ljava/lang/String;Ljava/lang/String;)V",
            "method_body": "public AttributeWithValue(String key, String value) {\nsuper(key, value);\n}",
            "method_id": 247,
            "loc": 3
        },
        {
            "method_signature": "org.jsoup.select.CombiningEvaluator$Or:<init>()V",
            "method_body": "Or() {\nsuper();\n}",
            "method_id": 248,
            "loc": 3
        },
        {
            "method_signature": "org.jsoup.select.Evaluator$Attribute:<init>(Ljava/lang/String;)V",
            "method_body": "public Attribute(String key) {\nthis.key = key;\n}",
            "method_id": 249,
            "loc": 3
        },
        {
            "method_signature": "org.jsoup.helper.DataUtil:validateCharset(Ljava/lang/String;)Ljava/lang/String;",
            "method_body": "private static String validateCharset(String cs) {\nif (cs == null || cs.length() == 0) return null;\n}",
            "method_id": 250,
            "loc": 3
        },
        {
            "method_signature": "org.jsoup.helper.HttpConnection:response()Lorg/jsoup/Connection$Response;",
            "method_body": "public Connection.Response response() {\nreturn res;\n}",
            "method_id": 251,
            "loc": 3
        },
        {
            "method_signature": "org.jsoup.helper.HttpConnection$Base:url()Ljava/net/URL;",
            "method_body": "public URL url() {\nreturn url;\n}",
            "method_id": 252,
            "loc": 3
        },
        {
            "method_signature": "org.jsoup.helper.HttpConnection$Base:method()Lorg/jsoup/Connection$Method;",
            "method_body": "public Method method() {\nreturn method;\n}",
            "method_id": 253,
            "loc": 3
        },
        {
            "method_signature": "org.jsoup.helper.HttpConnection$Base:multiHeaders()Ljava/util/Map;",
            "method_body": "public Map<String, List<String>> multiHeaders() {\nreturn headers;\n}",
            "method_id": 254,
            "loc": 3
        },
        {
            "method_signature": "org.jsoup.helper.HttpConnection$Base:cookies()Ljava/util/Map;",
            "method_body": "public Map<String, String> cookies() {\nreturn cookies;\n}",
            "method_id": 255,
            "loc": 3
        },
        {
            "method_signature": "org.jsoup.helper.HttpConnection$Request:proxy()Ljava/net/Proxy;",
            "method_body": "public Proxy proxy() {\nreturn proxy;\n}",
            "method_id": 256,
            "loc": 3
        },
        {
            "method_signature": "org.jsoup.helper.HttpConnection$Request:timeout()I",
            "method_body": "public int timeout() {\nreturn timeoutMilliseconds;\n}",
            "method_id": 257,
            "loc": 3
        },
        {
            "method_signature": "org.jsoup.helper.HttpConnection$Request:maxBodySize()I",
            "method_body": "public int maxBodySize() {\nreturn maxBodySizeBytes;\n}",
            "method_id": 258,
            "loc": 3
        },
        {
            "method_signature": "org.jsoup.helper.HttpConnection$Request:sslSocketFactory()Ljavax/net/ssl/SSLSocketFactory;",
            "method_body": "public SSLSocketFactory sslSocketFactory() {\nreturn sslSocketFactory;\n}",
            "method_id": 259,
            "loc": 3
        }
    ]
}