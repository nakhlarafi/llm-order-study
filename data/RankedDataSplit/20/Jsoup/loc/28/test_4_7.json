{
    "bug_id": 28,
    "test_id": 4,
    "test_name": "org.jsoup.parser.HtmlParserTest.doesNotFindShortestMatchingEntity",
    "test_body": "724: @Test public void doesNotFindShortestMatchingEntity() {\n725: // previous behaviour was to identify a possible entity, then chomp down the string until a match was found.\n726: // (as defined in html5.) However in practise that lead to spurious matches against the author's intent.\n727: String html = \"One &clubsuite; &clubsuit;\";\n728: Document doc = Jsoup.parse(html);\n729: assertEquals(StringUtil.normaliseWhitespace(\"One &amp;clubsuite; \u00e2\u0099\u00a3\"), doc.body().html());\n730: }\n",
    "stack_trace": "",
    "covered_methods": [
        {
            "method_signature": "org.jsoup.nodes.TextNode:isBlank()Z",
            "method_body": "public boolean isBlank() {\nreturn StringUtil.isBlank(getWholeText());\n}",
            "method_id": 140,
            "loc": 3
        },
        {
            "method_signature": "org.jsoup.nodes.Node$OuterHtmlVisitor:head(Lorg/jsoup/nodes/Node;I)V",
            "method_body": "public void head(Node node, int depth) {\nnode.outerHtmlHead(accum, depth, out);\n}",
            "method_id": 141,
            "loc": 3
        },
        {
            "method_signature": "org.jsoup.nodes.Node$OuterHtmlVisitor:tail(Lorg/jsoup/nodes/Node;I)V",
            "method_body": "public void tail(Node node, int depth) {\nif (!node.nodeName().equals(\"#text\")) // saves a void hit.\n}",
            "method_id": 142,
            "loc": 3
        },
        {
            "method_signature": "org.jsoup.parser.Token:<init>()V",
            "method_body": "private Token() {\n}",
            "method_id": 143,
            "loc": 2
        },
        {
            "method_signature": "org.jsoup.helper.StringUtil:<clinit>()V",
            "method_body": "private static final String[] padding = {\"\", \" \", \"  \", \"   \", \"    \", \"     \", \"      \", \"       \", \"        \", \"         \", \"          \"};\nprivate static final String[] padding = {\"\", \" \", \"  \", \"   \", \"    \", \"     \", \"      \", \"       \", \"        \", \"         \", \"          \"};",
            "method_id": 144,
            "loc": 2
        }
    ]
}