{
    "bug_id": 78,
    "test_id": 0,
    "test_name": "org.jsoup.integration.ConnectTest.handlesEmptyStreamDuringParseRead",
    "test_body": "391: public void handlesEmptyStreamDuringParseRead() throws IOException {\n392: // this handles situations where the remote server sets a content length greater than it actually writes\n393: 394: Connection.Response res = Jsoup.connect(InterruptedServlet.Url)\n395: .timeout(200)\n396: .execute();\n397: 398: boolean threw = false;\n399: try {\n400: Document document = res.parse();\n401: assertEquals(\"Something\", document.title());\n402: } catch (IOException e) {\n403: threw = true;\n404: }\n405: assertEquals(true, threw);\n406: }\n",
    "stack_trace": "",
    "covered_methods": [
        {
            "method_signature": "org.jsoup.nodes.Element$NodeList:onContentsChanged()V",
            "method_body": "public void onContentsChanged() {\nowner.nodelistChanged();\n}",
            "method_id": 180,
            "loc": 3
        },
        {
            "method_signature": "org.jsoup.helper.StringUtil:<clinit>()V",
            "method_body": "private static final int MaxCachedBuilderSize = 8 * 1024;\nprivate static final ThreadLocal<StringBuilder> stringLocal = new ThreadLocal<StringBuilder>(){\n};",
            "method_id": 181,
            "loc": 3
        },
        {
            "method_signature": "org.jsoup.nodes.TextNode:<init>(Ljava/lang/String;)V",
            "method_body": "public TextNode(String text) {\nvalue = text;\n}",
            "method_id": 182,
            "loc": 3
        },
        {
            "method_signature": "org.jsoup.helper.DataUtil:<clinit>()V",
            "method_body": "private static final Pattern charsetPattern = Pattern.compile(\"(?i)\\\\bcharset=\\\\s*(?:[\\\"'])?([^\\\\s,;\\\"']*)\");\nprivate static final char[] mimeBoundaryChars =\nprivate DataUtil() {}",
            "method_id": 183,
            "loc": 3
        },
        {
            "method_signature": "org.jsoup.internal.ConstrainableInputStream:wrap(Ljava/io/InputStream;II)Lorg/jsoup/internal/ConstrainableInputStream;",
            "method_body": "public static ConstrainableInputStream wrap(InputStream in, int bufferSize, int maxSize) {\nreturn in instanceof ConstrainableInputStream\n}",
            "method_id": 184,
            "loc": 3
        },
        {
            "method_signature": "org.jsoup.helper.HttpConnection$Base:url()Ljava/net/URL;",
            "method_body": "public URL url() {\nreturn url;\n}",
            "method_id": 185,
            "loc": 3
        },
        {
            "method_signature": "org.jsoup.helper.HttpConnection$Base:method()Lorg/jsoup/Connection$Method;",
            "method_body": "public Method method() {\nreturn method;\n}",
            "method_id": 186,
            "loc": 3
        },
        {
            "method_signature": "org.jsoup.helper.HttpConnection$Base:multiHeaders()Ljava/util/Map;",
            "method_body": "public Map<String, List<String>> multiHeaders() {\nreturn headers;\n}",
            "method_id": 187,
            "loc": 3
        },
        {
            "method_signature": "org.jsoup.helper.HttpConnection$Base:cookies()Ljava/util/Map;",
            "method_body": "public Map<String, String> cookies() {\nreturn cookies;\n}",
            "method_id": 188,
            "loc": 3
        },
        {
            "method_signature": "org.jsoup.helper.HttpConnection$Request:proxy()Ljava/net/Proxy;",
            "method_body": "public Proxy proxy() {\nreturn proxy;\n}",
            "method_id": 189,
            "loc": 3
        },
        {
            "method_signature": "org.jsoup.helper.HttpConnection$Request:timeout()I",
            "method_body": "public int timeout() {\nreturn timeoutMilliseconds;\n}",
            "method_id": 190,
            "loc": 3
        },
        {
            "method_signature": "org.jsoup.helper.HttpConnection$Request:maxBodySize()I",
            "method_body": "public int maxBodySize() {\nreturn maxBodySizeBytes;\n}",
            "method_id": 191,
            "loc": 3
        },
        {
            "method_signature": "org.jsoup.helper.HttpConnection$Request:ignoreContentType()Z",
            "method_body": "public boolean ignoreContentType() {\nreturn ignoreContentType;\n}",
            "method_id": 192,
            "loc": 3
        },
        {
            "method_signature": "org.jsoup.helper.HttpConnection$Request:data()Ljava/util/Collection;",
            "method_body": "public Collection<Connection.KeyVal> data() {\nreturn data;\n}",
            "method_id": 193,
            "loc": 3
        },
        {
            "method_signature": "org.jsoup.helper.HttpConnection$Request:requestBody()Ljava/lang/String;",
            "method_body": "public String requestBody() {\nreturn body;\n}",
            "method_id": 194,
            "loc": 3
        },
        {
            "method_signature": "org.jsoup.helper.HttpConnection$Request:parser()Lorg/jsoup/parser/Parser;",
            "method_body": "public Parser parser() {\nreturn parser;\n}",
            "method_id": 195,
            "loc": 3
        },
        {
            "method_signature": "org.jsoup.Connection$Method:<init>(Ljava/lang/String;IZ)V",
            "method_body": "Method(boolean hasBody) {\nthis.hasBody = hasBody;\n}",
            "method_id": 196,
            "loc": 3
        },
        {
            "method_signature": "org.jsoup.Connection$Method:hasBody()Z",
            "method_body": "public final boolean hasBody() {\nreturn hasBody;\n}",
            "method_id": 197,
            "loc": 3
        },
        {
            "method_signature": "org.jsoup.helper.HttpConnection$Response:execute(Lorg/jsoup/Connection$Request;)Lorg/jsoup/helper/HttpConnection$Response;",
            "method_body": "static Response execute(Connection.Request req) throws IOException {\nreturn execute(req, null);\n}",
            "method_id": 198,
            "loc": 3
        },
        {
            "method_signature": "org.jsoup.helper.HttpConnection$Response:contentType()Ljava/lang/String;",
            "method_body": "public String contentType() {\nreturn contentType;\n}",
            "method_id": 199,
            "loc": 3
        }
    ]
}