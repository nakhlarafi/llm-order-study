{
    "bug_id": 39,
    "test_id": 0,
    "test_name": "org.jsoup.helper.DataUtilTest.discardsSpuriousByteOrderMarkWhenNoCharsetSet",
    "test_body": "38: @Test public void discardsSpuriousByteOrderMarkWhenNoCharsetSet() {\n39: String html = \"\\uFEFF<html><head><title>One</title></head><body>Two</body></html>\";\n40: ByteBuffer buffer = Charset.forName(\"UTF-8\").encode(html);\n41: Document doc = DataUtil.parseByteData(buffer, null, \"http://foo.com/\", Parser.htmlParser());\n42: assertEquals(\"One\", doc.head().text());\n43: assertEquals(\"UTF-8\", doc.outputSettings().charset().displayName());\n44: }\n",
    "stack_trace": "",
    "covered_methods": [
        {
            "method_signature": "org.jsoup.parser.CharacterReader:advance()V",
            "method_body": "void advance() {\npos++;\n}",
            "method_id": 160,
            "loc": 3
        },
        {
            "method_signature": "org.jsoup.parser.CharacterReader:matches(C)Z",
            "method_body": "boolean matches(char c) {\nreturn !isEmpty() && input[pos] == c;\n}",
            "method_id": 161,
            "loc": 3
        },
        {
            "method_signature": "org.jsoup.parser.Tokeniser:emit(Ljava/lang/String;)V",
            "method_body": "void emit(String str) {\ncharBuffer.append(str);\n}",
            "method_id": 162,
            "loc": 3
        },
        {
            "method_signature": "org.jsoup.parser.Tokeniser:transition(Lorg/jsoup/parser/TokeniserState;)V",
            "method_body": "void transition(TokeniserState state) {\nthis.state = state;\n}",
            "method_id": 163,
            "loc": 3
        },
        {
            "method_signature": "org.jsoup.parser.Tokeniser:createTempBuffer()V",
            "method_body": "void createTempBuffer() {\ndataBuffer = new StringBuilder();\n}",
            "method_id": 164,
            "loc": 3
        },
        {
            "method_signature": "org.jsoup.parser.Token:isDoctype()Z",
            "method_body": "boolean isDoctype() {\nreturn type == TokenType.Doctype;\n}",
            "method_id": 165,
            "loc": 3
        },
        {
            "method_signature": "org.jsoup.parser.Token:isStartTag()Z",
            "method_body": "boolean isStartTag() {\nreturn type == TokenType.StartTag;\n}",
            "method_id": 166,
            "loc": 3
        },
        {
            "method_signature": "org.jsoup.parser.Token:asStartTag()Lorg/jsoup/parser/Token$StartTag;",
            "method_body": "StartTag asStartTag() {\nreturn (StartTag) this;\n}",
            "method_id": 167,
            "loc": 3
        },
        {
            "method_signature": "org.jsoup.parser.Token:isEndTag()Z",
            "method_body": "boolean isEndTag() {\nreturn type == TokenType.EndTag;\n}",
            "method_id": 168,
            "loc": 3
        },
        {
            "method_signature": "org.jsoup.parser.Token:asEndTag()Lorg/jsoup/parser/Token$EndTag;",
            "method_body": "EndTag asEndTag() {\nreturn (EndTag) this;\n}",
            "method_id": 169,
            "loc": 3
        },
        {
            "method_signature": "org.jsoup.parser.Token:isComment()Z",
            "method_body": "boolean isComment() {\nreturn type == TokenType.Comment;\n}",
            "method_id": 170,
            "loc": 3
        },
        {
            "method_signature": "org.jsoup.parser.Token:isCharacter()Z",
            "method_body": "boolean isCharacter() {\nreturn type == TokenType.Character;\n}",
            "method_id": 171,
            "loc": 3
        },
        {
            "method_signature": "org.jsoup.parser.Token:asCharacter()Lorg/jsoup/parser/Token$Character;",
            "method_body": "Character asCharacter() {\nreturn (Character) this;\n}",
            "method_id": 172,
            "loc": 3
        },
        {
            "method_signature": "org.jsoup.parser.Token:isEOF()Z",
            "method_body": "boolean isEOF() {\nreturn type == TokenType.EOF;\n}",
            "method_id": 173,
            "loc": 3
        },
        {
            "method_signature": "org.jsoup.parser.Token$Tag:finaliseTag()V",
            "method_body": "void finaliseTag() {\nif (pendingAttributeName != null) {\n}",
            "method_id": 174,
            "loc": 3
        },
        {
            "method_signature": "org.jsoup.parser.Token$Tag:isSelfClosing()Z",
            "method_body": "boolean isSelfClosing() {\nreturn selfClosing;\n}",
            "method_id": 175,
            "loc": 3
        },
        {
            "method_signature": "org.jsoup.parser.Token$Tag:getAttributes()Lorg/jsoup/nodes/Attributes;",
            "method_body": "Attributes getAttributes() {\nreturn attributes;\n}",
            "method_id": 176,
            "loc": 3
        },
        {
            "method_signature": "org.jsoup.parser.Token$Tag:appendTagName(Ljava/lang/String;)V",
            "method_body": "void appendTagName(String append) {\ntagName = tagName == null ? append : tagName.concat(append);\n}",
            "method_id": 177,
            "loc": 3
        },
        {
            "method_signature": "org.jsoup.parser.Token$Tag:appendTagName(C)V",
            "method_body": "void appendTagName(char append) {\nappendTagName(String.valueOf(append));\n}",
            "method_id": 178,
            "loc": 3
        },
        {
            "method_signature": "org.jsoup.helper.StringUtil:isWhitespace(I)Z",
            "method_body": "public static boolean isWhitespace(int c){\nreturn c == ' ' || c == '\\t' || c == '\\n' || c == '\\f' || c == '\\r';\n}",
            "method_id": 179,
            "loc": 3
        }
    ]
}