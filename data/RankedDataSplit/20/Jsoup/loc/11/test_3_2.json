{
    "bug_id": 11,
    "test_id": 3,
    "test_name": "org.jsoup.select.SelectorTest.notParas",
    "test_body": "542: @Test public void notParas() {\n543: Document doc = Jsoup.parse(\"<p id=1>One</p> <p>Two</p> <p><span>Three</span></p>\");\n544: 545: Elements el1 = doc.select(\"p:not([id=1])\");\n546: assertEquals(2, el1.size());\n547: assertEquals(\"Two\", el1.first().text());\n548: assertEquals(\"Three\", el1.last().text());\n549: 550: Elements el2 = doc.select(\"p:not(:has(span))\");\n551: assertEquals(2, el2.size());\n552: assertEquals(\"One\", el2.first().text());\n553: assertEquals(\"Two\", el2.last().text());\n554: }\n",
    "stack_trace": "",
    "covered_methods": [
        {
            "method_signature": "org.jsoup.parser.TokenQueue:remainder()Ljava/lang/String;",
            "method_body": "public String remainder() {\nStringBuilder accum = new StringBuilder();\nwhile (!isEmpty()) {\naccum.append(consume());\nreturn accum.toString();\n}",
            "method_id": 40,
            "loc": 6
        },
        {
            "method_signature": "org.jsoup.nodes.Node:addChildren([Lorg/jsoup/nodes/Node;)V",
            "method_body": "protected void addChildren(Node... children) {\nfor (Node child: children) {\nreparentChild(child);\nchildNodes.add(child);\nchild.setSiblingIndex(childNodes.size()-1);\n}",
            "method_id": 41,
            "loc": 6
        },
        {
            "method_signature": "org.jsoup.nodes.Document:normaliseStructure(Ljava/lang/String;Lorg/jsoup/nodes/Element;)V",
            "method_body": "private void normaliseStructure(String tag, Element htmlEl) {\nElements elements = this.getElementsByTag(tag);\nElement master = elements.first(); // will always be available as created above if not existent\nif (elements.size() > 1) { // dupes, move contents to master\nif (!master.parent().equals(htmlEl)) {\n}",
            "method_id": 42,
            "loc": 6
        },
        {
            "method_signature": "org.jsoup.nodes.Document$OutputSettings:<init>(Lorg/jsoup/nodes/Document;)V",
            "method_body": "private Entities.EscapeMode escapeMode = Entities.EscapeMode.base;\nprivate Charset charset = Charset.forName(\"UTF-8\");\nprivate CharsetEncoder charsetEncoder = charset.newEncoder();\nprivate boolean prettyPrint = true;\nprivate int indentAmount = 1;\npublic OutputSettings() {}",
            "method_id": 43,
            "loc": 6
        },
        {
            "method_signature": "org.jsoup.nodes.Evaluator$Tag:<init>(Ljava/lang/String;)V",
            "method_body": "public abstract boolean matches(Element element);\nTag (String tagName) {\nthis.tagName = tagName;\n}\nreturn (element.tagName().equals(tagName));\n}",
            "method_id": 44,
            "loc": 6
        },
        {
            "method_signature": "org.jsoup.nodes.Evaluator$Tag:matches(Lorg/jsoup/nodes/Element;)Z",
            "method_body": "public abstract boolean matches(Element element);\nTag (String tagName) {\nthis.tagName = tagName;\n}\nreturn (element.tagName().equals(tagName));\n}",
            "method_id": 45,
            "loc": 6
        },
        {
            "method_signature": "org.jsoup.select.Collector$Accumulator:head(Lorg/jsoup/nodes/Node;I)V",
            "method_body": "public void head(Node node, int depth) {\nif (node instanceof Element) {\nElement el = (Element) node;\nif (eval.matches(el))\nelements.add(el);\n}",
            "method_id": 46,
            "loc": 6
        },
        {
            "method_signature": "org.jsoup.parser.TokenQueue:consumeElementSelector()Ljava/lang/String;",
            "method_body": "public String consumeElementSelector() {\nint start = pos;\nwhile (!isEmpty() && (matchesWord() || matchesAny('|', '_', '-')))\npos++;\nreturn queue.substring(start, pos);\n}",
            "method_id": 47,
            "loc": 6
        },
        {
            "method_signature": "org.jsoup.parser.TokenQueue:consumeAttributeKey()Ljava/lang/String;",
            "method_body": "public String consumeAttributeKey() {\nint start = pos;\nwhile (!isEmpty() && (matchesWord() || matchesAny('-', '_', ':')))\npos++;\nreturn queue.substring(start, pos);\n}",
            "method_id": 48,
            "loc": 6
        },
        {
            "method_signature": "org.jsoup.nodes.Attribute:<init>(Ljava/lang/String;Ljava/lang/String;)V",
            "method_body": "public Attribute(String key, String value) {\nValidate.notEmpty(key);\nValidate.notNull(value);\nthis.key = key.trim().toLowerCase();\nthis.value = value;\n}",
            "method_id": 49,
            "loc": 6
        },
        {
            "method_signature": "org.jsoup.select.Selector:byTag()Lorg/jsoup/select/Elements;",
            "method_body": "private Elements byTag() {\nString tagName = tq.consumeElementSelector();\nValidate.notEmpty(tagName);\nif (tagName.contains(\"|\"))\nreturn root.getElementsByTag(tagName);\n}",
            "method_id": 50,
            "loc": 6
        },
        {
            "method_signature": "org.jsoup.parser.TokenQueue:chompTo(Ljava/lang/String;)Ljava/lang/String;",
            "method_body": "public String chompTo(String seq) {\nString data = consumeTo(seq);\nmatchChomp(seq);\nreturn data;\n}",
            "method_id": 51,
            "loc": 5
        },
        {
            "method_signature": "org.jsoup.parser.TokenQueue:consume()Ljava/lang/Character;",
            "method_body": "public Character consume() {\nCharacter c = queue.charAt(pos);\npos++;\nreturn c;\n}",
            "method_id": 52,
            "loc": 5
        },
        {
            "method_signature": "org.jsoup.parser.Parser:popStackToSuitableContainer(Lorg/jsoup/parser/Tag;)Lorg/jsoup/nodes/Element;",
            "method_body": "private Element popStackToSuitableContainer(Tag tag) {\nwhile (!stack.isEmpty()) {\nif (last().tag().canContain(tag))\nreturn last();\n}",
            "method_id": 53,
            "loc": 5
        },
        {
            "method_signature": "org.jsoup.parser.Tag:setParent([Ljava/lang/String;)Lorg/jsoup/parser/Tag;",
            "method_body": "private Tag setParent(String... tagNames) {\ndirectDescendant = true;\nsetAncestor(tagNames);\nreturn this;\n}",
            "method_id": 54,
            "loc": 5
        },
        {
            "method_signature": "org.jsoup.nodes.Element:<init>(Lorg/jsoup/parser/Tag;Ljava/lang/String;Lorg/jsoup/nodes/Attributes;)V",
            "method_body": "public Element(Tag tag, String baseUri, Attributes attributes) {\nsuper(baseUri, attributes);\nValidate.notNull(tag);\nthis.tag = tag;\n}",
            "method_id": 55,
            "loc": 5
        },
        {
            "method_signature": "org.jsoup.nodes.Element:appendChild(Lorg/jsoup/nodes/Node;)Lorg/jsoup/nodes/Element;",
            "method_body": "public Element appendChild(Node child) {\nValidate.notNull(child);\naddChildren(child);\nreturn this;\n}",
            "method_id": 56,
            "loc": 5
        },
        {
            "method_signature": "org.jsoup.nodes.Element:getElementsByTag(Ljava/lang/String;)Lorg/jsoup/select/Elements;",
            "method_body": "public Elements getElementsByTag(String tagName) {\nValidate.notEmpty(tagName);\ntagName = tagName.toLowerCase().trim();\nreturn Collector.collect(new Evaluator.Tag(tagName), this);\n}",
            "method_id": 57,
            "loc": 5
        },
        {
            "method_signature": "org.jsoup.nodes.Element:equals(Ljava/lang/Object;)Z",
            "method_body": "public boolean equals(Object o) {\nif (this == o) return true;\nif (!(o instanceof Element)) return false;\nif (!super.equals(o)) return false;\n}",
            "method_id": 58,
            "loc": 5
        },
        {
            "method_signature": "org.jsoup.select.Collector:collect(Lorg/jsoup/nodes/Evaluator;Lorg/jsoup/nodes/Element;)Lorg/jsoup/select/Elements;",
            "method_body": "public static Elements collect (Evaluator eval, Element root) {\nElements elements = new Elements();\nnew NodeTraversor(new Accumulator(elements, eval)).traverse(root);\nreturn elements;\n}",
            "method_id": 59,
            "loc": 5
        }
    ]
}