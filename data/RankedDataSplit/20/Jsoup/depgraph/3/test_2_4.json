{
    "bug_id": 3,
    "test_id": 2,
    "test_name": "org.jsoup.nodes.ElementTest.testPrependRowToTable",
    "test_body": "222: @Test public void testPrependRowToTable() {\n223: Document doc = Jsoup.parse(\"<table><tr><td>1</td></tr></table>\");\n224: Element table = doc.select(\"table\").first();\n225: table.prepend(\"<tr><td>2</td></tr>\");\n226: 227: assertEquals(\"<table><tr><td>2</td></tr><tr><td>1</td></tr></table>\", TextUtil.stripNewlines(doc.body().html()));\n228: }\n",
    "stack_trace": "junit.framework.AssertionFailedError: expected:<<table><t[r><td>2</td></tr]><tr><td>1</td></tr>...> but was:<<table><t[able><tr><td>2</td></tr></table]><tr><td>1</td></tr>...>\nat org.junit.Assert.assertEquals(Assert.java:115)\nat org.junit.Assert.assertEquals(Assert.java:144)\nat org.jsoup.nodes.ElementTest.testPrependRowToTable(ElementTest.java:227)",
    "covered_methods": [
        {
            "method_signature": "org.jsoup.nodes.Attributes:html()Ljava/lang/String;",
            "method_body": "public String html() {\nStringBuilder accum = new StringBuilder();\nfor (Attribute attribute : this) {\nreturn accum.toString();\n}",
            "method_id": 80
        },
        {
            "method_signature": "org.jsoup.nodes.Attributes:put(Ljava/lang/String;Ljava/lang/String;)V",
            "method_body": "public void put(String key, String value) {\nAttribute attr = new Attribute(key, value);\nput(attr);\n}",
            "method_id": 81
        },
        {
            "method_signature": "org.jsoup.nodes.Attributes:put(Lorg/jsoup/nodes/Attribute;)V",
            "method_body": "public void put(Attribute attribute) {\nValidate.notNull(attribute);\nattributes.put(attribute.getKey(), attribute);\n}",
            "method_id": 82
        },
        {
            "method_signature": "org.jsoup.nodes.Node:nodeDepth()I",
            "method_body": "protected int nodeDepth() {\nif (parentNode == null)\nreturn 0;\nreturn parentNode.nodeDepth() + 1;\n}",
            "method_id": 83
        },
        {
            "method_signature": "org.jsoup.nodes.Document:normalise(Lorg/jsoup/nodes/Element;)V",
            "method_body": "private void normalise(Element element) {\nList<Node> toMove = new ArrayList<Node>();\nfor (Node node: element.childNodes) {\nif (node instanceof TextNode) {\n}\nfor (int i = toMove.size()-1; i >= 0; i--) {\n}",
            "method_id": 84
        },
        {
            "method_signature": "org.jsoup.nodes.Node:<init>(Ljava/lang/String;)V",
            "method_body": "protected Node(String baseUri) {\nthis(baseUri, new Attributes());\n}",
            "method_id": 85
        },
        {
            "method_signature": "org.jsoup.nodes.Attributes:get(Ljava/lang/String;)Ljava/lang/String;",
            "method_body": "public String get(String key) {\nValidate.notEmpty(key);\nAttribute attr = attributes.get(key.toLowerCase());\nreturn attr != null ? attr.getValue() : \"\";\n}",
            "method_id": 86
        },
        {
            "method_signature": "org.jsoup.select.Collector:collect(Lorg/jsoup/nodes/Evaluator;Lorg/jsoup/nodes/Element;)Lorg/jsoup/select/Elements;",
            "method_body": "public static Elements collect (Evaluator eval, Element root) {\nElements elements = new Elements();\naccumulateMatches(eval, elements, root);\nreturn elements;\n}",
            "method_id": 87
        },
        {
            "method_signature": "org.jsoup.nodes.Node:hashCode()I",
            "method_body": "public int hashCode() {\nint result = parentNode != null ? parentNode.hashCode() : 0;\nresult = 31 * result + (attributes != null ? attributes.hashCode() : 0);\nreturn result;\n}",
            "method_id": 88
        },
        {
            "method_signature": "org.jsoup.select.Selector:byTag()Lorg/jsoup/select/Elements;",
            "method_body": "private Elements byTag() {\nString tagName = tq.consumeWord();\nValidate.notEmpty(tagName);\nreturn root.getElementsByTag(tagName);\n}",
            "method_id": 89
        },
        {
            "method_signature": "org.jsoup.nodes.Document:<init>(Ljava/lang/String;)V",
            "method_body": "public Document(String baseUri) {\nsuper(Tag.valueOf(\"#root\"), baseUri);\n}",
            "method_id": 90
        },
        {
            "method_signature": "org.jsoup.select.Selector:addElements(Ljava/util/Collection;)V",
            "method_body": "private void addElements(Collection<Element> add) {\nelements.addAll(add);\n}",
            "method_id": 91
        },
        {
            "method_signature": "org.jsoup.nodes.Attributes:asList()Ljava/util/List;",
            "method_body": "public List<Attribute> asList() {\nList<Attribute> list = new ArrayList<Attribute>(attributes.size());\nfor (Map.Entry<String, Attribute> entry : attributes.entrySet()) {\nreturn Collections.unmodifiableList(list);\n}",
            "method_id": 92
        },
        {
            "method_signature": "org.jsoup.nodes.TextNode:normaliseWhitespace(Ljava/lang/String;)Ljava/lang/String;",
            "method_body": "static String normaliseWhitespace(String text) {\ntext = text.replaceAll(\"\\\\s{2,}|(\\\\r\\\\n|\\\\r|\\\\n)\", \" \"); // more than one space, and newlines to \" \"\nreturn text;\n}",
            "method_id": 93
        },
        {
            "method_signature": "org.jsoup.nodes.Evaluator$Tag:<init>(Ljava/lang/String;)V",
            "method_body": "public abstract boolean matches(Element element);\nTag (String tagName) {\nthis.tagName = tagName;\n}\nreturn (element.tagName().equals(tagName));\n}",
            "method_id": 94
        },
        {
            "method_signature": "org.jsoup.select.Elements:<init>()V",
            "method_body": "public Elements() {\ncontents = new ArrayList<Element>();\n}",
            "method_id": 95
        },
        {
            "method_signature": "org.jsoup.select.Elements:<init>(Ljava/util/Collection;)V",
            "method_body": "public Elements(Collection<Element> elements) {\ncontents = new ArrayList<Element>(elements);\n}",
            "method_id": 96
        },
        {
            "method_signature": "org.jsoup.select.Elements:<init>(Ljava/util/List;)V",
            "method_body": "public Elements(List<Element> elements) {\ncontents = elements;\n}",
            "method_id": 97
        },
        {
            "method_signature": "org.jsoup.nodes.Attributes:<init>()V",
            "method_body": "private LinkedHashMap<String, Attribute> attributes = new LinkedHashMap<String, Attribute>();\nValidate.notEmpty(key);\nAttribute attr = attributes.get(key.toLowerCase());\nreturn attr != null ? attr.getValue() : \"\";\n}",
            "method_id": 98
        },
        {
            "method_signature": "org.jsoup.nodes.TextNode:createFromEncoded(Ljava/lang/String;Ljava/lang/String;)Lorg/jsoup/nodes/TextNode;",
            "method_body": "public static TextNode createFromEncoded(String encodedText, String baseUri) {\nString text = StringEscapeUtils.unescapeHtml(encodedText);\nreturn new TextNode(text, baseUri);\n}",
            "method_id": 99
        }
    ]
}