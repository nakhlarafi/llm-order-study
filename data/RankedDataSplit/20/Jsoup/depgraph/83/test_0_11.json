{
    "bug_id": 83,
    "test_id": 0,
    "test_name": "org.jsoup.parser.HtmlParserTest.parsesQuiteRoughAttributes",
    "test_body": "58: @Test public void parsesQuiteRoughAttributes() {\n59: String html = \"<p =a>One<a <p>Something</p>Else\";\n60: // this (used to; now gets cleaner) gets a <p> with attr '=a' and an <a tag with an attribue named '<p'; and then auto-recreated\n61: Document doc = Jsoup.parse(html);\n62: 63: // NOTE: per spec this should be the test case. but impacts too many ppl\n64: // assertEquals(\"<p =a>One<a <p>Something</a></p>\\n<a <p>Else</a>\", doc.body().html());\n65: 66: assertEquals(\"<p =a>One<a></a></p><p><a>Something</a></p><a>Else</a>\", TextUtil.stripNewlines(doc.body().html()));\n67: 68: doc = Jsoup.parse(\"<p .....>\");\n69: assertEquals(\"<p .....></p>\", doc.body().html());\n70: }\n",
    "stack_trace": "junit.framework.AssertionFailedError: expected:<<p =a>One<a[></a></p><p><a>Something</a></p><a]>Else</a>> but was:<<p =a>One<a[ <p>Something</a></p><a <p]>Else</a>>\nat org.junit.Assert.assertEquals(Assert.java:115)\nat org.junit.Assert.assertEquals(Assert.java:144)\nat org.jsoup.parser.HtmlParserTest.parsesQuiteRoughAttributes(HtmlParserTest.java:66)",
    "covered_methods": [
        {
            "method_signature": "org.jsoup.nodes.Document:body()Lorg/jsoup/nodes/Element;",
            "method_body": "public Element body() {\nreturn findFirstElementByTagName(\"body\", this);\n}",
            "method_id": 220
        },
        {
            "method_signature": "org.jsoup.nodes.Document$OutputSettings:indentAmount()I",
            "method_body": "public int indentAmount() {\nreturn indentAmount;\n}",
            "method_id": 221
        },
        {
            "method_signature": "org.jsoup.nodes.Document:nodeName()Ljava/lang/String;",
            "method_body": "public String nodeName() {\nreturn \"#document\";\n}",
            "method_id": 222
        },
        {
            "method_signature": "org.jsoup.nodes.Document$OutputSettings:outline()Z",
            "method_body": "public boolean outline() {\nreturn outline;\n}",
            "method_id": 223
        },
        {
            "method_signature": "org.jsoup.nodes.Node:siblingIndex()I",
            "method_body": "public int siblingIndex() {\nreturn siblingIndex;\n}",
            "method_id": 224
        },
        {
            "method_signature": "org.jsoup.nodes.Node:parent()Lorg/jsoup/nodes/Node;",
            "method_body": "public Node parent() {\nreturn parentNode;\n}",
            "method_id": 225
        },
        {
            "method_signature": "org.jsoup.nodes.Document$OutputSettings:prettyPrint()Z",
            "method_body": "public boolean prettyPrint() {\nreturn prettyPrint;\n}",
            "method_id": 226
        },
        {
            "method_signature": "org.jsoup.nodes.Document$OutputSettings:escapeMode()Lorg/jsoup/nodes/Entities$EscapeMode;",
            "method_body": "public Entities.EscapeMode escapeMode() {\nreturn escapeMode;\n}",
            "method_id": 227
        },
        {
            "method_signature": "org.jsoup.helper.StringUtil$1:initialValue()Ljava/lang/StringBuilder;",
            "method_body": "protected StringBuilder initialValue() {\nreturn new StringBuilder(MaxCachedBuilderSize);\n}",
            "method_id": 228
        },
        {
            "method_signature": "org.jsoup.nodes.Document:outputSettings()Lorg/jsoup/nodes/Document$OutputSettings;",
            "method_body": "public OutputSettings outputSettings() {\nreturn outputSettings;\n}",
            "method_id": 229
        },
        {
            "method_signature": "org.jsoup.nodes.TextNode:nodeName()Ljava/lang/String;",
            "method_body": "public String nodeName() {\nreturn \"#text\";\n}",
            "method_id": 230
        },
        {
            "method_signature": "org.jsoup.nodes.Element:parent()Lorg/jsoup/nodes/Element;",
            "method_body": "public final Element parent() {\nreturn (Element) parentNode;\n}",
            "method_id": 231
        },
        {
            "method_signature": "org.jsoup.nodes.LeafNode:coreValue()Ljava/lang/String;",
            "method_body": "String coreValue() {\nreturn attr(nodeName());\n}",
            "method_id": 232
        },
        {
            "method_signature": "org.jsoup.Jsoup:parse(Ljava/lang/String;)Lorg/jsoup/nodes/Document;",
            "method_body": "public static Document parse(String html) {\nreturn Parser.parse(html, \"\");\n}",
            "method_id": 233
        },
        {
            "method_signature": "org.jsoup.nodes.LeafNode:childNodeSize()I",
            "method_body": "public int childNodeSize() {\nreturn 0;\n}",
            "method_id": 234
        },
        {
            "method_signature": "org.jsoup.helper.StringUtil:isWhitespace(I)Z",
            "method_body": "public static boolean isWhitespace(int c){\nreturn c == ' ' || c == '\\t' || c == '\\n' || c == '\\f' || c == '\\r';\n}",
            "method_id": 235
        },
        {
            "method_signature": "org.jsoup.nodes.Node:parentNode()Lorg/jsoup/nodes/Node;",
            "method_body": "public final Node parentNode() {\nreturn parentNode;\n}",
            "method_id": 236
        },
        {
            "method_signature": "org.jsoup.nodes.Element:nodeName()Ljava/lang/String;",
            "method_body": "public String nodeName() {\nreturn tag.getName();\n}",
            "method_id": 237
        },
        {
            "method_signature": "org.jsoup.nodes.Element:childNodeSize()I",
            "method_body": "public int childNodeSize() {\nreturn childNodes.size();\n}",
            "method_id": 238
        },
        {
            "method_signature": "org.jsoup.nodes.Node:childNode(I)Lorg/jsoup/nodes/Node;",
            "method_body": "public Node childNode(int index) {\nreturn ensureChildNodes().get(index);\n}",
            "method_id": 239
        }
    ]
}