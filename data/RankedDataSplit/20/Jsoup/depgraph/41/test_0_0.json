{
    "bug_id": 41,
    "test_id": 0,
    "test_name": "org.jsoup.nodes.ElementTest.testHashAndEquals",
    "test_body": "754: public void testHashAndEquals() {\n755: String doc1 = \"<div id=1><p class=one>One</p><p class=one>One</p><p class=one>Two</p><p class=two>One</p></div>\" +\n756: \"<div id=2><p class=one>One</p><p class=one>One</p><p class=one>Two</p><p class=two>One</p></div>\";\n757: 758: Document doc = Jsoup.parse(doc1);\n759: Elements els = doc.select(\"p\");\n760: 761: /*\n762: for (Element el : els) {\n763: System.out.println(el.hashCode() + \" - \" + el.outerHtml());\n764: }\n765: 766: 0 1534787905 - <p class=\"one\">One</p>\n767: 1 1534787905 - <p class=\"one\">One</p>\n768: 2 1539683239 - <p class=\"one\">Two</p>\n769: 3 1535455211 - <p class=\"two\">One</p>\n770: 4 1534787905 - <p class=\"one\">One</p>\n771: 5 1534787905 - <p class=\"one\">One</p>\n772: 6 1539683239 - <p class=\"one\">Two</p>\n773: 7 1535455211 - <p class=\"two\">One</p>\n774: */\n775: assertEquals(8, els.size());\n776: Element e0 = els.get(0);\n777: Element e1 = els.get(1);\n778: Element e2 = els.get(2);\n779: Element e3 = els.get(3);\n780: Element e4 = els.get(4);\n781: Element e5 = els.get(5);\n782: Element e6 = els.get(6);\n783: Element e7 = els.get(7);\n784: 785: assertEquals(e0, e1);\n786: assertEquals(e0, e4);",
    "stack_trace": "junit.framework.AssertionFailedError: expected: org.jsoup.nodes.Element<<p class=\"one\">One</p>> but was: org.jsoup.nodes.Element<<p class=\"one\">One</p>>\nat org.junit.Assert.fail(Assert.java:88)\nat org.junit.Assert.failNotEquals(Assert.java:743)\nat org.junit.Assert.assertEquals(Assert.java:118)\nat org.junit.Assert.assertEquals(Assert.java:144)\nat org.jsoup.nodes.ElementTest.testHashAndEquals(ElementTest.java:785)",
    "covered_methods": [
        {
            "method_signature": "org.jsoup.nodes.Attribute:equals(Ljava/lang/Object;)Z",
            "method_body": "public boolean equals(Object o) {\nif (this == o) return true;\nif (!(o instanceof Attribute)) return false;\nAttribute attribute = (Attribute) o;\nif (key != null ? !key.equals(attribute.key) : attribute.key != null) return false;\nif (value != null ? !value.equals(attribute.value) : attribute.value != null) return false;\nreturn true;\n}",
            "method_id": 0
        },
        {
            "method_signature": "org.jsoup.nodes.Element:equals(Ljava/lang/Object;)Z",
            "method_body": "public boolean equals(Object o) {\nif (this == o) return true;\nif (o == null || getClass() != o.getClass()) return false;\nif (!super.equals(o)) return false;\nElement element = (Element) o;\nreturn this == o;\n}",
            "method_id": 1
        },
        {
            "method_signature": "org.jsoup.nodes.Attributes:equals(Ljava/lang/Object;)Z",
            "method_body": "public boolean equals(Object o) {\nif (this == o) return true;\nif (!(o instanceof Attributes)) return false;\nAttributes that = (Attributes) o;\nreturn !(attributes != null ? !attributes.equals(that.attributes) : that.attributes != null);\n}",
            "method_id": 2
        },
        {
            "method_signature": "org.jsoup.nodes.Node:equals(Ljava/lang/Object;)Z",
            "method_body": "public boolean equals(Object o) {\nif (this == o) return true;\nif (o == null || getClass() != o.getClass()) return false;\nNode node = (Node) o;\nif (childNodes != null ? !childNodes.equals(node.childNodes) : node.childNodes != null) return false;\nreturn !(attributes != null ? !attributes.equals(node.attributes) : node.attributes != null);\n}",
            "method_id": 3
        },
        {
            "method_signature": "org.jsoup.nodes.TextNode:equals(Ljava/lang/Object;)Z",
            "method_body": "public boolean equals(Object o) {\nif (this == o) return true;\nif (o == null || getClass() != o.getClass()) return false;\nif (!super.equals(o)) return false;\nTextNode textNode = (TextNode) o;\nreturn !(text != null ? !text.equals(textNode.text) : textNode.text != null);\n}",
            "method_id": 4
        },
        {
            "method_signature": "org.jsoup.nodes.Element:<init>(Lorg/jsoup/parser/Tag;Ljava/lang/String;Lorg/jsoup/nodes/Attributes;)V",
            "method_body": "public Element(Tag tag, String baseUri, Attributes attributes) {\nsuper(baseUri, attributes);\nValidate.notNull(tag);\nthis.tag = tag;\n}",
            "method_id": 5
        },
        {
            "method_signature": "org.jsoup.nodes.Element:<init>(Lorg/jsoup/parser/Tag;Ljava/lang/String;)V",
            "method_body": "public Element(Tag tag, String baseUri) {\nthis(tag, baseUri, new Attributes());\n}",
            "method_id": 6
        },
        {
            "method_signature": "org.jsoup.nodes.Element:outerHtmlHead(Ljava/lang/StringBuilder;ILorg/jsoup/nodes/Document$OutputSettings;)V",
            "method_body": "void outerHtmlHead(StringBuilder accum, int depth, Document.OutputSettings out) {\nif (accum.length() > 0 && out.prettyPrint() && (tag.formatAsBlock() || (parent() != null && parent().tag().formatAsBlock()) || out.outline()) )\naccum\nattributes.html(accum, out);\nif (childNodes.isEmpty() && tag.isSelfClosing()) {\naccum.append(\">\");\n}",
            "method_id": 7
        },
        {
            "method_signature": "org.jsoup.nodes.Element:appendChild(Lorg/jsoup/nodes/Node;)Lorg/jsoup/nodes/Element;",
            "method_body": "public Element appendChild(Node child) {\nValidate.notNull(child);\nreparentChild(child);\nchildNodes.add(child);\nchild.setSiblingIndex(childNodes.size() - 1);\nreturn this;\n}",
            "method_id": 8
        },
        {
            "method_signature": "org.jsoup.nodes.Element:toString()Ljava/lang/String;",
            "method_body": "public String toString() {\nreturn outerHtml();\n}",
            "method_id": 9
        },
        {
            "method_signature": "org.jsoup.nodes.Element:preserveWhitespace(Lorg/jsoup/nodes/Node;)Z",
            "method_body": "static boolean preserveWhitespace(Node node) {\nif (node != null && node instanceof Element) {\nElement element = (Element) node;\nreturn element.tag.preserveWhitespace() ||\n}",
            "method_id": 10
        },
        {
            "method_signature": "org.jsoup.nodes.Element:select(Ljava/lang/String;)Lorg/jsoup/select/Elements;",
            "method_body": "public Elements select(String cssQuery) {\nreturn Selector.select(cssQuery, this);\n}",
            "method_id": 11
        },
        {
            "method_signature": "org.jsoup.nodes.Element:parent()Lorg/jsoup/nodes/Element;",
            "method_body": "public final Element parent() {\nreturn (Element) parentNode;\n}",
            "method_id": 12
        },
        {
            "method_signature": "org.jsoup.nodes.Element:tag()Lorg/jsoup/parser/Tag;",
            "method_body": "public Tag tag() {\nreturn tag;\n}",
            "method_id": 13
        },
        {
            "method_signature": "org.jsoup.nodes.Element:outerHtmlTail(Ljava/lang/StringBuilder;ILorg/jsoup/nodes/Document$OutputSettings;)V",
            "method_body": "void outerHtmlTail(StringBuilder accum, int depth, Document.OutputSettings out) {\nif (!(childNodes.isEmpty() && tag.isSelfClosing())) {\nif (out.prettyPrint() && (!childNodes.isEmpty() && (\naccum.append(\"</\").append(tagName()).append(\">\");\n}",
            "method_id": 14
        },
        {
            "method_signature": "org.jsoup.parser.CharacterReader:rangeEquals(IILjava/lang/String;)Z",
            "method_body": "boolean rangeEquals(final int start, int count, final String cached) {\nif (count == cached.length()) {\nchar one[] = input;\nint i = start;\nint j = 0;\nwhile (count-- != 0) {\nif (one[i++] != cached.charAt(j++))\nreturn true;\n}",
            "method_id": 15
        },
        {
            "method_signature": "org.jsoup.nodes.Element:nodeName()Ljava/lang/String;",
            "method_body": "public String nodeName() {\nreturn tag.getName();\n}",
            "method_id": 16
        },
        {
            "method_signature": "org.jsoup.nodes.Element:tagName()Ljava/lang/String;",
            "method_body": "public String tagName() {\nreturn tag.getName();\n}",
            "method_id": 17
        },
        {
            "method_signature": "org.jsoup.parser.TreeBuilder:currentElement()Lorg/jsoup/nodes/Element;",
            "method_body": "protected Element currentElement() {\nint size = stack.size();\nreturn size > 0 ? stack.get(size-1) : null;\n}",
            "method_id": 18
        },
        {
            "method_signature": "org.jsoup.parser.TokenQueue:consumeElementSelector()Ljava/lang/String;",
            "method_body": "public String consumeElementSelector() {\nint start = pos;\nwhile (!isEmpty() && (matchesWord() || matchesAny('|', '_', '-')))\npos++;\nreturn queue.substring(start, pos);\n}",
            "method_id": 19
        }
    ]
}