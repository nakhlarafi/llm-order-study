{
    "bug_id": 22,
    "test_id": 0,
    "test_name": "org.joda.time.TestPeriod_Constructors.testConstructor_long_fixedZone",
    "test_body": "174: public void testConstructor_long_fixedZone() throws Throwable {\n175: DateTimeZone zone = DateTimeZone.getDefault();\n176: try {\n177: DateTimeZone.setDefault(DateTimeZone.forOffsetHours(2));\n178: long length =\n179: (4L + (3L * 7L) + (2L * 30L) + 365L) * DateTimeConstants.MILLIS_PER_DAY +\n180: 5L * DateTimeConstants.MILLIS_PER_HOUR +\n181: 6L * DateTimeConstants.MILLIS_PER_MINUTE +\n182: 7L * DateTimeConstants.MILLIS_PER_SECOND + 8L;\n183: Period test = new Period(length);\n184: assertEquals(PeriodType.standard(), test.getPeriodType());\n185: // only time fields are precise in AllType\n186: assertEquals(0, test.getYears());  // (4 + (3 * 7) + (2 * 30) + 365) == 450\n187: assertEquals(0, test.getMonths());\n188: assertEquals(0, test.getWeeks());\n189: assertEquals(0, test.getDays());",
    "stack_trace": "junit.framework.AssertionFailedError: expected:<0> but was:<64>\nat junit.framework.Assert.fail(Assert.java:57)\nat junit.framework.Assert.failNotEquals(Assert.java:329)\nat junit.framework.Assert.assertEquals(Assert.java:78)\nat junit.framework.Assert.assertEquals(Assert.java:234)\nat junit.framework.Assert.assertEquals(Assert.java:241)\nat junit.framework.TestCase.assertEquals(TestCase.java:409)\nat org.joda.time.TestPeriod_Constructors.testConstructor_long_fixedZone(TestPeriod_Constructors.java:188)",
    "covered_methods": [
        {
            "method_signature": "org.joda.time.DateTimeUtils:checkPermission()V",
            "method_body": "private static void checkPermission() throws SecurityException {\nSecurityManager sm = System.getSecurityManager();\nif (sm != null) {\n}",
            "method_id": 60
        }
    ]
}