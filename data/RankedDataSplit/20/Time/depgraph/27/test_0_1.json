{
    "bug_id": 27,
    "test_id": 0,
    "test_name": "org.joda.time.format.TestPeriodFormatterBuilder.testBug2495455",
    "test_body": "846: public void testBug2495455() {\n847: PeriodFormatter pfmt1 = new PeriodFormatterBuilder()\n848: .appendLiteral(\"P\")\n849: .appendYears()\n850: .appendSuffix(\"Y\")\n851: .appendMonths()\n852: .appendSuffix(\"M\")\n853: .appendWeeks()\n854: .appendSuffix(\"W\")\n855: .appendDays()\n856: .appendSuffix(\"D\")\n857: .appendSeparatorIfFieldsAfter(\"T\")\n858: .appendHours()\n859: .appendSuffix(\"H\")\n860: .appendMinutes()\n861: .appendSuffix(\"M\")\n862: .appendSecondsWithOptionalMillis()\n863: .appendSuffix(\"S\")\n864: .toFormatter();\n865: PeriodFormatter pfmt2 = new PeriodFormatterBuilder()\n866: .append(ISOPeriodFormat.standard())\n867: .toFormatter();\n868: pfmt1.parsePeriod(\"PT1003199059S\");\n869: pfmt2.parsePeriod(\"PT1003199059S\");\n870: }\n",
    "stack_trace": "java.lang.IllegalArgumentException: Invalid format: \"PT1003199059S\" is malformed at \"1003199059S\"\nat org.joda.time.format.PeriodFormatter.parseMutablePeriod(PeriodFormatter.java:326)\nat org.joda.time.format.PeriodFormatter.parsePeriod(PeriodFormatter.java:304)\nat org.joda.time.format.TestPeriodFormatterBuilder.testBug2495455(TestPeriodFormatterBuilder.java:869)",
    "covered_methods": [
        {
            "method_signature": "org.joda.time.MutablePeriod:<init>(JLorg/joda/time/PeriodType;)V",
            "method_body": "public MutablePeriod(long duration, PeriodType type) {\nsuper(duration, type, null);\n}",
            "method_id": 20
        },
        {
            "method_signature": "org.joda.time.format.PeriodFormatterBuilder:appendLiteral(Ljava/lang/String;)Lorg/joda/time/format/PeriodFormatterBuilder;",
            "method_body": "public PeriodFormatterBuilder appendLiteral(String text) {\nif (text == null) {\nclearPrefix();\nLiteral literal = new Literal(text);\nappend0(literal, literal);\nreturn this;\n}",
            "method_id": 21
        },
        {
            "method_signature": "org.joda.time.format.PeriodFormatterBuilder:appendField(II)V",
            "method_body": "private void appendField(int type, int minPrinted) {\nFieldFormatter field = new FieldFormatter(minPrinted, iPrintZeroSetting,\nappend0(field, field);\niFieldFormatters[type] = field;\niPrefix = null;\n}",
            "method_id": 22
        },
        {
            "method_signature": "org.joda.time.format.PeriodFormatterBuilder:append0(Lorg/joda/time/format/PeriodPrinter;Lorg/joda/time/format/PeriodParser;)Lorg/joda/time/format/PeriodFormatterBuilder;",
            "method_body": "private PeriodFormatterBuilder append0(PeriodPrinter printer, PeriodParser parser) {\niElementPairs.add(printer);\niElementPairs.add(parser);\niNotPrinter |= (printer == null);\niNotParser |= (parser == null);\nreturn this;\n}",
            "method_id": 23
        },
        {
            "method_signature": "org.joda.time.format.PeriodFormatterBuilder:clearPrefix()V",
            "method_body": "private void clearPrefix() throws IllegalStateException {\nif (iPrefix != null) {\niPrefix = null;\n}",
            "method_id": 24
        },
        {
            "method_signature": "org.joda.time.format.PeriodFormatterBuilder:toFormatter()Lorg/joda/time/format/PeriodFormatter;",
            "method_body": "public PeriodFormatter toFormatter() {\nPeriodFormatter formatter = toFormatter(iElementPairs, iNotPrinter, iNotParser);\niFieldFormatters = (FieldFormatter[]) iFieldFormatters.clone();\nreturn formatter;\n}",
            "method_id": 25
        },
        {
            "method_signature": "org.joda.time.format.PeriodFormatterBuilder:appendSecondsWithOptionalMillis()Lorg/joda/time/format/PeriodFormatterBuilder;",
            "method_body": "public PeriodFormatterBuilder appendSecondsWithOptionalMillis() {\nappendField(SECONDS_OPTIONAL_MILLIS);\nreturn this;\n}",
            "method_id": 26
        },
        {
            "method_signature": "org.joda.time.format.PeriodFormatterBuilder:<init>()V",
            "method_body": "public PeriodFormatterBuilder() {\nclear();\n}",
            "method_id": 27
        },
        {
            "method_signature": "org.joda.time.format.PeriodFormatterBuilder:appendField(I)V",
            "method_body": "private void appendField(int type) {\nappendField(type, iMinPrintedDigits);\n}",
            "method_id": 28
        },
        {
            "method_signature": "org.joda.time.format.PeriodFormatterBuilder:appendSuffix(Ljava/lang/String;)Lorg/joda/time/format/PeriodFormatterBuilder;",
            "method_body": "public PeriodFormatterBuilder appendSuffix(String text) {\nif (text == null) {\nreturn appendSuffix(new SimpleAffix(text));\n}",
            "method_id": 29
        },
        {
            "method_signature": "org.joda.time.format.PeriodFormatterBuilder$FieldFormatter:getFieldType()I",
            "method_body": "int getFieldType() {\nreturn iFieldType;\n}",
            "method_id": 30
        },
        {
            "method_signature": "org.joda.time.format.PeriodFormatterBuilder:appendMinutes()Lorg/joda/time/format/PeriodFormatterBuilder;",
            "method_body": "public PeriodFormatterBuilder appendMinutes() {\nappendField(MINUTES);\nreturn this;\n}",
            "method_id": 31
        },
        {
            "method_signature": "org.joda.time.format.PeriodFormatterBuilder:appendDays()Lorg/joda/time/format/PeriodFormatterBuilder;",
            "method_body": "public PeriodFormatterBuilder appendDays() {\nappendField(DAYS);\nreturn this;\n}",
            "method_id": 32
        },
        {
            "method_signature": "org.joda.time.format.PeriodFormatterBuilder:appendWeeks()Lorg/joda/time/format/PeriodFormatterBuilder;",
            "method_body": "public PeriodFormatterBuilder appendWeeks() {\nappendField(WEEKS);\nreturn this;\n}",
            "method_id": 33
        },
        {
            "method_signature": "org.joda.time.format.PeriodFormatterBuilder:appendMonths()Lorg/joda/time/format/PeriodFormatterBuilder;",
            "method_body": "public PeriodFormatterBuilder appendMonths() {\nappendField(MONTHS);\nreturn this;\n}",
            "method_id": 34
        },
        {
            "method_signature": "org.joda.time.format.PeriodFormatterBuilder:appendHours()Lorg/joda/time/format/PeriodFormatterBuilder;",
            "method_body": "public PeriodFormatterBuilder appendHours() {\nappendField(HOURS);\nreturn this;\n}",
            "method_id": 35
        },
        {
            "method_signature": "org.joda.time.format.PeriodFormatterBuilder:appendYears()Lorg/joda/time/format/PeriodFormatterBuilder;",
            "method_body": "public PeriodFormatterBuilder appendYears() {\nappendField(YEARS);\nreturn this;\n}",
            "method_id": 36
        },
        {
            "method_signature": "org.joda.time.format.PeriodFormatter:getParser()Lorg/joda/time/format/PeriodParser;",
            "method_body": "public PeriodParser getParser() {\nreturn iParser;\n}",
            "method_id": 37
        },
        {
            "method_signature": "org.joda.time.format.PeriodFormatter:getPrinter()Lorg/joda/time/format/PeriodPrinter;",
            "method_body": "public PeriodPrinter getPrinter() {\nreturn iPrinter;\n}",
            "method_id": 38
        },
        {
            "method_signature": "org.joda.time.format.PeriodFormatterBuilder:appendSeparatorIfFieldsAfter(Ljava/lang/String;)Lorg/joda/time/format/PeriodFormatterBuilder;",
            "method_body": "public PeriodFormatterBuilder appendSeparatorIfFieldsAfter(String text) {\nreturn appendSeparator(text, text, null, false, true);\n}",
            "method_id": 39
        }
    ]
}