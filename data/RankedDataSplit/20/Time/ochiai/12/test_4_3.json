{
    "bug_id": 12,
    "test_id": 4,
    "test_name": "org.joda.time.TestLocalDate_Constructors.testFactory_fromCalendarFields_beforeYearZero1",
    "test_body": "104: public void testFactory_fromCalendarFields_beforeYearZero1() throws Exception {\n105: GregorianCalendar cal = new GregorianCalendar(1, 1, 3, 4, 5, 6);\n106: cal.set(Calendar.ERA, GregorianCalendar.BC);\n107: cal.set(Calendar.MILLISECOND, 7);\n108: LocalDate expected = new LocalDate(0, 2, 3);\n109: assertEquals(expected, LocalDate.fromCalendarFields(cal));\n110: }\n",
    "stack_trace": "junit.framework.AssertionFailedError: expected:<0000-02-03> but was:<0001-02-03>\nat junit.framework.Assert.fail(Assert.java:57)\nat junit.framework.Assert.failNotEquals(Assert.java:329)\nat junit.framework.Assert.assertEquals(Assert.java:78)\nat junit.framework.Assert.assertEquals(Assert.java:86)\nat junit.framework.TestCase.assertEquals(TestCase.java:253)\nat org.joda.time.TestLocalDate_Constructors.testFactory_fromCalendarFields_beforeYearZero1(TestLocalDate_Constructors.java:109)",
    "covered_methods": [
        {
            "method_signature": "org.joda.time.DateTimeFieldType:dayOfMonth()Lorg/joda/time/DateTimeFieldType;",
            "method_body": "public static DateTimeFieldType dayOfMonth() {\nreturn DAY_OF_MONTH_TYPE;\n}",
            "method_id": 60
        },
        {
            "method_signature": "org.joda.time.DateTimeFieldType:year()Lorg/joda/time/DateTimeFieldType;",
            "method_body": "public static DateTimeFieldType year() {\nreturn YEAR_TYPE;\n}",
            "method_id": 61
        },
        {
            "method_signature": "org.joda.time.field.BaseDateTimeField:isSupported()Z",
            "method_body": "public final boolean isSupported() {\nreturn true;\n}",
            "method_id": 62
        },
        {
            "method_signature": "org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone;",
            "method_body": "public static DateTimeZone getDefault() {\nDateTimeZone zone = cDefault;\nif (zone == null) {\nreturn zone;\n}",
            "method_id": 63
        },
        {
            "method_signature": "org.joda.time.DurationFieldType$StandardDurationFieldType:hashCode()I",
            "method_body": "public int hashCode() {\nreturn (1 << iOrdinal);\n}",
            "method_id": 64
        }
    ]
}