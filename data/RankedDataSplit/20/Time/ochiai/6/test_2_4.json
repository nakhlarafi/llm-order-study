{
    "bug_id": 6,
    "test_id": 2,
    "test_name": "org.joda.time.chrono.TestGJDate.test_plusWeekyears_positiveToZero_crossCutover",
    "test_body": "115: public void test_plusWeekyears_positiveToZero_crossCutover() {\n116: LocalDate date = new LocalDate(2003, 6, 30, GJ_CHRONOLOGY);\n117: LocalDate expected = new LocalDate(-1, 6, 30, GJ_CHRONOLOGY).withWeekOfWeekyear(date.getWeekOfWeekyear()).withDayOfWeek(date.getDayOfWeek());\n118: assertEquals(expected, date.weekyear().addToCopy(-2003));\n119: }\n",
    "stack_trace": "org.joda.time.IllegalFieldValueException: Value 0 for year is not supported\nat org.joda.time.field.SkipDateTimeField.set(SkipDateTimeField.java:92)\nat org.joda.time.chrono.GJChronology.convertByWeekyear(GJChronology.java:96)\nat org.joda.time.chrono.GJChronology.gregorianToJulianByWeekyear(GJChronology.java:596)\nat org.joda.time.chrono.GJChronology$CutoverField.gregorianToJulian(GJChronology.java:922)\nat org.joda.time.chrono.GJChronology$ImpreciseCutoverField.add(GJChronology.java:979)\nat org.joda.time.LocalDate$Property.addToCopy(LocalDate.java:1965)\nat org.joda.time.chrono.TestGJDate.test_plusWeekyears_positiveToZero_crossCutover(TestGJDate.java:118)",
    "covered_methods": [
        {
            "method_signature": "org.joda.time.chrono.AssembledChronology:getBase()Lorg/joda/time/Chronology;",
            "method_body": "protected abstract void assemble(Fields fields);\nreturn iBase;\n}",
            "method_id": 80
        },
        {
            "method_signature": "org.joda.time.DateTimeFieldType:millisOfDay()Lorg/joda/time/DateTimeFieldType;",
            "method_body": "public static DateTimeFieldType millisOfDay() {\nreturn MILLIS_OF_DAY_TYPE;\n}",
            "method_id": 81
        },
        {
            "method_signature": "org.joda.time.DateTimeFieldType:monthOfYear()Lorg/joda/time/DateTimeFieldType;",
            "method_body": "public static DateTimeFieldType monthOfYear() {\nreturn MONTH_OF_YEAR_TYPE;\n}",
            "method_id": 82
        },
        {
            "method_signature": "org.joda.time.DateTimeFieldType:dayOfMonth()Lorg/joda/time/DateTimeFieldType;",
            "method_body": "public static DateTimeFieldType dayOfMonth() {\nreturn DAY_OF_MONTH_TYPE;\n}",
            "method_id": 83
        },
        {
            "method_signature": "org.joda.time.DateTimeFieldType:year()Lorg/joda/time/DateTimeFieldType;",
            "method_body": "public static DateTimeFieldType year() {\nreturn YEAR_TYPE;\n}",
            "method_id": 84
        },
        {
            "method_signature": "org.joda.time.chrono.BasicWeekyearDateTimeField:getMaximumValue()I",
            "method_body": "public int getMaximumValue() {\nreturn iChronology.getMaxYear();\n}",
            "method_id": 85
        },
        {
            "method_signature": "org.joda.time.chrono.GJChronology$CutoverField:set(JI)J",
            "method_body": "public long set(long instant, int value) {\nif (instant >= iCutover) {\ninstant = iJulianField.set(instant, value);\nif (instant >= iCutover) {\nreturn instant;\n}",
            "method_id": 86
        },
        {
            "method_signature": "org.joda.time.field.DelegatedDateTimeField:getMaximumValue()I",
            "method_body": "public int getMaximumValue() {\nreturn iField.getMaximumValue();\n}",
            "method_id": 87
        }
    ]
}