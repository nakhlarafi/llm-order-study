{
    "bug_id": 34,
    "test_id": 8,
    "test_name": "org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectCycle",
    "test_body": "public void testReflectionObjectCycle() throws Exception {\nReflectionTestCycleA a = new ReflectionTestCycleA();\nReflectionTestCycleB b = new ReflectionTestCycleB();\na.b = b;\nb.a = a;\nassertEquals(\nthis.toBaseString(a) + \"[b=\" + this.toBaseString(b) + \"[a=\" + this.toBaseString(a) + \"]]\",\na.toString());\nthis.validateNullToStringStyleRegistry();\n}\n",
    "stack_trace": "junit.framework.AssertionFailedError: Expected: <null> but was: {}\nat junit.framework.Assert.fail(Assert.java:57)\nat junit.framework.Assert.assertTrue(Assert.java:22)\nat junit.framework.Assert.assertNull(Assert.java:277)\nat junit.framework.Assert.assertNull(Assert.java:268)\nat junit.framework.TestCase.assertNull(TestCase.java:438)\nat org.apache.commons.lang3.builder.ToStringBuilderTest.validateNullToStringStyleRegistry(ToStringBuilderTest.java:586)\nat org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectCycle(ToStringBuilderTest.java:550)",
    "covered_methods": [
        {
            "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:toString()Ljava/lang/String;",
            "method_body": "public String toString() {\nif (this.getObject() == null) {\nstyle.appendEnd(this.getStringBuffer(), this.getObject());\nreturn this.getStringBuffer().toString();\n}",
            "method_id": 30
        },
        {
            "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:toString(Ljava/lang/Object;Lorg/apache/commons/lang3/builder/ToStringStyle;ZZLjava/lang/Class;)Ljava/lang/String;",
            "method_body": "public static <T> String toString(\nreturn new ReflectionToStringBuilder(object, style, null, reflectUpToClass, outputTransients, outputStatics)\n}",
            "method_id": 31
        },
        {
            "method_signature": "org.apache.commons.lang3.ObjectUtils:identityToString(Ljava/lang/StringBuffer;Ljava/lang/Object;)V",
            "method_body": "public static void identityToString(StringBuffer buffer, Object object) {\nif (object == null) {\nbuffer.append(object.getClass().getName())\n}",
            "method_id": 32
        },
        {
            "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendDetail(Ljava/lang/StringBuffer;Ljava/lang/String;Ljava/lang/Object;)V",
            "method_body": "protected void appendDetail(StringBuffer buffer, String fieldName, Object value) {\nbuffer.append(value);\n}",
            "method_id": 33
        },
        {
            "method_signature": "org.apache.commons.lang3.builder.ToStringStyle:appendFieldSeparator(Ljava/lang/StringBuffer;)V",
            "method_body": "protected void appendFieldSeparator(StringBuffer buffer) {\nbuffer.append(fieldSeparator);\n}",
            "method_id": 34
        },
        {
            "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:getObject()Ljava/lang/Object;",
            "method_body": "public Object getObject() {\nreturn object;\n}",
            "method_id": 35
        },
        {
            "method_signature": "org.apache.commons.lang3.builder.ToStringBuilder:<init>(Ljava/lang/Object;Lorg/apache/commons/lang3/builder/ToStringStyle;Ljava/lang/StringBuffer;)V",
            "method_body": "public ToStringBuilder(Object object, ToStringStyle style, StringBuffer buffer) {\nif (style == null) {\nstyle = getDefaultStyle();\nif (buffer == null) {\nbuffer = new StringBuffer(512);\nthis.buffer = buffer;\nthis.style = style;\nthis.object = object;\nstyle.appendStart(buffer, object);\n}",
            "method_id": 36
        },
        {
            "method_signature": "org.apache.commons.lang3.builder.ReflectionToStringBuilder:getValue(Ljava/lang/reflect/Field;)Ljava/lang/Object;",
            "method_body": "protected Object getValue(Field field) throws IllegalArgumentException, IllegalAccessException {\nreturn field.get(this.getObject());\n}",
            "method_id": 37
        }
    ]
}