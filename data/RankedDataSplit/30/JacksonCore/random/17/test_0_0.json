{
    "bug_id": 17,
    "test_id": 0,
    "test_name": "com.fasterxml.jackson.core.json.RawValueWithSurrogatesTest.testRawWithSurrogatesString",
    "test_body": "public void testRawWithSurrogatesString() throws Exception {\n_testRawWithSurrogatesString(false);\n}\n",
    "stack_trace": "com.fasterxml.jackson.core.JsonGenerationException: Split surrogate on writeRaw() input (last character)\nat com.fasterxml.jackson.core.JsonGenerator._reportError(JsonGenerator.java:1723)\nat com.fasterxml.jackson.core.json.UTF8JsonGenerator._outputRawMultiByteChar(UTF8JsonGenerator.java:1887)\nat com.fasterxml.jackson.core.json.UTF8JsonGenerator._writeSegmentedRaw(UTF8JsonGenerator.java:658)\nat com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeRaw(UTF8JsonGenerator.java:573)\nat com.fasterxml.jackson.core.json.UTF8JsonGenerator.writeRaw(UTF8JsonGenerator.java:536)\nat com.fasterxml.jackson.core.base.GeneratorBase.writeRawValue(GeneratorBase.java:299)\nat com.fasterxml.jackson.core.json.RawValueWithSurrogatesTest._testRawWithSurrogatesString(RawValueWithSurrogatesTest.java:82)",
    "covered_methods": [
        {
            "method_signature": "com.fasterxml.jackson.core.util.BufferRecycler:charBufferLength(I)I",
            "method_body": "protected int charBufferLength(int ix) {\nreturn CHAR_BUFFER_LENGTHS[ix];\n}",
            "method_id": 0
        },
        {
            "method_signature": "com.fasterxml.jackson.core.json.UTF8JsonGenerator:<init>(Lcom/fasterxml/jackson/core/io/IOContext;ILcom/fasterxml/jackson/core/ObjectCodec;Ljava/io/OutputStream;)V",
            "method_body": "public UTF8JsonGenerator(IOContext ctxt, int features, ObjectCodec codec,\nsuper(ctxt, features, codec);\n_outputStream = out;\n_bufferRecyclable = true;\n_outputBuffer = ctxt.allocWriteEncodingBuffer();\n_outputEnd = _outputBuffer.length;\n_outputMaxContiguous = _outputEnd >> 3;\n_charBuffer = ctxt.allocConcatBuffer();\n_charBufferLength = _charBuffer.length;\nif (isEnabled(Feature.ESCAPE_NON_ASCII)) {\n}",
            "method_id": 1
        },
        {
            "method_signature": "com.fasterxml.jackson.core.json.JsonWriteContext:writeValue()I",
            "method_body": "public int writeValue() {\nif (_type == TYPE_OBJECT) {\nif (_type == TYPE_ARRAY) {\n++_index;\nreturn (_index == 0) ? STATUS_OK_AS_IS : STATUS_OK_AFTER_SPACE;\n}",
            "method_id": 2
        },
        {
            "method_signature": "com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer:makeOrphan(I)Lcom/fasterxml/jackson/core/sym/CharsToNameCanonicalizer;",
            "method_body": "private CharsToNameCanonicalizer makeOrphan(int seed) {\nreturn new CharsToNameCanonicalizer(null, -1, _symbols, _buckets, _size, seed, _longestCollisionList);\n}",
            "method_id": 3
        },
        {
            "method_signature": "com.fasterxml.jackson.core.json.JsonWriteContext:<init>(ILcom/fasterxml/jackson/core/json/JsonWriteContext;Lcom/fasterxml/jackson/core/json/DupDetector;)V",
            "method_body": "protected JsonWriteContext(int type, JsonWriteContext parent, DupDetector dups) {\nsuper();\n_type = type;\n_parent = parent;\n_dups = dups;\n_index = -1;\n}",
            "method_id": 4
        },
        {
            "method_signature": "com.fasterxml.jackson.core.JsonFactory:createGenerator(Ljava/io/OutputStream;Lcom/fasterxml/jackson/core/JsonEncoding;)Lcom/fasterxml/jackson/core/JsonGenerator;",
            "method_body": "public JsonGenerator createGenerator(OutputStream out, JsonEncoding enc)\nIOContext ctxt = _createContext(out, false);\nctxt.setEncoding(enc);\nif (enc == JsonEncoding.UTF8) {\nreturn _createUTF8Generator(_decorate(out, ctxt), ctxt);\n}",
            "method_id": 5
        },
        {
            "method_signature": "com.fasterxml.jackson.core.base.GeneratorBase:<clinit>()V",
            "method_body": "public final static int SURR1_FIRST = 0xD800;\nprotected final static int DERIVED_FEATURES_MASK =\n* {@link com.fasterxml.jackson.core.JsonGenerator.Feature}s",
            "method_id": 6
        },
        {
            "method_signature": "com.fasterxml.jackson.core.util.BufferRecycler:balloc(I)[B",
            "method_body": "protected byte[] balloc(int size) { return new byte[size]; }\nprotected byte[] balloc(int size) { return new byte[size]; }",
            "method_id": 7
        },
        {
            "method_signature": "com.fasterxml.jackson.core.JsonStreamContext:<init>()V",
            "method_body": "protected JsonStreamContext() { }\nprotected JsonStreamContext() { }",
            "method_id": 8
        },
        {
            "method_signature": "com.fasterxml.jackson.core.base.GeneratorBase:<init>(ILcom/fasterxml/jackson/core/ObjectCodec;)V",
            "method_body": "protected GeneratorBase(int features, ObjectCodec codec) {\nsuper();\n_features = features;\n_objectCodec = codec;\nDupDetector dups = Feature.STRICT_DUPLICATE_DETECTION.enabledIn(features)\n_writeContext = JsonWriteContext.createRootContext(dups);\n_cfgNumbersAsStrings = Feature.WRITE_NUMBERS_AS_STRINGS.enabledIn(features);\n}",
            "method_id": 9
        },
        {
            "method_signature": "com.fasterxml.jackson.core.io.SerializedString:<init>(Ljava/lang/String;)V",
            "method_body": "public SerializedString(String v) {\nif (v == null) {\n_value = v;\n}",
            "method_id": 10
        },
        {
            "method_signature": "com.fasterxml.jackson.core.json.UTF8JsonGenerator:writeRaw(Ljava/lang/String;II)V",
            "method_body": "public void writeRaw(String text, int offset, int len) throws IOException\nfinal char[] buf = _charBuffer;\nwhile (len > 0) {\nint len2 = Math.min(buf.length, len);\ntext.getChars(offset, offset+len2, buf, 0);\nwriteRaw(buf, 0, len2);\n}",
            "method_id": 11
        },
        {
            "method_signature": "com.fasterxml.jackson.core.io.CharTypes:<clinit>()V",
            "method_body": "private final static int[] sInputCodesWS;\nfinal int[] buf = new int[256];\nSystem.arraycopy(sInputCodesUTF8, 128, buf, 128, 128);\nArrays.fill(buf, 0, 32, -1); // invalid white space\nbuf[' '] = 1;\nbuf['\\t'] = 1;\nbuf['\\n'] = '\\n'; // lf/cr need to be observed, ends cpp comment\nbuf['\\r'] = '\\r';\nbuf['/'] = '/'; // start marker for c/cpp comments\nbuf['#'] = '#'; // start marker for YAML comments\nsInputCodesWS = buf;\n}",
            "method_id": 12
        },
        {
            "method_signature": "com.fasterxml.jackson.core.JsonGenerator$Feature:<init>(Ljava/lang/String;IZ)V",
            "method_body": "private Feature(boolean defaultState) {\n_defaultState = defaultState;\n_mask = (1 << ordinal());\n}",
            "method_id": 13
        },
        {
            "method_signature": "com.fasterxml.jackson.core.JsonFactory:createGenerator(Ljava/io/OutputStream;)Lcom/fasterxml/jackson/core/JsonGenerator;",
            "method_body": "public JsonGenerator createGenerator(OutputStream out) throws IOException {\nreturn createGenerator(out, JsonEncoding.UTF8);\n}",
            "method_id": 14
        },
        {
            "method_signature": "com.fasterxml.jackson.core.JsonProcessingException:toString()Ljava/lang/String;",
            "method_body": "@Override public String toString() { return getClass().getName()+\": \"+getMessage(); }\n@Override public String toString() { return getClass().getName()+\": \"+getMessage(); }",
            "method_id": 15
        },
        {
            "method_signature": "com.fasterxml.jackson.core.util.BufferRecycler:allocByteBuffer(II)[B",
            "method_body": "public byte[] allocByteBuffer(int ix, int minSize) {\nfinal int DEF_SIZE = byteBufferLength(ix);\nif (minSize < DEF_SIZE) {\nminSize = DEF_SIZE;\nbyte[] buffer = _byteBuffers[ix];\nif (buffer == null || buffer.length < minSize) {\nbuffer = balloc(minSize);\nreturn buffer;\n}",
            "method_id": 16
        },
        {
            "method_signature": "com.fasterxml.jackson.core.JsonFactory:<init>(Lcom/fasterxml/jackson/core/ObjectCodec;)V",
            "method_body": "public JsonFactory(ObjectCodec oc) { _objectCodec = oc; }\npublic JsonFactory(ObjectCodec oc) { _objectCodec = oc; }",
            "method_id": 17
        },
        {
            "method_signature": "com.fasterxml.jackson.core.json.UTF8JsonGenerator:writeRaw([CII)V",
            "method_body": "public final void writeRaw(char[] cbuf, int offset, int len) throws IOException\nint len3 = len+len+len;\nif ((_outputTail + len3) > _outputEnd) {\nif (_outputEnd < len3) { // wouldn't be enough...\n_writeSegmentedRaw(cbuf, offset, len);\n}",
            "method_id": 18
        },
        {
            "method_signature": "com.fasterxml.jackson.core.JsonGenerator$Feature:getMask()I",
            "method_body": "public int getMask() { return _mask; }\npublic int getMask() { return _mask; }",
            "method_id": 19
        },
        {
            "method_signature": "com.fasterxml.jackson.core.JsonGenerator:<init>()V",
            "method_body": "protected JsonGenerator() { }\nprotected JsonGenerator() { }",
            "method_id": 20
        },
        {
            "method_signature": "com.fasterxml.jackson.core.JsonProcessingException:getLocation()Lcom/fasterxml/jackson/core/JsonLocation;",
            "method_body": "public JsonLocation getLocation() { return _location; }\npublic JsonLocation getLocation() { return _location; }",
            "method_id": 21
        },
        {
            "method_signature": "com.fasterxml.jackson.core.JsonFactory:<init>()V",
            "method_body": "public JsonFactory() { this(null); }\npublic JsonFactory() { this(null); }",
            "method_id": 22
        },
        {
            "method_signature": "com.fasterxml.jackson.core.json.UTF8JsonGenerator:_outputRawMultiByteChar(I[CII)I",
            "method_body": "private final int _outputRawMultiByteChar(int ch, char[] cbuf, int inputOffset, int inputEnd)\nif (ch >= SURR1_FIRST) {\nif (ch <= SURR2_LAST) { // yes, outside of BMP\nif (inputOffset >= inputEnd || cbuf == null) { // nope... have to note down\n_reportError(\"Split surrogate on writeRaw() input (last character)\");\n_outputSurrogates(ch, cbuf[inputOffset]);\nreturn inputOffset+1;\n}",
            "method_id": 23
        },
        {
            "method_signature": "com.fasterxml.jackson.core.base.GeneratorBase:isEnabled(Lcom/fasterxml/jackson/core/JsonGenerator$Feature;)Z",
            "method_body": "@Override public final boolean isEnabled(Feature f) { return (_features & f.getMask()) != 0; }\n@Override public final boolean isEnabled(Feature f) { return (_features & f.getMask()) != 0; }",
            "method_id": 24
        },
        {
            "method_signature": "com.fasterxml.jackson.core.io.CharTypes:get7BitOutputEscapes()[I",
            "method_body": "public static int[] get7BitOutputEscapes() { return sOutputEscapes128; }\npublic static int[] get7BitOutputEscapes() { return sOutputEscapes128; }",
            "method_id": 25
        },
        {
            "method_signature": "com.fasterxml.jackson.core.JsonParser$Feature:getMask()I",
            "method_body": "public int getMask() { return _mask; }\npublic int getMask() { return _mask; }",
            "method_id": 26
        },
        {
            "method_signature": "com.fasterxml.jackson.core.io.IOContext:<init>(Lcom/fasterxml/jackson/core/util/BufferRecycler;Ljava/lang/Object;Z)V",
            "method_body": "public IOContext(BufferRecycler br, Object sourceRef, boolean managedResource)\n{\n_bufferRecycler = br;\n_sourceRef = sourceRef;\n_managedResource = managedResource;\n}",
            "method_id": 27
        },
        {
            "method_signature": "com.fasterxml.jackson.core.JsonParser$Feature:enabledByDefault()Z",
            "method_body": "public boolean enabledByDefault() { return _defaultState; }\npublic boolean enabledByDefault() { return _defaultState; }",
            "method_id": 28
        },
        {
            "method_signature": "com.fasterxml.jackson.core.JsonParser$Feature:collectDefaults()I",
            "method_body": "public static int collectDefaults()\nint flags = 0;\nfor (Feature f : values()) {\nif (f.enabledByDefault()) {\nflags |= f.getMask();\nreturn flags;\n}",
            "method_id": 29
        }
    ]
}