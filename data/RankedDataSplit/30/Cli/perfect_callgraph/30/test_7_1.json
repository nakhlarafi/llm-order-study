{
    "bug_id": 30,
    "test_id": 7,
    "test_name": "org.apache.commons.cli.BasicParserTest.testPropertyOptionGroup",
    "test_body": null,
    "stack_trace": "org.apache.commons.cli.AlreadySelectedException: The option 'b' was specified but an option from this group has already been selected: 'a'\nat org.apache.commons.cli.OptionGroup.setSelected(OptionGroup.java:105)\nat org.apache.commons.cli.Parser.updateRequiredOptions(Parser.java:421)\nat org.apache.commons.cli.Parser.processProperties(Parser.java:296)\nat org.apache.commons.cli.Parser.parse(Parser.java:241)\nat org.apache.commons.cli.Parser.parse(Parser.java:103)\nat org.apache.commons.cli.ParserTestCase.parse(ParserTestCase.java:875)\nat org.apache.commons.cli.ParserTestCase.testPropertyOptionGroup(ParserTestCase.java:1037)",
    "covered_methods": [
        {
            "method_signature": "org.apache.commons.cli.Parser:processOption(Ljava/lang/String;Ljava/util/ListIterator;)V",
            "method_body": "protected void processOption(String arg, ListIterator iter) throws ParseException\nboolean hasOption = getOptions().hasOption(arg);\nif (!hasOption)\nOption opt = (Option) getOptions().getOption(arg).clone();\nupdateRequiredOptions(opt);\nif (opt.hasArg())\ncmd.addOption(opt);\n}",
            "method_id": 30
        },
        {
            "method_signature": "org.apache.commons.cli.Parser:updateRequiredOptions(Lorg/apache/commons/cli/Option;)V",
            "method_body": "private void updateRequiredOptions(Option opt) throws ParseException\nif (opt.isRequired())\nif (getOptions().getOptionGroup(opt) != null)\nOptionGroup group = getOptions().getOptionGroup(opt);\nif (group.isRequired())\ngroup.setSelected(opt);\n}",
            "method_id": 31
        },
        {
            "method_signature": "org.apache.commons.cli.CommandLine:addOption(Lorg/apache/commons/cli/Option;)V",
            "method_body": "void addOption(Option opt)\noptions.add(opt);\n}",
            "method_id": 32
        },
        {
            "method_signature": "org.apache.commons.cli.ParseException:<init>(Ljava/lang/String;)V",
            "method_body": "public ParseException(String message)\nsuper(message);\n}",
            "method_id": 33
        },
        {
            "method_signature": "org.apache.commons.cli.OptionGroup:<init>()V",
            "method_body": "private static final long serialVersionUID = 1L;\nprivate Map optionMap = new HashMap();\noptionMap.put(option.getKey(), option);\nreturn this;\n}",
            "method_id": 34
        },
        {
            "method_signature": "org.apache.commons.cli.OptionGroup:addOption(Lorg/apache/commons/cli/Option;)Lorg/apache/commons/cli/OptionGroup;",
            "method_body": "public OptionGroup addOption(Option option)\noptionMap.put(option.getKey(), option);\nreturn this;\n}",
            "method_id": 35
        },
        {
            "method_signature": "org.apache.commons.cli.OptionGroup:getOptions()Ljava/util/Collection;",
            "method_body": "public Collection getOptions()\nreturn optionMap.values();\n}",
            "method_id": 36
        },
        {
            "method_signature": "org.apache.commons.cli.OptionGroup:setSelected(Lorg/apache/commons/cli/Option;)V",
            "method_body": "public void setSelected(Option option) throws AlreadySelectedException\nif (option == null)\nselected = null;\nreturn;\nif (selected == null || selected.equals(option.getKey()))\nselected = option.getKey();\nthrow new AlreadySelectedException(this, option);\n}",
            "method_id": 37
        },
        {
            "method_signature": "org.apache.commons.cli.OptionGroup:getSelected()Ljava/lang/String;",
            "method_body": "public String getSelected()\nreturn selected;\n}",
            "method_id": 38
        },
        {
            "method_signature": "org.apache.commons.cli.OptionGroup:isRequired()Z",
            "method_body": "public boolean isRequired()\nreturn required;\n}",
            "method_id": 39
        },
        {
            "method_signature": "org.apache.commons.cli.AlreadySelectedException:<init>(Ljava/lang/String;)V",
            "method_body": "public AlreadySelectedException(String message)\nsuper(message);\n}",
            "method_id": 40
        },
        {
            "method_signature": "org.apache.commons.cli.AlreadySelectedException:<init>(Lorg/apache/commons/cli/OptionGroup;Lorg/apache/commons/cli/Option;)V",
            "method_body": "public AlreadySelectedException(OptionGroup group, Option option)\nthis(\"The option '\" + option.getKey() + \"' was specified but an option from this group \"\nthis.group = group;\nthis.option = option;\n}",
            "method_id": 41
        },
        {
            "method_signature": "org.apache.commons.cli.BasicParser:flatten(Lorg/apache/commons/cli/Options;[Ljava/lang/String;Z)[Ljava/lang/String;",
            "method_body": "protected String[] flatten(Options options, String[] arguments, boolean stopAtNonOption)\nreturn arguments;\n}",
            "method_id": 42
        }
    ]
}