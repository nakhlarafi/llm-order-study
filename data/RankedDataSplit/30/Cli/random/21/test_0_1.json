{
    "bug_id": 21,
    "test_id": 0,
    "test_name": "org.apache.commons.cli2.bug.BugCLI150Test.testNegativeNumber",
    "test_body": "public void testNegativeNumber() throws OptionException\n{\nfinal DefaultOptionBuilder oBuilder = new DefaultOptionBuilder();\nfinal ArgumentBuilder aBuilder = new ArgumentBuilder();\nfinal GroupBuilder gBuilder = new GroupBuilder();\n46: final Argument numArg = aBuilder.withValidator(\nNumberValidator.getNumberInstance()).withMinimum(1)\n.withMaximum(1).create();\nfinal Option numOpt = oBuilder.withLongName(\"num\").withArgument(numArg)\n.create();\nfinal Group options = gBuilder.withOption(numOpt).create();\n53: final Parser parser = new Parser();\nparser.setGroup(options);\n56: CommandLine cl = parser.parse(new String[] {\n\"--num\", \"-42\"",
    "stack_trace": "org.apache.commons.cli2.OptionException: Unexpected -42 while processing --num\nat org.apache.commons.cli2.commandline.Parser.parse(Parser.java:99)\nat org.apache.commons.cli2.bug.BugCLI150Test.testNegativeNumber(BugCLI150Test.java:56)",
    "covered_methods": [
        {
            "method_signature": "org.apache.commons.cli2.builder.ArgumentBuilder:<clinit>()V",
            "method_body": "private final static ResourceHelper resources = ResourceHelper.getResourceHelper();\npublic ArgumentBuilder() {\nreset();\n}",
            "method_id": 30
        },
        {
            "method_signature": "org.apache.commons.cli2.option.DefaultOption:appendUsage(Ljava/lang/StringBuffer;Ljava/util/Set;Ljava/util/Comparator;)V",
            "method_body": "public void appendUsage(final StringBuffer buffer,\nfinal boolean optional =\nfinal boolean displayAliases = helpSettings.contains(DisplaySetting.DISPLAY_ALIASES);\nif (optional) {\nbuffer.append(preferredName);\nif (displayAliases && !aliases.isEmpty()) {\nsuper.appendUsage(buffer, helpSettings, comp);\nif (optional) {\n}",
            "method_id": 31
        },
        {
            "method_signature": "org.apache.commons.cli2.resource.ResourceHelper:getMessage(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;",
            "method_body": "public String getMessage(final String key,\nreturn getMessage(key, new Object[] { value });\n}",
            "method_id": 32
        },
        {
            "method_signature": "org.apache.commons.cli2.commandline.Parser:setGroup(Lorg/apache/commons/cli2/Group;)V",
            "method_body": "public void setGroup(final Group group) {\nthis.group = group;\n}",
            "method_id": 33
        },
        {
            "method_signature": "org.apache.commons.cli2.option.ParentImpl:appendUsage(Ljava/lang/StringBuffer;Ljava/util/Set;Ljava/util/Comparator;)V",
            "method_body": "public void appendUsage(final StringBuffer buffer,\nfinal boolean displayArgument =\nfinal boolean displayChildren =\nif (displayArgument) {\nif (displayChildren) {\n}",
            "method_id": 34
        },
        {
            "method_signature": "org.apache.commons.cli2.option.GroupImpl:looksLikeOption(Lorg/apache/commons/cli2/WriteableCommandLine;Ljava/lang/String;)Z",
            "method_body": "private boolean looksLikeOption(final WriteableCommandLine commandLine,\nreturn commandLine.looksLikeOption(trigger);\n}",
            "method_id": 35
        },
        {
            "method_signature": "org.apache.commons.cli2.option.OptionImpl:defaults(Lorg/apache/commons/cli2/WriteableCommandLine;)V",
            "method_body": "public void defaults(final WriteableCommandLine commandLine) {\n}",
            "method_id": 36
        },
        {
            "method_signature": "org.apache.commons.cli2.OptionException:<clinit>()V",
            "method_body": "public static final Set HELP_SETTINGS =\nprivate static final ResourceHelper helper = ResourceHelper.getResourceHelper();\n}",
            "method_id": 37
        },
        {
            "method_signature": "org.apache.commons.cli2.option.ParentImpl:getDescription()Ljava/lang/String;",
            "method_body": "public String getDescription() {\nreturn description;\n}",
            "method_id": 38
        },
        {
            "method_signature": "org.apache.commons.cli2.option.GroupImpl:<init>(Ljava/util/List;Ljava/lang/String;Ljava/lang/String;IIZ)V",
            "method_body": "public GroupImpl(final List options,\nsuper(0, required);\nthis.name = name;\nthis.description = description;\nthis.minimum = minimum;\nthis.maximum = maximum;\nthis.options = Collections.unmodifiableList(options);\nfinal List newAnonymous = new ArrayList();\nfinal SortedMap newOptionMap = new TreeMap(ReverseStringComparator.getInstance());\nfinal Set newPrefixes = new HashSet();\nfor (final Iterator i = options.iterator(); i.hasNext();) {\nfinal Option option = (Option) i.next();\noption.setParent(this);\nif (option instanceof Argument) {\nfinal Set triggers = option.getTriggers();\nfor (Iterator j = triggers.iterator(); j.hasNext();) {\nnewOptionMap.put(j.next(), option);\nnewPrefixes.addAll(option.getPrefixes());\n}\nthis.anonymous = Collections.unmodifiableList(newAnonymous);\nthis.optionMap = Collections.unmodifiableSortedMap(newOptionMap);\nthis.prefixes = Collections.unmodifiableSet(newPrefixes);\n}",
            "method_id": 39
        },
        {
            "method_signature": "org.apache.commons.cli2.builder.ArgumentBuilder:reset()Lorg/apache/commons/cli2/builder/ArgumentBuilder;",
            "method_body": "public final ArgumentBuilder reset() {\nname = \"arg\";\ndescription = null;\nminimum = 0;\nmaximum = Integer.MAX_VALUE;\ninitialSeparator = ArgumentImpl.DEFAULT_INITIAL_SEPARATOR;\nsubsequentSeparator = ArgumentImpl.DEFAULT_SUBSEQUENT_SEPARATOR;\nvalidator = null;\nconsumeRemaining = \"--\";\ndefaultValues = null;\nid = 0;\nreturn this;\n}",
            "method_id": 40
        },
        {
            "method_signature": "org.apache.commons.cli2.option.OptionImpl:hashCode()I",
            "method_body": "public int hashCode() {\nint hashCode = getId();\nif (getPreferredName() != null) {\nhashCode = (hashCode * 37) + getPreferredName().hashCode();\nif (getDescription() != null) {\nhashCode = (hashCode * 37) + getPrefixes().hashCode();\nhashCode = (hashCode * 37) + getTriggers().hashCode();\nreturn hashCode;\n}",
            "method_id": 41
        },
        {
            "method_signature": "org.apache.commons.cli2.option.OptionImpl:setParent(Lorg/apache/commons/cli2/Option;)V",
            "method_body": "public void setParent(Option parent) {\nthis.parent = parent;\n}",
            "method_id": 42
        },
        {
            "method_signature": "org.apache.commons.cli2.option.DefaultOption:<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;Ljava/lang/String;Ljava/util/Set;Ljava/util/Set;ZLorg/apache/commons/cli2/Argument;Lorg/apache/commons/cli2/Group;I)V",
            "method_body": "public DefaultOption(final String shortPrefix,\nsuper(argument, children, description, id, required);\nthis.shortPrefix = shortPrefix;\nthis.burstEnabled = burstEnabled;\nthis.burstLength = shortPrefix.length() + 1;\nthis.preferredName = preferredName;\nthis.aliases =\nthis.burstAliases =\nfinal Set newTriggers = new HashSet();\nnewTriggers.add(preferredName);\nnewTriggers.addAll(this.aliases);\nnewTriggers.addAll(this.burstAliases);\nthis.triggers = Collections.unmodifiableSet(newTriggers);\nfinal Set newPrefixes = new HashSet(super.getPrefixes());\nnewPrefixes.add(shortPrefix);\nnewPrefixes.add(longPrefix);\nthis.prefixes = Collections.unmodifiableSet(newPrefixes);\ncheckPrefixes(newPrefixes);\n}",
            "method_id": 43
        },
        {
            "method_signature": "org.apache.commons.cli2.resource.ResourceHelper:getResourceHelper()Lorg/apache/commons/cli2/resource/ResourceHelper;",
            "method_body": "public static ResourceHelper getResourceHelper() {\nString bundleName = System.getProperty(PROP_LOCALE);\nif (helper == null || !helper.getBundleName().equals(bundleName)) {\nhelper = new ResourceHelper();\nreturn helper;\n}",
            "method_id": 44
        },
        {
            "method_signature": "org.apache.commons.cli2.commandline.WriteableCommandLineImpl:addOption(Lorg/apache/commons/cli2/Option;)V",
            "method_body": "public void addOption(Option option) {\noptions.add(option);\nnameToOption.put(option.getPreferredName(), option);\nfor (Iterator i = option.getTriggers().iterator(); i.hasNext();) {\nnameToOption.put(i.next(), option);\nOption parent = option.getParent();\nwhile (parent != null && !options.contains(parent)) {\noptions.add(parent);\nparent = parent.getParent();\n}",
            "method_id": 45
        },
        {
            "method_signature": "org.apache.commons.cli2.resource.ResourceHelper:getBundleName()Ljava/lang/String;",
            "method_body": "public String getBundleName() {\nreturn this.prop;\n}",
            "method_id": 46
        },
        {
            "method_signature": "org.apache.commons.cli2.option.DefaultOption:processParent(Lorg/apache/commons/cli2/WriteableCommandLine;Ljava/util/ListIterator;)V",
            "method_body": "public void processParent(WriteableCommandLine commandLine,\nfinal String argument = (String) arguments.next();\nif (triggers.contains(argument)) {\ncommandLine.addOption(this);\narguments.set(preferredName);\n}",
            "method_id": 47
        },
        {
            "method_signature": "org.apache.commons.cli2.commandline.WriteableCommandLineImpl:setDefaultValues(Lorg/apache/commons/cli2/Option;Ljava/util/List;)V",
            "method_body": "public void setDefaultValues(final Option option,\nif (defaults == null) {\ndefaultValues.remove(option);\n}",
            "method_id": 48
        },
        {
            "method_signature": "org.apache.commons.cli2.option.OptionImpl:checkPrefix(Ljava/util/Set;Ljava/lang/String;)V",
            "method_body": "private void checkPrefix(final Set prefixes,\nfor (final Iterator i = prefixes.iterator(); i.hasNext();) {\nString prefix = (String) i.next();\nif (trigger.startsWith(prefix)) {\nreturn;\n}",
            "method_id": 49
        },
        {
            "method_signature": "org.apache.commons.cli2.option.ParentImpl:handleInitialSeparator(Ljava/util/ListIterator;C)V",
            "method_body": "private void handleInitialSeparator(final ListIterator arguments,\nfinal String newArgument = (String) arguments.next();\nfinal int initialIndex = newArgument.indexOf(separator);\nif (initialIndex > 0) {\narguments.previous();\n}",
            "method_id": 50
        },
        {
            "method_signature": "org.apache.commons.cli2.option.GroupImpl:appendUsage(Ljava/lang/StringBuffer;Ljava/util/Set;Ljava/util/Comparator;Ljava/lang/String;)V",
            "method_body": "public void appendUsage(final StringBuffer buffer,\nfinal Set helpSettingsCopy = new HashSet(helpSettings);\nfinal boolean optional = !isRequired()\nfinal boolean expanded =\nfinal boolean named =\nfinal boolean arguments = helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);\nfinal boolean outer = helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);\nhelpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);\nfinal boolean both = named && expanded;\nif (optional) {\nif (named) {\nif (both) {\nif (expanded) {\nif (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)) {\nchildSettings = DisplaySetting.NONE;\nif (comp == null) {\nlist = options;\nfor (final Iterator i = list.iterator(); i.hasNext();) {\nfinal Option option = (Option) i.next();\noption.appendUsage(buffer, childSettings, comp);\nif (i.hasNext()) {\n}\nif (both) {\nif (optional && outer) {\nif (arguments) {\nif (optional && !outer) {\n}",
            "method_id": 51
        },
        {
            "method_signature": "org.apache.commons.cli2.DisplaySetting:<init>(Ljava/lang/String;)V",
            "method_body": "private DisplaySetting(final String name) {\nthis.name = name;\nthis.hashCode = name.hashCode();\nall.add(this);\n}",
            "method_id": 52
        },
        {
            "method_signature": "org.apache.commons.cli2.builder.GroupBuilder:withOption(Lorg/apache/commons/cli2/Option;)Lorg/apache/commons/cli2/builder/GroupBuilder;",
            "method_body": "public GroupBuilder withOption(final Option option) {\nthis.options.add(option);\nreturn this;\n}",
            "method_id": 53
        },
        {
            "method_signature": "org.apache.commons.cli2.builder.DefaultOptionBuilder:withArgument(Lorg/apache/commons/cli2/Argument;)Lorg/apache/commons/cli2/builder/DefaultOptionBuilder;",
            "method_body": "public DefaultOptionBuilder withArgument(final Argument newArgument) {\nthis.argument = newArgument;\nreturn this;\n}",
            "method_id": 54
        },
        {
            "method_signature": "org.apache.commons.cli2.builder.ArgumentBuilder:<init>()V",
            "method_body": "public ArgumentBuilder() {\nreset();\n}",
            "method_id": 55
        },
        {
            "method_signature": "org.apache.commons.cli2.builder.GroupBuilder:reset()Lorg/apache/commons/cli2/builder/GroupBuilder;",
            "method_body": "public GroupBuilder reset() {\nname = null;\ndescription = null;\noptions = new ArrayList();\nminimum = 0;\nmaximum = Integer.MAX_VALUE;\nrequired = true;\nreturn this;\n}",
            "method_id": 56
        },
        {
            "method_signature": "org.apache.commons.cli2.option.DefaultOption:canProcess(Lorg/apache/commons/cli2/WriteableCommandLine;Ljava/lang/String;)Z",
            "method_body": "public boolean canProcess(final WriteableCommandLine commandLine,\nreturn (argument != null) &&\n}",
            "method_id": 57
        },
        {
            "method_signature": "org.apache.commons.cli2.DisplaySetting:<clinit>()V",
            "method_body": "private static final Set all = new HashSet();\npublic static final Set ALL = Collections.unmodifiableSet(all);\npublic static final Set NONE = Collections.EMPTY_SET;\npublic static final DisplaySetting DISPLAY_ALIASES =\npublic static final DisplaySetting DISPLAY_OPTIONAL =\npublic static final DisplaySetting DISPLAY_OPTIONAL_CHILD_GROUP =\npublic static final DisplaySetting DISPLAY_PROPERTY_OPTION =\npublic static final DisplaySetting DISPLAY_SWITCH_ENABLED =\npublic static final DisplaySetting DISPLAY_SWITCH_DISABLED =\npublic static final DisplaySetting DISPLAY_GROUP_NAME =\npublic static final DisplaySetting DISPLAY_GROUP_EXPANDED =\npublic static final DisplaySetting DISPLAY_GROUP_ARGUMENT =\npublic static final DisplaySetting DISPLAY_GROUP_OUTER =\npublic static final DisplaySetting DISPLAY_ARGUMENT_NUMBERED =\npublic static final DisplaySetting DISPLAY_ARGUMENT_BRACKETED =\npublic static final DisplaySetting DISPLAY_PARENT_ARGUMENT =\npublic static final DisplaySetting DISPLAY_PARENT_CHILDREN =\nprivate DisplaySetting(final String name) {\nthis.name = name;\nthis.hashCode = name.hashCode();\nall.add(this);\n}",
            "method_id": 58
        },
        {
            "method_signature": "org.apache.commons.cli2.option.GroupImpl:appendUsage(Ljava/lang/StringBuffer;Ljava/util/Set;Ljava/util/Comparator;)V",
            "method_body": "public void appendUsage(final StringBuffer buffer,\nappendUsage(buffer, helpSettings, comp, \"|\");\n}",
            "method_id": 59
        }
    ]
}