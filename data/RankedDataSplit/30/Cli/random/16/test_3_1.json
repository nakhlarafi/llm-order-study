{
    "bug_id": 16,
    "test_id": 3,
    "test_name": "org.apache.commons.cli2.bug.BugCLI123Test.testMultipleChildOptions",
    "test_body": "public void testMultipleChildOptions() throws OptionException {\nCommandLine cl = parser.parse(new String[] { \"--child\", \"test\",\n\"--sub\", \"anotherTest\" });",
    "stack_trace": "org.apache.commons.cli2.OptionException: Missing option parentOptions\nat org.apache.commons.cli2.option.GroupImpl.validate(GroupImpl.java:274)\nat org.apache.commons.cli2.commandline.Parser.parse(Parser.java:104)\nat org.apache.commons.cli2.bug.BugCLI123Test.testMultipleChildOptions(BugCLI123Test.java:92)",
    "covered_methods": [
        {
            "method_signature": "org.apache.commons.cli2.option.DefaultOption:validate(Lorg/apache/commons/cli2/WriteableCommandLine;)V",
            "method_body": "public void validate(WriteableCommandLine commandLine)\nif (isRequired() && !commandLine.hasOption(this)) {\nsuper.validate(commandLine);\n}",
            "method_id": 30
        },
        {
            "method_signature": "org.apache.commons.cli2.resource.ResourceHelper:<init>()V",
            "method_body": "private ResourceHelper() {\nString bundleName = System.getProperty(PROP_LOCALE);\nif (bundleName == null) {\nbundleName = DEFAULT_BUNDLE;\nthis.prop = bundleName;\nint firstUnderscore = bundleName.indexOf('_');\nint secondUnderscore = bundleName.indexOf('_', firstUnderscore + 1);\nif (firstUnderscore != -1) {\nString language = bundleName.substring(firstUnderscore + 1, secondUnderscore);\nString country = bundleName.substring(secondUnderscore + 1);\nlocale = new Locale(language, country);\n}\nbundle = ResourceBundle.getBundle(bundleName, locale);\n}\n}",
            "method_id": 31
        },
        {
            "method_signature": "org.apache.commons.cli2.commandline.WriteableCommandLineImpl:hasOption(Lorg/apache/commons/cli2/Option;)Z",
            "method_body": "public boolean hasOption(final Option option) {\nfinal boolean present = options.contains(option);\nreturn present;\n}",
            "method_id": 32
        },
        {
            "method_signature": "org.apache.commons.cli2.commandline.WriteableCommandLineImpl:getOption(Ljava/lang/String;)Lorg/apache/commons/cli2/Option;",
            "method_body": "public Option getOption(final String trigger) {\nreturn (Option) nameToOption.get(trigger);\n}",
            "method_id": 33
        },
        {
            "method_signature": "org.apache.commons.cli2.option.ArgumentImpl:<init>(Ljava/lang/String;Ljava/lang/String;IICCLorg/apache/commons/cli2/validation/Validator;Ljava/lang/String;Ljava/util/List;I)V",
            "method_body": "public ArgumentImpl(final String name,\nsuper(id, false);\nthis.name = (name == null) ? \"arg\" : name;\nthis.description = description;\nthis.minimum = minimum;\nthis.maximum = maximum;\nthis.initialSeparator = initialSeparator;\nthis.subsequentSeparator = subsequentSeparator;\nthis.subsequentSplit = subsequentSeparator != NUL;\nthis.validator = validator;\nthis.consumeRemaining = consumeRemaining;\nthis.defaultValues = valueDefaults;\nif (minimum > maximum) {\nif ((valueDefaults != null) && (valueDefaults.size() > 0)) {\n}",
            "method_id": 34
        },
        {
            "method_signature": "org.apache.commons.cli2.option.GroupImpl:getPreferredName()Ljava/lang/String;",
            "method_body": "public String getPreferredName() {\nreturn name;\n}",
            "method_id": 35
        },
        {
            "method_signature": "org.apache.commons.cli2.resource.ResourceHelper:getMessage(Ljava/lang/String;)Ljava/lang/String;",
            "method_body": "public String getMessage(final String key) {\nreturn getMessage(key, new Object[] {  });\n}",
            "method_id": 36
        },
        {
            "method_signature": "org.apache.commons.cli2.option.OptionImpl:equals(Ljava/lang/Object;Ljava/lang/Object;)Z",
            "method_body": "private boolean equals(Object left,\nif ((left == null) && (right == null)) {\nreturn true;\n} else if ((left == null) || (right == null)) {\nreturn left.equals(right);\n}",
            "method_id": 37
        },
        {
            "method_signature": "org.apache.commons.cli2.builder.GroupBuilder:withName(Ljava/lang/String;)Lorg/apache/commons/cli2/builder/GroupBuilder;",
            "method_body": "public GroupBuilder withName(final String newName) {\nthis.name = newName;\nreturn this;\n}",
            "method_id": 38
        },
        {
            "method_signature": "org.apache.commons.cli2.option.ParentImpl:getDescription()Ljava/lang/String;",
            "method_body": "public String getDescription() {\nreturn description;\n}",
            "method_id": 39
        },
        {
            "method_signature": "org.apache.commons.cli2.builder.ArgumentBuilder:withName(Ljava/lang/String;)Lorg/apache/commons/cli2/builder/ArgumentBuilder;",
            "method_body": "public final ArgumentBuilder withName(final String newName) {\nif (newName == null) {\nif (\"\".equals(newName)) {\nthis.name = newName;\nreturn this;\n}",
            "method_id": 40
        },
        {
            "method_signature": "org.apache.commons.cli2.option.GroupImpl:defaults(Lorg/apache/commons/cli2/WriteableCommandLine;)V",
            "method_body": "public void defaults(final WriteableCommandLine commandLine) {\nsuper.defaults(commandLine);\nfor (final Iterator i = options.iterator(); i.hasNext();) {\nfinal Option option = (Option) i.next();\noption.defaults(commandLine);\n}\nfor (final Iterator i = anonymous.iterator(); i.hasNext();) {\nfinal Option option = (Option) i.next();\noption.defaults(commandLine);\n}\n}",
            "method_id": 41
        },
        {
            "method_signature": "org.apache.commons.cli2.option.OptionImpl:hashCode()I",
            "method_body": "public int hashCode() {\nint hashCode = getId();\nif (getPreferredName() != null) {\nhashCode = (hashCode * 37) + getPreferredName().hashCode();\nif (getDescription() != null) {\nhashCode = (hashCode * 37) + getDescription().hashCode();\nhashCode = (hashCode * 37) + getPrefixes().hashCode();\nhashCode = (hashCode * 37) + getTriggers().hashCode();\nreturn hashCode;\n}",
            "method_id": 42
        },
        {
            "method_signature": "org.apache.commons.cli2.option.ArgumentImpl:getInitialSeparator()C",
            "method_body": "public char getInitialSeparator() {\nreturn this.initialSeparator;\n}",
            "method_id": 43
        },
        {
            "method_signature": "org.apache.commons.cli2.commandline.Parser:setGroup(Lorg/apache/commons/cli2/Group;)V",
            "method_body": "public void setGroup(final Group group) {\nthis.group = group;\n}",
            "method_id": 44
        },
        {
            "method_signature": "org.apache.commons.cli2.option.ParentImpl:handleInitialSeparator(Ljava/util/ListIterator;C)V",
            "method_body": "private void handleInitialSeparator(final ListIterator arguments,\nfinal String newArgument = (String) arguments.next();\nfinal int initialIndex = newArgument.indexOf(separator);\nif (initialIndex > 0) {\narguments.previous();\n}",
            "method_id": 45
        },
        {
            "method_signature": "org.apache.commons.cli2.option.ParentImpl:validate(Lorg/apache/commons/cli2/WriteableCommandLine;)V",
            "method_body": "public void validate(WriteableCommandLine commandLine)\nif (commandLine.hasOption(this)) {\nif (argument != null) {\nargument.validate(commandLine, this);\nif (children != null) {\n}",
            "method_id": 46
        },
        {
            "method_signature": "org.apache.commons.cli2.option.GroupImpl:getPrefixes()Ljava/util/Set;",
            "method_body": "public Set getPrefixes() {\nreturn prefixes;\n}",
            "method_id": 47
        },
        {
            "method_signature": "org.apache.commons.cli2.commandline.WriteableCommandLineImpl:getUndefaultedValues(Lorg/apache/commons/cli2/Option;)Ljava/util/List;",
            "method_body": "public List getUndefaultedValues(Option option) {\nList valueList = (List) values.get(option);\nif (valueList == null) {\nvalueList = Collections.EMPTY_LIST;\nreturn valueList;\n}",
            "method_id": 48
        },
        {
            "method_signature": "org.apache.commons.cli2.option.DefaultOption:getPreferredName()Ljava/lang/String;",
            "method_body": "public String getPreferredName() {\nreturn preferredName;\n}",
            "method_id": 49
        },
        {
            "method_signature": "org.apache.commons.cli2.option.OptionImpl:checkPrefixes(Ljava/util/Set;)V",
            "method_body": "protected void checkPrefixes(final Set prefixes) {\nif (prefixes.isEmpty()) {\ncheckPrefix(prefixes, getPreferredName());\nthis.getTriggers();\nfor (final Iterator i = getTriggers().iterator(); i.hasNext();) {\ncheckPrefix(prefixes, (String) i.next());\n}",
            "method_id": 50
        },
        {
            "method_signature": "org.apache.commons.cli2.option.ParentImpl:defaults(Lorg/apache/commons/cli2/WriteableCommandLine;)V",
            "method_body": "public void defaults(final WriteableCommandLine commandLine) {\nsuper.defaults(commandLine);\nif (argument != null) {\nargument.defaultValues(commandLine, this);\nif (children != null) {\n}",
            "method_id": 51
        },
        {
            "method_signature": "org.apache.commons.cli2.option.ArgumentImpl:processValues(Lorg/apache/commons/cli2/WriteableCommandLine;Ljava/util/ListIterator;Lorg/apache/commons/cli2/Option;)V",
            "method_body": "public void processValues(final WriteableCommandLine commandLine,\nint argumentCount = commandLine.getUndefaultedValues(option).size();\nwhile (arguments.hasNext() && (argumentCount < maximum)) {\nfinal String allValuesQuoted = (String) arguments.next();\nfinal String allValues = stripBoundaryQuotes(allValuesQuoted);\nif (allValuesQuoted.equals(consumeRemaining)) {\nelse if (commandLine.looksLikeOption(allValuesQuoted)) {\narguments.previous();\nbreak;\nelse if (subsequentSplit) {\nfinal StringTokenizer values =\narguments.remove();\nwhile (values.hasMoreTokens() && (argumentCount < maximum)) {\n++argumentCount;\nfinal String token = values.nextToken();\ncommandLine.addValue(option, token);\narguments.add(token);\n}\nif (values.hasMoreTokens()) {\n}\n++argumentCount;\ncommandLine.addValue(option, allValues);\n}\n}",
            "method_id": 52
        },
        {
            "method_signature": "org.apache.commons.cli2.resource.ResourceHelper:getMessage(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;",
            "method_body": "public String getMessage(final String key,\nfinal String msgFormatStr = bundle.getString(key);\nfinal MessageFormat msgFormat = new MessageFormat(msgFormatStr);\nreturn msgFormat.format(values);\n}",
            "method_id": 53
        },
        {
            "method_signature": "org.apache.commons.cli2.builder.DefaultOptionBuilder:withShortName(Ljava/lang/String;)Lorg/apache/commons/cli2/builder/DefaultOptionBuilder;",
            "method_body": "public DefaultOptionBuilder withShortName(final String shortName) {\nfinal String name = shortPrefix + shortName;\nif (preferredName == null) {\naliases.add(name);\nif (burstEnabled && (name.length() == (shortPrefix.length() + 1))) {\nburstAliases.add(name);\nreturn this;\n}",
            "method_id": 54
        },
        {
            "method_signature": "org.apache.commons.cli2.option.ParentImpl:process(Lorg/apache/commons/cli2/WriteableCommandLine;Ljava/util/ListIterator;)V",
            "method_body": "public void process(final WriteableCommandLine commandLine,\nif (argument != null) {\nhandleInitialSeparator(arguments, argument.getInitialSeparator());\nprocessParent(commandLine, arguments);\nif (argument != null) {\nargument.processValues(commandLine, arguments, this);\nif ((children != null) && children.canProcess(commandLine, arguments)) {\n}",
            "method_id": 55
        },
        {
            "method_signature": "org.apache.commons.cli2.builder.GroupBuilder:withOption(Lorg/apache/commons/cli2/Option;)Lorg/apache/commons/cli2/builder/GroupBuilder;",
            "method_body": "public GroupBuilder withOption(final Option option) {\nthis.options.add(option);\nreturn this;\n}",
            "method_id": 56
        },
        {
            "method_signature": "org.apache.commons.cli2.option.OptionImpl:defaults(Lorg/apache/commons/cli2/WriteableCommandLine;)V",
            "method_body": "public void defaults(final WriteableCommandLine commandLine) {\n}",
            "method_id": 57
        },
        {
            "method_signature": "org.apache.commons.cli2.DisplaySetting:<clinit>()V",
            "method_body": "private static final Set all = new HashSet();\npublic static final Set ALL = Collections.unmodifiableSet(all);\npublic static final Set NONE = Collections.EMPTY_SET;\npublic static final DisplaySetting DISPLAY_ALIASES =\npublic static final DisplaySetting DISPLAY_OPTIONAL =\npublic static final DisplaySetting DISPLAY_PROPERTY_OPTION =\npublic static final DisplaySetting DISPLAY_SWITCH_ENABLED =\npublic static final DisplaySetting DISPLAY_SWITCH_DISABLED =\npublic static final DisplaySetting DISPLAY_GROUP_NAME =\npublic static final DisplaySetting DISPLAY_GROUP_EXPANDED =\npublic static final DisplaySetting DISPLAY_GROUP_ARGUMENT =\npublic static final DisplaySetting DISPLAY_GROUP_OUTER =\npublic static final DisplaySetting DISPLAY_ARGUMENT_NUMBERED =\npublic static final DisplaySetting DISPLAY_ARGUMENT_BRACKETED =\npublic static final DisplaySetting DISPLAY_PARENT_ARGUMENT =\npublic static final DisplaySetting DISPLAY_PARENT_CHILDREN =\nprivate DisplaySetting(final String name) {\nthis.name = name;\nthis.hashCode = name.hashCode();\nall.add(this);\n}",
            "method_id": 58
        },
        {
            "method_signature": "org.apache.commons.cli2.util.HelpFormatter:<init>()V",
            "method_body": "public HelpFormatter() {\nthis(DEFAULT_GUTTER_LEFT, DEFAULT_GUTTER_CENTER, DEFAULT_GUTTER_RIGHT, DEFAULT_FULL_WIDTH);\n}",
            "method_id": 59
        }
    ]
}