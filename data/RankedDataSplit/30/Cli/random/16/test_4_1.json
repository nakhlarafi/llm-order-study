{
    "bug_id": 16,
    "test_id": 4,
    "test_name": "org.apache.commons.cli2.bug.BugCLI123Test.testSingleChildOption",
    "test_body": "public void testSingleChildOption() throws OptionException {\nCommandLine cl = parser.parse(new String[] { \"--child\", \"test\" });\nassertTrue(\"Child option not found\", cl.hasOption(childOption1));",
    "stack_trace": "org.apache.commons.cli2.OptionException: Missing option parentOptions\nat org.apache.commons.cli2.option.GroupImpl.validate(GroupImpl.java:274)\nat org.apache.commons.cli2.commandline.Parser.parse(Parser.java:104)\nat org.apache.commons.cli2.bug.BugCLI123Test.testSingleChildOption(BugCLI123Test.java:81)",
    "covered_methods": [
        {
            "method_signature": "org.apache.commons.cli2.option.OptionImpl:getId()I",
            "method_body": "public int getId() {\nreturn id;\n}",
            "method_id": 30
        },
        {
            "method_signature": "org.apache.commons.cli2.resource.ResourceHelper:<init>()V",
            "method_body": "private ResourceHelper() {\nString bundleName = System.getProperty(PROP_LOCALE);\nif (bundleName == null) {\nbundleName = DEFAULT_BUNDLE;\nthis.prop = bundleName;\nint firstUnderscore = bundleName.indexOf('_');\nint secondUnderscore = bundleName.indexOf('_', firstUnderscore + 1);\nif (firstUnderscore != -1) {\nString language = bundleName.substring(firstUnderscore + 1, secondUnderscore);\nString country = bundleName.substring(secondUnderscore + 1);\nlocale = new Locale(language, country);\n}\nbundle = ResourceBundle.getBundle(bundleName, locale);\n}\n}",
            "method_id": 31
        },
        {
            "method_signature": "org.apache.commons.cli2.resource.ResourceHelper:getBundleName()Ljava/lang/String;",
            "method_body": "public String getBundleName() {\nreturn this.prop;\n}",
            "method_id": 32
        },
        {
            "method_signature": "org.apache.commons.cli2.builder.DefaultOptionBuilder:reset()Lorg/apache/commons/cli2/builder/DefaultOptionBuilder;",
            "method_body": "public DefaultOptionBuilder reset() {\npreferredName = null;\ndescription = null;\naliases = new HashSet();\nburstAliases = new HashSet();\nrequired = false;\nargument = null;\nchildren = null;\nid = 0;\nreturn this;\n}",
            "method_id": 33
        },
        {
            "method_signature": "org.apache.commons.cli2.DisplaySetting:hashCode()I",
            "method_body": "public int hashCode() {\nreturn hashCode;\n}",
            "method_id": 34
        },
        {
            "method_signature": "org.apache.commons.cli2.util.HelpFormatter:<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)V",
            "method_body": "public HelpFormatter(final String gutterLeft,\nfinal int fullWidth) {\nthis.gutterLeft = (gutterLeft == null) ? DEFAULT_GUTTER_LEFT : gutterLeft;\nthis.gutterCenter = (gutterCenter == null) ? DEFAULT_GUTTER_CENTER : gutterCenter;\nthis.gutterRight = (gutterRight == null) ? DEFAULT_GUTTER_RIGHT : gutterRight;\nthis.pageWidth = fullWidth - this.gutterLeft.length() - this.gutterRight.length();\nint availableWidth = fullWidth - pageWidth + this.gutterCenter.length();\nif (availableWidth < 2) {\n}",
            "method_id": 35
        },
        {
            "method_signature": "org.apache.commons.cli2.commandline.WriteableCommandLineImpl:getUndefaultedValues(Lorg/apache/commons/cli2/Option;)Ljava/util/List;",
            "method_body": "public List getUndefaultedValues(Option option) {\nList valueList = (List) values.get(option);\nif (valueList == null) {\nvalueList = Collections.EMPTY_LIST;\nreturn valueList;\n}",
            "method_id": 36
        },
        {
            "method_signature": "org.apache.commons.cli2.builder.DefaultOptionBuilder:create()Lorg/apache/commons/cli2/option/DefaultOption;",
            "method_body": "public DefaultOption create()\nif (preferredName == null) {\nfinal DefaultOption option =\nreset();\nreturn option;\n}",
            "method_id": 37
        },
        {
            "method_signature": "org.apache.commons.cli2.commandline.WriteableCommandLineImpl:looksLikeOption(Ljava/lang/String;)Z",
            "method_body": "public boolean looksLikeOption(final String trigger) {\nfor (final Iterator i = prefixes.iterator(); i.hasNext();) {\nfinal String prefix = (String) i.next();\nif (trigger.startsWith(prefix)) {\nreturn true;\n}\nreturn false;\n}",
            "method_id": 38
        },
        {
            "method_signature": "org.apache.commons.cli2.option.ParentImpl:getPrefixes()Ljava/util/Set;",
            "method_body": "public Set getPrefixes() {\nreturn (children == null) ? Collections.EMPTY_SET : children.getPrefixes();\n}",
            "method_id": 39
        },
        {
            "method_signature": "org.apache.commons.cli2.option.OptionImpl:hashCode()I",
            "method_body": "public int hashCode() {\nint hashCode = getId();\nif (getPreferredName() != null) {\nhashCode = (hashCode * 37) + getPreferredName().hashCode();\nif (getDescription() != null) {\nhashCode = (hashCode * 37) + getDescription().hashCode();\nhashCode = (hashCode * 37) + getPrefixes().hashCode();\nhashCode = (hashCode * 37) + getTriggers().hashCode();\nreturn hashCode;\n}",
            "method_id": 40
        },
        {
            "method_signature": "org.apache.commons.cli2.commandline.WriteableCommandLineImpl:getValues(Lorg/apache/commons/cli2/Option;Ljava/util/List;)Ljava/util/List;",
            "method_body": "public List getValues(final Option option,\nList valueList = (List) values.get(option);\nif (defaultValues == null || defaultValues.isEmpty()) {\ndefaultValues = (List) this.defaultValues.get(option);\nif (defaultValues != null && !defaultValues.isEmpty()) {\nreturn valueList == null ? Collections.EMPTY_LIST : valueList;\n}",
            "method_id": 41
        },
        {
            "method_signature": "org.apache.commons.cli2.option.ArgumentImpl:defaultValues(Lorg/apache/commons/cli2/WriteableCommandLine;Lorg/apache/commons/cli2/Option;)V",
            "method_body": "public void defaultValues(final WriteableCommandLine commandLine,\ncommandLine.setDefaultValues(option, defaultValues);\n}",
            "method_id": 42
        },
        {
            "method_signature": "org.apache.commons.cli2.builder.ArgumentBuilder:<init>()V",
            "method_body": "public ArgumentBuilder() {\nreset();\n}",
            "method_id": 43
        },
        {
            "method_signature": "org.apache.commons.cli2.option.GroupImpl:validate(Lorg/apache/commons/cli2/WriteableCommandLine;)V",
            "method_body": "public void validate(final WriteableCommandLine commandLine)\nint present = 0;\nOption unexpected = null;\nfor (final Iterator i = options.iterator(); i.hasNext();) {\nfinal Option option = (Option) i.next();\nboolean validate = option.isRequired() || option instanceof Group;\nif (commandLine.hasOption(option)) {\nif (++present > maximum) {\nvalidate = true;\nif (validate) {\noption.validate(commandLine);\n}\nif (unexpected != null) {\nif (present < minimum) {\nthrow new OptionException(this, ResourceConstants.MISSING_OPTION);\nfor (final Iterator i = anonymous.iterator(); i.hasNext();) {\nfinal Option option = (Option) i.next();\noption.validate(commandLine);\n}\n}",
            "method_id": 44
        },
        {
            "method_signature": "org.apache.commons.cli2.OptionException:<init>(Lorg/apache/commons/cli2/Option;Ljava/lang/String;)V",
            "method_body": "public OptionException(final Option option,\nthis(option, messageKey, null);\n}",
            "method_id": 45
        },
        {
            "method_signature": "org.apache.commons.cli2.option.GroupImpl:defaults(Lorg/apache/commons/cli2/WriteableCommandLine;)V",
            "method_body": "public void defaults(final WriteableCommandLine commandLine) {\nsuper.defaults(commandLine);\nfor (final Iterator i = options.iterator(); i.hasNext();) {\nfinal Option option = (Option) i.next();\noption.defaults(commandLine);\n}\nfor (final Iterator i = anonymous.iterator(); i.hasNext();) {\nfinal Option option = (Option) i.next();\noption.defaults(commandLine);\n}\n}",
            "method_id": 46
        },
        {
            "method_signature": "org.apache.commons.cli2.option.ArgumentImpl:getInitialSeparator()C",
            "method_body": "public char getInitialSeparator() {\nreturn this.initialSeparator;\n}",
            "method_id": 47
        },
        {
            "method_signature": "org.apache.commons.cli2.commandline.Parser:parse([Ljava/lang/String;)Lorg/apache/commons/cli2/CommandLine;",
            "method_body": "public CommandLine parse(final String[] arguments)\nfinal List argumentList = new LinkedList();\nfor (int i = 0; i < arguments.length; i++) {\nfinal String argument = arguments[i];\nargumentList.add(new String(argument));\nfinal WriteableCommandLine commandLine = new WriteableCommandLineImpl(group, argumentList);\ngroup.defaults(commandLine);\nfinal ListIterator iterator = argumentList.listIterator();\nObject previous = null;\nwhile (group.canProcess(commandLine, iterator)) {\nfinal Object next = iterator.next();\niterator.previous();\nif (next == previous) {\nprevious = next;\ngroup.process(commandLine, iterator);\n}\nif (iterator.hasNext()) {\nif (!commandLine.hasOption(helpOption) && !commandLine.hasOption(helpTrigger)) {\ngroup.validate(commandLine);\nreturn commandLine;\n}",
            "method_id": 48
        },
        {
            "method_signature": "org.apache.commons.cli2.option.OptionImpl:equals(Ljava/lang/Object;Ljava/lang/Object;)Z",
            "method_body": "private boolean equals(Object left,\nif ((left == null) && (right == null)) {\nreturn true;\n} else if ((left == null) || (right == null)) {\nreturn left.equals(right);\n}",
            "method_id": 49
        },
        {
            "method_signature": "org.apache.commons.cli2.resource.ResourceHelper:getMessage(Ljava/lang/String;)Ljava/lang/String;",
            "method_body": "public String getMessage(final String key) {\nreturn getMessage(key, new Object[] {  });\n}",
            "method_id": 50
        },
        {
            "method_signature": "org.apache.commons.cli2.option.ParentImpl:<init>(Lorg/apache/commons/cli2/Argument;Lorg/apache/commons/cli2/Group;Ljava/lang/String;IZ)V",
            "method_body": "protected ParentImpl(final Argument argument,\nsuper(id, required);\nthis.children = children;\nthis.argument = argument;\nthis.description = description;\n}",
            "method_id": 51
        },
        {
            "method_signature": "org.apache.commons.cli2.option.DefaultOption:getPrefixes()Ljava/util/Set;",
            "method_body": "public Set getPrefixes() {\nreturn prefixes;\n}",
            "method_id": 52
        },
        {
            "method_signature": "org.apache.commons.cli2.OptionException:getMessage()Ljava/lang/String;",
            "method_body": "public String getMessage() {\nreturn message;\n}",
            "method_id": 53
        },
        {
            "method_signature": "org.apache.commons.cli2.option.DefaultOption:getTriggers()Ljava/util/Set;",
            "method_body": "public Set getTriggers() {\nreturn triggers;\n}",
            "method_id": 54
        },
        {
            "method_signature": "org.apache.commons.cli2.commandline.WriteableCommandLineImpl:getOption(Ljava/lang/String;)Lorg/apache/commons/cli2/Option;",
            "method_body": "public Option getOption(final String trigger) {\nreturn (Option) nameToOption.get(trigger);\n}",
            "method_id": 55
        },
        {
            "method_signature": "org.apache.commons.cli2.commandline.WriteableCommandLineImpl:addValue(Lorg/apache/commons/cli2/Option;Ljava/lang/Object;)V",
            "method_body": "public void addValue(final Option option,\nif (option instanceof Argument) {\naddOption(option);\nList valueList = (List) values.get(option);\nif (valueList == null) {\nvalueList = new ArrayList();\nvalues.put(option, valueList);\nvalueList.add(value);\n}",
            "method_id": 56
        },
        {
            "method_signature": "org.apache.commons.cli2.option.GroupImpl:getTriggers()Ljava/util/Set;",
            "method_body": "public Set getTriggers() {\nreturn optionMap.keySet();\n}",
            "method_id": 57
        },
        {
            "method_signature": "org.apache.commons.cli2.builder.DefaultOptionBuilder:withArgument(Lorg/apache/commons/cli2/Argument;)Lorg/apache/commons/cli2/builder/DefaultOptionBuilder;",
            "method_body": "public DefaultOptionBuilder withArgument(final Argument newArgument) {\nthis.argument = newArgument;\nreturn this;\n}",
            "method_id": 58
        },
        {
            "method_signature": "org.apache.commons.cli2.option.OptionImpl:<init>(IZ)V",
            "method_body": "public OptionImpl(final int id,\nfinal boolean required) {\nthis.id = id;\nthis.required = required;\n}",
            "method_id": 59
        }
    ]
}