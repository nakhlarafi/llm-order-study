{
    "bug_id": 34,
    "test_id": 0,
    "test_name": "org.mockitousage.basicapi.UsingVarargsTest.shouldMatchEasilyEmptyVararg",
    "test_body": "public void shouldMatchEasilyEmptyVararg() throws Exception {\n//when\nwhen(mock.foo(anyVararg())).thenReturn(-1);\n174: //then\nassertEquals(-1, mock.foo());\n} \n",
    "stack_trace": "java.lang.ArrayIndexOutOfBoundsException: 0\nat org.mockito.internal.invocation.InvocationMatcher.captureArgumentsFrom(InvocationMatcher.java:107)\nat org.mockito.internal.MockHandler.handle(MockHandler.java:88)\nat org.mockito.internal.creation.MethodInterceptorFilter.intercept(MethodInterceptorFilter.java:47)\nat org.mockitousage.basicapi.UsingVarargsTest$IVarArgs$$EnhancerByMockitoWithCGLIB$$24404684.foo(<generated>)\nat org.mockitousage.basicapi.UsingVarargsTest.shouldMatchEasilyEmptyVararg(UsingVarargsTest.java:175)",
    "covered_methods": [
        {
            "method_signature": "org.mockito.internal.creation.DelegatingMockitoMethodProxy:getMethodProxy()Lorg/mockito/cglib/proxy/MethodProxy;",
            "method_body": "public MethodProxy getMethodProxy() {\nreturn methodProxy;\n}",
            "method_id": 90
        },
        {
            "method_signature": "org.mockito.internal.creation.MethodInterceptorFilter:intercept(Ljava/lang/Object;Ljava/lang/reflect/Method;[Ljava/lang/Object;Lorg/mockito/cglib/proxy/MethodProxy;)Ljava/lang/Object;",
            "method_body": "public Object intercept(Object proxy, Method method, Object[] args, MethodProxy methodProxy)\nif (objectMethodsGuru.isEqualsMethod(method)) {\nreturn proxy == args[0];\n} else if (objectMethodsGuru.isHashCodeMethod(method)) {\nMockitoMethodProxy mockitoMethodProxy = createMockitoMethodProxy(methodProxy);\ncglibHacker.setMockitoNamingPolicy(mockitoMethodProxy);\nMockitoMethod mockitoMethod = createMockitoMethod(method);\nFilteredCGLIBProxyRealMethod realMethod = new FilteredCGLIBProxyRealMethod(mockitoMethodProxy);\nInvocation invocation = new Invocation(proxy, mockitoMethod, args, SequenceNumber.next(), realMethod);\nreturn handler.handle(invocation);\n}",
            "method_id": 91
        },
        {
            "method_signature": "org.mockito.internal.util.CreationValidator:validateExtraInterfaces(Ljava/lang/Class;[Ljava/lang/Class;)V",
            "method_body": "public void validateExtraInterfaces(Class classToMock, Class ... extraInterfaces) {\nif (extraInterfaces == null) {\nreturn;\n}",
            "method_id": 92
        },
        {
            "method_signature": "org.mockito.internal.util.ObjectMethodsGuru:isToString(Ljava/lang/reflect/Method;)Z",
            "method_body": "public boolean isToString(Method method) {\nreturn isToString(new DelegatingMethod(method));\n}",
            "method_id": 93
        },
        {
            "method_signature": "org.mockito.Mockito:when(Ljava/lang/Object;)Lorg/mockito/stubbing/OngoingStubbing;",
            "method_body": "public static <T> OngoingStubbing<T> when(T methodCall) {\nreturn MOCKITO_CORE.when(methodCall);\n}",
            "method_id": 94
        },
        {
            "method_signature": "org.mockito.internal.creation.MockSettingsImpl:defaultAnswer(Lorg/mockito/stubbing/Answer;)Lorg/mockito/MockSettings;",
            "method_body": "public MockSettings defaultAnswer(Answer defaultAnswer) {\nthis.defaultAnswer = defaultAnswer;\nreturn this;\n}",
            "method_id": 95
        },
        {
            "method_signature": "org.mockito.internal.invocation.InvocationMatcher:matches(Lorg/mockito/internal/invocation/Invocation;)Z",
            "method_body": "public boolean matches(Invocation actual) {\nreturn invocation.getMock().equals(actual.getMock())\n}",
            "method_id": 96
        },
        {
            "method_signature": "org.mockito.internal.stubbing.BaseStubbing:thenReturn(Ljava/lang/Object;)Lorg/mockito/stubbing/OngoingStubbing;",
            "method_body": "public OngoingStubbing<T> thenReturn(T value) {\nreturn thenAnswer(new Returns(value));\n}",
            "method_id": 97
        },
        {
            "method_signature": "org.mockito.internal.progress.ThreadSafeMockingProgress:getDebuggingInfo()Lorg/mockito/internal/debugging/DebuggingInfo;",
            "method_body": "public DebuggingInfo getDebuggingInfo() {\nreturn threadSafely().getDebuggingInfo();\n}",
            "method_id": 98
        },
        {
            "method_signature": "org.mockito.internal.util.ObjectMethodsGuru:isEqualsMethod(Ljava/lang/reflect/Method;)Z",
            "method_body": "public boolean isEqualsMethod(Method method) {\nreturn method.getName().equals(\"equals\") && method.getParameterTypes().length == 1 && method.getParameterTypes()[0] == Object.class;\n}",
            "method_id": 99
        },
        {
            "method_signature": "org.mockito.internal.progress.MockingProgressImpl:validateState()V",
            "method_body": "public void validateState() {\nGlobalConfiguration.validate();\nif (verificationMode != null) {\nif (stubbingInProgress != null) {\ngetArgumentMatcherStorage().validateState();\n}",
            "method_id": 100
        },
        {
            "method_signature": "org.mockito.internal.progress.ThreadSafeMockingProgress:stubbingStarted()V",
            "method_body": "public void stubbingStarted() {\nthreadSafely().stubbingStarted();\n}",
            "method_id": 101
        },
        {
            "method_signature": "org.mockito.MockitoAnnotations:scan(Ljava/lang/Object;Ljava/lang/Class;)V",
            "method_body": "private static void scan(Object testClass, Class<?> clazz) {\nAnnotationEngine annotationEngine = new GlobalConfiguration().getAnnotationEngine();\nField[] fields = clazz.getDeclaredFields();\nfor (Field field : fields) {\nfor(Annotation annotation : field.getAnnotations()) {\nObject mock = annotationEngine.createMockFor(annotation, field);\nif (mock != null) {\nboolean wasAccessible = field.isAccessible();\nfield.setAccessible(true);\nfield.set(testClass, mock);\nfield.setAccessible(wasAccessible);\n}\n}",
            "method_id": 102
        },
        {
            "method_signature": "org.mockito.internal.progress.ThreadSafeMockingProgress:reportOngoingStubbing(Lorg/mockito/internal/progress/IOngoingStubbing;)V",
            "method_body": "public void reportOngoingStubbing(IOngoingStubbing iOngoingStubbing) {\nthreadSafely().reportOngoingStubbing(iOngoingStubbing);\n}",
            "method_id": 103
        },
        {
            "method_signature": "org.mockito.internal.stubbing.defaultanswers.GloballyConfiguredAnswer:answer(Lorg/mockito/invocation/InvocationOnMock;)Ljava/lang/Object;",
            "method_body": "public Object answer(InvocationOnMock invocation) throws Throwable {\nreturn new GlobalConfiguration().getDefaultAnswer().answer(invocation);\n}",
            "method_id": 104
        },
        {
            "method_signature": "org.mockito.internal.creation.MockSettingsImpl:isSerializable()Z",
            "method_body": "public boolean isSerializable() {\nreturn serializable;\n}",
            "method_id": 105
        },
        {
            "method_signature": "org.mockito.internal.creation.MockSettingsImpl:name(Ljava/lang/String;)Lorg/mockito/MockSettings;",
            "method_body": "public MockSettings name(String name) {\nthis.name = name;\nreturn this;\n}",
            "method_id": 106
        },
        {
            "method_signature": "org.mockito.internal.configuration.GlobalConfiguration:validate()V",
            "method_body": "public static void validate() {\nnew GlobalConfiguration();\n}",
            "method_id": 107
        },
        {
            "method_signature": "org.mockito.internal.creation.cglib.MockitoNamingPolicy:getTag()Ljava/lang/String;",
            "method_body": "protected String getTag() {\nreturn \"ByMockitoWithCGLIB\";\n}",
            "method_id": 108
        },
        {
            "method_signature": "org.mockito.internal.creation.DelegatingMethod:getReturnType()Ljava/lang/Class;",
            "method_body": "public Class<?> getReturnType() {\nreturn method.getReturnType();\n}",
            "method_id": 109
        },
        {
            "method_signature": "org.mockito.internal.progress.ThreadSafeMockingProgress:stubbingCompleted(Lorg/mockito/internal/invocation/Invocation;)V",
            "method_body": "public void stubbingCompleted(Invocation invocation) {\nthreadSafely().stubbingCompleted(invocation);\n}",
            "method_id": 110
        },
        {
            "method_signature": "org.mockito.internal.creation.cglib.CGLIBHacker:setMockitoNamingPolicy(Lorg/mockito/internal/creation/MockitoMethodProxy;)V",
            "method_body": "public void setMockitoNamingPolicy(MockitoMethodProxy mockitoMethodProxy) {\nMethodProxy methodProxy = mockitoMethodProxy.getMethodProxy();\nField createInfoField = reflectOnCreateInfo(methodProxy);\ncreateInfoField.setAccessible(true);\nObject createInfo = createInfoField.get(methodProxy);\nField namingPolicyField = createInfo.getClass().getDeclaredField(\"namingPolicy\");\nnamingPolicyField.setAccessible(true);\nif (namingPolicyField.get(createInfo) == null) {\nnamingPolicyField.set(createInfo, MockitoNamingPolicy.INSTANCE);\n}\n}",
            "method_id": 111
        },
        {
            "method_signature": "org.mockito.Matchers:anyVararg()Ljava/lang/Object;",
            "method_body": "public static <T> T anyVararg() {\nreturn (T) reportMatcher(AnyVararg.ANY_VARARG).returnNull();\n}",
            "method_id": 112
        },
        {
            "method_signature": "org.mockito.internal.creation.MockSettingsImpl:initiateMockName(Ljava/lang/Class;)V",
            "method_body": "public void initiateMockName(Class classToMock) {\nmockName = new MockName(name, classToMock);\n}",
            "method_id": 113
        },
        {
            "method_signature": "org.mockito.internal.creation.jmock.ClassImposterizer:canImposterise(Ljava/lang/Class;)Z",
            "method_body": "public boolean canImposterise(Class<?> type) {\nreturn !type.isPrimitive() && !Modifier.isFinal(type.getModifiers());\n}",
            "method_id": 114
        },
        {
            "method_signature": "org.mockito.internal.progress.ThreadSafeMockingProgress:getArgumentMatcherStorage()Lorg/mockito/internal/progress/ArgumentMatcherStorage;",
            "method_body": "public ArgumentMatcherStorage getArgumentMatcherStorage() {\nreturn threadSafely().getArgumentMatcherStorage();\n}",
            "method_id": 115
        },
        {
            "method_signature": "org.mockito.internal.progress.MockingProgressImpl:stubbingCompleted(Lorg/mockito/internal/invocation/Invocation;)V",
            "method_body": "public void stubbingCompleted(Invocation invocation) {\ndebuggingInfo.addStubbedInvocation(invocation);\nstubbingInProgress = null;\n}",
            "method_id": 116
        },
        {
            "method_signature": "org.mockito.Matchers:reportMatcher(Lorg/hamcrest/Matcher;)Lorg/mockito/internal/progress/HandyReturnValues;",
            "method_body": "private static HandyReturnValues reportMatcher(Matcher<?> matcher) {\nreturn mockingProgress.getArgumentMatcherStorage().reportMatcher(matcher);\n}",
            "method_id": 117
        },
        {
            "method_signature": "org.mockito.internal.stubbing.OngoingStubbingImpl:thenAnswer(Lorg/mockito/stubbing/Answer;)Lorg/mockito/stubbing/OngoingStubbing;",
            "method_body": "public OngoingStubbing<T> thenAnswer(Answer<?> answer) {\ninvocationContainerImpl.addAnswer(answer);\nreturn new ConsecutiveStubbing<T>(invocationContainerImpl);\n}",
            "method_id": 118
        },
        {
            "method_signature": "org.mockito.internal.configuration.GlobalConfiguration:getIt()Lorg/mockito/configuration/IMockitoConfiguration;",
            "method_body": "IMockitoConfiguration getIt() {\nreturn globalConfiguration.get();\n}",
            "method_id": 119
        }
    ]
}