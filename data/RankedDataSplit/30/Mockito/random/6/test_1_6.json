{
    "bug_id": 6,
    "test_id": 1,
    "test_name": "org.mockitousage.matchers.NewMatchersTest.shouldAllowAnyCollection",
    "test_body": "public void shouldAllowAnyCollection() {\nwhen(mock.forCollection(anyCollection())).thenReturn(\"matched\");\n44: assertEquals(\"matched\", mock.forCollection(Arrays.asList(\"x\", \"y\")));\nassertEquals(null, mock.forCollection(null));\n47: verify(mock, times(1)).forCollection(anyCollection());\n}\n",
    "stack_trace": "junit.framework.ComparisonFailure: expected:<null> but was:<matched>\nat junit.framework.Assert.assertEquals(Assert.java:100)\nat junit.framework.Assert.assertEquals(Assert.java:107)\nat org.mockitousage.matchers.NewMatchersTest.shouldAllowAnyCollection(NewMatchersTest.java:45)",
    "covered_methods": [
        {
            "method_signature": "org.mockito.internal.creation.cglib.ClassImposterizer:imposterise(Lorg/mockito/cglib/proxy/MethodInterceptor;Ljava/lang/Class;[Ljava/lang/Class;)Ljava/lang/Object;",
            "method_body": "public <T> T imposterise(final MethodInterceptor interceptor, Class<T> mockedType, Class<?>... ancillaryTypes) {\nClass<Factory> proxyClass = null;\nObject proxyInstance = null;\nsetConstructorsAccessible(mockedType, true);\nproxyClass = createProxyClass(mockedType, ancillaryTypes);\nproxyInstance = createProxy(proxyClass, interceptor);\nreturn mockedType.cast(proxyInstance);\nsetConstructorsAccessible(mockedType, false);\n}",
            "method_id": 180
        },
        {
            "method_signature": "org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet:addAll(Ljava/util/Collection;)Z",
            "method_body": "public boolean addAll(Collection<?> mocks) {\nreturn backingHashSet.addAll(asWrappedMocks(mocks));\n}",
            "method_id": 181
        },
        {
            "method_signature": "org.mockito.internal.creation.settings.CreationSettings:setMockName(Lorg/mockito/mock/MockName;)Lorg/mockito/internal/creation/settings/CreationSettings;",
            "method_body": "public CreationSettings<T> setMockName(MockName mockName) {\nthis.mockName = mockName;\nreturn this;\n}",
            "method_id": 182
        },
        {
            "method_signature": "org.mockito.internal.creation.util.SearchingClassLoader:combineLoadersOf([Ljava/lang/Class;)Ljava/lang/ClassLoader;",
            "method_body": "public static ClassLoader combineLoadersOf(Class<?>... classes) {\nreturn combineLoadersOf(classes[0], classes);\n}",
            "method_id": 183
        },
        {
            "method_signature": "org.mockito.configuration.DefaultMockitoConfiguration:getDefaultAnswer()Lorg/mockito/stubbing/Answer;",
            "method_body": "public Answer<Object> getDefaultAnswer() {\nreturn new ReturnsEmptyValues();\n}",
            "method_id": 184
        },
        {
            "method_signature": "org.mockito.internal.creation.settings.CreationSettings:isStubOnly()Z",
            "method_body": "public boolean isStubOnly() {\nreturn stubOnly;\n}",
            "method_id": 185
        },
        {
            "method_signature": "org.mockito.internal.util.MockUtil:isSpy(Ljava/lang/Object;)Z",
            "method_body": "public boolean isSpy(Object mock) {\nreturn isMockitoMock(mock) && getMockSettings(mock).getDefaultAnswer() == Mockito.CALLS_REAL_METHODS;\n}",
            "method_id": 186
        },
        {
            "method_signature": "org.mockito.internal.invocation.InvocationMatcher:captureArgumentsFrom(Lorg/mockito/invocation/Invocation;)V",
            "method_body": "public void captureArgumentsFrom(Invocation invocation) {\nfor (int position = 0; position < matchers.size(); position++) {\nMatcher m = matchers.get(position);\nif (m instanceof CapturesArguments && invocation.getRawArguments().length > position) {\nif(isVariableArgument(invocation, position) && isVarargMatcher(m)) {\n((CapturesArguments) m).captureFrom(invocation.getRawArguments()[position]);\n}",
            "method_id": 187
        },
        {
            "method_signature": "org.mockito.internal.configuration.injection.scanner.MockScanner:addPreparedMocks(Ljava/util/Set;)V",
            "method_body": "public void addPreparedMocks(Set<Object> mocks) {\nmocks.addAll(scan());\n}",
            "method_id": 188
        },
        {
            "method_signature": "org.mockito.internal.configuration.injection.MockInjection:onFields(Ljava/util/Set;Ljava/lang/Object;)Lorg/mockito/internal/configuration/injection/MockInjection$OngoingMockInjection;",
            "method_body": "public static OngoingMockInjection onFields(Set<Field> fields, Object ofInstance) {\nreturn new OngoingMockInjection(fields, ofInstance);\n}",
            "method_id": 189
        },
        {
            "method_signature": "org.mockito.internal.creation.util.SearchingClassLoader:combineLoadersOf(Ljava/lang/Class;[Ljava/lang/Class;)Ljava/lang/ClassLoader;",
            "method_body": "private static ClassLoader combineLoadersOf(Class<?> first, Class<?>... others) {\nList<ClassLoader> loaders = new ArrayList<ClassLoader>();\naddIfNewElement(loaders, first.getClassLoader());\nfor (Class<?> c : others) {\naddIfNewElement(loaders, c.getClassLoader());\naddIfNewElement(loaders, SearchingClassLoader.class.getClassLoader());\naddIfNewElement(loaders, currentThread().getContextClassLoader());\nreturn combine(loaders);\n}",
            "method_id": 190
        },
        {
            "method_signature": "org.mockito.internal.creation.cglib.DelegatingMockitoMethodProxy:<init>(Lorg/mockito/cglib/proxy/MethodProxy;)V",
            "method_body": "public DelegatingMockitoMethodProxy(MethodProxy methodProxy) {\nthis.methodProxy = methodProxy;\n}",
            "method_id": 191
        },
        {
            "method_signature": "org.mockito.internal.matchers.Any:matches(Ljava/lang/Object;)Z",
            "method_body": "public boolean matches(Object actual) {\nreturn true;\n}",
            "method_id": 192
        },
        {
            "method_signature": "org.mockito.internal.configuration.injection.scanner.InjectMocksScanner:addTo(Ljava/util/Set;)V",
            "method_body": "public void addTo(Set<Field> mockDependentFields) {\nmockDependentFields.addAll(scan());\n}",
            "method_id": 193
        },
        {
            "method_signature": "org.mockito.internal.configuration.DefaultAnnotationEngine:process(Ljava/lang/Class;Ljava/lang/Object;)V",
            "method_body": "public void process(Class<?> clazz, Object testInstance) {\nField[] fields = clazz.getDeclaredFields();\nfor (Field field : fields) {\nboolean alreadyAssigned = false;\nfor(Annotation annotation : field.getAnnotations()) {\n}",
            "method_id": 194
        },
        {
            "method_signature": "org.mockito.internal.handler.NullResultGuardian:<init>(Lorg/mockito/internal/InternalMockHandler;)V",
            "method_body": "public NullResultGuardian(InternalMockHandler delegate) {\nthis.delegate = delegate;\n}",
            "method_id": 195
        },
        {
            "method_signature": "org.mockito.internal.stubbing.OngoingStubbingImpl:<init>(Lorg/mockito/internal/stubbing/InvocationContainerImpl;)V",
            "method_body": "public OngoingStubbingImpl(InvocationContainerImpl invocationContainerImpl) {\nthis.invocationContainerImpl = invocationContainerImpl;\n}",
            "method_id": 196
        },
        {
            "method_signature": "org.mockito.internal.util.MockCreationValidator:validateSerializable(Ljava/lang/Class;Z)V",
            "method_body": "public void validateSerializable(Class classToMock, boolean serializable) {\nif(serializable\n}",
            "method_id": 197
        },
        {
            "method_signature": "org.mockito.internal.stubbing.InvocationContainerImpl:hasInvocationForPotentialStubbing()Z",
            "method_body": "public boolean hasInvocationForPotentialStubbing() {\nreturn !registeredInvocations.isEmpty();\n}",
            "method_id": 198
        },
        {
            "method_signature": "org.mockito.internal.progress.ThreadSafeMockingProgress:resetOngoingStubbing()V",
            "method_body": "public void resetOngoingStubbing() {\nthreadSafely().resetOngoingStubbing();\n}",
            "method_id": 199
        },
        {
            "method_signature": "org.mockito.internal.configuration.injection.filter.TypeBasedCandidateFilter:<init>(Lorg/mockito/internal/configuration/injection/filter/MockCandidateFilter;)V",
            "method_body": "public TypeBasedCandidateFilter(MockCandidateFilter next) {\nthis.next = next;\n}",
            "method_id": 200
        },
        {
            "method_signature": "org.mockito.internal.creation.cglib.ClassImposterizer:createProxyClass(Ljava/lang/Class;[Ljava/lang/Class;)Ljava/lang/Class;",
            "method_body": "public Class<Factory> createProxyClass(Class<?> mockedType, Class<?>... interfaces) {\nif (mockedType == Object.class) {\nEnhancer enhancer = new Enhancer() {\nClass<?>[] allMockedTypes = prepend(mockedType, interfaces);\nenhancer.setClassLoader(SearchingClassLoader.combineLoadersOf(allMockedTypes));\nenhancer.setUseFactory(true);\nif (mockedType.isInterface()) {\nenhancer.setSuperclass(Object.class);\nenhancer.setInterfaces(allMockedTypes);\nenhancer.setCallbackTypes(new Class[]{MethodInterceptor.class, NoOp.class});\nenhancer.setCallbackFilter(IGNORE_BRIDGE_METHODS);\nif (mockedType.getSigners() != null) {\nenhancer.setNamingPolicy(MockitoNamingPolicy.INSTANCE);\nenhancer.setSerialVersionUID(42L);\nreturn enhancer.createClass();\n}",
            "method_id": 201
        },
        {
            "method_signature": "org.mockito.internal.invocation.InvocationImpl:markStubbed(Lorg/mockito/invocation/StubInfo;)V",
            "method_body": "public void markStubbed(StubInfo stubInfo) {\nthis.stubInfo = stubInfo;\n}",
            "method_id": 202
        },
        {
            "method_signature": "org.mockito.internal.util.reflection.FieldReader:<init>(Ljava/lang/Object;Ljava/lang/reflect/Field;)V",
            "method_body": "public FieldReader(Object target, Field field) {\nthis.target = target;\nthis.field = field;\nchanger.enableAccess(field);\n}",
            "method_id": 203
        },
        {
            "method_signature": "org.mockito.internal.util.ObjectMethodsGuru:isCompareToMethod(Ljava/lang/reflect/Method;)Z",
            "method_body": "public boolean isCompareToMethod(Method method) {\nreturn Comparable.class.isAssignableFrom(method.getDeclaringClass())\n}",
            "method_id": 204
        },
        {
            "method_signature": "org.mockito.MockitoAnnotations:processAnnotationDeprecatedWay(Lorg/mockito/configuration/AnnotationEngine;Ljava/lang/Object;Ljava/lang/reflect/Field;)V",
            "method_body": "static void processAnnotationDeprecatedWay(AnnotationEngine annotationEngine, Object testClass, Field field) {\nboolean alreadyAssigned = false;\nfor(Annotation annotation : field.getAnnotations()) {\n}",
            "method_id": 205
        },
        {
            "method_signature": "org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet:of(Ljava/lang/Iterable;)Lorg/mockito/internal/util/collections/HashCodeAndEqualsSafeSet;",
            "method_body": "public static HashCodeAndEqualsSafeSet of(Iterable<Object> objects) {\nHashCodeAndEqualsSafeSet hashCodeAndEqualsSafeSet = new HashCodeAndEqualsSafeSet();\nif (objects != null) {\nfor (Object mock : objects) {\nreturn hashCodeAndEqualsSafeSet;\n}",
            "method_id": 206
        },
        {
            "method_signature": "org.mockito.internal.stubbing.answers.Returns:answer(Lorg/mockito/invocation/InvocationOnMock;)Ljava/lang/Object;",
            "method_body": "public Object answer(InvocationOnMock invocation) throws Throwable {\nreturn value;\n}",
            "method_id": 207
        },
        {
            "method_signature": "org.mockito.internal.progress.HandyReturnValues:returnList()Ljava/util/List;",
            "method_body": "public List returnList() {\nreturn new LinkedList();\n}",
            "method_id": 208
        },
        {
            "method_signature": "org.mockito.internal.creation.settings.CreationSettings:setExtraInterfaces(Ljava/util/Set;)Lorg/mockito/internal/creation/settings/CreationSettings;",
            "method_body": "public CreationSettings<T> setExtraInterfaces(Set<Class> extraInterfaces) {\nthis.extraInterfaces = extraInterfaces;\nreturn this;\n}",
            "method_id": 209
        }
    ]
}