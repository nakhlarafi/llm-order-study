{
    "project_name": "Csv",
    "bugs": {
        "9": {
            "0": {
                "method_ids": [
                    0,
                    11,
                    10,
                    5,
                    4,
                    1,
                    32,
                    6,
                    3,
                    2
                ],
                "method_signatures": [
                    "org.apache.commons.csv.CSVRecord:putIn(Ljava/util/Map;)Ljava/util/Map;",
                    "org.apache.commons.csv.CSVRecord:toMap()Ljava/util/Map;",
                    "org.apache.commons.csv.CSVParser:iterator()Ljava/util/Iterator;",
                    "org.apache.commons.csv.CSVParser:initializeHeader()Ljava/util/Map;",
                    "org.apache.commons.csv.CSVFormat:validate()V",
                    "org.apache.commons.csv.CSVFormat:newFormat(C)Lorg/apache/commons/csv/CSVFormat;",
                    "org.apache.commons.csv.CSVParser:<init>(Ljava/io/Reader;Lorg/apache/commons/csv/CSVFormat;)V",
                    "org.apache.commons.csv.CSVFormat:getHeader()[Ljava/lang/String;",
                    "org.apache.commons.csv.Token:<init>()V",
                    "org.apache.commons.csv.Assertions:notNull(Ljava/lang/Object;Ljava/lang/String;)V"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.csv.CSVRecord:putIn(Ljava/util/Map;)Ljava/util/Map;"
                ]
            }
        },
        "11": {
            "0": {
                "method_ids": [
                    0,
                    31,
                    6,
                    5,
                    18,
                    1,
                    2,
                    24,
                    3,
                    4
                ],
                "method_signatures": [
                    "org.apache.commons.csv.CSVParser:initializeHeader()Ljava/util/Map;",
                    "org.apache.commons.csv.Constants:<clinit>()V",
                    "org.apache.commons.csv.CSVFormat:getHeader()[Ljava/lang/String;",
                    "org.apache.commons.csv.Assertions:notNull(Ljava/lang/Object;Ljava/lang/String;)V",
                    "org.apache.commons.csv.CSVFormat:getIgnoreSurroundingSpaces()Z",
                    "org.apache.commons.csv.CSVFormat:withHeader([Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat;",
                    "org.apache.commons.csv.CSVFormat:validate()V",
                    "org.apache.commons.csv.CSVFormat:withEscape(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat;",
                    "org.apache.commons.csv.CSVFormat:withNullString(Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat;",
                    "org.apache.commons.csv.Token:<init>()V"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.csv.CSVParser:initializeHeader()Ljava/util/Map;"
                ]
            }
        },
        "7": {
            "0": {
                "method_ids": [
                    3,
                    4,
                    28,
                    29,
                    0,
                    1,
                    5,
                    2,
                    6,
                    7
                ],
                "method_signatures": [
                    "org.apache.commons.csv.Token:<init>()V",
                    "org.apache.commons.csv.CSVFormat:validate()V",
                    "org.apache.commons.csv.Constants:<clinit>()V",
                    "org.apache.commons.csv.CSVParser:<init>(Ljava/io/Reader;Lorg/apache/commons/csv/CSVFormat;)V",
                    "org.apache.commons.csv.CSVParser:initializeHeader()Ljava/util/Map;",
                    "org.apache.commons.csv.CSVFormat:withHeader([Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat;",
                    "org.apache.commons.csv.CSVFormat:getHeader()[Ljava/lang/String;",
                    "org.apache.commons.csv.Assertions:notNull(Ljava/lang/Object;Ljava/lang/String;)V",
                    "org.apache.commons.csv.CSVParser:nextRecord()Lorg/apache/commons/csv/CSVRecord;",
                    "org.apache.commons.csv.Token:reset()V"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.csv.CSVParser:initializeHeader()Ljava/util/Map;"
                ]
            }
        },
        "16": {
            "0": {
                "method_ids": [
                    0,
                    6,
                    40,
                    4,
                    39,
                    69,
                    5,
                    1,
                    3,
                    18
                ],
                "method_signatures": [
                    "org.apache.commons.csv.CSVParser:iterator()Ljava/util/Iterator;",
                    "org.apache.commons.csv.CSVParser:nextRecord()Lorg/apache/commons/csv/CSVRecord;",
                    "org.apache.commons.csv.CSVParser:addRecordValue(Z)V",
                    "org.apache.commons.csv.CSVParser:initializeHeader()Ljava/util/Map;",
                    "org.apache.commons.csv.CSVParser:<init>(Ljava/io/Reader;Lorg/apache/commons/csv/CSVFormat;)V",
                    "org.apache.commons.csv.CSVRecord:get(I)Ljava/lang/String;",
                    "org.apache.commons.csv.CSVFormat:getHeader()[Ljava/lang/String;",
                    "org.apache.commons.csv.CSVParser:<init>(Ljava/io/Reader;Lorg/apache/commons/csv/CSVFormat;JJ)V",
                    "org.apache.commons.csv.Assertions:notNull(Ljava/lang/Object;Ljava/lang/String;)V",
                    "org.apache.commons.csv.CSVFormat:getTrim()Z"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.csv.CSVParser:<init>(Ljava/io/Reader;Lorg/apache/commons/csv/CSVFormat;JJ)V",
                    "org.apache.commons.csv.CSVParser:iterator()Ljava/util/Iterator;"
                ]
            }
        },
        "6": {
            "0": {
                "method_ids": [
                    0,
                    10,
                    9,
                    32,
                    3,
                    5,
                    1,
                    4,
                    2,
                    31
                ],
                "method_signatures": [
                    "org.apache.commons.csv.CSVRecord:putIn(Ljava/util/Map;)Ljava/util/Map;",
                    "org.apache.commons.csv.CSVRecord:toMap()Ljava/util/Map;",
                    "org.apache.commons.csv.CSVParser:iterator()Ljava/util/Iterator;",
                    "org.apache.commons.csv.CSVParser:<init>(Ljava/io/Reader;Lorg/apache/commons/csv/CSVFormat;)V",
                    "org.apache.commons.csv.CSVFormat:validate()V",
                    "org.apache.commons.csv.CSVFormat:getHeader()[Ljava/lang/String;",
                    "org.apache.commons.csv.CSVFormat:withHeader([Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat;",
                    "org.apache.commons.csv.CSVParser:initializeHeader()Ljava/util/Map;",
                    "org.apache.commons.csv.Assertions:notNull(Ljava/lang/Object;Ljava/lang/String;)V",
                    "org.apache.commons.csv.Constants:<clinit>()V"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.csv.CSVRecord:putIn(Ljava/util/Map;)Ljava/util/Map;"
                ]
            }
        },
        "1": {
            "0": {
                "method_ids": [
                    6,
                    7,
                    42,
                    4,
                    37,
                    30,
                    10,
                    26,
                    1,
                    3
                ],
                "method_signatures": [
                    "org.apache.commons.csv.CSVParser:getLineNumber()I",
                    "org.apache.commons.csv.Lexer:getLineNumber()I",
                    "org.apache.commons.csv.ExtendedBufferedReader:lookAhead()I",
                    "org.apache.commons.csv.CSVParser:getRecord()Lorg/apache/commons/csv/CSVRecord;",
                    "org.apache.commons.csv.CSVLexer:<init>(Lorg/apache/commons/csv/CSVFormat;Lorg/apache/commons/csv/ExtendedBufferedReader;)V",
                    "org.apache.commons.csv.Lexer:<init>(Lorg/apache/commons/csv/CSVFormat;Lorg/apache/commons/csv/ExtendedBufferedReader;)V",
                    "org.apache.commons.csv.CSVFormat:isLineBreak(C)Z",
                    "org.apache.commons.csv.CSVParser:<init>(Ljava/io/Reader;Lorg/apache/commons/csv/CSVFormat;)V",
                    "org.apache.commons.csv.CSVFormat:withLineSeparator(Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat;",
                    "org.apache.commons.csv.CSVFormat:validate()V"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.csv.ExtendedBufferedReader:read()I"
                ]
            }
        },
        "10": {
            "0": {
                "method_ids": [
                    3,
                    4,
                    5,
                    1,
                    19,
                    21,
                    11,
                    0,
                    2,
                    6
                ],
                "method_signatures": [
                    "org.apache.commons.csv.CSVFormat:validate()V",
                    "org.apache.commons.csv.CSVPrinter:printRecord([Ljava/lang/Object;)V",
                    "org.apache.commons.csv.CSVPrinter:print(Ljava/lang/Object;)V",
                    "org.apache.commons.csv.CSVFormat:withHeader([Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat;",
                    "org.apache.commons.csv.CSVFormat:withIgnoreSurroundingSpaces(Z)Lorg/apache/commons/csv/CSVFormat;",
                    "org.apache.commons.csv.CSVFormat:withRecordSeparator(C)Lorg/apache/commons/csv/CSVFormat;",
                    "org.apache.commons.csv.CSVFormat:getDelimiter()C",
                    "org.apache.commons.csv.CSVPrinter:<init>(Ljava/lang/Appendable;Lorg/apache/commons/csv/CSVFormat;)V",
                    "org.apache.commons.csv.Assertions:notNull(Ljava/lang/Object;Ljava/lang/String;)V",
                    "org.apache.commons.csv.CSVPrinter:println()V"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.csv.CSVPrinter:<init>(Ljava/lang/Appendable;Lorg/apache/commons/csv/CSVFormat;)V"
                ]
            }
        },
        "8": {
            "0": {
                "method_ids": [
                    0,
                    1,
                    2,
                    3,
                    5,
                    6,
                    8,
                    9,
                    10,
                    11
                ],
                "method_signatures": [
                    "org.apache.commons.csv.CSVFormat:validate()V",
                    "org.apache.commons.csv.CSVFormat:<init>(CLjava/lang/Character;Lorg/apache/commons/csv/Quote;Ljava/lang/Character;Ljava/lang/Character;ZZLjava/lang/String;Ljava/lang/String;[Ljava/lang/String;Z)V",
                    "org.apache.commons.csv.CSVFormat:withHeader([Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat;",
                    "org.apache.commons.csv.CSVFormat:<clinit>()V",
                    "org.apache.commons.csv.CSVFormat:isLineBreak(Ljava/lang/Character;)Z",
                    "org.apache.commons.csv.CSVFormat:withDelimiter(C)Lorg/apache/commons/csv/CSVFormat;",
                    "org.apache.commons.csv.CSVFormat:withEscape(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat;",
                    "org.apache.commons.csv.CSVFormat:withIgnoreEmptyLines(Z)Lorg/apache/commons/csv/CSVFormat;",
                    "org.apache.commons.csv.CSVFormat:withIgnoreSurroundingSpaces(Z)Lorg/apache/commons/csv/CSVFormat;",
                    "org.apache.commons.csv.CSVFormat:withQuoteChar(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat;"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.csv.CSVFormat:<init>(CLjava/lang/Character;Lorg/apache/commons/csv/Quote;Ljava/lang/Character;Ljava/lang/Character;ZZLjava/lang/String;Ljava/lang/String;[Ljava/lang/String;Z)V",
                    "org.apache.commons.csv.CSVFormat:validate()V"
                ]
            }
        },
        "4": {
            "0": {
                "method_ids": [
                    0,
                    4,
                    24,
                    25,
                    5,
                    3,
                    2,
                    1,
                    10,
                    14
                ],
                "method_signatures": [
                    "org.apache.commons.csv.CSVParser:getHeaderMap()Ljava/util/Map;",
                    "org.apache.commons.csv.CSVParser:initializeHeader()Ljava/util/Map;",
                    "org.apache.commons.csv.Constants:<clinit>()V",
                    "org.apache.commons.csv.CSVParser:<init>(Ljava/io/Reader;Lorg/apache/commons/csv/CSVFormat;)V",
                    "org.apache.commons.csv.CSVFormat:getHeader()[Ljava/lang/String;",
                    "org.apache.commons.csv.CSVFormat:validate()V",
                    "org.apache.commons.csv.Token:<init>()V",
                    "org.apache.commons.csv.Assertions:notNull(Ljava/lang/Object;Ljava/lang/String;)V",
                    "org.apache.commons.csv.CSVFormat:getCommentStart()Ljava/lang/Character;",
                    "org.apache.commons.csv.CSVFormat:getIgnoreSurroundingSpaces()Z"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.csv.CSVParser:getHeaderMap()Ljava/util/Map;"
                ]
            }
        },
        "15": {
            "0": {
                "method_ids": [
                    0,
                    18,
                    3,
                    20,
                    10,
                    11,
                    1,
                    2,
                    4,
                    37
                ],
                "method_signatures": [
                    "org.apache.commons.csv.CSVFormat:printAndQuote(Ljava/lang/Object;Ljava/lang/CharSequence;IILjava/lang/Appendable;Z)V",
                    "org.apache.commons.csv.CSVFormat:print(Ljava/lang/Object;Ljava/lang/Appendable;Z)V",
                    "org.apache.commons.csv.CSVFormat:getHeader()[Ljava/lang/String;",
                    "org.apache.commons.csv.CSVFormat:println(Ljava/lang/Appendable;)V",
                    "org.apache.commons.csv.CSVFormat:getDelimiter()C",
                    "org.apache.commons.csv.CSVFormat:getQuoteCharacter()Ljava/lang/Character;",
                    "org.apache.commons.csv.Assertions:notNull(Ljava/lang/Object;Ljava/lang/String;)V",
                    "org.apache.commons.csv.CSVFormat:getHeaderComments()[Ljava/lang/String;",
                    "org.apache.commons.csv.CSVPrinter:printRecord([Ljava/lang/Object;)V",
                    "org.apache.commons.csv.Constants:<clinit>()V"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.csv.CSVFormat:printAndQuote(Ljava/lang/Object;Ljava/lang/CharSequence;IILjava/lang/Appendable;Z)V"
                ]
            }
        },
        "3": {
            "0": {
                "method_ids": [
                    51,
                    50,
                    54,
                    55,
                    52,
                    53,
                    0,
                    6,
                    8,
                    5
                ],
                "method_signatures": [
                    "org.apache.commons.csv.CSVLexer:parseEncapsulatedToken(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;",
                    "org.apache.commons.csv.CSVParser:initializeHeader(Lorg/apache/commons/csv/CSVFormat;)Ljava/util/Map;",
                    "org.apache.commons.csv.CSVParser$2:<clinit>()V",
                    "org.apache.commons.csv.CSVRecord:<init>([Ljava/lang/String;Ljava/util/Map;Ljava/lang/String;J)V",
                    "org.apache.commons.csv.ExtendedBufferedReader:lookAhead()I",
                    "org.apache.commons.csv.ExtendedBufferedReader:getLineNumber()J",
                    "org.apache.commons.csv.Lexer:readEscape()I",
                    "org.apache.commons.csv.CSVFormat$CSVFormatBuilder:validate()V",
                    "org.apache.commons.csv.Token:reset()V",
                    "org.apache.commons.csv.CSVFormat$CSVFormatBuilder:build()Lorg/apache/commons/csv/CSVFormat;"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.csv.Lexer:readEscape()I"
                ]
            },
            "1": {
                "method_ids": [
                    33,
                    34,
                    29,
                    24,
                    36,
                    23,
                    30,
                    14,
                    15,
                    1
                ],
                "method_signatures": [
                    "org.apache.commons.csv.CSVLexer:<init>(Lorg/apache/commons/csv/CSVFormat;Lorg/apache/commons/csv/ExtendedBufferedReader;)V",
                    "org.apache.commons.csv.CSVLexer:nextToken(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;",
                    "org.apache.commons.csv.Lexer:isDelimiter(I)Z",
                    "org.apache.commons.csv.Lexer:<init>(Lorg/apache/commons/csv/CSVFormat;Lorg/apache/commons/csv/ExtendedBufferedReader;)V",
                    "org.apache.commons.csv.ExtendedBufferedReader:<init>(Ljava/io/Reader;)V",
                    "org.apache.commons.csv.Token$Type:<clinit>()V",
                    "org.apache.commons.csv.Lexer:isEscape(I)Z",
                    "org.apache.commons.csv.CSVFormat$CSVFormatBuilder:withDelimiter(C)Lorg/apache/commons/csv/CSVFormat$CSVFormatBuilder;",
                    "org.apache.commons.csv.CSVFormat$CSVFormatBuilder:withEscape(C)Lorg/apache/commons/csv/CSVFormat$CSVFormatBuilder;",
                    "org.apache.commons.csv.CSVFormat:<clinit>()V"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.csv.Lexer:readEscape()I"
                ]
            },
            "2": {
                "method_ids": [
                    33,
                    34,
                    29,
                    24,
                    23,
                    36,
                    30,
                    31,
                    25,
                    28
                ],
                "method_signatures": [
                    "org.apache.commons.csv.CSVLexer:<init>(Lorg/apache/commons/csv/CSVFormat;Lorg/apache/commons/csv/ExtendedBufferedReader;)V",
                    "org.apache.commons.csv.CSVLexer:nextToken(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;",
                    "org.apache.commons.csv.Lexer:isDelimiter(I)Z",
                    "org.apache.commons.csv.Lexer:<init>(Lorg/apache/commons/csv/CSVFormat;Lorg/apache/commons/csv/ExtendedBufferedReader;)V",
                    "org.apache.commons.csv.Token$Type:<clinit>()V",
                    "org.apache.commons.csv.ExtendedBufferedReader:<init>(Ljava/io/Reader;)V",
                    "org.apache.commons.csv.Lexer:isEscape(I)Z",
                    "org.apache.commons.csv.Lexer:isQuoteChar(I)Z",
                    "org.apache.commons.csv.Lexer:mapNullToDisabled(Ljava/lang/Character;)C",
                    "org.apache.commons.csv.Lexer:isEndOfFile(I)Z"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.csv.Lexer:readEscape()I"
                ]
            }
        },
        "12": {
            "0": {
                "method_ids": [
                    5,
                    33,
                    7,
                    1,
                    4,
                    12,
                    6,
                    8,
                    26,
                    32
                ],
                "method_signatures": [
                    "org.apache.commons.csv.CSVParser:initializeHeader()Ljava/util/Map;",
                    "org.apache.commons.csv.CSVParser:<init>(Ljava/io/Reader;Lorg/apache/commons/csv/CSVFormat;)V",
                    "org.apache.commons.csv.CSVParser:nextRecord()Lorg/apache/commons/csv/CSVRecord;",
                    "org.apache.commons.csv.CSVFormat:withHeader([Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat;",
                    "org.apache.commons.csv.Token:<init>()V",
                    "org.apache.commons.csv.ExtendedBufferedReader:lookAhead()I",
                    "org.apache.commons.csv.CSVFormat:getHeader()[Ljava/lang/String;",
                    "org.apache.commons.csv.Token:reset()V",
                    "org.apache.commons.csv.CSVFormat:withEscape(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat;",
                    "org.apache.commons.csv.Constants:<clinit>()V"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.csv.CSVFormat:<clinit>()V"
                ]
            }
        },
        "2": {
            "0": {
                "method_ids": [
                    0,
                    1,
                    2
                ],
                "method_signatures": [
                    "org.apache.commons.csv.CSVRecord:get(Ljava/lang/String;)Ljava/lang/String;",
                    "org.apache.commons.csv.CSVRecord:<init>([Ljava/lang/String;Ljava/util/Map;Ljava/lang/String;J)V",
                    "org.apache.commons.csv.CSVRecord:<clinit>()V"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.csv.CSVRecord:get(Ljava/lang/String;)Ljava/lang/String;"
                ]
            }
        },
        "13": {
            "0": {
                "method_ids": [
                    5,
                    0,
                    6,
                    7,
                    15,
                    8,
                    17,
                    11,
                    12,
                    14
                ],
                "method_signatures": [
                    "org.apache.commons.csv.CSVFormat:getNullString()Ljava/lang/String;",
                    "org.apache.commons.csv.CSVFormat:<init>(CLjava/lang/Character;Lorg/apache/commons/csv/QuoteMode;Ljava/lang/Character;Ljava/lang/Character;ZZLjava/lang/String;Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/String;ZZZ)V",
                    "org.apache.commons.csv.CSVFormat:getRecordSeparator()Ljava/lang/String;",
                    "org.apache.commons.csv.CSVFormat:validate()V",
                    "org.apache.commons.csv.CSVFormat:withIgnoreSurroundingSpaces(Z)Lorg/apache/commons/csv/CSVFormat;",
                    "org.apache.commons.csv.CSVFormat:withDelimiter(C)Lorg/apache/commons/csv/CSVFormat;",
                    "org.apache.commons.csv.CSVFormat:withRecordSeparator(C)Lorg/apache/commons/csv/CSVFormat;",
                    "org.apache.commons.csv.CSVFormat:withAllowMissingColumnNames()Lorg/apache/commons/csv/CSVFormat;",
                    "org.apache.commons.csv.CSVFormat:withAllowMissingColumnNames(Z)Lorg/apache/commons/csv/CSVFormat;",
                    "org.apache.commons.csv.CSVFormat:withIgnoreSurroundingSpaces()Lorg/apache/commons/csv/CSVFormat;"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.csv.CSVPrinter:print(Ljava/lang/Object;Ljava/lang/CharSequence;II)V"
                ]
            },
            "1": {
                "method_ids": [
                    10,
                    35,
                    9,
                    4,
                    1,
                    8,
                    0,
                    34,
                    3,
                    16
                ],
                "method_signatures": [
                    "org.apache.commons.csv.CSVPrinter:print(Ljava/lang/Object;)V",
                    "org.apache.commons.csv.CSVPrinter:<init>(Ljava/lang/Appendable;Lorg/apache/commons/csv/CSVFormat;)V",
                    "org.apache.commons.csv.CSVPrinter:printRecord([Ljava/lang/Object;)V",
                    "org.apache.commons.csv.CSVFormat:withNullString(Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat;",
                    "org.apache.commons.csv.CSVFormat:withQuote(C)Lorg/apache/commons/csv/CSVFormat;",
                    "org.apache.commons.csv.CSVFormat:getHeader()[Ljava/lang/String;",
                    "org.apache.commons.csv.CSVPrinter:print(Ljava/lang/Object;Ljava/lang/CharSequence;II)V",
                    "org.apache.commons.csv.Constants:<clinit>()V",
                    "org.apache.commons.csv.CSVFormat:validate()V",
                    "org.apache.commons.csv.CSVFormat:getDelimiter()C"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.csv.CSVPrinter:print(Ljava/lang/Object;Ljava/lang/CharSequence;II)V"
                ]
            }
        },
        "5": {
            "0": {
                "method_ids": [
                    0,
                    5,
                    2,
                    12,
                    22,
                    1,
                    23,
                    25,
                    4,
                    3
                ],
                "method_signatures": [
                    "org.apache.commons.csv.CSVPrinter:println()V",
                    "org.apache.commons.csv.CSVFormat:validate()V",
                    "org.apache.commons.csv.CSVFormat:withHeader([Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat;",
                    "org.apache.commons.csv.CSVFormat:getDelimiter()C",
                    "org.apache.commons.csv.CSVFormat:withRecordSeparator(C)Lorg/apache/commons/csv/CSVFormat;",
                    "org.apache.commons.csv.CSVFormat:newFormat(C)Lorg/apache/commons/csv/CSVFormat;",
                    "org.apache.commons.csv.CSVFormat:withRecordSeparator(Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat;",
                    "org.apache.commons.csv.Constants:<clinit>()V",
                    "org.apache.commons.csv.Assertions:notNull(Ljava/lang/Object;Ljava/lang/String;)V",
                    "org.apache.commons.csv.CSVFormat:format([Ljava/lang/Object;)Ljava/lang/String;"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.csv.CSVPrinter:println()V"
                ]
            }
        },
        "14": {
            "0": {
                "method_ids": [
                    19,
                    0,
                    6,
                    34,
                    18,
                    29,
                    24,
                    12,
                    13,
                    1
                ],
                "method_signatures": [
                    "org.apache.commons.csv.CSVFormat:print(Ljava/lang/Object;Ljava/lang/Appendable;Z)V",
                    "org.apache.commons.csv.CSVFormat:printAndQuote(Ljava/lang/Object;Ljava/lang/CharSequence;IILjava/lang/Appendable;Z)V",
                    "org.apache.commons.csv.CSVFormat:getHeader()[Ljava/lang/String;",
                    "org.apache.commons.csv.CSVPrinter:<init>(Ljava/lang/Appendable;Lorg/apache/commons/csv/CSVFormat;)V",
                    "org.apache.commons.csv.CSVFormat:isQuoteCharacterSet()Z",
                    "org.apache.commons.csv.CSVFormat:withNullString(Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat;",
                    "org.apache.commons.csv.CSVFormat:withEscape(C)Lorg/apache/commons/csv/CSVFormat;",
                    "org.apache.commons.csv.CSVFormat:isLineBreak(Ljava/lang/Character;)Z",
                    "org.apache.commons.csv.CSVFormat:getDelimiter()C",
                    "org.apache.commons.csv.CSVFormat:withQuote(C)Lorg/apache/commons/csv/CSVFormat;"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.csv.CSVFormat:printAndQuote(Ljava/lang/Object;Ljava/lang/CharSequence;IILjava/lang/Appendable;Z)V"
                ]
            },
            "1": {
                "method_ids": [
                    18,
                    17,
                    0,
                    5,
                    1,
                    22,
                    23,
                    12,
                    13,
                    6
                ],
                "method_signatures": [
                    "org.apache.commons.csv.CSVFormat:print(Ljava/lang/Object;Ljava/lang/Appendable;Z)V",
                    "org.apache.commons.csv.CSVFormat:isQuoteCharacterSet()Z",
                    "org.apache.commons.csv.CSVFormat:printAndQuote(Ljava/lang/Object;Ljava/lang/CharSequence;IILjava/lang/Appendable;Z)V",
                    "org.apache.commons.csv.CSVFormat:getHeader()[Ljava/lang/String;",
                    "org.apache.commons.csv.CSVFormat:toStringArray([Ljava/lang/Object;)[Ljava/lang/String;",
                    "org.apache.commons.csv.CSVFormat:withDelimiter(C)Lorg/apache/commons/csv/CSVFormat;",
                    "org.apache.commons.csv.CSVFormat:withEscape(C)Lorg/apache/commons/csv/CSVFormat;",
                    "org.apache.commons.csv.CSVFormat:getDelimiter()C",
                    "org.apache.commons.csv.CSVFormat:getQuoteCharacter()Ljava/lang/Character;",
                    "org.apache.commons.csv.CSVPrinter:print(Ljava/lang/Object;)V"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.csv.CSVFormat:printAndQuote(Ljava/lang/Object;Ljava/lang/CharSequence;IILjava/lang/Appendable;Z)V"
                ]
            },
            "4": {
                "method_ids": [
                    18,
                    0,
                    5,
                    17,
                    1,
                    32,
                    22,
                    23,
                    12,
                    13
                ],
                "method_signatures": [
                    "org.apache.commons.csv.CSVFormat:print(Ljava/lang/Object;Ljava/lang/Appendable;Z)V",
                    "org.apache.commons.csv.CSVFormat:printAndQuote(Ljava/lang/Object;Ljava/lang/CharSequence;IILjava/lang/Appendable;Z)V",
                    "org.apache.commons.csv.CSVFormat:getHeader()[Ljava/lang/String;",
                    "org.apache.commons.csv.CSVFormat:isQuoteCharacterSet()Z",
                    "org.apache.commons.csv.CSVFormat:toStringArray([Ljava/lang/Object;)[Ljava/lang/String;",
                    "org.apache.commons.csv.Constants:<clinit>()V",
                    "org.apache.commons.csv.CSVFormat:withDelimiter(C)Lorg/apache/commons/csv/CSVFormat;",
                    "org.apache.commons.csv.CSVFormat:withEscape(C)Lorg/apache/commons/csv/CSVFormat;",
                    "org.apache.commons.csv.CSVFormat:getDelimiter()C",
                    "org.apache.commons.csv.CSVFormat:getQuoteCharacter()Ljava/lang/Character;"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.csv.CSVFormat:printAndQuote(Ljava/lang/Object;Ljava/lang/CharSequence;IILjava/lang/Appendable;Z)V"
                ]
            },
            "5": {
                "method_ids": [
                    0,
                    19,
                    6,
                    33,
                    29,
                    34,
                    1,
                    18,
                    12,
                    13
                ],
                "method_signatures": [
                    "org.apache.commons.csv.CSVFormat:printAndQuote(Ljava/lang/Object;Ljava/lang/CharSequence;IILjava/lang/Appendable;Z)V",
                    "org.apache.commons.csv.CSVFormat:print(Ljava/lang/Object;Ljava/lang/Appendable;Z)V",
                    "org.apache.commons.csv.CSVFormat:getHeader()[Ljava/lang/String;",
                    "org.apache.commons.csv.Constants:<clinit>()V",
                    "org.apache.commons.csv.CSVFormat:withNullString(Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat;",
                    "org.apache.commons.csv.CSVPrinter:<init>(Ljava/lang/Appendable;Lorg/apache/commons/csv/CSVFormat;)V",
                    "org.apache.commons.csv.CSVFormat:withQuote(C)Lorg/apache/commons/csv/CSVFormat;",
                    "org.apache.commons.csv.CSVFormat:isQuoteCharacterSet()Z",
                    "org.apache.commons.csv.CSVFormat:isLineBreak(Ljava/lang/Character;)Z",
                    "org.apache.commons.csv.CSVFormat:getDelimiter()C"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.csv.CSVFormat:printAndQuote(Ljava/lang/Object;Ljava/lang/CharSequence;IILjava/lang/Appendable;Z)V"
                ]
            },
            "2": {
                "method_ids": [
                    18,
                    0,
                    5,
                    17,
                    1,
                    22,
                    23,
                    12,
                    13,
                    32
                ],
                "method_signatures": [
                    "org.apache.commons.csv.CSVFormat:print(Ljava/lang/Object;Ljava/lang/Appendable;Z)V",
                    "org.apache.commons.csv.CSVFormat:printAndQuote(Ljava/lang/Object;Ljava/lang/CharSequence;IILjava/lang/Appendable;Z)V",
                    "org.apache.commons.csv.CSVFormat:getHeader()[Ljava/lang/String;",
                    "org.apache.commons.csv.CSVFormat:isQuoteCharacterSet()Z",
                    "org.apache.commons.csv.CSVFormat:toStringArray([Ljava/lang/Object;)[Ljava/lang/String;",
                    "org.apache.commons.csv.CSVFormat:withDelimiter(C)Lorg/apache/commons/csv/CSVFormat;",
                    "org.apache.commons.csv.CSVFormat:withEscape(C)Lorg/apache/commons/csv/CSVFormat;",
                    "org.apache.commons.csv.CSVFormat:getDelimiter()C",
                    "org.apache.commons.csv.CSVFormat:getQuoteCharacter()Ljava/lang/Character;",
                    "org.apache.commons.csv.Constants:<clinit>()V"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.csv.CSVFormat:printAndQuote(Ljava/lang/Object;Ljava/lang/CharSequence;IILjava/lang/Appendable;Z)V"
                ]
            },
            "3": {
                "method_ids": [
                    0,
                    19,
                    6,
                    33,
                    29,
                    34,
                    1,
                    12,
                    13,
                    14
                ],
                "method_signatures": [
                    "org.apache.commons.csv.CSVFormat:printAndQuote(Ljava/lang/Object;Ljava/lang/CharSequence;IILjava/lang/Appendable;Z)V",
                    "org.apache.commons.csv.CSVFormat:print(Ljava/lang/Object;Ljava/lang/Appendable;Z)V",
                    "org.apache.commons.csv.CSVFormat:getHeader()[Ljava/lang/String;",
                    "org.apache.commons.csv.Constants:<clinit>()V",
                    "org.apache.commons.csv.CSVFormat:withNullString(Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat;",
                    "org.apache.commons.csv.CSVPrinter:<init>(Ljava/lang/Appendable;Lorg/apache/commons/csv/CSVFormat;)V",
                    "org.apache.commons.csv.CSVFormat:withQuote(C)Lorg/apache/commons/csv/CSVFormat;",
                    "org.apache.commons.csv.CSVFormat:isLineBreak(Ljava/lang/Character;)Z",
                    "org.apache.commons.csv.CSVFormat:getDelimiter()C",
                    "org.apache.commons.csv.CSVFormat:getQuoteCharacter()Ljava/lang/Character;"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.csv.CSVFormat:printAndQuote(Ljava/lang/Object;Ljava/lang/CharSequence;IILjava/lang/Appendable;Z)V"
                ]
            }
        }
    }
}