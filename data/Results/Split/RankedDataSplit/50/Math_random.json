{
    "project_name": "Math",
    "bugs": {
        "61": {
            "0": {
                "method_ids": [
                    5,
                    4,
                    3,
                    0,
                    1,
                    6,
                    7,
                    8,
                    2,
                    11
                ],
                "method_signatures": [
                    "org.apache.commons.math.distribution.AbstractIntegerDistribution:<init>()V",
                    "org.apache.commons.math.distribution.PoissonDistributionImpl:<init>(D)V",
                    "org.apache.commons.math.distribution.AbstractDistribution:<init>()V",
                    "org.apache.commons.math.distribution.NormalDistributionImpl:<init>(DDD)V",
                    "org.apache.commons.math.distribution.NormalDistributionImpl:setStandardDeviationInternal(D)V",
                    "org.apache.commons.math.distribution.PoissonDistributionImpl:<init>(DDI)V",
                    "org.apache.commons.math.MathRuntimeException:createIllegalArgumentException(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)Ljava/lang/IllegalArgumentException;",
                    "org.apache.commons.math.distribution.NormalDistributionImpl:setMeanInternal(D)V",
                    "org.apache.commons.math.util.FastMath:sqrt(D)D",
                    "org.apache.commons.math.distribution.NormalDistributionImpl:<init>(DD)V"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.math.distribution.PoissonDistributionImpl:<init>(DDI)V"
                ]
            }
        },
        "95": {
            "0": {
                "method_ids": [
                    3,
                    4,
                    15,
                    2,
                    1,
                    20,
                    5,
                    6,
                    17,
                    0
                ],
                "method_signatures": [
                    "org.apache.commons.math.distribution.FDistributionImpl:inverseCumulativeProbability(D)D",
                    "org.apache.commons.math.analysis.UnivariateRealSolverUtils:bracket(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDD)[D",
                    "org.apache.commons.math.util.ContinuedFraction:evaluate(DDI)D",
                    "org.apache.commons.math.distribution.FDistributionImpl:getInitialDomain(D)D",
                    "org.apache.commons.math.special.Gamma:logGamma(D)D",
                    "org.apache.commons.math.special.Beta:regularizedBeta(DDDDI)D",
                    "org.apache.commons.math.distribution.FDistributionImpl:getDomainUpperBound(D)D",
                    "org.apache.commons.math.distribution.FDistributionImpl:getDenominatorDegreesOfFreedom()D",
                    "org.apache.commons.math.analysis.UnivariateRealSolverUtils:bracket(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDI)[D",
                    "org.apache.commons.math.special.Beta$1:<init>(DD)V"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.math.distribution.FDistributionImpl:getInitialDomain(D)D"
                ]
            }
        },
        "59": {
            "0": {
                "method_ids": [
                    5,
                    8,
                    18,
                    19,
                    0,
                    2,
                    4,
                    6,
                    10,
                    12
                ],
                "method_signatures": [
                    "org.apache.commons.math.util.FastMath:max(FF)F",
                    "org.apache.commons.math.dfp.Dfp:<init>(Lorg/apache/commons/math/dfp/DfpField;Ljava/lang/String;)V",
                    "org.apache.commons.math.random.MersenneTwister:<init>(J)V",
                    "org.apache.commons.math.util.FastMath:min(FF)F",
                    "org.apache.commons.math.dfp.DfpField:setIEEEFlagsBits(I)V",
                    "org.apache.commons.math.dfp.DfpField:<init>(I)V",
                    "org.apache.commons.math.dfp.Dfp:<init>(Lorg/apache/commons/math/dfp/DfpField;I)V",
                    "org.apache.commons.math.dfp.DfpField:getRoundingMode()Lorg/apache/commons/math/dfp/DfpField$RoundingMode;",
                    "org.apache.commons.math.dfp.Dfp:getRadixDigits()I",
                    "org.apache.commons.math.dfp.DfpField:split(Ljava/lang/String;)[Lorg/apache/commons/math/dfp/Dfp;"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.math.util.FastMath:max(FF)F"
                ]
            }
        },
        "92": {
            "0": {
                "method_ids": [
                    3,
                    2,
                    1,
                    0,
                    4
                ],
                "method_signatures": [
                    "org.apache.commons.math.util.MathUtils:binomialCoefficient(II)J",
                    "org.apache.commons.math.util.MathUtils:binomialCoefficientLog(II)D",
                    "org.apache.commons.math.util.MathUtils:binomialCoefficientDouble(II)D",
                    "org.apache.commons.math.util.MathUtils:addAndCheck(JJ)J",
                    "org.apache.commons.math.util.MathUtils:addAndCheck(JJLjava/lang/String;)J"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.math.util.MathUtils:binomialCoefficient(II)J",
                    "org.apache.commons.math.util.MathUtils:binomialCoefficientDouble(II)D",
                    "org.apache.commons.math.util.MathUtils:binomialCoefficientLog(II)D"
                ]
            }
        },
        "66": {
            "0": {
                "method_ids": [
                    14,
                    33,
                    21,
                    44,
                    38,
                    36,
                    9,
                    30,
                    25,
                    2
                ],
                "method_signatures": [
                    "org.apache.commons.math.optimization.univariate.AbstractUnivariateRealOptimizer:getEvaluations()I",
                    "org.apache.commons.math.stat.descriptive.DescriptiveStatistics:apply(Lorg/apache/commons/math/stat/descriptive/UnivariateStatistic;)D",
                    "org.apache.commons.math.stat.descriptive.summary.SumOfSquares:<init>()V",
                    "org.apache.commons.math.stat.descriptive.summary.SumOfLogs:<init>()V",
                    "org.apache.commons.math.optimization.univariate.BrentOptimizer:<init>()V",
                    "org.apache.commons.math.optimization.univariate.AbstractUnivariateRealOptimizer:<init>(ID)V",
                    "org.apache.commons.math.util.ResizableDoubleArray:getNumElements()I",
                    "org.apache.commons.math.util.ResizableDoubleArray:start()I",
                    "org.apache.commons.math.stat.descriptive.moment.ThirdMoment:<init>()V",
                    "org.apache.commons.math.util.ResizableDoubleArray:addElement(D)V"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.math.optimization.univariate.BrentOptimizer:<init>()V",
                    "org.apache.commons.math.optimization.univariate.BrentOptimizer:doOptimize()D",
                    "org.apache.commons.math.optimization.univariate.BrentOptimizer:optimize(Lorg/apache/commons/math/analysis/UnivariateRealFunction;Lorg/apache/commons/math/optimization/GoalType;DDD)D",
                    "org.apache.commons.math.optimization.univariate.BrentOptimizer:optimize(Lorg/apache/commons/math/analysis/UnivariateRealFunction;Lorg/apache/commons/math/optimization/GoalType;DD)D",
                    "org.apache.commons.math.optimization.univariate.BrentOptimizer:localMin(ZLorg/apache/commons/math/analysis/UnivariateRealFunction;Lorg/apache/commons/math/optimization/GoalType;DDDDD)D"
                ]
            },
            "1": {
                "method_ids": [
                    8,
                    7,
                    5,
                    4,
                    0,
                    2,
                    1,
                    15,
                    3,
                    9
                ],
                "method_signatures": [
                    "org.apache.commons.math.optimization.univariate.BrentOptimizer:localMin(Lorg/apache/commons/math/analysis/UnivariateRealFunction;Lorg/apache/commons/math/optimization/GoalType;DDDDD)D",
                    "org.apache.commons.math.optimization.univariate.AbstractUnivariateRealOptimizer:computeObjectiveValue(Lorg/apache/commons/math/analysis/UnivariateRealFunction;D)D",
                    "org.apache.commons.math.optimization.univariate.AbstractUnivariateRealOptimizer:setResult(DDI)V",
                    "org.apache.commons.math.ConvergingAlgorithmImpl:getAbsoluteAccuracy()D",
                    "org.apache.commons.math.optimization.univariate.AbstractUnivariateRealOptimizer:getFunctionValue()D",
                    "org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer:getEvaluations()I",
                    "org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer:setMaximalIterationCount(I)V",
                    "org.apache.commons.math.ConvergingAlgorithmImpl:<init>(ID)V",
                    "org.apache.commons.math.optimization.univariate.AbstractUnivariateRealOptimizer:setMaxEvaluations(I)V",
                    "org.apache.commons.math.optimization.univariate.BrentOptimizer:optimize(Lorg/apache/commons/math/analysis/UnivariateRealFunction;Lorg/apache/commons/math/optimization/GoalType;DDD)D"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.math.optimization.univariate.BrentOptimizer:<init>()V",
                    "org.apache.commons.math.optimization.univariate.BrentOptimizer:doOptimize()D",
                    "org.apache.commons.math.optimization.univariate.BrentOptimizer:optimize(Lorg/apache/commons/math/analysis/UnivariateRealFunction;Lorg/apache/commons/math/optimization/GoalType;DDD)D",
                    "org.apache.commons.math.optimization.univariate.BrentOptimizer:optimize(Lorg/apache/commons/math/analysis/UnivariateRealFunction;Lorg/apache/commons/math/optimization/GoalType;DD)D",
                    "org.apache.commons.math.optimization.univariate.BrentOptimizer:localMin(ZLorg/apache/commons/math/analysis/UnivariateRealFunction;Lorg/apache/commons/math/optimization/GoalType;DDDDD)D"
                ]
            },
            "2": {
                "method_ids": [
                    5,
                    9,
                    17,
                    6,
                    4,
                    1,
                    3,
                    12,
                    14,
                    8
                ],
                "method_signatures": [
                    "org.apache.commons.math.ConvergingAlgorithmImpl:<init>(ID)V",
                    "org.apache.commons.math.optimization.univariate.BrentOptimizer:<init>()V",
                    "org.apache.commons.math.MathRuntimeException:createIllegalStateException(Lorg/apache/commons/math/util/Localizable;[Ljava/lang/Object;)Ljava/lang/IllegalStateException;",
                    "org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer:optimize(Lorg/apache/commons/math/analysis/UnivariateRealFunction;Lorg/apache/commons/math/optimization/GoalType;DD)D",
                    "org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer:setRelativeAccuracy(D)V",
                    "org.apache.commons.math.ConvergingAlgorithmImpl:setMaximalIterationCount(I)V",
                    "org.apache.commons.math.optimization.univariate.AbstractUnivariateRealOptimizer:clearResult()V",
                    "org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer:<init>(Lorg/apache/commons/math/optimization/UnivariateRealOptimizer;ILorg/apache/commons/math/random/RandomGenerator;)V",
                    "org.apache.commons.math.MathRuntimeException$5:<init>(Lorg/apache/commons/math/util/Localizable;[Ljava/lang/Object;)V",
                    "org.apache.commons.math.optimization.univariate.BrentOptimizer:optimize(Lorg/apache/commons/math/analysis/UnivariateRealFunction;Lorg/apache/commons/math/optimization/GoalType;DDD)D"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.math.optimization.univariate.BrentOptimizer:<init>()V",
                    "org.apache.commons.math.optimization.univariate.BrentOptimizer:doOptimize()D",
                    "org.apache.commons.math.optimization.univariate.BrentOptimizer:optimize(Lorg/apache/commons/math/analysis/UnivariateRealFunction;Lorg/apache/commons/math/optimization/GoalType;DDD)D",
                    "org.apache.commons.math.optimization.univariate.BrentOptimizer:optimize(Lorg/apache/commons/math/analysis/UnivariateRealFunction;Lorg/apache/commons/math/optimization/GoalType;DD)D",
                    "org.apache.commons.math.optimization.univariate.BrentOptimizer:localMin(ZLorg/apache/commons/math/analysis/UnivariateRealFunction;Lorg/apache/commons/math/optimization/GoalType;DDDDD)D"
                ]
            },
            "3": {
                "method_ids": [
                    8,
                    2,
                    5,
                    6,
                    4,
                    0,
                    10,
                    1,
                    3,
                    9
                ],
                "method_signatures": [
                    "org.apache.commons.math.exception.NoDataException:<init>(Lorg/apache/commons/math/util/Localizable;)V",
                    "org.apache.commons.math.ConvergingAlgorithmImpl:getAbsoluteAccuracy()D",
                    "org.apache.commons.math.exception.NoDataException:<init>()V",
                    "org.apache.commons.math.optimization.univariate.AbstractUnivariateRealOptimizer:computeObjectiveValue(Lorg/apache/commons/math/analysis/UnivariateRealFunction;D)D",
                    "org.apache.commons.math.optimization.univariate.BrentOptimizer:<init>()V",
                    "org.apache.commons.math.optimization.univariate.AbstractUnivariateRealOptimizer:setMaxEvaluations(I)V",
                    "org.apache.commons.math.optimization.univariate.AbstractUnivariateRealOptimizer:getMaxEvaluations()I",
                    "org.apache.commons.math.exception.MathIllegalArgumentException:<init>(Lorg/apache/commons/math/util/Localizable;Lorg/apache/commons/math/util/Localizable;[Ljava/lang/Object;)V",
                    "org.apache.commons.math.optimization.univariate.BrentOptimizer:localMin(Lorg/apache/commons/math/analysis/UnivariateRealFunction;Lorg/apache/commons/math/optimization/GoalType;DDDDD)D",
                    "org.apache.commons.math.optimization.univariate.BrentOptimizer:optimize(Lorg/apache/commons/math/analysis/UnivariateRealFunction;Lorg/apache/commons/math/optimization/GoalType;DDD)D"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.math.optimization.univariate.BrentOptimizer:<init>()V",
                    "org.apache.commons.math.optimization.univariate.BrentOptimizer:doOptimize()D",
                    "org.apache.commons.math.optimization.univariate.BrentOptimizer:optimize(Lorg/apache/commons/math/analysis/UnivariateRealFunction;Lorg/apache/commons/math/optimization/GoalType;DDD)D",
                    "org.apache.commons.math.optimization.univariate.BrentOptimizer:optimize(Lorg/apache/commons/math/analysis/UnivariateRealFunction;Lorg/apache/commons/math/optimization/GoalType;DD)D",
                    "org.apache.commons.math.optimization.univariate.BrentOptimizer:localMin(ZLorg/apache/commons/math/analysis/UnivariateRealFunction;Lorg/apache/commons/math/optimization/GoalType;DDDDD)D"
                ]
            }
        },
        "50": {
            "0": {
                "method_ids": [
                    7,
                    15,
                    14,
                    16,
                    6,
                    0,
                    5,
                    4,
                    22,
                    25
                ],
                "method_signatures": [
                    "org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver:solve(ILorg/apache/commons/math/analysis/UnivariateRealFunction;DDD)D",
                    "org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver:incrementEvaluationCount()V",
                    "org.apache.commons.math.util.FastMath:max(DD)D",
                    "org.apache.commons.math.analysis.solvers.BaseSecantSolver:solve(ILorg/apache/commons/math/analysis/UnivariateRealFunction;DDD)D",
                    "org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver:getMax()D",
                    "org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver:getMin()D",
                    "org.apache.commons.math.analysis.solvers.BaseSecantSolver:<init>(DLorg/apache/commons/math/analysis/solvers/BaseSecantSolver$Method;)V",
                    "org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver:getAbsoluteAccuracy()D",
                    "org.apache.commons.math.analysis.solvers.BaseSecantSolver:doSolve()D",
                    "org.apache.commons.math.util.MathUtils:checkNotNull(Ljava/lang/Object;)V"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.math.analysis.solvers.BaseSecantSolver:doSolve()D"
                ]
            }
        },
        "68": {
            "0": {
                "method_ids": [
                    12,
                    19,
                    17,
                    11,
                    9,
                    8,
                    0,
                    10,
                    3,
                    4
                ],
                "method_signatures": [
                    "org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer:doOptimize()Lorg/apache/commons/math/optimization/VectorialPointValuePair;",
                    "org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer:updateResidualsAndCost()V",
                    "org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer:setCostRelativeTolerance(D)V",
                    "org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer:determineLMParameter([DD[D[D[D[D)V",
                    "org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer:qrDecomposition()V",
                    "org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer:incrementIterationsCounter()V",
                    "org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer:qTy([D)V",
                    "org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer:optimize(Lorg/apache/commons/math/analysis/DifferentiableMultivariateVectorialFunction;[D[D[D)Lorg/apache/commons/math/optimization/VectorialPointValuePair;",
                    "org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer:getRMS()D",
                    "org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer:<init>()V"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer:<init>()V",
                    "org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer:doOptimize()Lorg/apache/commons/math/optimization/VectorialPointValuePair;"
                ]
            },
            "1": {
                "method_ids": [
                    0,
                    9,
                    12,
                    4,
                    8,
                    3,
                    1,
                    18,
                    7,
                    2
                ],
                "method_signatures": [
                    "org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer:doOptimize()Lorg/apache/commons/math/optimization/VectorialPointValuePair;",
                    "org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer:updateResidualsAndCost()V",
                    "org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer:qTy([D)V",
                    "org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer:qrDecomposition()V",
                    "org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer:setInitialStepBoundFactor(D)V",
                    "org.apache.commons.math.optimization.VectorialPointValuePair:<init>([D[D)V",
                    "org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer:optimize(Lorg/apache/commons/math/analysis/DifferentiableMultivariateVectorialFunction;[D[D[D)Lorg/apache/commons/math/optimization/VectorialPointValuePair;",
                    "org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer:<init>()V",
                    "org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer:<init>()V",
                    "org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer:incrementIterationsCounter()V"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer:<init>()V",
                    "org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer:doOptimize()Lorg/apache/commons/math/optimization/VectorialPointValuePair;"
                ]
            }
        },
        "103": {
            "0": {
                "method_ids": [
                    5,
                    11,
                    10,
                    4,
                    0,
                    2,
                    6,
                    1,
                    12,
                    3
                ],
                "method_signatures": [
                    "org.apache.commons.math.special.Gamma:regularizedGammaP(DDDI)D",
                    "org.apache.commons.math.special.Erf:erf(D)D",
                    "org.apache.commons.math.MathException:translate(Ljava/lang/String;Ljava/util/Locale;)Ljava/lang/String;",
                    "org.apache.commons.math.distribution.NormalDistributionImpl:cumulativeProbability(D)D",
                    "org.apache.commons.math.distribution.NormalDistributionImpl:setStandardDeviation(D)V",
                    "org.apache.commons.math.distribution.NormalDistributionImpl:<init>(DD)V",
                    "org.apache.commons.math.distribution.NormalDistributionImpl:setMean(D)V",
                    "org.apache.commons.math.ConvergenceException:<init>(Ljava/lang/String;[Ljava/lang/Object;)V",
                    "org.apache.commons.math.MaxIterationsExceededException:<init>(I)V",
                    "org.apache.commons.math.distribution.AbstractContinuousDistribution:<init>()V"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.math.distribution.NormalDistributionImpl:cumulativeProbability(D)D"
                ]
            }
        },
        "57": {
            "0": {
                "method_ids": [
                    10,
                    4,
                    13,
                    7,
                    1,
                    12,
                    6,
                    0,
                    5,
                    2
                ],
                "method_signatures": [
                    "org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer:<init>(Ljava/util/Random;Lorg/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer$EmptyClusterStrategy;)V",
                    "org.apache.commons.math.stat.clustering.EuclideanIntegerPoint:getPoint()[I",
                    "org.apache.commons.math.util.MathUtils:distance([I[I)D",
                    "org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer:assignPointsToClusters(Ljava/util/Collection;Ljava/util/Collection;)V",
                    "org.apache.commons.math.util.FastMath:sqrt(D)D",
                    "org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer:<init>(Ljava/util/Random;)V",
                    "org.apache.commons.math.stat.clustering.Cluster:<init>(Lorg/apache/commons/math/stat/clustering/Clusterable;)V",
                    "org.apache.commons.math.stat.clustering.Cluster:addPoint(Lorg/apache/commons/math/stat/clustering/Clusterable;)V",
                    "org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer:chooseInitialCenters(Ljava/util/Collection;ILjava/util/Random;)Ljava/util/List;",
                    "org.apache.commons.math.stat.clustering.EuclideanIntegerPoint:distanceFrom(Lorg/apache/commons/math/stat/clustering/EuclideanIntegerPoint;)D"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer:chooseInitialCenters(Ljava/util/Collection;ILjava/util/Random;)Ljava/util/List;"
                ]
            }
        },
        "32": {
            "0": {
                "method_ids": [
                    209,
                    157,
                    186,
                    163,
                    171,
                    220,
                    164,
                    153,
                    156,
                    151
                ],
                "method_signatures": [
                    "org.apache.commons.math3.geometry.partitioning.RegionFactory:union(Lorg/apache/commons/math3/geometry/partitioning/Region;Lorg/apache/commons/math3/geometry/partitioning/Region;)Lorg/apache/commons/math3/geometry/partitioning/Region;",
                    "org.apache.commons.math3.geometry.partitioning.AbstractRegion:getSize()D",
                    "org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet$FacetsContributionVisitor:addContribution(Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;Z)V",
                    "org.apache.commons.math3.geometry.euclidean.threed.PolyhedronsSet$FacetsContributionVisitor:visitInternalNode(Lorg/apache/commons/math3/geometry/partitioning/BSPTree;)V",
                    "org.apache.commons.math3.geometry.euclidean.threed.SubPlane:split(Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;)Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane$SplitSubHyperplane;",
                    "org.apache.commons.math3.geometry.euclidean.twod.Line:toSubSpace(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/oned/Vector1D;",
                    "org.apache.commons.math3.geometry.partitioning.BSPTree:setAttribute(Ljava/lang/Object;)V",
                    "org.apache.commons.math3.geometry.partitioning.BoundaryAttribute:getPlusOutside()Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;",
                    "org.apache.commons.math3.geometry.euclidean.threed.Vector3D:<init>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V",
                    "org.apache.commons.math3.util.MathUtils:normalizeAngle(DD)D"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.math3.geometry.euclidean.twod.PolygonsSet:computeGeometricalProperties()V"
                ]
            }
        },
        "35": {
            "0": {
                "method_ids": [
                    1,
                    0
                ],
                "method_signatures": [
                    "org.apache.commons.math3.genetics.ElitisticListPopulation:<init>(Ljava/util/List;ID)V",
                    "org.apache.commons.math3.genetics.ListPopulation:<init>(Ljava/util/List;I)V"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.math3.genetics.ElitisticListPopulation:<init>(Ljava/util/List;ID)V",
                    "org.apache.commons.math3.genetics.ElitisticListPopulation:<init>(ID)V"
                ]
            },
            "1": {
                "method_ids": [
                    1,
                    0
                ],
                "method_signatures": [
                    "org.apache.commons.math3.genetics.ElitisticListPopulation:<init>(Ljava/util/List;ID)V",
                    "org.apache.commons.math3.genetics.ListPopulation:<init>(Ljava/util/List;I)V"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.math3.genetics.ElitisticListPopulation:<init>(Ljava/util/List;ID)V",
                    "org.apache.commons.math3.genetics.ElitisticListPopulation:<init>(ID)V"
                ]
            },
            "2": {
                "method_ids": [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    7,
                    8,
                    9
                ],
                "method_signatures": [
                    "org.apache.commons.math3.genetics.ElitisticListPopulation:<init>(ID)V",
                    "org.apache.commons.math3.genetics.ListPopulation:<init>(I)V",
                    "Unknown Signature",
                    "Unknown Signature",
                    "Unknown Signature",
                    "Unknown Signature",
                    "Unknown Signature",
                    "Unknown Signature",
                    "Unknown Signature",
                    "Unknown Signature"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.math3.genetics.ElitisticListPopulation:<init>(Ljava/util/List;ID)V",
                    "org.apache.commons.math3.genetics.ElitisticListPopulation:<init>(ID)V"
                ]
            },
            "3": {
                "method_ids": [
                    0,
                    1
                ],
                "method_signatures": [
                    "org.apache.commons.math3.genetics.ElitisticListPopulation:<init>(ID)V",
                    "org.apache.commons.math3.genetics.ListPopulation:<init>(I)V"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.math3.genetics.ElitisticListPopulation:<init>(Ljava/util/List;ID)V",
                    "org.apache.commons.math3.genetics.ElitisticListPopulation:<init>(ID)V"
                ]
            }
        },
        "102": {
            "0": {
                "method_ids": [
                    0,
                    11,
                    2,
                    14,
                    1,
                    12,
                    26,
                    7,
                    4,
                    19
                ],
                "method_signatures": [
                    "org.apache.commons.math.stat.inference.ChiSquareTestImpl:chiSquare([D[J)D",
                    "org.apache.commons.math.special.Gamma:logGamma(D)D",
                    "org.apache.commons.math.special.Gamma:regularizedGammaQ(DDDI)D",
                    "org.apache.commons.math.special.Gamma$1:<init>(D)V",
                    "org.apache.commons.math.distribution.AbstractDistribution:<init>()V",
                    "org.apache.commons.math.stat.inference.ChiSquareTestImpl:chiSquareTest([D[J)D",
                    "org.apache.commons.math.util.ContinuedFraction:evaluate(DDI)D",
                    "org.apache.commons.math.distribution.ChiSquaredDistributionImpl:getGamma()Lorg/apache/commons/math/distribution/GammaDistribution;",
                    "org.apache.commons.math.distribution.ChiSquaredDistributionImpl:<init>(DLorg/apache/commons/math/distribution/GammaDistribution;)V",
                    "org.apache.commons.math.distribution.ChiSquaredDistributionImpl:<init>(D)V"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.math.stat.inference.ChiSquareTestImpl:chiSquare([D[J)D"
                ]
            },
            "1": {
                "method_ids": [
                    7,
                    32,
                    23,
                    12,
                    11,
                    15,
                    20,
                    1,
                    4,
                    8
                ],
                "method_signatures": [
                    "org.apache.commons.math.stat.inference.ChiSquareTestImpl:chiSquare([D[J)D",
                    "org.apache.commons.math.distribution.GammaDistributionImpl:getAlpha()D",
                    "org.apache.commons.math.stat.inference.TestUtils:chiSquare([D[J)D",
                    "org.apache.commons.math.distribution.ChiSquaredDistributionImpl:<init>(D)V",
                    "org.apache.commons.math.distribution.ChiSquaredDistributionImpl:setDegreesOfFreedom(D)V",
                    "org.apache.commons.math.stat.descriptive.SummaryStatisticsImpl:<init>()V",
                    "org.apache.commons.math.stat.descriptive.moment.Mean:<init>()V",
                    "org.apache.commons.math.stat.inference.ChiSquareTestImpl:<init>()V",
                    "org.apache.commons.math.stat.descriptive.moment.Variance:<init>()V",
                    "org.apache.commons.math.stat.descriptive.moment.FirstMoment:<init>()V"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.math.stat.inference.ChiSquareTestImpl:chiSquare([D[J)D"
                ]
            },
            "4": {
                "method_ids": [
                    20,
                    1,
                    3,
                    26,
                    0,
                    19,
                    4,
                    6,
                    11,
                    10
                ],
                "method_signatures": [
                    "org.apache.commons.math.distribution.ChiSquaredDistributionImpl:cumulativeProbability(D)D",
                    "org.apache.commons.math.special.Gamma:regularizedGammaP(DDDI)D",
                    "org.apache.commons.math.stat.inference.TTestImpl:setDistribution(Lorg/apache/commons/math/distribution/TDistribution;)V",
                    "org.apache.commons.math.special.Gamma:regularizedGammaP(DD)D",
                    "org.apache.commons.math.distribution.ChiSquaredDistributionImpl:setDegreesOfFreedom(D)V",
                    "org.apache.commons.math.stat.inference.TTestImpl:<init>()V",
                    "org.apache.commons.math.distribution.ChiSquaredDistributionImpl:<init>(DLorg/apache/commons/math/distribution/GammaDistribution;)V",
                    "org.apache.commons.math.distribution.ChiSquaredDistributionImpl:getGamma()Lorg/apache/commons/math/distribution/GammaDistribution;",
                    "org.apache.commons.math.distribution.TDistributionImpl:setDegreesOfFreedom(D)V",
                    "org.apache.commons.math.distribution.GammaDistributionImpl:getBeta()D"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.math.stat.inference.ChiSquareTestImpl:chiSquare([D[J)D"
                ]
            },
            "5": {
                "method_ids": [
                    2,
                    22,
                    1,
                    4,
                    5,
                    3,
                    0,
                    7,
                    19,
                    6
                ],
                "method_signatures": [
                    "org.apache.commons.math.distribution.GammaDistributionImpl:<init>(DD)V",
                    "org.apache.commons.math.distribution.GammaDistributionImpl:setBeta(D)V",
                    "org.apache.commons.math.stat.inference.ChiSquareTestImpl:isPositive([D)Z",
                    "org.apache.commons.math.distribution.GammaDistributionImpl:getBeta()D",
                    "org.apache.commons.math.stat.inference.ChiSquareTestImpl:isNonNegative([J)Z",
                    "org.apache.commons.math.stat.inference.ChiSquareTestImpl:chiSquare([D[J)D",
                    "org.apache.commons.math.distribution.ChiSquaredDistributionImpl:cumulativeProbability(D)D",
                    "org.apache.commons.math.distribution.AbstractContinuousDistribution:<init>()V",
                    "org.apache.commons.math.distribution.ChiSquaredDistributionImpl:setGamma(Lorg/apache/commons/math/distribution/GammaDistribution;)V",
                    "org.apache.commons.math.distribution.GammaDistributionImpl:setAlpha(D)V"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.math.stat.inference.ChiSquareTestImpl:chiSquare([D[J)D"
                ]
            },
            "2": {
                "method_ids": [
                    7,
                    1,
                    9,
                    5,
                    3,
                    2,
                    19,
                    25,
                    26,
                    4
                ],
                "method_signatures": [
                    "org.apache.commons.math.distribution.AbstractContinuousDistribution:<init>()V",
                    "org.apache.commons.math.distribution.GammaDistributionImpl:getAlpha()D",
                    "org.apache.commons.math.special.Gamma$1:<init>(D)V",
                    "org.apache.commons.math.special.Gamma$1:getB(ID)D",
                    "org.apache.commons.math.distribution.ChiSquaredDistributionImpl:cumulativeProbability(D)D",
                    "org.apache.commons.math.stat.inference.ChiSquareTestImpl:chiSquareTest([D[J)D",
                    "org.apache.commons.math.distribution.ChiSquaredDistributionImpl:<init>(D)V",
                    "org.apache.commons.math.distribution.GammaDistributionImpl:setBeta(D)V",
                    "org.apache.commons.math.distribution.ChiSquaredDistributionImpl:setDegreesOfFreedom(D)V",
                    "org.apache.commons.math.util.ContinuedFraction:evaluate(DDI)D"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.math.stat.inference.ChiSquareTestImpl:chiSquare([D[J)D"
                ]
            },
            "3": {
                "method_ids": [
                    4,
                    15,
                    12,
                    26,
                    6,
                    10,
                    8,
                    24,
                    9,
                    16
                ],
                "method_signatures": [
                    "org.apache.commons.math.stat.descriptive.summary.SumOfLogs:<init>()V",
                    "org.apache.commons.math.stat.descriptive.moment.Variance:<init>()V",
                    "org.apache.commons.math.special.Gamma:regularizedGammaP(DDDI)D",
                    "org.apache.commons.math.stat.descriptive.moment.SecondMoment:<init>()V",
                    "org.apache.commons.math.stat.inference.ChiSquareTestImpl:isPositive([D)Z",
                    "org.apache.commons.math.special.Gamma:regularizedGammaP(DD)D",
                    "org.apache.commons.math.stat.descriptive.moment.Mean:<init>()V",
                    "org.apache.commons.math.distribution.ChiSquaredDistributionImpl:setDegreesOfFreedom(D)V",
                    "org.apache.commons.math.distribution.GammaDistributionImpl:getAlpha()D",
                    "org.apache.commons.math.stat.inference.ChiSquareTestImpl:chiSquare([D[J)D"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.math.stat.inference.ChiSquareTestImpl:chiSquare([D[J)D"
                ]
            }
        },
        "69": {
            "0": {
                "method_ids": [
                    39,
                    21,
                    18,
                    40,
                    19,
                    37,
                    6,
                    4,
                    24,
                    5
                ],
                "method_signatures": [
                    "org.apache.commons.math.linear.BlockRealMatrix:blockHeight(I)I",
                    "org.apache.commons.math.util.ContinuedFraction:evaluate(DDI)D",
                    "org.apache.commons.math.special.Beta:regularizedBeta(DDD)D",
                    "org.apache.commons.math.stat.correlation.PearsonsCorrelation:getCorrelationPValues()Lorg/apache/commons/math/linear/RealMatrix;",
                    "org.apache.commons.math.stat.correlation.PearsonsCorrelation:computeCorrelationMatrix(Lorg/apache/commons/math/linear/RealMatrix;)Lorg/apache/commons/math/linear/RealMatrix;",
                    "org.apache.commons.math.linear.BlockRealMatrix:setEntry(IID)V",
                    "org.apache.commons.math.distribution.TDistributionImpl:setDegreesOfFreedom(D)V",
                    "org.apache.commons.math.distribution.TDistributionImpl:cumulativeProbability(D)D",
                    "org.apache.commons.math.stat.regression.SimpleRegression:getSumSquaredErrors()D",
                    "org.apache.commons.math.linear.BlockRealMatrix:<init>(II)V"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.math.stat.correlation.PearsonsCorrelation:getCorrelationPValues()Lorg/apache/commons/math/linear/RealMatrix;"
                ]
            },
            "1": {
                "method_ids": [
                    6,
                    21,
                    2,
                    1,
                    7,
                    5,
                    36,
                    12,
                    43,
                    0
                ],
                "method_signatures": [
                    "org.apache.commons.math.stat.correlation.PearsonsCorrelation:<init>(Lorg/apache/commons/math/linear/RealMatrix;)V",
                    "org.apache.commons.math.distribution.AbstractContinuousDistribution:<init>()V",
                    "org.apache.commons.math.stat.correlation.PearsonsCorrelation:correlation([D[D)D",
                    "org.apache.commons.math.stat.regression.SimpleRegression:<init>(Lorg/apache/commons/math/distribution/TDistribution;)V",
                    "org.apache.commons.math.stat.correlation.PearsonsCorrelation:getCorrelationPValues()Lorg/apache/commons/math/linear/RealMatrix;",
                    "org.apache.commons.math.distribution.AbstractDistribution:<init>()V",
                    "org.apache.commons.math.linear.BlockRealMatrix:setEntry(IID)V",
                    "org.apache.commons.math.stat.regression.SimpleRegression:getTotalSumSquares()D",
                    "org.apache.commons.math.linear.BlockRealMatrix:getColumnDimension()I",
                    "org.apache.commons.math.distribution.TDistributionImpl:setDegreesOfFreedomInternal(D)V"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.math.stat.correlation.PearsonsCorrelation:getCorrelationPValues()Lorg/apache/commons/math/linear/RealMatrix;"
                ]
            }
        },
        "56": {
            "0": {
                "method_ids": [
                    4,
                    3,
                    5,
                    1,
                    0,
                    10,
                    8,
                    2,
                    6,
                    7
                ],
                "method_signatures": [
                    "org.apache.commons.math.util.MultidimensionalCounter:getCount([I)I",
                    "org.apache.commons.math.util.MultidimensionalCounter$Iterator:<init>(Lorg/apache/commons/math/util/MultidimensionalCounter;)V",
                    "org.apache.commons.math.util.MultidimensionalCounter:getCounts(I)[I",
                    "org.apache.commons.math.util.MultidimensionalCounter:<init>([I)V",
                    "org.apache.commons.math.util.MultidimensionalCounter:iterator()Lorg/apache/commons/math/util/MultidimensionalCounter$Iterator;",
                    "org.apache.commons.math.util.MultidimensionalCounter$Iterator:hasNext()Z",
                    "org.apache.commons.math.util.MathUtils:copyOf([II)[I",
                    "org.apache.commons.math.util.MultidimensionalCounter$Iterator:next()Ljava/lang/Integer;",
                    "org.apache.commons.math.util.MultidimensionalCounter$Iterator:getCount(I)I",
                    "org.apache.commons.math.util.MathUtils:copyOf([I)[I"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.math.util.MultidimensionalCounter:getCounts(I)[I"
                ]
            }
        },
        "105": {
            "0": {
                "method_ids": [
                    1,
                    2,
                    0
                ],
                "method_signatures": [
                    "org.apache.commons.math.stat.regression.SimpleRegression:getSumSquaredErrors()D",
                    "org.apache.commons.math.stat.regression.SimpleRegression:addData(DD)V",
                    "org.apache.commons.math.stat.regression.SimpleRegression:<init>()V"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.math.stat.regression.SimpleRegression:getSumSquaredErrors()D"
                ]
            }
        },
        "51": {
            "0": {
                "method_ids": [
                    6,
                    19,
                    5,
                    34,
                    24,
                    21,
                    18,
                    8,
                    17,
                    1
                ],
                "method_signatures": [
                    "org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver:incrementEvaluationCount()V",
                    "org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver:solve(ILorg/apache/commons/math/analysis/UnivariateRealFunction;DDD)D",
                    "org.apache.commons.math.util.FastMath:max(DD)D",
                    "org.apache.commons.math.exception.TooManyEvaluationsException:<init>(Ljava/lang/Number;)V",
                    "org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver:getAbsoluteAccuracy()D",
                    "org.apache.commons.math.exception.util.ExceptionContext:addMessage(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V",
                    "org.apache.commons.math.analysis.solvers.RegulaFalsiSolver:<init>()V",
                    "org.apache.commons.math.analysis.solvers.BaseSecantSolver:solve(ILorg/apache/commons/math/analysis/UnivariateRealFunction;DDD)D",
                    "org.apache.commons.math.exception.MathIllegalStateException:<init>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V",
                    "org.apache.commons.math.exception.MathIllegalStateException:<init>()V"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.math.analysis.solvers.BaseSecantSolver:doSolve()D"
                ]
            }
        },
        "58": {
            "0": {
                "method_ids": [
                    53,
                    51,
                    66,
                    72,
                    68,
                    64,
                    7,
                    56,
                    59
                ],
                "method_signatures": [
                    "org.apache.commons.math.analysis.function.Gaussian$Parametric:validateParameters([D)V",
                    "org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer:doOptimize()Lorg/apache/commons/math/optimization/VectorialPointValuePair;",
                    "org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer:qrDecomposition()V",
                    "org.apache.commons.math.optimization.fitting.GaussianFitter:<init>(Lorg/apache/commons/math/optimization/DifferentiableMultivariateVectorialOptimizer;)V",
                    "org.apache.commons.math.util.Incrementor:incrementCount()V",
                    "org.apache.commons.math.optimization.fitting.CurveFitter:fit(Lorg/apache/commons/math/analysis/ParametricUnivariateRealFunction;[D)[D",
                    "org.apache.commons.math.exception.NumberIsTooSmallException:<init>(Ljava/lang/Number;Ljava/lang/Number;Z)V",
                    "org.apache.commons.math.exception.MathRuntimeException:<init>(Ljava/lang/Throwable;Lorg/apache/commons/math/exception/util/Localizable;Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V",
                    "org.apache.commons.math.optimization.fitting.GaussianFitter$ParameterGuesser:<init>([Lorg/apache/commons/math/optimization/fitting/WeightedObservedPoint;)V"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.math.optimization.fitting.GaussianFitter:fit()[D"
                ]
            }
        },
        "67": {
            "0": {
                "method_ids": [
                    21,
                    4,
                    27,
                    3,
                    10,
                    17,
                    19,
                    28,
                    1,
                    16
                ],
                "method_signatures": [
                    "org.apache.commons.math.MathRuntimeException:createIllegalStateException(Lorg/apache/commons/math/util/Localizable;[Ljava/lang/Object;)Ljava/lang/IllegalStateException;",
                    "org.apache.commons.math.optimization.univariate.BrentOptimizer:optimize(Lorg/apache/commons/math/analysis/UnivariateRealFunction;Lorg/apache/commons/math/optimization/GoalType;DD)D",
                    "org.apache.commons.math.optimization.univariate.AbstractUnivariateRealOptimizer:computeObjectiveValue(Lorg/apache/commons/math/analysis/UnivariateRealFunction;D)D",
                    "org.apache.commons.math.optimization.univariate.AbstractUnivariateRealOptimizer:getFunctionValue()D",
                    "org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer:setRelativeAccuracy(D)V",
                    "org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer:<init>(Lorg/apache/commons/math/optimization/UnivariateRealOptimizer;ILorg/apache/commons/math/random/RandomGenerator;)V",
                    "org.apache.commons.math.optimization.univariate.AbstractUnivariateRealOptimizer:setMaxEvaluations(I)V",
                    "org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer:getResult()D",
                    "org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer:getRelativeAccuracy()D",
                    "org.apache.commons.math.ConvergingAlgorithmImpl:getAbsoluteAccuracy()D"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer:getFunctionValue()D",
                    "org.apache.commons.math.optimization.MultiStartUnivariateRealOptimizer:getResult()D"
                ]
            }
        },
        "93": {
            "0": {
                "method_ids": [
                    0,
                    1,
                    2
                ],
                "method_signatures": [
                    "org.apache.commons.math.util.MathUtils:factorialDouble(I)D",
                    "org.apache.commons.math.util.MathUtils:factorialLog(I)D",
                    "org.apache.commons.math.util.MathUtils:factorial(I)J"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.math.util.MathUtils:factorial(I)J",
                    "org.apache.commons.math.util.MathUtils:factorialDouble(I)D",
                    "org.apache.commons.math.util.MathUtils:factorialLog(I)D"
                ]
            }
        },
        "94": {
            "0": {
                "method_ids": [
                    0
                ],
                "method_signatures": [
                    "org.apache.commons.math.util.MathUtils:gcd(II)I"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.math.util.MathUtils:gcd(II)I"
                ]
            }
        },
        "60": {
            "0": {
                "method_ids": [
                    20,
                    1,
                    2,
                    6,
                    4,
                    3,
                    14,
                    19,
                    16,
                    0
                ],
                "method_signatures": [
                    "org.apache.commons.math.util.FastMath:exp(D)D",
                    "org.apache.commons.math.special.Gamma:regularizedGammaQ(DDDI)D",
                    "org.apache.commons.math.distribution.NormalDistributionImpl:<init>(DDD)V",
                    "org.apache.commons.math.util.ContinuedFraction:<init>()V",
                    "org.apache.commons.math.special.Gamma$1:<init>(D)V",
                    "org.apache.commons.math.distribution.NormalDistributionImpl:cumulativeProbability(D)D",
                    "org.apache.commons.math.util.FastMath:abs(D)D",
                    "org.apache.commons.math.util.FastMath:log(D[D)D",
                    "org.apache.commons.math.special.Gamma$1:getA(ID)D",
                    "org.apache.commons.math.MathException:<init>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.math.distribution.NormalDistributionImpl:cumulativeProbability(D)D"
                ]
            }
        },
        "34": {
            "0": {
                "method_ids": [
                    1,
                    3,
                    6,
                    8,
                    4,
                    7,
                    5,
                    2,
                    0,
                    9
                ],
                "method_signatures": [
                    "org.apache.commons.math3.genetics.ListPopulation:iterator()Ljava/util/Iterator;",
                    "org.apache.commons.math3.genetics.ListPopulation:addChromosomes(Ljava/util/Collection;)V",
                    "org.apache.commons.math3.genetics.ListPopulation:<init>(Ljava/util/List;I)V",
                    "org.apache.commons.math3.genetics.ListPopulation:<init>(I)V",
                    "org.apache.commons.math3.genetics.AbstractListChromosome:<init>(Ljava/util/List;)V",
                    "org.apache.commons.math3.genetics.BinaryChromosome:<init>(Ljava/util/List;)V",
                    "org.apache.commons.math3.genetics.BinaryChromosome:checkValidity(Ljava/util/List;)V",
                    "org.apache.commons.math3.genetics.GeneticAlgorithm:getRandomGenerator()Lorg/apache/commons/math3/random/RandomGenerator;",
                    "org.apache.commons.math3.genetics.BinaryChromosome:randomBinaryRepresentation(I)Ljava/util/List;",
                    "Unknown Signature"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.math3.genetics.ListPopulation:iterator()Ljava/util/Iterator;"
                ]
            }
        },
        "33": {
            "0": {
                "method_ids": [
                    55,
                    52,
                    59,
                    58,
                    54,
                    50,
                    53,
                    63,
                    61,
                    70
                ],
                "method_signatures": [
                    "org.apache.commons.math3.optimization.linear.SimplexSolver:solvePhase1(Lorg/apache/commons/math3/optimization/linear/SimplexTableau;)V",
                    "org.apache.commons.math3.optimization.linear.SimplexTableau:divideRow(ID)V",
                    "org.apache.commons.math3.optimization.linear.SimplexSolver:doIteration(Lorg/apache/commons/math3/optimization/linear/SimplexTableau;)V",
                    "org.apache.commons.math3.optimization.linear.SimplexTableau:getEntry(II)D",
                    "org.apache.commons.math3.optimization.linear.SimplexSolver:<init>()V",
                    "org.apache.commons.math3.linear.Array2DRowRealMatrix:setEntry(IID)V",
                    "org.apache.commons.math3.linear.Array2DRowRealMatrix:getEntry(II)D",
                    "org.apache.commons.math3.util.Precision:compareTo(DDI)I",
                    "org.apache.commons.math3.optimization.linear.SimplexTableau:getOriginalNumDecisionVariables()I",
                    "org.apache.commons.math3.optimization.linear.SimplexTableau:getNumObjectiveFunctions()I"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.math3.optimization.linear.SimplexTableau:dropPhase1Objective()V"
                ]
            }
        },
        "20": {
            "0": {
                "method_ids": [
                    101,
                    156,
                    152,
                    151,
                    153,
                    111,
                    105,
                    119,
                    51,
                    52
                ],
                "method_signatures": [
                    "org.apache.commons.math3.optimization.direct.CMAESOptimizer:checkParameters()V",
                    "org.apache.commons.math3.optimization.direct.CMAESOptimizer:initializeCMA([D)V",
                    "org.apache.commons.math3.optimization.direct.CMAESOptimizer:sortedIndices([D)[I",
                    "org.apache.commons.math3.optimization.direct.CMAESOptimizer:eye(II)Lorg/apache/commons/math3/linear/RealMatrix;",
                    "org.apache.commons.math3.optimization.direct.CMAESOptimizer:min(Lorg/apache/commons/math3/linear/RealMatrix;)D",
                    "org.apache.commons.math3.linear.ArrayRealVector:getEntry(I)D",
                    "org.apache.commons.math3.util.Precision:equals(DDD)Z",
                    "org.apache.commons.math3.linear.MatrixUtils:checkSubtractionCompatible(Lorg/apache/commons/math3/linear/AnyMatrix;Lorg/apache/commons/math3/linear/AnyMatrix;)V",
                    "org.apache.commons.math3.optimization.direct.CMAESOptimizer:updateCovariance(ZLorg/apache/commons/math3/linear/RealMatrix;Lorg/apache/commons/math3/linear/RealMatrix;[ILorg/apache/commons/math3/linear/RealMatrix;)V",
                    "org.apache.commons.math3.optimization.direct.CMAESOptimizer:max([D)D"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction:repairAndDecode([D)[D"
                ]
            }
        },
        "18": {
            "0": {
                "method_ids": [
                    72,
                    151,
                    153,
                    156,
                    157,
                    4,
                    28,
                    106,
                    133
                ],
                "method_signatures": [
                    "org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer:optimize(ILorg/apache/commons/math3/analysis/MultivariateFunction;Lorg/apache/commons/math3/optimization/GoalType;[D)Lorg/apache/commons/math3/optimization/PointValuePair;",
                    "org.apache.commons.math3.optimization.direct.CMAESOptimizer:updateBD(D)V",
                    "org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateOptimizer:optimizeInternal(ILorg/apache/commons/math3/analysis/MultivariateFunction;Lorg/apache/commons/math3/optimization/GoalType;[D)Lorg/apache/commons/math3/optimization/PointValuePair;",
                    "org.apache.commons.math3.optimization.direct.CMAESOptimizer:diag(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;",
                    "org.apache.commons.math3.optimization.direct.CMAESOptimizer:repmat(Lorg/apache/commons/math3/linear/RealMatrix;II)Lorg/apache/commons/math3/linear/RealMatrix;",
                    "org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction:penalty([D[D)D",
                    "org.apache.commons.math3.optimization.direct.CMAESOptimizer:updateCovariance(ZLorg/apache/commons/math3/linear/RealMatrix;Lorg/apache/commons/math3/linear/RealMatrix;[ILorg/apache/commons/math3/linear/RealMatrix;)V",
                    "org.apache.commons.math3.util.FastMath:log(D)D",
                    "org.apache.commons.math3.linear.AbstractRealMatrix:setColumnVector(ILorg/apache/commons/math3/linear/RealVector;)V"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction:encode([D)[D",
                    "org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction:decode([D)[D",
                    "org.apache.commons.math3.optimization.direct.CMAESOptimizer$FitnessFunction:isFeasible([D)Z"
                ]
            }
        },
        "27": {
            "0": {
                "method_ids": [
                    2,
                    1,
                    4,
                    3,
                    0
                ],
                "method_signatures": [
                    "org.apache.commons.math3.fraction.Fraction:percentageValue()D",
                    "org.apache.commons.math3.fraction.Fraction:doubleValue()D",
                    "org.apache.commons.math3.fraction.Fraction:multiply(I)Lorg/apache/commons/math3/fraction/Fraction;",
                    "org.apache.commons.math3.fraction.Fraction:<init>(II)V",
                    "org.apache.commons.math3.util.ArithmeticUtils:gcd(II)I"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.math3.fraction.Fraction:percentageValue()D"
                ]
            }
        },
        "9": {
            "0": {
                "method_ids": [
                    6,
                    8,
                    5,
                    7,
                    10,
                    1,
                    4,
                    3,
                    9,
                    13
                ],
                "method_signatures": [
                    "org.apache.commons.math3.geometry.euclidean.threed.Line:revert()Lorg/apache/commons/math3/geometry/euclidean/threed/Line;",
                    "org.apache.commons.math3.geometry.euclidean.threed.Line:getDirection()Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;",
                    "org.apache.commons.math3.geometry.euclidean.threed.Vector3D:getNormSq()D",
                    "org.apache.commons.math3.util.MathArrays:linearCombination(DDDD)D",
                    "org.apache.commons.math3.geometry.euclidean.threed.Vector3D:negate()Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;",
                    "org.apache.commons.math3.geometry.euclidean.threed.Vector3D:toArray()[D",
                    "org.apache.commons.math3.util.MathArrays:linearCombination(DDDDDD)D",
                    "org.apache.commons.math3.geometry.euclidean.threed.Vector3D:<init>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V",
                    "org.apache.commons.math3.geometry.euclidean.threed.Line:reset(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V",
                    "org.apache.commons.math3.geometry.euclidean.threed.Vector3D:<init>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.math3.geometry.euclidean.threed.Line:revert()Lorg/apache/commons/math3/geometry/euclidean/threed/Line;"
                ]
            }
        },
        "11": {
            "0": {
                "method_ids": [
                    79,
                    54,
                    70,
                    6,
                    5,
                    63,
                    57,
                    58,
                    64,
                    52
                ],
                "method_signatures": [
                    "org.apache.commons.math3.util.MathUtils:checkNotNull(Ljava/lang/Object;)V",
                    "org.apache.commons.math3.distribution.MultivariateNormalDistribution:getExponentTerm([D)D",
                    "org.apache.commons.math3.distribution.NormalDistribution:density(D)D",
                    "org.apache.commons.math3.distribution.MultivariateNormalDistribution:<init>([D[[D)V",
                    "org.apache.commons.math3.linear.Array2DRowRealMatrix:setEntry(IID)V",
                    "org.apache.commons.math3.random.AbstractWell:setSeed(J)V",
                    "org.apache.commons.math3.linear.Array2DRowRealMatrix:walkInRowOrder(Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;)D",
                    "org.apache.commons.math3.linear.MatrixUtils:checkMatrixIndex(Lorg/apache/commons/math3/linear/AnyMatrix;II)V",
                    "org.apache.commons.math3.linear.Array2DRowRealMatrix:preMultiply([D)[D",
                    "org.apache.commons.math3.util.FastMath:exp(D)D"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.math3.distribution.MultivariateNormalDistribution:density([D)D"
                ]
            }
        },
        "7": {
            "0": {
                "method_ids": [
                    92,
                    106,
                    102,
                    101,
                    100,
                    64,
                    91,
                    60,
                    53,
                    44
                ],
                "method_signatures": [
                    "org.apache.commons.math3.ode.events.EventState:evaluateStep(Lorg/apache/commons/math3/ode/sampling/StepInterpolator;)Z",
                    "org.apache.commons.math3.ode.events.EventState:stop()Z",
                    "org.apache.commons.math3.ode.AbstractIntegrator:addEventHandler(Lorg/apache/commons/math3/ode/events/EventHandler;DDILorg/apache/commons/math3/analysis/solvers/UnivariateSolver;)V",
                    "org.apache.commons.math3.ode.events.EventState:getEventHandler()Lorg/apache/commons/math3/ode/events/EventHandler;",
                    "org.apache.commons.math3.ode.EquationsMapper:getDimension()I",
                    "org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeIntegrator:setStepSizeControl(DDDD)V",
                    "org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver:getMax()D",
                    "org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver:solve(ILorg/apache/commons/math3/analysis/UnivariateFunction;DD)D",
                    "org.apache.commons.math3.ode.nonstiff.DormandPrince853Integrator:<init>(DDDD)V",
                    "org.apache.commons.math3.ode.sampling.AbstractStepInterpolator:storeTime(D)V"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.math3.ode.AbstractIntegrator:acceptStep(Lorg/apache/commons/math3/ode/sampling/AbstractStepInterpolator;[D[DD)D"
                ]
            }
        },
        "29": {
            "0": {
                "method_ids": [
                    3,
                    22,
                    17,
                    19,
                    8,
                    34,
                    21,
                    1,
                    18,
                    13
                ],
                "method_signatures": [
                    "org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector;",
                    "org.apache.commons.math3.util.OpenIntToDoubleHashMap:get(I)D",
                    "org.apache.commons.math3.linear.OpenMapRealVector:<init>(Lorg/apache/commons/math3/linear/OpenMapRealVector;)V",
                    "org.apache.commons.math3.util.OpenIntToDoubleHashMap:remove(I)D",
                    "org.apache.commons.math3.util.OpenIntToDoubleHashMap:hashOf(I)I",
                    "org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D",
                    "org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;",
                    "org.apache.commons.math3.util.OpenIntToDoubleHashMap:containsKey(II)Z",
                    "org.apache.commons.math3.linear.OpenMapRealVector:getEntry(I)D",
                    "org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector;",
                    "org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector;"
                ]
            },
            "1": {
                "method_ids": [
                    35,
                    20,
                    7,
                    9,
                    12,
                    1,
                    33,
                    4,
                    3,
                    10
                ],
                "method_signatures": [
                    "org.apache.commons.math3.util.FastMath:floor(D)D",
                    "org.apache.commons.math3.util.FastMath:abs(D)D",
                    "org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:key()I",
                    "org.apache.commons.math3.linear.OpenMapRealVector:<init>([DD)V",
                    "org.apache.commons.math3.util.OpenIntToDoubleHashMap:shouldGrowTable()Z",
                    "org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V",
                    "org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z",
                    "org.apache.commons.math3.util.OpenIntToDoubleHashMap:doRemove(I)D",
                    "org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator;",
                    "org.apache.commons.math3.linear.OpenMapRealVector:isDefaultValue(D)Z"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector;",
                    "org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector;"
                ]
            },
            "2": {
                "method_ids": [
                    14,
                    33,
                    9,
                    1,
                    28,
                    12,
                    10,
                    5,
                    4,
                    3
                ],
                "method_signatures": [
                    "org.apache.commons.math3.util.OpenIntToDoubleHashMap:put(ID)D",
                    "org.apache.commons.math3.util.OpenIntToDoubleHashMap:<init>(Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;)V",
                    "org.apache.commons.math3.util.OpenIntToDoubleHashMap:growTable()V",
                    "org.apache.commons.math3.util.OpenIntToDoubleHashMap:perturb(I)I",
                    "org.apache.commons.math3.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I",
                    "org.apache.commons.math3.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap$Iterator;",
                    "org.apache.commons.math3.linear.OpenMapRealVector:setEntry(ID)V",
                    "org.apache.commons.math3.linear.OpenMapRealVector:getEntries()Lorg/apache/commons/math3/util/OpenIntToDoubleHashMap;",
                    "org.apache.commons.math3.util.OpenIntToDoubleHashMap$Iterator:advance()V",
                    "org.apache.commons.math3.linear.RealVector:checkIndex(I)V"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.math3.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector;",
                    "org.apache.commons.math3.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math3/linear/RealVector;)Lorg/apache/commons/math3/linear/OpenMapRealVector;"
                ]
            }
        },
        "16": {
            "0": {
                "method_ids": [
                    16,
                    18,
                    20,
                    23,
                    15,
                    6,
                    1,
                    2,
                    3,
                    4
                ],
                "method_signatures": [
                    "org.apache.commons.math3.util.FastMath:abs(D)D",
                    "org.apache.commons.math3.dfp.DfpField:getRadixDigits()I",
                    "org.apache.commons.math3.random.MersenneTwister:setSeed(J)V",
                    "org.apache.commons.math3.random.MersenneTwister:setSeed([I)V",
                    "org.apache.commons.math3.random.MersenneTwister:<init>(J)V",
                    "org.apache.commons.math3.random.MersenneTwister:setSeed(I)V",
                    "org.apache.commons.math3.dfp.DfpField:setIEEEFlagsBits(I)V",
                    "org.apache.commons.math3.dfp.Dfp:round(I)I",
                    "org.apache.commons.math3.dfp.DfpField:split(Ljava/lang/String;)[Lorg/apache/commons/math3/dfp/Dfp;",
                    "org.apache.commons.math3.dfp.Dfp:<init>(Lorg/apache/commons/math3/dfp/DfpField;I)V"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.math3.util.FastMath:cosh(D)D",
                    "org.apache.commons.math3.util.FastMath:sinh(D)D"
                ]
            },
            "1": {
                "method_ids": [
                    21,
                    6,
                    11,
                    12,
                    9,
                    7,
                    8,
                    1,
                    2,
                    0
                ],
                "method_signatures": [
                    "org.apache.commons.math3.dfp.Dfp:<init>(Lorg/apache/commons/math3/dfp/DfpField;I)V",
                    "org.apache.commons.math3.random.MersenneTwister:<init>(J)V",
                    "org.apache.commons.math3.random.MersenneTwister:setSeed(J)V",
                    "org.apache.commons.math3.util.FastMath:ulp(D)D",
                    "org.apache.commons.math3.util.FastMath:max(II)I",
                    "org.apache.commons.math3.util.FastMath:exp(D)D",
                    "org.apache.commons.math3.dfp.DfpField:<init>(IZ)V",
                    "org.apache.commons.math3.dfp.DfpField:setIEEEFlagsBits(I)V",
                    "org.apache.commons.math3.dfp.Dfp:round(I)I",
                    "org.apache.commons.math3.random.MersenneTwister:setSeed(I)V"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.math3.util.FastMath:cosh(D)D",
                    "org.apache.commons.math3.util.FastMath:sinh(D)D"
                ]
            }
        },
        "42": {
            "0": {
                "method_ids": [
                    2,
                    70,
                    51,
                    68,
                    56,
                    50,
                    12,
                    7,
                    14,
                    0
                ],
                "method_signatures": [
                    "org.apache.commons.math.optimization.linear.SimplexSolver:doOptimize()Lorg/apache/commons/math/optimization/RealPointValuePair;",
                    "org.apache.commons.math.optimization.linear.SimplexTableau:getConstraintTypeCounts(Lorg/apache/commons/math/optimization/linear/Relationship;)I",
                    "org.apache.commons.math.optimization.linear.SimplexTableau:dropPhase1Objective()V",
                    "org.apache.commons.math.optimization.linear.LinearObjectiveFunction:getValue([D)D",
                    "org.apache.commons.math.optimization.RealPointValuePair:getPoint()[D",
                    "org.apache.commons.math.optimization.linear.LinearObjectiveFunction:getConstantTerm()D",
                    "org.apache.commons.math.util.FastMath:abs(D)D",
                    "org.apache.commons.math.util.Precision:equals(DDI)Z",
                    "org.apache.commons.math.optimization.linear.LinearObjectiveFunction:<init>([DD)V",
                    "org.apache.commons.math.optimization.linear.AbstractLinearOptimizer:optimize(Lorg/apache/commons/math/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math/optimization/GoalType;Z)Lorg/apache/commons/math/optimization/RealPointValuePair;"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.math.optimization.linear.SimplexTableau:getSolution()Lorg/apache/commons/math/optimization/RealPointValuePair;"
                ]
            }
        },
        "89": {
            "0": {
                "method_ids": [
                    1,
                    0
                ],
                "method_signatures": [
                    "org.apache.commons.math.stat.Frequency:addValue(Ljava/lang/Object;)V",
                    "org.apache.commons.math.stat.Frequency:<init>()V"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.math.stat.Frequency:addValue(Ljava/lang/Object;)V"
                ]
            }
        },
        "45": {
            "0": {
                "method_ids": [
                    1,
                    0,
                    6,
                    5,
                    4,
                    2,
                    3
                ],
                "method_signatures": [
                    "org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V",
                    "org.apache.commons.math.linear.AbstractRealMatrix:<init>(II)V",
                    "org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(ID)V",
                    "org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I",
                    "org.apache.commons.math.util.FastMath:ceil(D)D",
                    "org.apache.commons.math.linear.OpenMapRealMatrix:<init>(II)V",
                    "org.apache.commons.math.util.FastMath:floor(D)D"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.math.linear.OpenMapRealMatrix:<init>(II)V"
                ]
            }
        },
        "73": {
            "0": {
                "method_ids": [
                    1,
                    3,
                    8,
                    4,
                    7,
                    0,
                    12,
                    2,
                    11,
                    10
                ],
                "method_signatures": [
                    "org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl:verifyInterval(DD)V",
                    "org.apache.commons.math.analysis.solvers.BrentSolver:solve(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D",
                    "org.apache.commons.math.MathRuntimeException:createIllegalArgumentException(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/IllegalArgumentException;",
                    "org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl:verifySequence(DDD)V",
                    "org.apache.commons.math.analysis.solvers.BrentSolver:<init>()V",
                    "org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl:clearResult()V",
                    "org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl:setResult(DI)V",
                    "org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl:isSequence(DDD)Z",
                    "org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl:<init>(ID)V",
                    "org.apache.commons.math.MathRuntimeException$4:<init>(Ljava/lang/String;[Ljava/lang/Object;)V"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.math.analysis.solvers.BrentSolver:solve(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDD)D"
                ]
            }
        },
        "87": {
            "0": {
                "method_ids": [
                    52,
                    53,
                    50,
                    51,
                    54,
                    0,
                    5,
                    56,
                    9
                ],
                "method_signatures": [
                    "org.apache.commons.math.optimization.linear.SimplexSolver:isOptimal(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)Z",
                    "org.apache.commons.math.optimization.linear.SimplexSolver:doIteration(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V",
                    "org.apache.commons.math.optimization.linear.SimplexTableau:getNumVariables()I",
                    "org.apache.commons.math.linear.RealVectorImpl:dotProduct([D)D",
                    "org.apache.commons.math.optimization.linear.SimplexSolver:<init>(D)V",
                    "org.apache.commons.math.optimization.linear.SimplexSolver:solvePhase1(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V",
                    "org.apache.commons.math.optimization.linear.SimplexTableau:getNumArtificialVariables()I",
                    "org.apache.commons.math.util.MathUtils:equals(DD)Z",
                    "org.apache.commons.math.linear.RealMatrixImpl:getEntry(II)D"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.math.optimization.linear.SimplexTableau:getBasicRow(I)Ljava/lang/Integer;"
                ]
            }
        },
        "80": {
            "0": {
                "method_ids": [
                    50,
                    52,
                    6,
                    36,
                    5,
                    22,
                    48,
                    30,
                    16,
                    53
                ],
                "method_signatures": [
                    "org.apache.commons.math.linear.EigenDecompositionImpl:ldlTDecomposition(DII)V",
                    "org.apache.commons.math.linear.EigenDecompositionImpl:computeSplits()Ljava/util/List;",
                    "org.apache.commons.math.linear.EigenDecompositionImpl:decompose()V",
                    "org.apache.commons.math.linear.EigenDecompositionImpl:getRealEigenvalues()[D",
                    "org.apache.commons.math.linear.Array2DRowRealMatrix:<init>([[D)V",
                    "org.apache.commons.math.linear.AbstractRealMatrix:walkInOptimizedOrder(Lorg/apache/commons/math/linear/RealMatrixPreservingVisitor;)D",
                    "org.apache.commons.math.linear.Array2DRowRealMatrix:walkInRowOrder(Lorg/apache/commons/math/linear/RealMatrixPreservingVisitor;)D",
                    "org.apache.commons.math.linear.Array2DRowRealMatrix:<init>(II)V",
                    "org.apache.commons.math.linear.AbstractRealMatrix:<init>()V",
                    "org.apache.commons.math.linear.ArrayRealVector:copy()Lorg/apache/commons/math/linear/RealVector;"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.math.linear.EigenDecompositionImpl:flipIfWarranted(II)Z"
                ]
            }
        },
        "74": {
            "0": {
                "method_ids": [
                    102,
                    115,
                    101,
                    105,
                    104,
                    112,
                    100,
                    111,
                    106,
                    107
                ],
                "method_signatures": [
                    "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegrator:<init>(IDDDD)V",
                    "org.apache.commons.math.ode.sampling.NordsieckStepInterpolator:reinitialize([DZ)V",
                    "org.apache.commons.math.ode.AbstractIntegrator:getCurrentSignedStepsize()D",
                    "org.apache.commons.math.ode.MultistepIntegrator$CountingDifferentialEquations:computeDerivatives(D[D[D)V",
                    "org.apache.commons.math.ode.AbstractIntegrator:addStepHandler(Lorg/apache/commons/math/ode/sampling/StepHandler;)V",
                    "org.apache.commons.math.ode.events.CombinedEventsManager:<init>()V",
                    "org.apache.commons.math.ode.events.EventState:stop()Z",
                    "org.apache.commons.math.ode.AbstractIntegrator:clearEventHandlers()V",
                    "org.apache.commons.math.ode.MultistepIntegrator:setSafety(D)V",
                    "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator:<init>(Ljava/lang/String;Z[D[[D[DLorg/apache/commons/math/ode/nonstiff/RungeKuttaStepInterpolator;DDDD)V"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator:integrate(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;D[DD[D)D"
                ]
            }
        },
        "6": {
            "21": {
                "method_ids": [
                    116,
                    1,
                    43,
                    54,
                    4,
                    109,
                    115,
                    102,
                    106,
                    124
                ],
                "method_signatures": [
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer:doOptimize()Lorg/apache/commons/math3/optim/PointValuePair;",
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer:checkParameters()V",
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer:parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V",
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer:optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointValuePair;",
                    "org.apache.commons.math3.optim.BaseOptimizer:optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Ljava/lang/Object;",
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$PopulationSize:getPopulationSize()I",
                    "org.apache.commons.math3.linear.AbstractRealMatrix$5:visit(IID)V",
                    "org.apache.commons.math3.util.FastMath:polySine(D)D",
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer:min([D)D",
                    "org.apache.commons.math3.optim.BaseMultivariateOptimizer:getStartPoint()[D"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer:doOptimize()Lorg/apache/commons/math3/optim/PointValuePair;",
                    "org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer:doOptimize()Lorg/apache/commons/math3/optim/PointValuePair;",
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer:doOptimize()Lorg/apache/commons/math3/optim/PointValuePair;",
                    "org.apache.commons.math3.optim.nonlinear.vector.jacobian.GaussNewtonOptimizer:doOptimize()Lorg/apache/commons/math3/optim/PointVectorValuePair;",
                    "org.apache.commons.math3.optim.BaseOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V",
                    "org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:doOptimize()Lorg/apache/commons/math3/optim/PointVectorValuePair;",
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer:doOptimize()Lorg/apache/commons/math3/optim/PointValuePair;"
                ]
            },
            "0": {
                "method_ids": [
                    80,
                    78,
                    33,
                    6,
                    7,
                    41,
                    52,
                    0,
                    5,
                    4
                ],
                "method_signatures": [
                    "org.apache.commons.math3.optim.BaseOptimizer:getIterations()I",
                    "org.apache.commons.math3.util.Incrementor:incrementCount()V",
                    "org.apache.commons.math3.util.Incrementor:resetCount()V",
                    "org.apache.commons.math3.linear.ArrayRealVector:checkVectorDimensions(I)V",
                    "org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:computeResiduals([D)[D",
                    "org.apache.commons.math3.optim.BaseOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V",
                    "org.apache.commons.math3.optim.nonlinear.vector.JacobianMultivariateVectorOptimizer:optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair;",
                    "org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointVectorValuePair;",
                    "org.apache.commons.math3.optim.BaseMultivariateOptimizer:optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Ljava/lang/Object;",
                    "org.apache.commons.math3.optim.nonlinear.vector.Target:<init>([D)V"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer:doOptimize()Lorg/apache/commons/math3/optim/PointValuePair;",
                    "org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer:doOptimize()Lorg/apache/commons/math3/optim/PointValuePair;",
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer:doOptimize()Lorg/apache/commons/math3/optim/PointValuePair;",
                    "org.apache.commons.math3.optim.nonlinear.vector.jacobian.GaussNewtonOptimizer:doOptimize()Lorg/apache/commons/math3/optim/PointVectorValuePair;",
                    "org.apache.commons.math3.optim.BaseOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V",
                    "org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:doOptimize()Lorg/apache/commons/math3/optim/PointVectorValuePair;",
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer:doOptimize()Lorg/apache/commons/math3/optim/PointValuePair;"
                ]
            },
            "17": {
                "method_ids": [
                    164,
                    171,
                    166,
                    159,
                    158,
                    150,
                    151,
                    155,
                    154,
                    153
                ],
                "method_signatures": [
                    "org.apache.commons.math3.optim.BaseMultivariateOptimizer:getUpperBound()[D",
                    "org.apache.commons.math3.optim.BaseOptimizer:parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V",
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$PopulationSize:<init>(I)V",
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer:min([D)D",
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer:log(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;",
                    "org.apache.commons.math3.optim.nonlinear.scalar.MultivariateOptimizer:parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V",
                    "org.apache.commons.math3.optim.InitialGuess:getInitialGuess()[D",
                    "org.apache.commons.math3.linear.MatrixUtils:checkMultiplicationCompatible(Lorg/apache/commons/math3/linear/AnyMatrix;Lorg/apache/commons/math3/linear/AnyMatrix;)V",
                    "org.apache.commons.math3.optim.BaseMultivariateOptimizer:getLowerBound()[D",
                    "org.apache.commons.math3.random.MersenneTwister:<init>()V"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer:doOptimize()Lorg/apache/commons/math3/optim/PointValuePair;",
                    "org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer:doOptimize()Lorg/apache/commons/math3/optim/PointValuePair;",
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer:doOptimize()Lorg/apache/commons/math3/optim/PointValuePair;",
                    "org.apache.commons.math3.optim.nonlinear.vector.jacobian.GaussNewtonOptimizer:doOptimize()Lorg/apache/commons/math3/optim/PointVectorValuePair;",
                    "org.apache.commons.math3.optim.BaseOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V",
                    "org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:doOptimize()Lorg/apache/commons/math3/optim/PointVectorValuePair;",
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer:doOptimize()Lorg/apache/commons/math3/optim/PointValuePair;"
                ]
            },
            "16": {
                "method_ids": [
                    50,
                    152,
                    150,
                    153,
                    157,
                    106,
                    14,
                    22,
                    1,
                    105
                ],
                "method_signatures": [
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer:doOptimize()Lorg/apache/commons/math3/optim/PointValuePair;",
                    "org.apache.commons.math3.linear.AbstractRealMatrix:add(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;",
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer:selectColumns(Lorg/apache/commons/math3/linear/RealMatrix;[I)Lorg/apache/commons/math3/linear/RealMatrix;",
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer:updateEvolutionPaths(Lorg/apache/commons/math3/linear/RealMatrix;Lorg/apache/commons/math3/linear/RealMatrix;)Z",
                    "org.apache.commons.math3.linear.AbstractRealMatrix$5:<init>(Lorg/apache/commons/math3/linear/AbstractRealMatrix;Lorg/apache/commons/math3/linear/RealMatrix;)V",
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer:randn1(II)Lorg/apache/commons/math3/linear/RealMatrix;",
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer:initializeCMA([D)V",
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$FitnessFunction:value([D)D",
                    "org.apache.commons.math3.optim.nonlinear.scalar.MultivariateOptimizer:computeObjectiveValue([D)D",
                    "org.apache.commons.math3.random.MersenneTwister:setSeed([I)V"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer:doOptimize()Lorg/apache/commons/math3/optim/PointValuePair;",
                    "org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer:doOptimize()Lorg/apache/commons/math3/optim/PointValuePair;",
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer:doOptimize()Lorg/apache/commons/math3/optim/PointValuePair;",
                    "org.apache.commons.math3.optim.nonlinear.vector.jacobian.GaussNewtonOptimizer:doOptimize()Lorg/apache/commons/math3/optim/PointVectorValuePair;",
                    "org.apache.commons.math3.optim.BaseOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V",
                    "org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:doOptimize()Lorg/apache/commons/math3/optim/PointVectorValuePair;",
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer:doOptimize()Lorg/apache/commons/math3/optim/PointValuePair;"
                ]
            },
            "1": {
                "method_ids": [
                    10,
                    93,
                    12,
                    101,
                    102,
                    4,
                    56,
                    3,
                    1,
                    14
                ],
                "method_signatures": [
                    "org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:doOptimize()Lorg/apache/commons/math3/optim/PointVectorValuePair;",
                    "org.apache.commons.math3.util.Incrementor:incrementCount()V",
                    "org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:setCost(D)V",
                    "org.apache.commons.math3.linear.DiagonalMatrix:multiply(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;",
                    "org.apache.commons.math3.util.FastMath:pow(DI)D",
                    "org.apache.commons.math3.optim.nonlinear.vector.MultivariateVectorOptimizer:parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V",
                    "org.apache.commons.math3.optim.nonlinear.vector.ModelFunction:<init>(Lorg/apache/commons/math3/analysis/MultivariateVectorFunction;)V",
                    "org.apache.commons.math3.optim.nonlinear.vector.Weight:<init>([D)V",
                    "org.apache.commons.math3.optim.BaseMultivariateOptimizer:getStartPoint()[D",
                    "org.apache.commons.math3.linear.DiagonalMatrix:operate([D)[D"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer:doOptimize()Lorg/apache/commons/math3/optim/PointValuePair;",
                    "org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer:doOptimize()Lorg/apache/commons/math3/optim/PointValuePair;",
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer:doOptimize()Lorg/apache/commons/math3/optim/PointValuePair;",
                    "org.apache.commons.math3.optim.nonlinear.vector.jacobian.GaussNewtonOptimizer:doOptimize()Lorg/apache/commons/math3/optim/PointVectorValuePair;",
                    "org.apache.commons.math3.optim.BaseOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V",
                    "org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:doOptimize()Lorg/apache/commons/math3/optim/PointVectorValuePair;",
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer:doOptimize()Lorg/apache/commons/math3/optim/PointValuePair;"
                ]
            },
            "20": {
                "method_ids": [
                    166,
                    168,
                    100,
                    124,
                    125,
                    123,
                    55,
                    54,
                    51,
                    140
                ],
                "method_signatures": [
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$FitnessFunction:value([D)D",
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer:initializeCMA([D)V",
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$FitnessFunction:penalty([D[D)D",
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer:times(Lorg/apache/commons/math3/linear/RealMatrix;Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;",
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer:updateEvolutionPaths(Lorg/apache/commons/math3/linear/RealMatrix;Lorg/apache/commons/math3/linear/RealMatrix;)Z",
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer:min([D)D",
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer:max(Lorg/apache/commons/math3/linear/RealMatrix;)D",
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer:sumRows(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;",
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer:selectColumns(Lorg/apache/commons/math3/linear/RealMatrix;[I)Lorg/apache/commons/math3/linear/RealMatrix;",
                    "org.apache.commons.math3.util.FastMath$CodyWaite:getK()I"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer:doOptimize()Lorg/apache/commons/math3/optim/PointValuePair;",
                    "org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer:doOptimize()Lorg/apache/commons/math3/optim/PointValuePair;",
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer:doOptimize()Lorg/apache/commons/math3/optim/PointValuePair;",
                    "org.apache.commons.math3.optim.nonlinear.vector.jacobian.GaussNewtonOptimizer:doOptimize()Lorg/apache/commons/math3/optim/PointVectorValuePair;",
                    "org.apache.commons.math3.optim.BaseOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V",
                    "org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:doOptimize()Lorg/apache/commons/math3/optim/PointVectorValuePair;",
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer:doOptimize()Lorg/apache/commons/math3/optim/PointValuePair;"
                ]
            },
            "11": {
                "method_ids": [
                    53,
                    4,
                    166,
                    153,
                    172,
                    101,
                    5,
                    36,
                    64,
                    150
                ],
                "method_signatures": [
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer:doOptimize()Lorg/apache/commons/math3/optim/PointValuePair;",
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$FitnessFunction:value([D)D",
                    "org.apache.commons.math3.optim.BaseMultivariateOptimizer:getUpperBound()[D",
                    "org.apache.commons.math3.optim.nonlinear.scalar.ObjectiveFunction:<init>(Lorg/apache/commons/math3/analysis/MultivariateFunction;)V",
                    "org.apache.commons.math3.optim.BaseMultivariateOptimizer:getLowerBound()[D",
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer:push([DD)V",
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer:updateEvolutionPaths(Lorg/apache/commons/math3/linear/RealMatrix;Lorg/apache/commons/math3/linear/RealMatrix;)Z",
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer:updateBD(D)V",
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$FitnessFunction:<init>(Lorg/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer;)V",
                    "org.apache.commons.math3.linear.Array2DRowRealMatrix:createMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix;"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer:doOptimize()Lorg/apache/commons/math3/optim/PointValuePair;",
                    "org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer:doOptimize()Lorg/apache/commons/math3/optim/PointValuePair;",
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer:doOptimize()Lorg/apache/commons/math3/optim/PointValuePair;",
                    "org.apache.commons.math3.optim.nonlinear.vector.jacobian.GaussNewtonOptimizer:doOptimize()Lorg/apache/commons/math3/optim/PointVectorValuePair;",
                    "org.apache.commons.math3.optim.BaseOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V",
                    "org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:doOptimize()Lorg/apache/commons/math3/optim/PointVectorValuePair;",
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer:doOptimize()Lorg/apache/commons/math3/optim/PointValuePair;"
                ]
            },
            "27": {
                "method_ids": [
                    66,
                    53,
                    54,
                    40,
                    3,
                    32,
                    44,
                    2,
                    1,
                    19
                ],
                "method_signatures": [
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer:doOptimize()Lorg/apache/commons/math3/optim/PointValuePair;",
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer:checkParameters()V",
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer$LineSearch$1:<init>(Lorg/apache/commons/math3/optim/nonlinear/scalar/noderiv/PowellOptimizer$LineSearch;I[D[D)V",
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer$LineSearch$1:value(D)D",
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer:newPointAndDirection([D[DD)[[D",
                    "org.apache.commons.math3.util.Precision:equals(DDI)Z",
                    "org.apache.commons.math3.optim.BaseOptimizer:getConvergenceChecker()Lorg/apache/commons/math3/optim/ConvergenceChecker;",
                    "org.apache.commons.math3.optim.AbstractConvergenceChecker:<init>(DD)V",
                    "org.apache.commons.math3.optim.univariate.BracketFinder:eval(Lorg/apache/commons/math3/analysis/UnivariateFunction;D)D",
                    "org.apache.commons.math3.optim.BaseOptimizer:incrementEvaluationCount()V"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer:doOptimize()Lorg/apache/commons/math3/optim/PointValuePair;",
                    "org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer:doOptimize()Lorg/apache/commons/math3/optim/PointValuePair;",
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer:doOptimize()Lorg/apache/commons/math3/optim/PointValuePair;",
                    "org.apache.commons.math3.optim.nonlinear.vector.jacobian.GaussNewtonOptimizer:doOptimize()Lorg/apache/commons/math3/optim/PointVectorValuePair;",
                    "org.apache.commons.math3.optim.BaseOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V",
                    "org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:doOptimize()Lorg/apache/commons/math3/optim/PointVectorValuePair;",
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer:doOptimize()Lorg/apache/commons/math3/optim/PointValuePair;"
                ]
            },
            "6": {
                "method_ids": [
                    99,
                    106,
                    171,
                    154,
                    156,
                    142,
                    54,
                    51,
                    86,
                    2
                ],
                "method_signatures": [
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer:doOptimize()Lorg/apache/commons/math3/optim/PointValuePair;",
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$FitnessFunction:value([D)D",
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer:initializeCMA([D)V",
                    "org.apache.commons.math3.optim.MaxEval:<init>(I)V",
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer:times(Lorg/apache/commons/math3/linear/RealMatrix;Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;",
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer:optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointValuePair;",
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer:checkParameters()V",
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$Sigma:getSigma()[D",
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer:updateEvolutionPaths(Lorg/apache/commons/math3/linear/RealMatrix;Lorg/apache/commons/math3/linear/RealMatrix;)Z",
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$FitnessFunction:penalty([D[D)D"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer:doOptimize()Lorg/apache/commons/math3/optim/PointValuePair;",
                    "org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer:doOptimize()Lorg/apache/commons/math3/optim/PointValuePair;",
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer:doOptimize()Lorg/apache/commons/math3/optim/PointValuePair;",
                    "org.apache.commons.math3.optim.nonlinear.vector.jacobian.GaussNewtonOptimizer:doOptimize()Lorg/apache/commons/math3/optim/PointVectorValuePair;",
                    "org.apache.commons.math3.optim.BaseOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V",
                    "org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:doOptimize()Lorg/apache/commons/math3/optim/PointVectorValuePair;",
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer:doOptimize()Lorg/apache/commons/math3/optim/PointValuePair;"
                ]
            },
            "7": {
                "method_ids": [
                    130,
                    154,
                    169,
                    101,
                    152,
                    107,
                    59,
                    127,
                    166,
                    151
                ],
                "method_signatures": [
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer:doOptimize()Lorg/apache/commons/math3/optim/PointValuePair;",
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer:diag(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;",
                    "org.apache.commons.math3.util.Incrementor:incrementCount()V",
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$FitnessFunction:penalty([D[D)D",
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer:selectColumns(Lorg/apache/commons/math3/linear/RealMatrix;[I)Lorg/apache/commons/math3/linear/RealMatrix;",
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer:sortedIndices([D)[I",
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer:randn1(II)Lorg/apache/commons/math3/linear/RealMatrix;",
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer:push([DD)V",
                    "org.apache.commons.math3.linear.MatrixUtils:checkColumnIndex(Lorg/apache/commons/math3/linear/AnyMatrix;I)V",
                    "org.apache.commons.math3.optim.BaseOptimizer:parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer:doOptimize()Lorg/apache/commons/math3/optim/PointValuePair;",
                    "org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer:doOptimize()Lorg/apache/commons/math3/optim/PointValuePair;",
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer:doOptimize()Lorg/apache/commons/math3/optim/PointValuePair;",
                    "org.apache.commons.math3.optim.nonlinear.vector.jacobian.GaussNewtonOptimizer:doOptimize()Lorg/apache/commons/math3/optim/PointVectorValuePair;",
                    "org.apache.commons.math3.optim.BaseOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V",
                    "org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:doOptimize()Lorg/apache/commons/math3/optim/PointVectorValuePair;",
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer:doOptimize()Lorg/apache/commons/math3/optim/PointValuePair;"
                ]
            },
            "26": {
                "method_ids": [
                    100,
                    60,
                    108,
                    173,
                    52,
                    119,
                    117,
                    171,
                    160,
                    155
                ],
                "method_signatures": [
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer:updateBD(D)V",
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer:doOptimize()Lorg/apache/commons/math3/optim/PointValuePair;",
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer:updateEvolutionPaths(Lorg/apache/commons/math3/linear/RealMatrix;Lorg/apache/commons/math3/linear/RealMatrix;)Z",
                    "org.apache.commons.math3.linear.AbstractRealMatrix:multiply(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;",
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$FitnessFunction:penalty([D[D)D",
                    "org.apache.commons.math3.optim.BaseMultivariateOptimizer:optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Ljava/lang/Object;",
                    "org.apache.commons.math3.optim.BaseMultivariateOptimizer:getLowerBound()[D",
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$FitnessFunction:<init>(Lorg/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer;)V",
                    "org.apache.commons.math3.linear.MatrixUtils:createRealDiagonalMatrix([D)Lorg/apache/commons/math3/linear/RealMatrix;",
                    "org.apache.commons.math3.linear.AbstractRealMatrix:getRow(I)[D"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer:doOptimize()Lorg/apache/commons/math3/optim/PointValuePair;",
                    "org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer:doOptimize()Lorg/apache/commons/math3/optim/PointValuePair;",
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer:doOptimize()Lorg/apache/commons/math3/optim/PointValuePair;",
                    "org.apache.commons.math3.optim.nonlinear.vector.jacobian.GaussNewtonOptimizer:doOptimize()Lorg/apache/commons/math3/optim/PointVectorValuePair;",
                    "org.apache.commons.math3.optim.BaseOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V",
                    "org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:doOptimize()Lorg/apache/commons/math3/optim/PointVectorValuePair;",
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer:doOptimize()Lorg/apache/commons/math3/optim/PointValuePair;"
                ]
            },
            "10": {
                "method_ids": [
                    56,
                    62,
                    53,
                    51,
                    52,
                    40,
                    0,
                    10,
                    22,
                    54
                ],
                "method_signatures": [
                    "org.apache.commons.math3.optim.BaseMultivariateOptimizer:getUpperBound()[D",
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex:<init>([D)V",
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.NelderMeadSimplex:iterate(Lorg/apache/commons/math3/analysis/MultivariateFunction;Ljava/util/Comparator;)V",
                    "org.apache.commons.math3.optim.BaseOptimizer:optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Ljava/lang/Object;",
                    "org.apache.commons.math3.optim.MaxEval:getMaxEval()I",
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex:evaluate(Lorg/apache/commons/math3/analysis/MultivariateFunction;Ljava/util/Comparator;)V",
                    "org.apache.commons.math3.optim.BaseMultivariateOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V",
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer$1:value([D)D",
                    "org.apache.commons.math3.util.FastMath:max(DD)D",
                    "org.apache.commons.math3.util.Incrementor:incrementCount()V"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer:doOptimize()Lorg/apache/commons/math3/optim/PointValuePair;",
                    "org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer:doOptimize()Lorg/apache/commons/math3/optim/PointValuePair;",
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer:doOptimize()Lorg/apache/commons/math3/optim/PointValuePair;",
                    "org.apache.commons.math3.optim.nonlinear.vector.jacobian.GaussNewtonOptimizer:doOptimize()Lorg/apache/commons/math3/optim/PointVectorValuePair;",
                    "org.apache.commons.math3.optim.BaseOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V",
                    "org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:doOptimize()Lorg/apache/commons/math3/optim/PointVectorValuePair;",
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer:doOptimize()Lorg/apache/commons/math3/optim/PointValuePair;"
                ]
            },
            "13": {
                "method_ids": [
                    171,
                    161,
                    152,
                    151,
                    172,
                    10,
                    11,
                    148,
                    4,
                    9
                ],
                "method_signatures": [
                    "org.apache.commons.math3.util.Precision:equals(DDI)Z",
                    "org.apache.commons.math3.linear.Array2DRowRealMatrix:<init>([[D)V",
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer:inverse([I)[I",
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer:max(Lorg/apache/commons/math3/linear/RealMatrix;)D",
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer:initializeCMA([D)V",
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$FitnessFunction:repair([D)[D",
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer:updateEvolutionPaths(Lorg/apache/commons/math3/linear/RealMatrix;Lorg/apache/commons/math3/linear/RealMatrix;)Z",
                    "org.apache.commons.math3.optim.BaseOptimizer:getIterations()I",
                    "org.apache.commons.math3.linear.MatrixUtils:createColumnRealMatrix([D)Lorg/apache/commons/math3/linear/RealMatrix;",
                    "org.apache.commons.math3.util.Incrementor:incrementCount()V"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer:doOptimize()Lorg/apache/commons/math3/optim/PointValuePair;",
                    "org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer:doOptimize()Lorg/apache/commons/math3/optim/PointValuePair;",
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer:doOptimize()Lorg/apache/commons/math3/optim/PointValuePair;",
                    "org.apache.commons.math3.optim.nonlinear.vector.jacobian.GaussNewtonOptimizer:doOptimize()Lorg/apache/commons/math3/optim/PointVectorValuePair;",
                    "org.apache.commons.math3.optim.BaseOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V",
                    "org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:doOptimize()Lorg/apache/commons/math3/optim/PointVectorValuePair;",
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer:doOptimize()Lorg/apache/commons/math3/optim/PointValuePair;"
                ]
            },
            "8": {
                "method_ids": [
                    150,
                    156,
                    154,
                    143,
                    111,
                    120,
                    128,
                    127,
                    101,
                    126
                ],
                "method_signatures": [
                    "org.apache.commons.math3.optim.BaseMultivariateOptimizer:checkParameters()V",
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer:checkParameters()V",
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer:selectColumns(Lorg/apache/commons/math3/linear/RealMatrix;[I)Lorg/apache/commons/math3/linear/RealMatrix;",
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer:sqrt(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;",
                    "org.apache.commons.math3.linear.AbstractRealMatrix:scalarAdd(D)Lorg/apache/commons/math3/linear/RealMatrix;",
                    "org.apache.commons.math3.linear.AbstractRealMatrix:add(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;",
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer:push([DD)V",
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer:zeros(II)Lorg/apache/commons/math3/linear/RealMatrix;",
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer:ones(II)Lorg/apache/commons/math3/linear/RealMatrix;",
                    "org.apache.commons.math3.linear.AbstractRealMatrix$2:end()D"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer:doOptimize()Lorg/apache/commons/math3/optim/PointValuePair;",
                    "org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer:doOptimize()Lorg/apache/commons/math3/optim/PointValuePair;",
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer:doOptimize()Lorg/apache/commons/math3/optim/PointValuePair;",
                    "org.apache.commons.math3.optim.nonlinear.vector.jacobian.GaussNewtonOptimizer:doOptimize()Lorg/apache/commons/math3/optim/PointVectorValuePair;",
                    "org.apache.commons.math3.optim.BaseOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V",
                    "org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:doOptimize()Lorg/apache/commons/math3/optim/PointVectorValuePair;",
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer:doOptimize()Lorg/apache/commons/math3/optim/PointValuePair;"
                ]
            },
            "4": {
                "method_ids": [
                    61,
                    60,
                    54,
                    62,
                    55,
                    52,
                    53,
                    50,
                    4,
                    19
                ],
                "method_signatures": [
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.MultiDirectionalSimplex:evaluateNewSimplex(Lorg/apache/commons/math3/analysis/MultivariateFunction;[Lorg/apache/commons/math3/optim/PointValuePair;DLjava/util/Comparator;)Lorg/apache/commons/math3/optim/PointValuePair;",
                    "org.apache.commons.math3.optim.BaseOptimizer:getEvaluations()I",
                    "org.apache.commons.math3.util.Incrementor:setMaximalCount(I)V",
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer:checkParameters()V",
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer:parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V",
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex:getPoint(I)Lorg/apache/commons/math3/optim/PointValuePair;",
                    "org.apache.commons.math3.optim.PointValuePair:getPoint()[D",
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex:setPoints([Lorg/apache/commons/math3/optim/PointValuePair;)V",
                    "org.apache.commons.math3.util.Incrementor:getCount()I",
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer:doOptimize()Lorg/apache/commons/math3/optim/PointValuePair;",
                    "org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer:doOptimize()Lorg/apache/commons/math3/optim/PointValuePair;",
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer:doOptimize()Lorg/apache/commons/math3/optim/PointValuePair;",
                    "org.apache.commons.math3.optim.nonlinear.vector.jacobian.GaussNewtonOptimizer:doOptimize()Lorg/apache/commons/math3/optim/PointVectorValuePair;",
                    "org.apache.commons.math3.optim.BaseOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V",
                    "org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:doOptimize()Lorg/apache/commons/math3/optim/PointVectorValuePair;",
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer:doOptimize()Lorg/apache/commons/math3/optim/PointValuePair;"
                ]
            },
            "25": {
                "method_ids": [
                    173,
                    152,
                    100,
                    151,
                    150,
                    68,
                    154,
                    159,
                    156,
                    165
                ],
                "method_signatures": [
                    "org.apache.commons.math3.random.MersenneTwister:<init>()V",
                    "org.apache.commons.math3.util.FastMath$CodyWaite:<init>(D)V",
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer:sortedIndices([D)[I",
                    "org.apache.commons.math3.util.FastMath:log(D[D)D",
                    "org.apache.commons.math3.linear.MatrixUtils:createRealMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix;",
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer:doOptimize()Lorg/apache/commons/math3/optim/PointValuePair;",
                    "org.apache.commons.math3.util.FastMath:polySine(D)D",
                    "org.apache.commons.math3.util.FastMath:sin(D)D",
                    "org.apache.commons.math3.random.MersenneTwister:setSeed(J)V",
                    "org.apache.commons.math3.linear.TriDiagonalTransformer:getMainDiagonalRef()[D"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer:doOptimize()Lorg/apache/commons/math3/optim/PointValuePair;",
                    "org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer:doOptimize()Lorg/apache/commons/math3/optim/PointValuePair;",
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer:doOptimize()Lorg/apache/commons/math3/optim/PointValuePair;",
                    "org.apache.commons.math3.optim.nonlinear.vector.jacobian.GaussNewtonOptimizer:doOptimize()Lorg/apache/commons/math3/optim/PointVectorValuePair;",
                    "org.apache.commons.math3.optim.BaseOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V",
                    "org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:doOptimize()Lorg/apache/commons/math3/optim/PointVectorValuePair;",
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer:doOptimize()Lorg/apache/commons/math3/optim/PointValuePair;"
                ]
            },
            "24": {
                "method_ids": [
                    10,
                    65,
                    72,
                    134,
                    138,
                    156,
                    164,
                    166,
                    159,
                    140
                ],
                "method_signatures": [
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer:initializeCMA([D)V",
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer:doOptimize()Lorg/apache/commons/math3/optim/PointValuePair;",
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$FitnessFunction:value([D)D",
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$FitnessFunction:penalty([D[D)D",
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$FitnessFunction:repair([D)[D",
                    "org.apache.commons.math3.util.FastMath:sinQ(DD)D",
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer:reverse([I)[I",
                    "org.apache.commons.math3.linear.MatrixUtils:checkAdditionCompatible(Lorg/apache/commons/math3/linear/AnyMatrix;Lorg/apache/commons/math3/linear/AnyMatrix;)V",
                    "org.apache.commons.math3.random.MersenneTwister:next(I)I",
                    "org.apache.commons.math3.optim.BaseOptimizer:incrementEvaluationCount()V"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer:doOptimize()Lorg/apache/commons/math3/optim/PointValuePair;",
                    "org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer:doOptimize()Lorg/apache/commons/math3/optim/PointValuePair;",
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer:doOptimize()Lorg/apache/commons/math3/optim/PointValuePair;",
                    "org.apache.commons.math3.optim.nonlinear.vector.jacobian.GaussNewtonOptimizer:doOptimize()Lorg/apache/commons/math3/optim/PointVectorValuePair;",
                    "org.apache.commons.math3.optim.BaseOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V",
                    "org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:doOptimize()Lorg/apache/commons/math3/optim/PointVectorValuePair;",
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer:doOptimize()Lorg/apache/commons/math3/optim/PointValuePair;"
                ]
            },
            "5": {
                "method_ids": [
                    61,
                    59,
                    57,
                    54,
                    2,
                    45,
                    52,
                    38,
                    11,
                    56
                ],
                "method_signatures": [
                    "org.apache.commons.math3.util.Incrementor:resetCount()V",
                    "org.apache.commons.math3.optim.BaseMultivariateOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V",
                    "org.apache.commons.math3.util.FastMath:atan(D)D",
                    "org.apache.commons.math3.optim.nonlinear.scalar.MultivariateOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V",
                    "org.apache.commons.math3.optim.BaseMultivariateOptimizer:getLowerBound()[D",
                    "org.apache.commons.math3.optim.BaseOptimizer:incrementEvaluationCount()V",
                    "org.apache.commons.math3.optim.InitialGuess:getInitialGuess()[D",
                    "org.apache.commons.math3.optim.PointValuePair:getPoint()[D",
                    "org.apache.commons.math3.optim.SimpleValueChecker:<init>(DD)V",
                    "org.apache.commons.math3.util.Incrementor:setMaximalCount(I)V"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer:doOptimize()Lorg/apache/commons/math3/optim/PointValuePair;",
                    "org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer:doOptimize()Lorg/apache/commons/math3/optim/PointValuePair;",
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer:doOptimize()Lorg/apache/commons/math3/optim/PointValuePair;",
                    "org.apache.commons.math3.optim.nonlinear.vector.jacobian.GaussNewtonOptimizer:doOptimize()Lorg/apache/commons/math3/optim/PointVectorValuePair;",
                    "org.apache.commons.math3.optim.BaseOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V",
                    "org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:doOptimize()Lorg/apache/commons/math3/optim/PointVectorValuePair;",
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer:doOptimize()Lorg/apache/commons/math3/optim/PointValuePair;"
                ]
            },
            "12": {
                "method_ids": [
                    80,
                    120,
                    156,
                    155,
                    152,
                    151,
                    153,
                    40,
                    51,
                    109
                ],
                "method_signatures": [
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer:updateEvolutionPaths(Lorg/apache/commons/math3/linear/RealMatrix;Lorg/apache/commons/math3/linear/RealMatrix;)Z",
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer:doOptimize()Lorg/apache/commons/math3/optim/PointValuePair;",
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer:optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointValuePair;",
                    "org.apache.commons.math3.linear.Array2DRowRealMatrix:setSubMatrix([[DII)V",
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer:sqrt(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;",
                    "org.apache.commons.math3.util.FastMath:cos(D)D",
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer:times(Lorg/apache/commons/math3/linear/RealMatrix;Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;",
                    "org.apache.commons.math3.linear.AbstractRealMatrix:add(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;",
                    "org.apache.commons.math3.linear.AbstractRealMatrix:scalarMultiply(D)Lorg/apache/commons/math3/linear/RealMatrix;",
                    "org.apache.commons.math3.linear.AbstractRealMatrix:scalarAdd(D)Lorg/apache/commons/math3/linear/RealMatrix;"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer:doOptimize()Lorg/apache/commons/math3/optim/PointValuePair;",
                    "org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer:doOptimize()Lorg/apache/commons/math3/optim/PointValuePair;",
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer:doOptimize()Lorg/apache/commons/math3/optim/PointValuePair;",
                    "org.apache.commons.math3.optim.nonlinear.vector.jacobian.GaussNewtonOptimizer:doOptimize()Lorg/apache/commons/math3/optim/PointVectorValuePair;",
                    "org.apache.commons.math3.optim.BaseOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V",
                    "org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:doOptimize()Lorg/apache/commons/math3/optim/PointVectorValuePair;",
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer:doOptimize()Lorg/apache/commons/math3/optim/PointValuePair;"
                ]
            },
            "9": {
                "method_ids": [
                    47,
                    35,
                    7,
                    8,
                    60,
                    9,
                    6,
                    1,
                    30,
                    34
                ],
                "method_signatures": [
                    "org.apache.commons.math3.optim.BaseOptimizer:incrementEvaluationCount()V",
                    "org.apache.commons.math3.optim.SimpleValueChecker:converged(ILorg/apache/commons/math3/optim/PointValuePair;Lorg/apache/commons/math3/optim/PointValuePair;)Z",
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex:evaluate(Lorg/apache/commons/math3/analysis/MultivariateFunction;Ljava/util/Comparator;)V",
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.MultiDirectionalSimplex:iterate(Lorg/apache/commons/math3/analysis/MultivariateFunction;Ljava/util/Comparator;)V",
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer:optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointValuePair;",
                    "org.apache.commons.math3.optim.BaseOptimizer:getIterations()I",
                    "org.apache.commons.math3.optim.nonlinear.scalar.ObjectiveFunction:getObjectiveFunction()Lorg/apache/commons/math3/analysis/MultivariateFunction;",
                    "org.apache.commons.math3.util.Incrementor:incrementCount()V",
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex:setPoint(ILorg/apache/commons/math3/optim/PointValuePair;)V",
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.MultiDirectionalSimplex:<init>([D)V"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer:doOptimize()Lorg/apache/commons/math3/optim/PointValuePair;",
                    "org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer:doOptimize()Lorg/apache/commons/math3/optim/PointValuePair;",
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer:doOptimize()Lorg/apache/commons/math3/optim/PointValuePair;",
                    "org.apache.commons.math3.optim.nonlinear.vector.jacobian.GaussNewtonOptimizer:doOptimize()Lorg/apache/commons/math3/optim/PointVectorValuePair;",
                    "org.apache.commons.math3.optim.BaseOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V",
                    "org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:doOptimize()Lorg/apache/commons/math3/optim/PointVectorValuePair;",
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer:doOptimize()Lorg/apache/commons/math3/optim/PointValuePair;"
                ]
            },
            "19": {
                "method_ids": [
                    88,
                    51,
                    40,
                    14,
                    73,
                    90,
                    77,
                    55,
                    68,
                    94
                ],
                "method_signatures": [
                    "org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver:<init>(DDD)V",
                    "org.apache.commons.math3.linear.BlockRealMatrix:<init>(II)V",
                    "org.apache.commons.math3.optim.BaseMultivariateOptimizer:getStartPoint()[D",
                    "org.apache.commons.math3.optim.BaseMultivariateOptimizer:getUpperBound()[D",
                    "org.apache.commons.math3.optim.SimpleValueChecker:<init>(DD)V",
                    "org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer:<init>(Lorg/apache/commons/math3/optim/nonlinear/scalar/gradient/NonLinearConjugateGradientOptimizer$Formula;Lorg/apache/commons/math3/optim/ConvergenceChecker;Lorg/apache/commons/math3/analysis/solvers/UnivariateSolver;Lorg/apache/commons/math3/optim/nonlinear/scalar/gradient/Preconditioner;)V",
                    "org.apache.commons.math3.util.FastMath:abs(J)J",
                    "org.apache.commons.math3.optim.nonlinear.scalar.GradientMultivariateOptimizer:parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V",
                    "org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver:getMin()D",
                    "org.apache.commons.math3.optim.BaseOptimizer:optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Ljava/lang/Object;"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer:doOptimize()Lorg/apache/commons/math3/optim/PointValuePair;",
                    "org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer:doOptimize()Lorg/apache/commons/math3/optim/PointValuePair;",
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer:doOptimize()Lorg/apache/commons/math3/optim/PointValuePair;",
                    "org.apache.commons.math3.optim.nonlinear.vector.jacobian.GaussNewtonOptimizer:doOptimize()Lorg/apache/commons/math3/optim/PointVectorValuePair;",
                    "org.apache.commons.math3.optim.BaseOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V",
                    "org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:doOptimize()Lorg/apache/commons/math3/optim/PointVectorValuePair;",
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer:doOptimize()Lorg/apache/commons/math3/optim/PointValuePair;"
                ]
            },
            "2": {
                "method_ids": [
                    51,
                    156,
                    169,
                    151,
                    150,
                    158,
                    109,
                    123,
                    100,
                    111
                ],
                "method_signatures": [
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer:checkParameters()V",
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer:initializeCMA([D)V",
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$PopulationSize:getPopulationSize()I",
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$FitnessFunction:repair([D)[D",
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$DoubleIndex:compareTo(Lorg/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer$DoubleIndex;)I",
                    "org.apache.commons.math3.linear.AbstractRealMatrix:getColumnMatrix(I)Lorg/apache/commons/math3/linear/RealMatrix;",
                    "org.apache.commons.math3.linear.MatrixUtils:createRealDiagonalMatrix([D)Lorg/apache/commons/math3/linear/RealMatrix;",
                    "org.apache.commons.math3.linear.MatrixUtils:createRealMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix;",
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer:min([D)D",
                    "org.apache.commons.math3.linear.Array2DRowRealMatrix:getEntry(II)D"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer:doOptimize()Lorg/apache/commons/math3/optim/PointValuePair;",
                    "org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer:doOptimize()Lorg/apache/commons/math3/optim/PointValuePair;",
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer:doOptimize()Lorg/apache/commons/math3/optim/PointValuePair;",
                    "org.apache.commons.math3.optim.nonlinear.vector.jacobian.GaussNewtonOptimizer:doOptimize()Lorg/apache/commons/math3/optim/PointVectorValuePair;",
                    "org.apache.commons.math3.optim.BaseOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V",
                    "org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:doOptimize()Lorg/apache/commons/math3/optim/PointVectorValuePair;",
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer:doOptimize()Lorg/apache/commons/math3/optim/PointValuePair;"
                ]
            },
            "23": {
                "method_ids": [
                    19,
                    20,
                    10,
                    12,
                    1,
                    0,
                    3,
                    6,
                    8,
                    17
                ],
                "method_signatures": [
                    "org.apache.commons.math3.optim.BaseOptimizer:incrementEvaluationCount()V",
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.NelderMeadSimplex:iterate(Lorg/apache/commons/math3/analysis/MultivariateFunction;Ljava/util/Comparator;)V",
                    "org.apache.commons.math3.optim.nonlinear.scalar.MultivariateOptimizer:parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V",
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer:checkParameters()V",
                    "org.apache.commons.math3.optim.BaseOptimizer:parseOptimizationData([Lorg/apache/commons/math3/optim/OptimizationData;)V",
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex:replaceWorstPoint(Lorg/apache/commons/math3/optim/PointValuePair;Ljava/util/Comparator;)V",
                    "org.apache.commons.math3.optim.BaseOptimizer:getConvergenceChecker()Lorg/apache/commons/math3/optim/ConvergenceChecker;",
                    "org.apache.commons.math3.optim.BaseOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V",
                    "org.apache.commons.math3.optim.PointValuePair:<init>([DD)V",
                    "org.apache.commons.math3.optim.BaseMultivariateOptimizer:checkParameters()V"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer:doOptimize()Lorg/apache/commons/math3/optim/PointValuePair;",
                    "org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer:doOptimize()Lorg/apache/commons/math3/optim/PointValuePair;",
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer:doOptimize()Lorg/apache/commons/math3/optim/PointValuePair;",
                    "org.apache.commons.math3.optim.nonlinear.vector.jacobian.GaussNewtonOptimizer:doOptimize()Lorg/apache/commons/math3/optim/PointVectorValuePair;",
                    "org.apache.commons.math3.optim.BaseOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V",
                    "org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:doOptimize()Lorg/apache/commons/math3/optim/PointVectorValuePair;",
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer:doOptimize()Lorg/apache/commons/math3/optim/PointValuePair;"
                ]
            },
            "15": {
                "method_ids": [
                    51,
                    55,
                    61,
                    52,
                    58,
                    38,
                    6,
                    44,
                    24
                ],
                "method_signatures": [
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer:doOptimize()Lorg/apache/commons/math3/optim/PointValuePair;",
                    "org.apache.commons.math3.optim.BaseMultivariateOptimizer:getStartPoint()[D",
                    "org.apache.commons.math3.util.Incrementor:<init>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V",
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex:getPoint(I)Lorg/apache/commons/math3/optim/PointValuePair;",
                    "org.apache.commons.math3.optim.SimpleValueChecker:converged(ILorg/apache/commons/math3/optim/PointValuePair;Lorg/apache/commons/math3/optim/PointValuePair;)Z",
                    "org.apache.commons.math3.optim.BaseOptimizer:optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Ljava/lang/Object;",
                    "org.apache.commons.math3.optim.BaseOptimizer:incrementEvaluationCount()V",
                    "org.apache.commons.math3.optim.BaseMultivariateOptimizer:optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Ljava/lang/Object;",
                    "org.apache.commons.math3.util.FastMath:atan(DDZ)D"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer:doOptimize()Lorg/apache/commons/math3/optim/PointValuePair;",
                    "org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer:doOptimize()Lorg/apache/commons/math3/optim/PointValuePair;",
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer:doOptimize()Lorg/apache/commons/math3/optim/PointValuePair;",
                    "org.apache.commons.math3.optim.nonlinear.vector.jacobian.GaussNewtonOptimizer:doOptimize()Lorg/apache/commons/math3/optim/PointVectorValuePair;",
                    "org.apache.commons.math3.optim.BaseOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V",
                    "org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:doOptimize()Lorg/apache/commons/math3/optim/PointVectorValuePair;",
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer:doOptimize()Lorg/apache/commons/math3/optim/PointValuePair;"
                ]
            },
            "14": {
                "method_ids": [
                    121,
                    152,
                    53,
                    51,
                    170,
                    56,
                    172,
                    126,
                    52,
                    70
                ],
                "method_signatures": [
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer:checkParameters()V",
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer:optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointValuePair;",
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer:updateBD(D)V",
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer$FitnessFunction:repair([D)[D",
                    "org.apache.commons.math3.util.Pair:getKey()Ljava/lang/Object;",
                    "org.apache.commons.math3.optim.BaseMultivariateOptimizer:getUpperBound()[D",
                    "org.apache.commons.math3.util.FastMath$CodyWaite:getRemA()D",
                    "org.apache.commons.math3.linear.AbstractRealMatrix:getColumnMatrix(I)Lorg/apache/commons/math3/linear/RealMatrix;",
                    "org.apache.commons.math3.optim.nonlinear.scalar.MultivariateOptimizer:computeObjectiveValue([D)D",
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer:min([D)D"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer:doOptimize()Lorg/apache/commons/math3/optim/PointValuePair;",
                    "org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer:doOptimize()Lorg/apache/commons/math3/optim/PointValuePair;",
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer:doOptimize()Lorg/apache/commons/math3/optim/PointValuePair;",
                    "org.apache.commons.math3.optim.nonlinear.vector.jacobian.GaussNewtonOptimizer:doOptimize()Lorg/apache/commons/math3/optim/PointVectorValuePair;",
                    "org.apache.commons.math3.optim.BaseOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V",
                    "org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:doOptimize()Lorg/apache/commons/math3/optim/PointVectorValuePair;",
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer:doOptimize()Lorg/apache/commons/math3/optim/PointValuePair;"
                ]
            },
            "22": {
                "method_ids": [
                    7,
                    32,
                    53,
                    8,
                    12,
                    54,
                    1,
                    65,
                    62,
                    2
                ],
                "method_signatures": [
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer:doOptimize()Lorg/apache/commons/math3/optim/PointValuePair;",
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.MultiDirectionalSimplex:iterate(Lorg/apache/commons/math3/analysis/MultivariateFunction;Ljava/util/Comparator;)V",
                    "org.apache.commons.math3.optim.BaseMultivariateOptimizer:checkParameters()V",
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex:evaluate(Lorg/apache/commons/math3/analysis/MultivariateFunction;Ljava/util/Comparator;)V",
                    "org.apache.commons.math3.optim.MaxEval:<init>(I)V",
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex:getSize()I",
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex:getPoints()[Lorg/apache/commons/math3/optim/PointValuePair;",
                    "org.apache.commons.math3.optim.BaseOptimizer:incrementEvaluationCount()V",
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer:optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Lorg/apache/commons/math3/optim/PointValuePair;",
                    "org.apache.commons.math3.optim.PointValuePair:getPoint()[D"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer:doOptimize()Lorg/apache/commons/math3/optim/PointValuePair;",
                    "org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer:doOptimize()Lorg/apache/commons/math3/optim/PointValuePair;",
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer:doOptimize()Lorg/apache/commons/math3/optim/PointValuePair;",
                    "org.apache.commons.math3.optim.nonlinear.vector.jacobian.GaussNewtonOptimizer:doOptimize()Lorg/apache/commons/math3/optim/PointVectorValuePair;",
                    "org.apache.commons.math3.optim.BaseOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V",
                    "org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:doOptimize()Lorg/apache/commons/math3/optim/PointVectorValuePair;",
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer:doOptimize()Lorg/apache/commons/math3/optim/PointValuePair;"
                ]
            },
            "18": {
                "method_ids": [
                    12,
                    56,
                    62,
                    51,
                    52,
                    18,
                    41,
                    20,
                    3,
                    5
                ],
                "method_signatures": [
                    "org.apache.commons.math3.optim.BaseOptimizer:optimize([Lorg/apache/commons/math3/optim/OptimizationData;)Ljava/lang/Object;",
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex:setPoints([Lorg/apache/commons/math3/optim/PointValuePair;)V",
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.MultiDirectionalSimplex:evaluateNewSimplex(Lorg/apache/commons/math3/analysis/MultivariateFunction;[Lorg/apache/commons/math3/optim/PointValuePair;DLjava/util/Comparator;)Lorg/apache/commons/math3/optim/PointValuePair;",
                    "org.apache.commons.math3.optim.nonlinear.scalar.ObjectiveFunction:getObjectiveFunction()Lorg/apache/commons/math3/analysis/MultivariateFunction;",
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex:getSize()I",
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex:getPoint(I)Lorg/apache/commons/math3/optim/PointValuePair;",
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.AbstractSimplex:setPoint(ILorg/apache/commons/math3/optim/PointValuePair;)V",
                    "org.apache.commons.math3.optim.BaseMultivariateOptimizer:getLowerBound()[D",
                    "org.apache.commons.math3.optim.SimpleValueChecker:converged(ILorg/apache/commons/math3/optim/PointValuePair;Lorg/apache/commons/math3/optim/PointValuePair;)Z",
                    "org.apache.commons.math3.optim.PointValuePair:getPointRef()[D"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer:doOptimize()Lorg/apache/commons/math3/optim/PointValuePair;",
                    "org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer:doOptimize()Lorg/apache/commons/math3/optim/PointValuePair;",
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer:doOptimize()Lorg/apache/commons/math3/optim/PointValuePair;",
                    "org.apache.commons.math3.optim.nonlinear.vector.jacobian.GaussNewtonOptimizer:doOptimize()Lorg/apache/commons/math3/optim/PointVectorValuePair;",
                    "org.apache.commons.math3.optim.BaseOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V",
                    "org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:doOptimize()Lorg/apache/commons/math3/optim/PointVectorValuePair;",
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer:doOptimize()Lorg/apache/commons/math3/optim/PointValuePair;"
                ]
            },
            "3": {
                "method_ids": [
                    166,
                    114,
                    156,
                    157,
                    123,
                    140,
                    126,
                    51,
                    56,
                    138
                ],
                "method_signatures": [
                    "org.apache.commons.math3.linear.AbstractRealMatrix$2:end()D",
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer:doOptimize()Lorg/apache/commons/math3/optim/PointValuePair;",
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer:randn1(II)Lorg/apache/commons/math3/linear/RealMatrix;",
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer:selectColumns(Lorg/apache/commons/math3/linear/RealMatrix;[I)Lorg/apache/commons/math3/linear/RealMatrix;",
                    "org.apache.commons.math3.optim.BaseOptimizer:incrementEvaluationCount()V",
                    "org.apache.commons.math3.linear.AbstractRealMatrix:transpose()Lorg/apache/commons/math3/linear/RealMatrix;",
                    "org.apache.commons.math3.util.FastMath:max(DD)D",
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer:sortedIndices([D)[I",
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer:push([DD)V",
                    "org.apache.commons.math3.linear.Array2DRowRealMatrix:<init>(II)V"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.PowellOptimizer:doOptimize()Lorg/apache/commons/math3/optim/PointValuePair;",
                    "org.apache.commons.math3.optim.nonlinear.scalar.gradient.NonLinearConjugateGradientOptimizer:doOptimize()Lorg/apache/commons/math3/optim/PointValuePair;",
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.SimplexOptimizer:doOptimize()Lorg/apache/commons/math3/optim/PointValuePair;",
                    "org.apache.commons.math3.optim.nonlinear.vector.jacobian.GaussNewtonOptimizer:doOptimize()Lorg/apache/commons/math3/optim/PointVectorValuePair;",
                    "org.apache.commons.math3.optim.BaseOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V",
                    "org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:doOptimize()Lorg/apache/commons/math3/optim/PointVectorValuePair;",
                    "org.apache.commons.math3.optim.nonlinear.scalar.noderiv.CMAESOptimizer:doOptimize()Lorg/apache/commons/math3/optim/PointValuePair;"
                ]
            }
        },
        "28": {
            "0": {
                "method_ids": [
                    57,
                    64,
                    51,
                    13,
                    27,
                    76,
                    67,
                    62,
                    53,
                    37
                ],
                "method_signatures": [
                    "org.apache.commons.math3.optimization.linear.AbstractLinearOptimizer:optimize(Lorg/apache/commons/math3/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math3/optimization/GoalType;Z)Lorg/apache/commons/math3/optimization/PointValuePair;",
                    "org.apache.commons.math3.optimization.linear.AbstractLinearOptimizer:getGoalType()Lorg/apache/commons/math3/optimization/GoalType;",
                    "org.apache.commons.math3.linear.Array2DRowRealMatrix:setSubMatrix([[DII)V",
                    "org.apache.commons.math3.optimization.linear.SimplexSolver:getPivotRow(Lorg/apache/commons/math3/optimization/linear/SimplexTableau;I)Ljava/lang/Integer;",
                    "org.apache.commons.math3.optimization.linear.SimplexTableau:divideRow(ID)V",
                    "org.apache.commons.math3.exception.util.ExceptionContext:addMessage(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V",
                    "org.apache.commons.math3.linear.Array2DRowRealMatrix:setEntry(IID)V",
                    "org.apache.commons.math3.optimization.linear.LinearObjectiveFunction:<init>(Lorg/apache/commons/math3/linear/RealVector;D)V",
                    "org.apache.commons.math3.exception.util.ExceptionContext:<init>(Ljava/lang/Throwable;)V",
                    "org.apache.commons.math3.optimization.linear.SimplexTableau:getNumObjectiveFunctions()I"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.math3.optimization.linear.SimplexSolver:getPivotRow(Lorg/apache/commons/math3/optimization/linear/SimplexTableau;I)Ljava/lang/Integer;"
                ]
            }
        },
        "17": {
            "0": {
                "method_ids": [
                    27,
                    8,
                    1,
                    2,
                    31,
                    9,
                    26,
                    10,
                    3,
                    4
                ],
                "method_signatures": [
                    "org.apache.commons.math3.dfp.DfpField:setIEEEFlagsBits(I)V",
                    "org.apache.commons.math3.dfp.Dfp:divide(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;",
                    "org.apache.commons.math3.dfp.Dfp:newInstance(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;",
                    "org.apache.commons.math3.dfp.Dfp:isNaN()Z",
                    "org.apache.commons.math3.dfp.DfpField:newDfp(Ljava/lang/String;)Lorg/apache/commons/math3/dfp/Dfp;",
                    "org.apache.commons.math3.dfp.Dfp:multiply(Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;",
                    "org.apache.commons.math3.dfp.Dfp:compare(Lorg/apache/commons/math3/dfp/Dfp;Lorg/apache/commons/math3/dfp/Dfp;)I",
                    "org.apache.commons.math3.dfp.Dfp:trap(ILjava/lang/String;Lorg/apache/commons/math3/dfp/Dfp;Lorg/apache/commons/math3/dfp/Dfp;Lorg/apache/commons/math3/dfp/Dfp;)Lorg/apache/commons/math3/dfp/Dfp;",
                    "org.apache.commons.math3.dfp.Dfp:multiply(I)Lorg/apache/commons/math3/dfp/Dfp;",
                    "org.apache.commons.math3.dfp.Dfp:getField()Lorg/apache/commons/math3/dfp/DfpField;"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.math3.dfp.Dfp:multiply(I)Lorg/apache/commons/math3/dfp/Dfp;"
                ]
            }
        },
        "1": {
            "0": {
                "method_ids": [
                    1,
                    5,
                    10,
                    0,
                    3,
                    13,
                    4,
                    6,
                    7,
                    11
                ],
                "method_signatures": [
                    "org.apache.commons.math3.fraction.Fraction:<init>(DDII)V",
                    "org.apache.commons.math3.util.FastMath:floor(D)D",
                    "org.apache.commons.math3.util.FastMath:abs(D)D",
                    "org.apache.commons.math3.exception.MathIllegalStateException:getContext()Lorg/apache/commons/math3/exception/util/ExceptionContext;",
                    "org.apache.commons.math3.exception.ConvergenceException:<init>(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V",
                    "org.apache.commons.math3.exception.util.ExceptionContext:<init>(Ljava/lang/Throwable;)V",
                    "org.apache.commons.math3.fraction.Fraction:getDenominator()I",
                    "org.apache.commons.math3.fraction.FractionConversionException:<init>(DJJ)V",
                    "org.apache.commons.math3.util.FastMath:abs(J)J",
                    "org.apache.commons.math3.exception.MathIllegalStateException:<init>(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.math3.fraction.Fraction:<init>(DDII)V",
                    "org.apache.commons.math3.fraction.BigFraction:<init>(DDII)V"
                ]
            },
            "1": {
                "method_ids": [
                    0,
                    7,
                    9,
                    1,
                    4,
                    3,
                    2,
                    6,
                    5,
                    11
                ],
                "method_signatures": [
                    "org.apache.commons.math3.fraction.BigFraction:<init>(DDII)V",
                    "org.apache.commons.math3.fraction.BigFraction:getDenominatorAsInt()I",
                    "org.apache.commons.math3.exception.MathIllegalStateException:<init>()V",
                    "org.apache.commons.math3.exception.util.ArgUtils:flatten([Ljava/lang/Object;)[Ljava/lang/Object;",
                    "org.apache.commons.math3.exception.util.ExceptionContext:<init>(Ljava/lang/Throwable;)V",
                    "org.apache.commons.math3.exception.util.ExceptionContext:addMessage(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V",
                    "org.apache.commons.math3.exception.MathIllegalStateException:<init>(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V",
                    "org.apache.commons.math3.util.FastMath:floor(D)D",
                    "org.apache.commons.math3.exception.ConvergenceException:<init>(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V",
                    "org.apache.commons.math3.exception.MathIllegalStateException:getContext()Lorg/apache/commons/math3/exception/util/ExceptionContext;"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.math3.fraction.Fraction:<init>(DDII)V",
                    "org.apache.commons.math3.fraction.BigFraction:<init>(DDII)V"
                ]
            }
        },
        "10": {
            "0": {
                "method_ids": [
                    12,
                    6,
                    16,
                    19,
                    3,
                    8,
                    4,
                    18,
                    13,
                    10
                ],
                "method_signatures": [
                    "org.apache.commons.math3.analysis.differentiation.DSCompiler:atan2([DI[DI[DI)V",
                    "org.apache.commons.math3.analysis.differentiation.DSCompiler:atan([DI[DI)V",
                    "org.apache.commons.math3.analysis.differentiation.DSCompiler:checkCompatibility(Lorg/apache/commons/math3/analysis/differentiation/DSCompiler;)V",
                    "org.apache.commons.math3.analysis.differentiation.DSCompiler:multiply([DI[DI[DI)V",
                    "org.apache.commons.math3.analysis.differentiation.DSCompiler:compose([DI[D[DI)V",
                    "org.apache.commons.math3.analysis.differentiation.DSCompiler:rootN([DII[DI)V",
                    "org.apache.commons.math3.analysis.differentiation.DSCompiler:add([DI[DI[DI)V",
                    "org.apache.commons.math3.util.FastMath:atan(DDZ)D",
                    "org.apache.commons.math3.analysis.differentiation.DSCompiler:divide([DI[DI[DI)V",
                    "org.apache.commons.math3.util.FastMath:pow(DI)D"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.math3.analysis.differentiation.DSCompiler:atan2([DI[DI[DI)V"
                ]
            }
        },
        "19": {
            "0": {
                "method_ids": [
                    71,
                    70,
                    69,
                    60,
                    62,
                    63,
                    37,
                    34,
                    1,
                    4
                ],
                "method_signatures": [
                    "org.apache.commons.math3.exception.util.ArgUtils:flatten([Ljava/lang/Object;)[Ljava/lang/Object;",
                    "org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateSimpleBoundsOptimizer:optimize(ILorg/apache/commons/math3/analysis/MultivariateFunction;Lorg/apache/commons/math3/optimization/GoalType;[D[D[D)Lorg/apache/commons/math3/optimization/PointValuePair;",
                    "org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateSimpleBoundsOptimizer:<init>(Lorg/apache/commons/math3/optimization/ConvergenceChecker;)V",
                    "org.apache.commons.math3.optimization.direct.CMAESOptimizer:<init>(I[DIDZIILorg/apache/commons/math3/random/RandomGenerator;ZLorg/apache/commons/math3/optimization/ConvergenceChecker;)V",
                    "org.apache.commons.math3.exception.MathIllegalStateException:<init>()V",
                    "org.apache.commons.math3.optimization.direct.CMAESOptimizer:<init>(I)V",
                    "org.apache.commons.math3.optimization.direct.CMAESOptimizer:diag(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;",
                    "org.apache.commons.math3.linear.AbstractRealMatrix:scalarAdd(D)Lorg/apache/commons/math3/linear/RealMatrix;",
                    "org.apache.commons.math3.linear.Array2DRowRealMatrix:createMatrix(II)Lorg/apache/commons/math3/linear/RealMatrix;",
                    "org.apache.commons.math3.util.FastMath:nextUp(D)D"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.math3.optimization.direct.CMAESOptimizer:checkParameters()V"
                ]
            }
        },
        "26": {
            "0": {
                "method_ids": [
                    8,
                    1,
                    0,
                    4,
                    5,
                    10,
                    3,
                    2,
                    6,
                    9
                ],
                "method_signatures": [
                    "org.apache.commons.math3.exception.util.ArgUtils:flatten([Ljava/lang/Object;)[Ljava/lang/Object;",
                    "org.apache.commons.math3.fraction.FractionConversionException:<init>(DJJ)V",
                    "org.apache.commons.math3.exception.util.ExceptionContext:addMessage(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V",
                    "org.apache.commons.math3.exception.MathIllegalStateException:getContext()Lorg/apache/commons/math3/exception/util/ExceptionContext;",
                    "org.apache.commons.math3.exception.ConvergenceException:<init>(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V",
                    "org.apache.commons.math3.exception.util.ExceptionContext:<init>(Ljava/lang/Throwable;)V",
                    "org.apache.commons.math3.util.FastMath:abs(D)D",
                    "org.apache.commons.math3.fraction.Fraction:<init>(DDI)V",
                    "org.apache.commons.math3.exception.MathIllegalStateException:<init>()V",
                    "org.apache.commons.math3.fraction.Fraction:<init>(DDII)V"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.math3.fraction.Fraction:<init>(DDII)V"
                ]
            }
        },
        "8": {
            "0": {
                "method_ids": [
                    11,
                    15,
                    16,
                    2,
                    1,
                    4,
                    3,
                    0,
                    19,
                    10
                ],
                "method_signatures": [
                    "org.apache.commons.math3.util.Pair:getKey()Ljava/lang/Object;",
                    "org.apache.commons.math3.random.AbstractWell:<init>(IIII[I)V",
                    "org.apache.commons.math3.distribution.DiscreteDistribution:<init>(Lorg/apache/commons/math3/random/RandomGenerator;Ljava/util/List;)V",
                    "org.apache.commons.math3.distribution.DiscreteDistribution:sample()Ljava/lang/Object;",
                    "org.apache.commons.math3.distribution.AbstractRealDistribution:<init>(Lorg/apache/commons/math3/random/RandomGenerator;)V",
                    "org.apache.commons.math3.distribution.DiscreteRealDistribution:<init>(Lorg/apache/commons/math3/random/RandomGenerator;[D[D)V",
                    "org.apache.commons.math3.random.BitsStreamGenerator:nextDouble()D",
                    "org.apache.commons.math3.random.AbstractWell:setSeed(J)V",
                    "org.apache.commons.math3.random.Well19937c:<init>()V",
                    "org.apache.commons.math3.random.AbstractWell:<init>(IIII)V"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.math3.distribution.DiscreteDistribution:sample(I)[Ljava/lang/Object;"
                ]
            }
        },
        "21": {
            "0": {
                "method_ids": [
                    1,
                    26,
                    28,
                    20,
                    24,
                    6,
                    36,
                    12,
                    29,
                    13
                ],
                "method_signatures": [
                    "org.apache.commons.math3.linear.RectangularCholeskyDecomposition:getRootMatrix()Lorg/apache/commons/math3/linear/RealMatrix;",
                    "org.apache.commons.math3.linear.AbstractRealMatrix$1:start(IIIIII)V",
                    "org.apache.commons.math3.linear.AbstractRealMatrix:walkInOptimizedOrder(Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;)D",
                    "org.apache.commons.math3.linear.MatrixUtils:checkMultiplicationCompatible(Lorg/apache/commons/math3/linear/AnyMatrix;Lorg/apache/commons/math3/linear/AnyMatrix;)V",
                    "org.apache.commons.math3.util.FastMath:sqrt(D)D",
                    "org.apache.commons.math3.linear.Array2DRowRealMatrix:<init>(II)V",
                    "org.apache.commons.math3.linear.AbstractRealMatrix$1:visit(IID)V",
                    "org.apache.commons.math3.linear.AbstractRealMatrix$1:end()D",
                    "org.apache.commons.math3.linear.AbstractRealMatrix:getNorm()D",
                    "org.apache.commons.math3.linear.Array2DRowRealMatrix:getData()[[D"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.math3.linear.RectangularCholeskyDecomposition:<init>(Lorg/apache/commons/math3/linear/RealMatrix;D)V"
                ]
            },
            "1": {
                "method_ids": [
                    6,
                    8,
                    27,
                    17,
                    4,
                    3,
                    14,
                    1,
                    2,
                    9
                ],
                "method_signatures": [
                    "org.apache.commons.math3.linear.AbstractRealMatrix:<init>(II)V",
                    "org.apache.commons.math3.linear.Array2DRowRealMatrix:getData()[[D",
                    "org.apache.commons.math3.linear.Array2DRowRealMatrix:<init>(II)V",
                    "org.apache.commons.math3.linear.Array2DRowRealMatrix:setSubMatrix([[DII)V",
                    "org.apache.commons.math3.linear.AbstractRealMatrix$1:start(IIIIII)V",
                    "org.apache.commons.math3.linear.Array2DRowRealMatrix:getRowDimension()I",
                    "org.apache.commons.math3.linear.AbstractRealMatrix$5:visit(IID)V",
                    "org.apache.commons.math3.util.MathUtils:checkNotNull(Ljava/lang/Object;)V",
                    "org.apache.commons.math3.linear.AbstractRealMatrix:walkInOptimizedOrder(Lorg/apache/commons/math3/linear/RealMatrixPreservingVisitor;)D",
                    "org.apache.commons.math3.linear.RectangularCholeskyDecomposition:getRootMatrix()Lorg/apache/commons/math3/linear/RealMatrix;"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.math3.linear.RectangularCholeskyDecomposition:<init>(Lorg/apache/commons/math3/linear/RealMatrix;D)V"
                ]
            }
        },
        "75": {
            "0": {
                "method_ids": [
                    1,
                    4,
                    3,
                    12,
                    0,
                    5,
                    7,
                    9,
                    11,
                    2
                ],
                "method_signatures": [
                    "org.apache.commons.math.stat.Frequency:getPct(Ljava/lang/Object;)D",
                    "org.apache.commons.math.stat.Frequency:getPct(I)D",
                    "org.apache.commons.math.stat.Frequency:getCount(Ljava/lang/Comparable;)J",
                    "org.apache.commons.math.stat.Frequency:addValue(Ljava/lang/Comparable;)V",
                    "org.apache.commons.math.stat.Frequency:addValue(I)V",
                    "org.apache.commons.math.stat.Frequency:addValue(J)V",
                    "org.apache.commons.math.stat.Frequency:getSumFreq()J",
                    "org.apache.commons.math.stat.Frequency:getCumFreq(J)J",
                    "org.apache.commons.math.stat.Frequency:<init>()V",
                    "org.apache.commons.math.stat.Frequency$NaturalComparator:compare(Ljava/lang/Comparable;Ljava/lang/Comparable;)I"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.math.stat.Frequency:getPct(Ljava/lang/Object;)D"
                ]
            }
        },
        "81": {
            "0": {
                "method_ids": [
                    2,
                    11,
                    3,
                    12,
                    24,
                    25,
                    26,
                    31,
                    30,
                    22
                ],
                "method_signatures": [
                    "org.apache.commons.math.linear.Array2DRowRealMatrix:walkInRowOrder(Lorg/apache/commons/math/linear/RealMatrixPreservingVisitor;)D",
                    "org.apache.commons.math.linear.Array2DRowRealMatrix:getColumnDimension()I",
                    "org.apache.commons.math.linear.EigenDecompositionImpl:computeShiftIncrement(III)V",
                    "org.apache.commons.math.linear.EigenDecompositionImpl:goodStep(II)I",
                    "org.apache.commons.math.linear.EigenDecompositionImpl:processGeneralBlock(I)V",
                    "org.apache.commons.math.linear.EigenDecompositionImpl:initialSplits(I)V",
                    "org.apache.commons.math.linear.EigenDecompositionImpl:dqds(II)V",
                    "org.apache.commons.math.linear.EigenDecompositionImpl:findEigenvalues()V",
                    "org.apache.commons.math.linear.DefaultRealMatrixPreservingVisitor:end()D",
                    "org.apache.commons.math.linear.EigenDecompositionImpl:ldlTDecomposition(DII)V"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.math.linear.EigenDecompositionImpl:computeGershgorinCircles()V",
                    "org.apache.commons.math.linear.EigenDecompositionImpl:processGeneralBlock(I)V",
                    "org.apache.commons.math.linear.EigenDecompositionImpl:computeShiftIncrement(III)V"
                ]
            }
        },
        "86": {
            "0": {
                "method_ids": [
                    20,
                    2,
                    15,
                    0,
                    5,
                    19,
                    12,
                    1,
                    21,
                    3
                ],
                "method_signatures": [
                    "org.apache.commons.math.linear.DenseRealMatrix:transpose()Lorg/apache/commons/math/linear/DenseRealMatrix;",
                    "org.apache.commons.math.linear.DenseRealMatrix:toBlocksLayout([[D)[[D",
                    "org.apache.commons.math.linear.DenseRealMatrix:<init>(II[[DZ)V",
                    "org.apache.commons.math.linear.CholeskyDecompositionImpl:getL()Lorg/apache/commons/math/linear/RealMatrix;",
                    "org.apache.commons.math.linear.AbstractRealMatrix:toString()Ljava/lang/String;",
                    "org.apache.commons.math.linear.DenseRealMatrix:multiply(Lorg/apache/commons/math/linear/RealMatrix;)Lorg/apache/commons/math/linear/DenseRealMatrix;",
                    "org.apache.commons.math.linear.DenseRealMatrix:<init>([[D)V",
                    "org.apache.commons.math.linear.DenseRealMatrix:<init>(II)V",
                    "org.apache.commons.math.linear.CholeskyDecompositionImpl:<init>(Lorg/apache/commons/math/linear/RealMatrix;DD)V",
                    "org.apache.commons.math.linear.CholeskyDecompositionImpl:<init>(Lorg/apache/commons/math/linear/RealMatrix;)V"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.math.linear.CholeskyDecompositionImpl:<init>(Lorg/apache/commons/math/linear/RealMatrix;DD)V"
                ]
            },
            "1": {
                "method_ids": [
                    11,
                    5,
                    9,
                    1,
                    2,
                    4,
                    3,
                    0,
                    6,
                    7
                ],
                "method_signatures": [
                    "org.apache.commons.math.linear.DenseRealMatrix:getColumnDimension()I",
                    "org.apache.commons.math.linear.MatrixUtils:createRealMatrix([[D)Lorg/apache/commons/math/linear/RealMatrix;",
                    "org.apache.commons.math.linear.DenseRealMatrix:getRowDimension()I",
                    "org.apache.commons.math.linear.DenseRealMatrix:getData()[[D",
                    "org.apache.commons.math.linear.AbstractRealMatrix:isSquare()Z",
                    "org.apache.commons.math.linear.DenseRealMatrix:toBlocksLayout([[D)[[D",
                    "org.apache.commons.math.linear.AbstractRealMatrix:<init>(II)V",
                    "org.apache.commons.math.linear.DenseRealMatrix:blockHeight(I)I",
                    "org.apache.commons.math.linear.CholeskyDecompositionImpl:<init>(Lorg/apache/commons/math/linear/RealMatrix;)V",
                    "org.apache.commons.math.linear.DenseRealMatrix:<init>(II[[DZ)V"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.math.linear.CholeskyDecompositionImpl:<init>(Lorg/apache/commons/math/linear/RealMatrix;DD)V"
                ]
            }
        },
        "72": {
            "0": {
                "method_ids": [
                    2,
                    9,
                    10,
                    5,
                    1,
                    4,
                    3,
                    6,
                    7,
                    0
                ],
                "method_signatures": [
                    "org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl:verifyInterval(DD)V",
                    "org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl:isSequence(DDD)Z",
                    "org.apache.commons.math.analysis.solvers.BrentSolver:solve(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDD)D",
                    "org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl:verifySequence(DDD)V",
                    "org.apache.commons.math.ConvergingAlgorithmImpl:<init>(ID)V",
                    "org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl:<init>(ID)V",
                    "org.apache.commons.math.analysis.solvers.BrentSolver:solve(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D",
                    "org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl:setResult(DI)V",
                    "org.apache.commons.math.ConvergingAlgorithmImpl:getAbsoluteAccuracy()D",
                    "org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl:clearResult()V"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.math.analysis.solvers.BrentSolver:solve(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDD)D"
                ]
            }
        },
        "44": {
            "0": {
                "method_ids": [
                    101,
                    100,
                    78,
                    57,
                    4,
                    91,
                    60,
                    37,
                    10,
                    1
                ],
                "method_signatures": [
                    "org.apache.commons.math.ode.AbstractIntegrator:acceptStep(Lorg/apache/commons/math/ode/sampling/AbstractStepInterpolator;[D[DD)D",
                    "org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator:sanityChecks(Lorg/apache/commons/math/ode/ExpandableStatefulODE;D)V",
                    "org.apache.commons.math.ode.events.EventState:getEventTime()D",
                    "org.apache.commons.math.ode.sampling.AbstractStepInterpolator:copy()Lorg/apache/commons/math/ode/sampling/StepInterpolator;",
                    "org.apache.commons.math.ode.AbstractIntegrator$1:compare(Lorg/apache/commons/math/ode/events/EventState;Lorg/apache/commons/math/ode/events/EventState;)I",
                    "org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver:solve(ILorg/apache/commons/math/analysis/UnivariateRealFunction;DDLorg/apache/commons/math/analysis/solvers/AllowedSolution;)D",
                    "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator:computeInterpolatedStateAndDerivatives(DD)V",
                    "org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator:estimateError([[D[D[DD)D",
                    "org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver:getMax()D",
                    "org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator:filterStep(DZZ)D"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.math.ode.AbstractIntegrator:acceptStep(Lorg/apache/commons/math/ode/sampling/AbstractStepInterpolator;[D[DD)D"
                ]
            }
        },
        "43": {
            "0": {
                "method_ids": [
                    30,
                    16,
                    1,
                    8,
                    17,
                    34,
                    33,
                    24,
                    4,
                    2
                ],
                "method_signatures": [
                    "org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic:test([DIIZ)Z",
                    "org.apache.commons.math.stat.descriptive.moment.Variance:evaluate([DII)D",
                    "org.apache.commons.math.stat.descriptive.moment.SecondMoment:increment(D)V",
                    "org.apache.commons.math.stat.descriptive.moment.SecondMoment:clear()V",
                    "org.apache.commons.math.stat.descriptive.moment.Variance:getResult()D",
                    "org.apache.commons.math.stat.descriptive.moment.Variance:clear()V",
                    "org.apache.commons.math.stat.descriptive.summary.Sum:<init>()V",
                    "org.apache.commons.math.stat.descriptive.SummaryStatistics:setVarianceImpl(Lorg/apache/commons/math/stat/descriptive/StorelessUnivariateStatistic;)V",
                    "org.apache.commons.math.stat.descriptive.moment.SecondMoment:<init>()V",
                    "org.apache.commons.math.stat.descriptive.moment.Variance:<init>(Lorg/apache/commons/math/stat/descriptive/moment/SecondMoment;)V"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.math.stat.descriptive.SummaryStatistics:addValue(D)V"
                ]
            },
            "1": {
                "method_ids": [
                    6,
                    11,
                    22,
                    24,
                    28,
                    21,
                    10,
                    32,
                    4,
                    27
                ],
                "method_signatures": [
                    "org.apache.commons.math.stat.descriptive.moment.GeometricMean:getResult()D",
                    "org.apache.commons.math.stat.descriptive.summary.SumOfLogs:increment(D)V",
                    "org.apache.commons.math.stat.descriptive.summary.SumOfLogs:getN()J",
                    "org.apache.commons.math.stat.descriptive.summary.Sum:increment(D)V",
                    "org.apache.commons.math.stat.descriptive.rank.Max:increment(D)V",
                    "org.apache.commons.math.util.FastMath:sqrt(D)D",
                    "org.apache.commons.math.stat.descriptive.moment.GeometricMean:<init>()V",
                    "org.apache.commons.math.stat.descriptive.rank.Min:increment(D)V",
                    "org.apache.commons.math.stat.descriptive.rank.Max:<init>()V",
                    "org.apache.commons.math.stat.descriptive.summary.SumOfLogs:evaluate([DII)D"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.math.stat.descriptive.SummaryStatistics:addValue(D)V"
                ]
            },
            "4": {
                "method_ids": [
                    2,
                    6,
                    18,
                    17,
                    12,
                    11,
                    20,
                    10,
                    15,
                    26
                ],
                "method_signatures": [
                    "org.apache.commons.math.stat.descriptive.moment.Mean:evaluate([DII)D",
                    "org.apache.commons.math.stat.descriptive.SummaryStatistics:addValue(D)V",
                    "org.apache.commons.math.stat.descriptive.SummaryStatistics:getMean()D",
                    "org.apache.commons.math.stat.descriptive.summary.SumOfLogs:<init>()V",
                    "org.apache.commons.math.stat.descriptive.summary.Sum:evaluate([DII)D",
                    "org.apache.commons.math.stat.descriptive.moment.SecondMoment:increment(D)V",
                    "org.apache.commons.math.util.FastMath:log(D[D)D",
                    "org.apache.commons.math.stat.descriptive.moment.Mean:getResult()D",
                    "org.apache.commons.math.util.FastMath:log(D)D",
                    "org.apache.commons.math.stat.descriptive.SummaryStatistics:checkEmpty()V"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.math.stat.descriptive.SummaryStatistics:addValue(D)V"
                ]
            },
            "5": {
                "method_ids": [
                    6,
                    25,
                    5,
                    4,
                    20,
                    33,
                    31,
                    29,
                    28,
                    24
                ],
                "method_signatures": [
                    "org.apache.commons.math.stat.descriptive.moment.Variance:clear()V",
                    "org.apache.commons.math.stat.descriptive.SummaryStatistics:setVarianceImpl(Lorg/apache/commons/math/stat/descriptive/StorelessUnivariateStatistic;)V",
                    "org.apache.commons.math.stat.descriptive.SummaryStatistics:getVariance()D",
                    "org.apache.commons.math.stat.descriptive.moment.Mean:<init>()V",
                    "org.apache.commons.math.stat.descriptive.moment.GeometricMean:<init>(Lorg/apache/commons/math/stat/descriptive/summary/SumOfLogs;)V",
                    "org.apache.commons.math.stat.descriptive.SummaryStatistics:checkEmpty()V",
                    "org.apache.commons.math.util.FastMath:sqrt(D)D",
                    "org.apache.commons.math.stat.descriptive.moment.FirstMoment:increment(D)V",
                    "org.apache.commons.math.stat.descriptive.moment.FirstMoment:clear()V",
                    "org.apache.commons.math.stat.descriptive.summary.SumOfLogs:increment(D)V"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.math.stat.descriptive.SummaryStatistics:addValue(D)V"
                ]
            },
            "2": {
                "method_ids": [
                    19,
                    26,
                    25,
                    14,
                    5,
                    4,
                    3,
                    21,
                    0,
                    1
                ],
                "method_signatures": [
                    "org.apache.commons.math.util.FastMath:log(D[D)D",
                    "org.apache.commons.math.stat.descriptive.moment.Mean:evaluate([DII)D",
                    "org.apache.commons.math.stat.descriptive.SummaryStatistics:checkEmpty()V",
                    "org.apache.commons.math.stat.descriptive.moment.Mean:getResult()D",
                    "org.apache.commons.math.stat.descriptive.moment.FirstMoment:increment(D)V",
                    "org.apache.commons.math.stat.descriptive.summary.Sum:evaluate([DII)D",
                    "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic:evaluate([D)D",
                    "org.apache.commons.math.stat.descriptive.summary.Sum:increment(D)V",
                    "org.apache.commons.math.stat.descriptive.moment.Mean:<init>(Lorg/apache/commons/math/stat/descriptive/moment/FirstMoment;)V",
                    "org.apache.commons.math.util.FastMath:sqrt(D)D"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.math.stat.descriptive.SummaryStatistics:addValue(D)V"
                ]
            },
            "3": {
                "method_ids": [
                    24,
                    6,
                    30,
                    14,
                    23,
                    8,
                    5,
                    1,
                    3,
                    2
                ],
                "method_signatures": [
                    "org.apache.commons.math.stat.descriptive.moment.GeometricMean:evaluate([DII)D",
                    "org.apache.commons.math.stat.descriptive.moment.GeometricMean:<init>()V",
                    "org.apache.commons.math.stat.descriptive.summary.Sum:<init>()V",
                    "org.apache.commons.math.stat.descriptive.moment.FirstMoment:<init>()V",
                    "org.apache.commons.math.stat.descriptive.summary.SumOfSquares:<init>()V",
                    "org.apache.commons.math.util.FastMath:log(D[D)D",
                    "org.apache.commons.math.stat.descriptive.summary.SumOfLogs:increment(D)V",
                    "org.apache.commons.math.stat.descriptive.moment.Variance:<init>(Lorg/apache/commons/math/stat/descriptive/moment/SecondMoment;)V",
                    "org.apache.commons.math.stat.descriptive.SummaryStatistics:addValue(D)V",
                    "org.apache.commons.math.stat.descriptive.summary.SumOfSquares:increment(D)V"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.math.stat.descriptive.SummaryStatistics:addValue(D)V"
                ]
            }
        },
        "88": {
            "0": {
                "method_ids": [
                    52,
                    50,
                    61,
                    58,
                    57,
                    5,
                    18,
                    12,
                    30,
                    29
                ],
                "method_signatures": [
                    "org.apache.commons.math.optimization.linear.SimplexSolver:doIteration(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V",
                    "org.apache.commons.math.optimization.linear.SimplexSolver:isPhase1Solved(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)Z",
                    "org.apache.commons.math.linear.RealMatrixImpl:setEntry(IID)V",
                    "org.apache.commons.math.optimization.linear.LinearObjectiveFunction:getCoefficients()Lorg/apache/commons/math/linear/RealVector;",
                    "org.apache.commons.math.optimization.linear.LinearConstraint:getRelationship()Lorg/apache/commons/math/optimization/linear/Relationship;",
                    "org.apache.commons.math.optimization.linear.SimplexTableau:createTableau(Z)[[D",
                    "org.apache.commons.math.optimization.linear.SimplexSolver:getPivotRow(ILorg/apache/commons/math/optimization/linear/SimplexTableau;)Ljava/lang/Integer;",
                    "org.apache.commons.math.optimization.linear.AbstractLinearOptimizer:optimize(Lorg/apache/commons/math/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math/optimization/GoalType;Z)Lorg/apache/commons/math/optimization/RealPointValuePair;",
                    "org.apache.commons.math.optimization.linear.LinearObjectiveFunction:getValue([D)D",
                    "org.apache.commons.math.optimization.linear.LinearConstraint:getValue()D"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.math.optimization.linear.SimplexTableau:getSolution()Lorg/apache/commons/math/optimization/RealPointValuePair;"
                ]
            }
        },
        "38": {
            "0": {
                "method_ids": [
                    25,
                    12,
                    11,
                    40,
                    41,
                    2,
                    4,
                    36,
                    0,
                    1
                ],
                "method_signatures": [
                    "org.apache.commons.math.linear.Array2DRowRealMatrix:setEntry(IID)V",
                    "org.apache.commons.math.optimization.direct.BOBYQAOptimizer:bobyqb([D[D)D",
                    "org.apache.commons.math.optimization.direct.BOBYQAOptimizer$PathIsExploredException:<init>()V",
                    "org.apache.commons.math.linear.Array2DRowRealMatrix:getColumnDimension()I",
                    "org.apache.commons.math.optimization.direct.BOBYQAOptimizer:caller(I)Ljava/lang/String;",
                    "org.apache.commons.math.linear.Array2DRowRealMatrix:<init>(II)V",
                    "org.apache.commons.math.util.Incrementor:<init>()V",
                    "org.apache.commons.math.linear.AbstractRealMatrix:<init>(II)V",
                    "org.apache.commons.math.optimization.direct.BaseAbstractMultivariateOptimizer:optimize(ILorg/apache/commons/math/analysis/MultivariateFunction;Lorg/apache/commons/math/optimization/GoalType;[D)Lorg/apache/commons/math/optimization/RealPointValuePair;",
                    "org.apache.commons.math.linear.ArrayRealVector:toArray()[D"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.math.optimization.direct.BOBYQAOptimizer:prelim([D[D)V"
                ]
            }
        },
        "36": {
            "0": {
                "method_ids": [
                    2,
                    1,
                    0
                ],
                "method_signatures": [
                    "org.apache.commons.math.fraction.BigFraction:floatValue()F",
                    "org.apache.commons.math.fraction.BigFraction:<init>(Ljava/math/BigInteger;Ljava/math/BigInteger;)V",
                    "org.apache.commons.math.util.MathUtils:checkNotNull(Ljava/lang/Object;Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.math.fraction.BigFraction:doubleValue()D",
                    "org.apache.commons.math.fraction.BigFraction:floatValue()F"
                ]
            },
            "1": {
                "method_ids": [
                    1,
                    0,
                    2
                ],
                "method_signatures": [
                    "org.apache.commons.math.util.MathUtils:checkNotNull(Ljava/lang/Object;Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V",
                    "org.apache.commons.math.fraction.BigFraction:<init>(Ljava/math/BigInteger;Ljava/math/BigInteger;)V",
                    "org.apache.commons.math.fraction.BigFraction:doubleValue()D"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.math.fraction.BigFraction:doubleValue()D",
                    "org.apache.commons.math.fraction.BigFraction:floatValue()F"
                ]
            }
        },
        "31": {
            "0": {
                "method_ids": [
                    10,
                    3,
                    2,
                    1,
                    0,
                    15,
                    22,
                    19,
                    8,
                    21
                ],
                "method_signatures": [
                    "org.apache.commons.math3.special.Beta$1:getA(ID)D",
                    "org.apache.commons.math3.special.Beta:regularizedBeta(DDD)D",
                    "org.apache.commons.math3.special.Beta:logBeta(DDDI)D",
                    "org.apache.commons.math3.distribution.AbstractIntegerDistribution:solveInverseCumulativeProbability(DII)I",
                    "org.apache.commons.math3.distribution.AbstractIntegerDistribution:inverseCumulativeProbability(D)I",
                    "org.apache.commons.math3.util.FastMath:abs(D)D",
                    "org.apache.commons.math3.distribution.BinomialDistribution:getSupportLowerBound()I",
                    "org.apache.commons.math3.special.Gamma:lanczos(D)D",
                    "org.apache.commons.math3.special.Gamma:logGamma(D)D",
                    "org.apache.commons.math3.util.FastMath:log(D[D)D"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.math3.util.ContinuedFraction:evaluate(DDI)D"
                ]
            },
            "1": {
                "method_ids": [
                    57,
                    59,
                    50,
                    51,
                    52,
                    41,
                    58,
                    12,
                    16,
                    25
                ],
                "method_signatures": [
                    "org.apache.commons.math3.util.FastMath:sqrt(D)D",
                    "org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver:getMax()D",
                    "org.apache.commons.math3.special.Beta$1:getB(ID)D",
                    "org.apache.commons.math3.distribution.FDistribution:calculateNumericalVariance()D",
                    "org.apache.commons.math3.special.Gamma:lanczos(D)D",
                    "org.apache.commons.math3.distribution.FDistribution:getNumericalVariance()D",
                    "org.apache.commons.math3.distribution.FDistribution:cumulativeProbability(D)D",
                    "org.apache.commons.math3.special.Gamma:logGamma(D)D",
                    "org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver:incrementEvaluationCount()V",
                    "org.apache.commons.math3.exception.NoBracketingException:<init>(Lorg/apache/commons/math3/exception/util/Localizable;DDDD[Ljava/lang/Object;)V"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.math3.util.ContinuedFraction:evaluate(DDI)D"
                ]
            }
        },
        "91": {
            "0": {
                "method_ids": [
                    0,
                    1,
                    2,
                    3
                ],
                "method_signatures": [
                    "org.apache.commons.math.fraction.Fraction:compareTo(Lorg/apache/commons/math/fraction/Fraction;)I",
                    "org.apache.commons.math.util.MathUtils:gcd(II)I",
                    "org.apache.commons.math.fraction.Fraction:doubleValue()D",
                    "org.apache.commons.math.fraction.Fraction:<init>(II)V"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.math.fraction.Fraction:compareTo(Lorg/apache/commons/math/fraction/Fraction;)I"
                ]
            }
        },
        "65": {
            "0": {
                "method_ids": [
                    26,
                    33,
                    36,
                    17,
                    16,
                    12,
                    13,
                    11,
                    10,
                    9
                ],
                "method_signatures": [
                    "org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer:setConvergenceChecker(Lorg/apache/commons/math/optimization/VectorialConvergenceChecker;)V",
                    "org.apache.commons.math.linear.MatrixUtils:createRealMatrix(II)Lorg/apache/commons/math/linear/RealMatrix;",
                    "org.apache.commons.math.linear.Array2DRowRealMatrix:copyOut()[[D",
                    "org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer:doOptimize()Lorg/apache/commons/math/optimization/VectorialPointValuePair;",
                    "org.apache.commons.math.linear.LUDecompositionImpl:getSolver()Lorg/apache/commons/math/linear/DecompositionSolver;",
                    "org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer:getChiSquare()D",
                    "org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer:updateResidualsAndCost()V",
                    "org.apache.commons.math.linear.AbstractRealMatrix:isSquare()Z",
                    "org.apache.commons.math.linear.Array2DRowRealMatrix:setSubMatrix([[DII)V",
                    "org.apache.commons.math.linear.Array2DRowRealMatrix:getRowDimension()I"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer:getRMS()D",
                    "org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer:getChiSquare()D"
                ]
            }
        },
        "62": {
            "0": {
                "method_ids": [
                    23,
                    0,
                    12,
                    2,
                    27,
                    5,
                    1,
                    20,
                    4,
                    19
                ],
                "method_signatures": [
                    "org.apache.commons.math.optimization.univariate.AbstractUnivariateRealOptimizer:getMaxEvaluations()I",
                    "org.apache.commons.math.optimization.univariate.AbstractUnivariateRealOptimizer:computeObjectiveValue(D)D",
                    "org.apache.commons.math.util.Incrementor:getMaximalCount()I",
                    "org.apache.commons.math.optimization.univariate.AbstractUnivariateRealOptimizer:getGoalType()Lorg/apache/commons/math/optimization/GoalType;",
                    "org.apache.commons.math.util.FastMath:max(DD)D",
                    "org.apache.commons.math.optimization.univariate.BrentOptimizer:<init>(DD)V",
                    "org.apache.commons.math.util.MathUtils:equals(DD)Z",
                    "org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer:<init>(Lorg/apache/commons/math/optimization/univariate/BaseUnivariateRealOptimizer;ILorg/apache/commons/math/random/RandomGenerator;)V",
                    "org.apache.commons.math.util.FastMath:abs(J)J",
                    "org.apache.commons.math.optimization.univariate.AbstractUnivariateRealOptimizer:getStartValue()D"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer:optimize(Lorg/apache/commons/math/analysis/UnivariateRealFunction;Lorg/apache/commons/math/optimization/GoalType;DD)Lorg/apache/commons/math/optimization/univariate/UnivariateRealPointValuePair;",
                    "org.apache.commons.math.optimization.univariate.MultiStartUnivariateRealOptimizer:optimize(Lorg/apache/commons/math/analysis/UnivariateRealFunction;Lorg/apache/commons/math/optimization/GoalType;DDD)Lorg/apache/commons/math/optimization/univariate/UnivariateRealPointValuePair;"
                ]
            }
        },
        "96": {
            "0": {
                "method_ids": [
                    6,
                    2,
                    3,
                    1,
                    5,
                    7,
                    4,
                    0,
                    8,
                    9
                ],
                "method_signatures": [
                    "org.apache.commons.math.complex.Complex:multiply(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;",
                    "org.apache.commons.math.complex.Complex:equals(Ljava/lang/Object;)Z",
                    "org.apache.commons.math.complex.Complex:isNaN()Z",
                    "org.apache.commons.math.complex.Complex:createComplex(DD)Lorg/apache/commons/math/complex/Complex;",
                    "org.apache.commons.math.util.MathUtils:hash(D)I",
                    "org.apache.commons.math.complex.Complex:hashCode()I",
                    "org.apache.commons.math.complex.Complex:getReal()D",
                    "org.apache.commons.math.complex.Complex:<init>(DD)V",
                    "Unknown Signature",
                    "Unknown Signature"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.math.complex.Complex:equals(Ljava/lang/Object;)Z"
                ]
            }
        },
        "100": {
            "0": {
                "method_ids": [
                    10,
                    1,
                    14,
                    38,
                    7,
                    20,
                    25,
                    35,
                    30
                ],
                "method_signatures": [
                    "org.apache.commons.math.estimation.AbstractEstimator:incrementJacobianEvaluationsCounter()V",
                    "org.apache.commons.math.linear.RealMatrixImpl:getEntry(II)D",
                    "org.apache.commons.math.estimation.EstimatedParameter:isBound()Z",
                    "org.apache.commons.math.estimation.WeightedMeasurement:setIgnored(Z)V",
                    "org.apache.commons.math.linear.RealMatrixImpl:isSingular()Z",
                    "org.apache.commons.math.estimation.EstimatedParameter:<init>(Ljava/lang/String;DZ)V",
                    "org.apache.commons.math.linear.RealMatrixImpl:getDataRef()[[D",
                    "org.apache.commons.math.linear.RealMatrixImpl:luDecompose()V",
                    "org.apache.commons.math.estimation.AbstractEstimator:updateResidualsAndCost()V"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.math.estimation.AbstractEstimator:getCovariances(Lorg/apache/commons/math/estimation/EstimationProblem;)[[D",
                    "org.apache.commons.math.estimation.AbstractEstimator:guessParametersErrors(Lorg/apache/commons/math/estimation/EstimationProblem;)[D"
                ]
            }
        },
        "54": {
            "0": {
                "method_ids": [
                    50,
                    39,
                    51,
                    3,
                    52,
                    54,
                    13,
                    4,
                    5,
                    8
                ],
                "method_signatures": [
                    "org.apache.commons.math.dfp.Dfp:isInfinite()Z",
                    "org.apache.commons.math.dfp.DfpField:setIEEEFlagsBits(I)V",
                    "org.apache.commons.math.dfp.DfpField:computeLn(Lorg/apache/commons/math/dfp/Dfp;Lorg/apache/commons/math/dfp/Dfp;Lorg/apache/commons/math/dfp/Dfp;)Lorg/apache/commons/math/dfp/Dfp;",
                    "org.apache.commons.math.dfp.Dfp:sqrt()Lorg/apache/commons/math/dfp/Dfp;",
                    "org.apache.commons.math.dfp.Dfp:shiftRight()V",
                    "org.apache.commons.math.dfp.Dfp:greaterThan(Lorg/apache/commons/math/dfp/Dfp;)Z",
                    "org.apache.commons.math.dfp.Dfp:newInstance(J)Lorg/apache/commons/math/dfp/Dfp;",
                    "org.apache.commons.math.dfp.Dfp:<init>(Lorg/apache/commons/math/dfp/DfpField;Ljava/lang/String;)V",
                    "org.apache.commons.math.dfp.DfpField:clearIEEEFlags()V",
                    "org.apache.commons.math.dfp.Dfp:toString()Ljava/lang/String;"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.math.dfp.Dfp:<init>(Lorg/apache/commons/math/dfp/DfpField;D)V",
                    "org.apache.commons.math.dfp.Dfp:toDouble()D"
                ]
            }
        },
        "98": {
            "0": {
                "method_ids": [
                    2,
                    1,
                    0
                ],
                "method_signatures": [
                    "org.apache.commons.math.linear.BigMatrixImpl:getColumnDimension()I",
                    "org.apache.commons.math.linear.BigMatrixImpl:<init>([[Ljava/math/BigDecimal;Z)V",
                    "org.apache.commons.math.linear.BigMatrixImpl:getRowDimension()I"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.math.linear.BigMatrixImpl:operate([Ljava/math/BigDecimal;)[Ljava/math/BigDecimal;",
                    "org.apache.commons.math.linear.RealMatrixImpl:operate([D)[D"
                ]
            },
            "1": {
                "method_ids": [
                    0,
                    1,
                    2,
                    3
                ],
                "method_signatures": [
                    "org.apache.commons.math.linear.RealMatrixImpl:operate([D)[D",
                    "org.apache.commons.math.linear.RealMatrixImpl:getColumnDimension()I",
                    "org.apache.commons.math.linear.RealMatrixImpl:getRowDimension()I",
                    "org.apache.commons.math.linear.RealMatrixImpl:<init>([[DZ)V"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.math.linear.BigMatrixImpl:operate([Ljava/math/BigDecimal;)[Ljava/math/BigDecimal;",
                    "org.apache.commons.math.linear.RealMatrixImpl:operate([D)[D"
                ]
            }
        },
        "53": {
            "0": {
                "method_ids": [
                    6,
                    4,
                    2,
                    1,
                    0,
                    3,
                    5
                ],
                "method_signatures": [
                    "org.apache.commons.math.complex.Complex:add(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;",
                    "org.apache.commons.math.complex.Complex:<init>(DD)V",
                    "org.apache.commons.math.complex.Complex:isNaN()Z",
                    "org.apache.commons.math.complex.Complex:getReal()D",
                    "org.apache.commons.math.complex.Complex:getImaginary()D",
                    "org.apache.commons.math.complex.Complex:createComplex(DD)Lorg/apache/commons/math/complex/Complex;",
                    "org.apache.commons.math.util.MathUtils:checkNotNull(Ljava/lang/Object;)V"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.math.complex.Complex:add(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;"
                ]
            }
        },
        "30": {
            "0": {
                "method_ids": [
                    17,
                    7,
                    9,
                    6,
                    20,
                    1,
                    18,
                    4,
                    3,
                    2
                ],
                "method_signatures": [
                    "org.apache.commons.math3.stat.ranking.NaturalRanking$IntDoublePair:getValue()D",
                    "org.apache.commons.math3.stat.ranking.NaturalRanking:rank([D)[D",
                    "org.apache.commons.math3.stat.ranking.NaturalRanking:getNanPositions([Lorg/apache/commons/math3/stat/ranking/NaturalRanking$IntDoublePair;)Ljava/util/List;",
                    "org.apache.commons.math3.stat.ranking.NaturalRanking:restoreNaNs([DLjava/util/List;)V",
                    "org.apache.commons.math3.distribution.NormalDistribution:cumulativeProbability(D)D",
                    "org.apache.commons.math3.stat.inference.MannWhitneyUTest:<init>()V",
                    "org.apache.commons.math3.stat.inference.MannWhitneyUTest:mannWhitneyUTest([D[D)D",
                    "org.apache.commons.math3.stat.ranking.NaturalRanking$IntDoublePair:compareTo(Lorg/apache/commons/math3/stat/ranking/NaturalRanking$IntDoublePair;)I",
                    "org.apache.commons.math3.special.Erf:erf(D)D",
                    "org.apache.commons.math3.stat.ranking.NaturalRanking:<init>(Lorg/apache/commons/math3/stat/ranking/NaNStrategy;Lorg/apache/commons/math3/stat/ranking/TiesStrategy;)V"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.math3.stat.inference.MannWhitneyUTest:calculateAsymptoticPValue(DII)D"
                ]
            }
        },
        "37": {
            "0": {
                "method_ids": [
                    8,
                    0,
                    11,
                    7,
                    6,
                    5,
                    1,
                    2,
                    4,
                    3
                ],
                "method_signatures": [
                    "org.apache.commons.math.complex.Complex:tanh()Lorg/apache/commons/math/complex/Complex;",
                    "org.apache.commons.math.complex.Complex:<init>(DD)V",
                    "org.apache.commons.math.complex.Complex:valueOf(DD)Lorg/apache/commons/math/complex/Complex;",
                    "org.apache.commons.math.util.FastMath:exp(DD[D)D",
                    "org.apache.commons.math.util.FastMath:cosh(D)D",
                    "org.apache.commons.math.util.FastMath:sinQ(DD)D",
                    "org.apache.commons.math.util.FastMath:polySine(D)D",
                    "org.apache.commons.math.complex.Complex:getImaginary()D",
                    "org.apache.commons.math.util.FastMath:polyCosine(D)D",
                    "org.apache.commons.math.complex.Complex:getReal()D"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.math.complex.Complex:tan()Lorg/apache/commons/math/complex/Complex;",
                    "org.apache.commons.math.complex.Complex:tanh()Lorg/apache/commons/math/complex/Complex;"
                ]
            },
            "1": {
                "method_ids": [
                    6,
                    0,
                    1,
                    10,
                    5,
                    11,
                    3,
                    4,
                    7,
                    8
                ],
                "method_signatures": [
                    "org.apache.commons.math.util.FastMath:sinQ(DD)D",
                    "org.apache.commons.math.util.FastMath:sin(D)D",
                    "org.apache.commons.math.util.FastMath:polySine(D)D",
                    "org.apache.commons.math.complex.Complex:createComplex(DD)Lorg/apache/commons/math/complex/Complex;",
                    "org.apache.commons.math.complex.Complex:getReal()D",
                    "org.apache.commons.math.util.FastMath:cosQ(DD)D",
                    "org.apache.commons.math.util.FastMath:exp(D)D",
                    "org.apache.commons.math.complex.Complex:getImaginary()D",
                    "org.apache.commons.math.complex.Complex:tan()Lorg/apache/commons/math/complex/Complex;",
                    "org.apache.commons.math.complex.Complex:valueOf(DD)Lorg/apache/commons/math/complex/Complex;"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.math.complex.Complex:tan()Lorg/apache/commons/math/complex/Complex;",
                    "org.apache.commons.math.complex.Complex:tanh()Lorg/apache/commons/math/complex/Complex;"
                ]
            },
            "2": {
                "method_ids": [
                    10,
                    4,
                    1,
                    11,
                    12,
                    3,
                    5,
                    6,
                    9,
                    0
                ],
                "method_signatures": [
                    "org.apache.commons.math.util.FastMath:exp(D)D",
                    "org.apache.commons.math.util.FastMath:sin(D)D",
                    "org.apache.commons.math.util.FastMath:sinh(D)D",
                    "org.apache.commons.math.complex.Complex:tanh()Lorg/apache/commons/math/complex/Complex;",
                    "org.apache.commons.math.complex.Complex:getReal()D",
                    "org.apache.commons.math.util.FastMath:exp(DD[D)D",
                    "org.apache.commons.math.complex.Complex:<init>(DD)V",
                    "org.apache.commons.math.util.FastMath:cosh(D)D",
                    "org.apache.commons.math.util.FastMath:cos(D)D",
                    "org.apache.commons.math.util.FastMath:polySine(D)D"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.math.complex.Complex:tan()Lorg/apache/commons/math/complex/Complex;",
                    "org.apache.commons.math.complex.Complex:tanh()Lorg/apache/commons/math/complex/Complex;"
                ]
            },
            "3": {
                "method_ids": [
                    7,
                    8,
                    9,
                    10,
                    4,
                    3,
                    1,
                    2,
                    5,
                    6
                ],
                "method_signatures": [
                    "org.apache.commons.math.util.FastMath:sin(D)D",
                    "org.apache.commons.math.complex.Complex:tan()Lorg/apache/commons/math/complex/Complex;",
                    "org.apache.commons.math.complex.Complex:getReal()D",
                    "org.apache.commons.math.util.FastMath:cosh(D)D",
                    "org.apache.commons.math.util.FastMath:cos(D)D",
                    "org.apache.commons.math.util.FastMath:exp(DD[D)D",
                    "org.apache.commons.math.complex.Complex:createComplex(DD)Lorg/apache/commons/math/complex/Complex;",
                    "org.apache.commons.math.util.FastMath:polyCosine(D)D",
                    "org.apache.commons.math.util.FastMath:cosQ(DD)D",
                    "org.apache.commons.math.util.FastMath:exp(D)D"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.math.complex.Complex:tan()Lorg/apache/commons/math/complex/Complex;",
                    "org.apache.commons.math.complex.Complex:tanh()Lorg/apache/commons/math/complex/Complex;"
                ]
            }
        },
        "39": {
            "0": {
                "method_ids": [
                    0,
                    4,
                    64,
                    66,
                    61,
                    57,
                    50,
                    52,
                    51,
                    62
                ],
                "method_signatures": [
                    "org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator:setStepSizeControl(DDDD)V",
                    "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator:setSafety(D)V",
                    "org.apache.commons.math.ode.EquationsMapper:getDimension()I",
                    "org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator:getOrder()I",
                    "org.apache.commons.math.util.FastMath:nextAfter(DD)D",
                    "org.apache.commons.math.ode.nonstiff.RungeKuttaStepInterpolator:<init>(Lorg/apache/commons/math/ode/nonstiff/RungeKuttaStepInterpolator;)V",
                    "org.apache.commons.math.ode.ExpandableStatefulODE:setTime(D)V",
                    "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator:doCopy()Lorg/apache/commons/math/ode/sampling/StepInterpolator;",
                    "org.apache.commons.math.ode.nonstiff.RungeKuttaStepInterpolator:reinitialize(Lorg/apache/commons/math/ode/AbstractIntegrator;[D[[DZLorg/apache/commons/math/ode/EquationsMapper;[Lorg/apache/commons/math/ode/EquationsMapper;)V",
                    "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator:setMaxGrowth(D)V"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator:integrate(Lorg/apache/commons/math/ode/ExpandableStatefulODE;D)V"
                ]
            }
        },
        "106": {
            "0": {
                "method_ids": [
                    13,
                    5,
                    4,
                    1,
                    15,
                    10,
                    3,
                    12,
                    0
                ],
                "method_signatures": [
                    "org.apache.commons.math.fraction.Fraction:reduce()V",
                    "org.apache.commons.math.fraction.FractionFormat:getDefaultNumberFormat(Ljava/util/Locale;)Ljava/text/NumberFormat;",
                    "org.apache.commons.math.fraction.FractionFormat:parseNextCharacter(Ljava/lang/String;Ljava/text/ParsePosition;)C",
                    "org.apache.commons.math.fraction.Fraction:<init>(II)V",
                    "org.apache.commons.math.util.MathUtils:gcd(II)I",
                    "org.apache.commons.math.util.MathUtils:sign(I)I",
                    "org.apache.commons.math.fraction.FractionFormat:getDenominatorFormat()Ljava/text/NumberFormat;",
                    "org.apache.commons.math.fraction.ProperFractionFormat:<init>(Ljava/text/NumberFormat;)V",
                    "org.apache.commons.math.fraction.ProperFractionFormat:setWholeFormat(Ljava/text/NumberFormat;)V"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.math.fraction.ProperFractionFormat:parse(Ljava/lang/String;Ljava/text/ParsePosition;)Lorg/apache/commons/math/fraction/Fraction;"
                ]
            }
        },
        "99": {
            "0": {
                "method_ids": [
                    1,
                    0,
                    2
                ],
                "method_signatures": [
                    "org.apache.commons.math.util.MathUtils:lcm(II)I",
                    "org.apache.commons.math.util.MathUtils:gcd(II)I",
                    "org.apache.commons.math.util.MathUtils:mulAndCheck(II)I"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.math.util.MathUtils:gcd(II)I",
                    "org.apache.commons.math.util.MathUtils:lcm(II)I"
                ]
            },
            "1": {
                "method_ids": [
                    0
                ],
                "method_signatures": [
                    "org.apache.commons.math.util.MathUtils:gcd(II)I"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.math.util.MathUtils:gcd(II)I",
                    "org.apache.commons.math.util.MathUtils:lcm(II)I"
                ]
            }
        },
        "52": {
            "0": {
                "method_ids": [
                    9,
                    6,
                    12,
                    8,
                    7,
                    1,
                    2,
                    4,
                    0,
                    5
                ],
                "method_signatures": [
                    "org.apache.commons.math.geometry.euclidean.threed.Rotation:<init>(Lorg/apache/commons/math/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math/geometry/euclidean/threed/Vector3D;)V",
                    "org.apache.commons.math.geometry.euclidean.threed.Rotation:getQ0()D",
                    "org.apache.commons.math.geometry.euclidean.threed.Vector3D:crossProduct(Lorg/apache/commons/math/geometry/Vector;)Lorg/apache/commons/math/geometry/euclidean/threed/Vector3D;",
                    "org.apache.commons.math.geometry.euclidean.threed.Vector3D:getZ()D",
                    "org.apache.commons.math.geometry.euclidean.threed.Vector3D:dotProduct(Lorg/apache/commons/math/geometry/Vector;)D",
                    "org.apache.commons.math.geometry.euclidean.threed.Vector3D:getY()D",
                    "org.apache.commons.math.util.MathUtils:linearCombination(DDDD)D",
                    "org.apache.commons.math.util.FastMath:sqrt(D)D",
                    "org.apache.commons.math.geometry.euclidean.threed.Vector3D:subtract(Lorg/apache/commons/math/geometry/Vector;)Lorg/apache/commons/math/geometry/euclidean/threed/Vector3D;",
                    "org.apache.commons.math.geometry.euclidean.threed.Vector3D:<init>(DLorg/apache/commons/math/geometry/euclidean/threed/Vector3D;)V"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.math.geometry.euclidean.threed.Rotation:<init>(Lorg/apache/commons/math/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math/geometry/euclidean/threed/Vector3D;)V"
                ]
            }
        },
        "101": {
            "0": {
                "method_ids": [
                    0,
                    13,
                    5,
                    2,
                    1,
                    3,
                    14,
                    4,
                    8,
                    7
                ],
                "method_signatures": [
                    "org.apache.commons.math.complex.ComplexFormat:parse(Ljava/lang/String;Ljava/text/ParsePosition;)Lorg/apache/commons/math/complex/Complex;",
                    "org.apache.commons.math.complex.ComplexFormat:getDefaultNumberFormat()Ljava/text/NumberFormat;",
                    "org.apache.commons.math.complex.ComplexFormat:setRealFormat(Ljava/text/NumberFormat;)V",
                    "org.apache.commons.math.complex.ComplexFormat:<init>(Ljava/lang/String;Ljava/text/NumberFormat;Ljava/text/NumberFormat;)V",
                    "org.apache.commons.math.complex.ComplexFormat:setImaginaryCharacter(Ljava/lang/String;)V",
                    "org.apache.commons.math.complex.ComplexFormat:parseNumber(Ljava/lang/String;Ljava/text/NumberFormat;Ljava/text/ParsePosition;)Ljava/lang/Number;",
                    "org.apache.commons.math.complex.ComplexFormat:parseNextCharacter(Ljava/lang/String;Ljava/text/ParsePosition;)C",
                    "org.apache.commons.math.complex.ComplexFormat:getImaginaryCharacter()Ljava/lang/String;",
                    "org.apache.commons.math.complex.ComplexFormat:getDefaultNumberFormat(Ljava/util/Locale;)Ljava/text/NumberFormat;",
                    "org.apache.commons.math.complex.ComplexFormat:getInstance(Ljava/util/Locale;)Lorg/apache/commons/math/complex/ComplexFormat;"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.math.complex.ComplexFormat:parse(Ljava/lang/String;Ljava/text/ParsePosition;)Lorg/apache/commons/math/complex/Complex;"
                ]
            },
            "1": {
                "method_ids": [
                    0,
                    1,
                    2,
                    11,
                    3,
                    4,
                    5,
                    6,
                    7,
                    8
                ],
                "method_signatures": [
                    "org.apache.commons.math.complex.ComplexFormat:parse(Ljava/lang/String;Ljava/text/ParsePosition;)Lorg/apache/commons/math/complex/Complex;",
                    "org.apache.commons.math.complex.ComplexFormat:getInstance(Ljava/util/Locale;)Lorg/apache/commons/math/complex/ComplexFormat;",
                    "org.apache.commons.math.complex.ComplexFormat:parseNextCharacter(Ljava/lang/String;Ljava/text/ParsePosition;)C",
                    "org.apache.commons.math.complex.ComplexFormat:<init>(Ljava/text/NumberFormat;)V",
                    "org.apache.commons.math.complex.ComplexFormat:parseAndIgnoreWhitespace(Ljava/lang/String;Ljava/text/ParsePosition;)V",
                    "org.apache.commons.math.complex.ComplexFormat:<init>(Ljava/lang/String;Ljava/text/NumberFormat;)V",
                    "org.apache.commons.math.complex.ComplexFormat:getDefaultNumberFormat()Ljava/text/NumberFormat;",
                    "org.apache.commons.math.complex.ComplexFormat:getImaginaryCharacter()Ljava/lang/String;",
                    "org.apache.commons.math.complex.ComplexFormat:getDefaultNumberFormat(Ljava/util/Locale;)Ljava/text/NumberFormat;",
                    "org.apache.commons.math.complex.ComplexFormat:setImaginaryFormat(Ljava/text/NumberFormat;)V"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.math.complex.ComplexFormat:parse(Ljava/lang/String;Ljava/text/ParsePosition;)Lorg/apache/commons/math/complex/Complex;"
                ]
            }
        },
        "55": {
            "0": {
                "method_ids": [
                    0,
                    1,
                    4,
                    3,
                    2
                ],
                "method_signatures": [
                    "org.apache.commons.math.geometry.Vector3D:crossProduct(Lorg/apache/commons/math/geometry/Vector3D;Lorg/apache/commons/math/geometry/Vector3D;)Lorg/apache/commons/math/geometry/Vector3D;",
                    "org.apache.commons.math.geometry.Vector3D:getZ()D",
                    "org.apache.commons.math.geometry.Vector3D:getY()D",
                    "org.apache.commons.math.geometry.Vector3D:getX()D",
                    "org.apache.commons.math.geometry.Vector3D:<init>(DDD)V"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.math.geometry.Vector3D:crossProduct(Lorg/apache/commons/math/geometry/Vector3D;Lorg/apache/commons/math/geometry/Vector3D;)Lorg/apache/commons/math/geometry/Vector3D;"
                ]
            }
        },
        "97": {
            "0": {
                "method_ids": [
                    1,
                    2,
                    4,
                    3,
                    5,
                    6,
                    7,
                    0
                ],
                "method_signatures": [
                    "org.apache.commons.math.analysis.BrentSolver:solve(DD)D",
                    "org.apache.commons.math.analysis.UnivariateRealSolverImpl:<init>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;ID)V",
                    "org.apache.commons.math.analysis.UnivariateRealSolverImpl:verifyInterval(DD)V",
                    "org.apache.commons.math.analysis.BrentSolver:solve(DDDDDD)D",
                    "org.apache.commons.math.analysis.BrentSolver:<init>(Lorg/apache/commons/math/analysis/UnivariateRealFunction;)V",
                    "org.apache.commons.math.analysis.UnivariateRealSolverImpl:setResult(DI)V",
                    "org.apache.commons.math.analysis.UnivariateRealSolverImpl:clearResult()V",
                    "org.apache.commons.math.analysis.UnivariateRealSolverImpl:getAbsoluteAccuracy()D"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.math.analysis.BrentSolver:solve(DD)D"
                ]
            }
        },
        "63": {
            "0": {
                "method_ids": [
                    1,
                    0
                ],
                "method_signatures": [
                    "org.apache.commons.math.util.MathUtils:equals(DD)Z",
                    "org.apache.commons.math.util.MathUtils:equals([D[D)Z"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.math.util.MathUtils:equals(DD)Z"
                ]
            }
        },
        "64": {
            "0": {
                "method_ids": [
                    3,
                    4,
                    5,
                    20,
                    19,
                    10,
                    11,
                    12,
                    1,
                    2
                ],
                "method_signatures": [
                    "org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer:doOptimize()Lorg/apache/commons/math/optimization/VectorialPointValuePair;",
                    "org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer:getChiSquare()D",
                    "org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer:updateResidualsAndCost()V",
                    "org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer:updateJacobian()V",
                    "org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer:getRMS()D",
                    "org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer:qTy([D)V",
                    "org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer:optimize(Lorg/apache/commons/math/analysis/DifferentiableMultivariateVectorialFunction;[D[D[D)Lorg/apache/commons/math/optimization/VectorialPointValuePair;",
                    "org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer:setCostRelativeTolerance(D)V",
                    "org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer:setQRRankingThreshold(D)V",
                    "org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer:setInitialStepBoundFactor(D)V"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer:doOptimize()Lorg/apache/commons/math/optimization/VectorialPointValuePair;"
                ]
            },
            "1": {
                "method_ids": [
                    0,
                    15,
                    14,
                    22,
                    9,
                    18,
                    19,
                    2,
                    1,
                    3
                ],
                "method_signatures": [
                    "org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer:getRMS()D",
                    "org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer:getChiSquare()D",
                    "org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer:qrDecomposition()V",
                    "org.apache.commons.math.optimization.VectorialPointValuePair:<init>([D[D)V",
                    "org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer:doOptimize()Lorg/apache/commons/math/optimization/VectorialPointValuePair;",
                    "org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer:setOrthoTolerance(D)V",
                    "org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer:determineLMParameter([DD[D[D[D[D)V",
                    "org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer:setParRelativeTolerance(D)V",
                    "org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer:setInitialStepBoundFactor(D)V",
                    "org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer:setCostRelativeTolerance(D)V"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer:doOptimize()Lorg/apache/commons/math/optimization/VectorialPointValuePair;"
                ]
            }
        },
        "90": {
            "0": {
                "method_ids": [
                    0,
                    1
                ],
                "method_signatures": [
                    "org.apache.commons.math.stat.Frequency:addValue(Ljava/lang/Object;)V",
                    "org.apache.commons.math.stat.Frequency:<init>()V"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.math.stat.Frequency:addValue(Ljava/lang/Object;)V"
                ]
            }
        },
        "46": {
            "0": {
                "method_ids": [
                    1,
                    3,
                    0,
                    2
                ],
                "method_signatures": [
                    "org.apache.commons.math.complex.Complex:<init>(DD)V",
                    "org.apache.commons.math.complex.Complex:equals(Ljava/lang/Object;)Z",
                    "org.apache.commons.math.complex.Complex:toString()Ljava/lang/String;",
                    "org.apache.commons.math.util.MathUtils:checkNotNull(Ljava/lang/Object;)V"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.math.complex.Complex:divide(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;",
                    "org.apache.commons.math.complex.Complex:divide(D)Lorg/apache/commons/math/complex/Complex;"
                ]
            },
            "1": {
                "method_ids": [
                    4,
                    16,
                    8,
                    13,
                    10,
                    9,
                    1,
                    3,
                    2,
                    5
                ],
                "method_signatures": [
                    "org.apache.commons.math.complex.Complex:atan()Lorg/apache/commons/math/complex/Complex;",
                    "org.apache.commons.math.complex.Complex:isNaN()Z",
                    "org.apache.commons.math.util.FastMath:atan2(DD)D",
                    "org.apache.commons.math.complex.Complex:createComplex(DD)Lorg/apache/commons/math/complex/Complex;",
                    "org.apache.commons.math.complex.Complex:add(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;",
                    "org.apache.commons.math.complex.Complex:log()Lorg/apache/commons/math/complex/Complex;",
                    "org.apache.commons.math.complex.Complex:subtract(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;",
                    "org.apache.commons.math.util.FastMath:log(D)D",
                    "org.apache.commons.math.complex.Complex:multiply(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;",
                    "org.apache.commons.math.complex.Complex:getReal()D"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.math.complex.Complex:divide(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;",
                    "org.apache.commons.math.complex.Complex:divide(D)Lorg/apache/commons/math/complex/Complex;"
                ]
            }
        },
        "79": {
            "0": {
                "method_ids": [
                    7,
                    1,
                    2,
                    0,
                    5,
                    8,
                    3,
                    4,
                    6,
                    9
                ],
                "method_signatures": [
                    "org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer:assignPointsToClusters(Ljava/util/Collection;Ljava/util/Collection;)V",
                    "org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer:cluster(Ljava/util/Collection;II)Ljava/util/List;",
                    "org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer:getNearestCluster(Ljava/util/Collection;Lorg/apache/commons/math/stat/clustering/Clusterable;)Lorg/apache/commons/math/stat/clustering/Cluster;",
                    "org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer:chooseInitialCenters(Ljava/util/Collection;ILjava/util/Random;)Ljava/util/List;",
                    "org.apache.commons.math.stat.clustering.KMeansPlusPlusClusterer:<init>(Ljava/util/Random;)V",
                    "org.apache.commons.math.stat.clustering.Cluster:<init>(Lorg/apache/commons/math/stat/clustering/Clusterable;)V",
                    "org.apache.commons.math.stat.clustering.Cluster:getCenter()Lorg/apache/commons/math/stat/clustering/Clusterable;",
                    "org.apache.commons.math.stat.clustering.EuclideanIntegerPoint:<init>([I)V",
                    "org.apache.commons.math.util.MathUtils:distance([I[I)D",
                    "org.apache.commons.math.stat.clustering.EuclideanIntegerPoint:distanceFrom(Lorg/apache/commons/math/stat/clustering/EuclideanIntegerPoint;)D"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.math.util.MathUtils:distance([I[I)D"
                ]
            }
        },
        "41": {
            "0": {
                "method_ids": [
                    1,
                    16,
                    14,
                    13,
                    11,
                    0,
                    8,
                    7,
                    12,
                    3
                ],
                "method_signatures": [
                    "org.apache.commons.math.stat.descriptive.moment.Variance:evaluate([D[DII)D",
                    "org.apache.commons.math.stat.descriptive.summary.Sum:evaluate([D[DII)D",
                    "org.apache.commons.math.stat.descriptive.moment.Variance:evaluate([D[D)D",
                    "org.apache.commons.math.stat.descriptive.summary.Sum:evaluate([DII)D",
                    "org.apache.commons.math.stat.descriptive.moment.Mean:<init>()V",
                    "org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic:test([DIIZ)Z",
                    "org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic:test([D[DIIZ)Z",
                    "org.apache.commons.math.util.FastMath:sqrt(D)D",
                    "org.apache.commons.math.stat.descriptive.moment.Mean:evaluate([D[DII)D",
                    "org.apache.commons.math.stat.descriptive.moment.Variance:clear()V"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.math.stat.descriptive.moment.Variance:evaluate([D[DDII)D"
                ]
            }
        },
        "83": {
            "0": {
                "method_ids": [
                    1,
                    53,
                    44,
                    51,
                    62,
                    42,
                    54,
                    57,
                    64,
                    60
                ],
                "method_signatures": [
                    "org.apache.commons.math.optimization.linear.SimplexSolver:doOptimize()Lorg/apache/commons/math/optimization/RealPointValuePair;",
                    "org.apache.commons.math.optimization.linear.SimplexSolver:solvePhase1(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V",
                    "org.apache.commons.math.optimization.linear.SimplexSolver:isOptimal(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)Z",
                    "org.apache.commons.math.optimization.linear.SimplexTableau:getRhsOffset()I",
                    "org.apache.commons.math.optimization.linear.SimplexTableau:getWidth()I",
                    "org.apache.commons.math.optimization.linear.LinearObjectiveFunction:getCoefficients()Lorg/apache/commons/math/linear/RealVector;",
                    "org.apache.commons.math.optimization.linear.SimplexTableau:getNormalizedConstraints()Ljava/util/List;",
                    "org.apache.commons.math.optimization.linear.SimplexTableau:getOriginalNumDecisionVariables()I",
                    "org.apache.commons.math.optimization.linear.AbstractLinearOptimizer:optimize(Lorg/apache/commons/math/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math/optimization/GoalType;Z)Lorg/apache/commons/math/optimization/RealPointValuePair;",
                    "org.apache.commons.math.optimization.RealPointValuePair:getValue()D"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.math.optimization.linear.SimplexTableau:getBasicRow(IZ)Ljava/lang/Integer;",
                    "org.apache.commons.math.optimization.linear.SimplexTableau:getSolution()Lorg/apache/commons/math/optimization/RealPointValuePair;"
                ]
            }
        },
        "77": {
            "0": {
                "method_ids": [
                    11,
                    17,
                    2,
                    12,
                    1,
                    4,
                    5,
                    19,
                    3,
                    0
                ],
                "method_signatures": [
                    "org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:next()Lorg/apache/commons/math/linear/RealVector$Entry;",
                    "org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;",
                    "org.apache.commons.math.util.OpenIntToDoubleHashMap:computeCapacity(I)I",
                    "org.apache.commons.math.linear.OpenMapRealVector:getLInfNorm()D",
                    "org.apache.commons.math.util.OpenIntToDoubleHashMap:findInsertionIndex([I[BII)I",
                    "org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:hasNext()Z",
                    "org.apache.commons.math.linear.OpenMapRealVector:<init>([DD)V",
                    "org.apache.commons.math.util.OpenIntToDoubleHashMap:shouldGrowTable()Z",
                    "org.apache.commons.math.linear.AbstractRealVector:getL1Norm()D",
                    "org.apache.commons.math.linear.OpenMapRealVector$OpenMapSparseIterator:<init>(Lorg/apache/commons/math/linear/OpenMapRealVector;)V"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.math.linear.ArrayRealVector:getLInfNorm()D",
                    "org.apache.commons.math.linear.OpenMapRealVector:getLInfNorm()D"
                ]
            },
            "1": {
                "method_ids": [
                    0,
                    2,
                    3,
                    1
                ],
                "method_signatures": [
                    "org.apache.commons.math.linear.ArrayRealVector:getLInfNorm()D",
                    "org.apache.commons.math.linear.ArrayRealVector:getNorm()D",
                    "org.apache.commons.math.linear.ArrayRealVector:getL1Norm()D",
                    "org.apache.commons.math.linear.ArrayRealVector:<init>([D)V"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.math.linear.ArrayRealVector:getLInfNorm()D",
                    "org.apache.commons.math.linear.OpenMapRealVector:getLInfNorm()D"
                ]
            }
        },
        "48": {
            "0": {
                "method_ids": [
                    28,
                    33,
                    4,
                    3,
                    12,
                    5,
                    20,
                    32,
                    1,
                    2
                ],
                "method_signatures": [
                    "org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils:verifyInterval(DD)V",
                    "org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver:solve(ILorg/apache/commons/math/analysis/UnivariateRealFunction;DDD)D",
                    "org.apache.commons.math.analysis.solvers.BaseSecantSolver:solve(ILorg/apache/commons/math/analysis/UnivariateRealFunction;DDDLorg/apache/commons/math/analysis/solvers/AllowedSolution;)D",
                    "org.apache.commons.math.exception.TooManyEvaluationsException:<init>(Ljava/lang/Number;)V",
                    "org.apache.commons.math.exception.util.ArgUtils:flatten([Ljava/lang/Object;)[Ljava/lang/Object;",
                    "org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver:setup(ILorg/apache/commons/math/analysis/UnivariateRealFunction;DDD)V",
                    "org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver:verifyBracketing(DD)V",
                    "org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver:getMin()D",
                    "org.apache.commons.math.exception.MaxCountExceededException:<init>(Ljava/lang/Number;)V",
                    "org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils:isBracketing(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)Z"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.math.analysis.solvers.BaseSecantSolver:doSolve()D"
                ]
            }
        },
        "70": {
            "0": {
                "method_ids": [
                    5,
                    1,
                    6,
                    8,
                    3,
                    0,
                    4,
                    2,
                    7
                ],
                "method_signatures": [
                    "org.apache.commons.math.ConvergingAlgorithmImpl:<init>(ID)V",
                    "org.apache.commons.math.analysis.solvers.BisectionSolver:<init>()V",
                    "org.apache.commons.math.analysis.solvers.BisectionSolver:solve(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D",
                    "org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl:clearResult()V",
                    "org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl:verifyInterval(DD)V",
                    "org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl:<init>(ID)V",
                    "org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils:midpoint(DD)D",
                    "org.apache.commons.math.analysis.solvers.BisectionSolver:solve(DD)D",
                    "org.apache.commons.math.analysis.solvers.BisectionSolver:solve(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDD)D"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.math.analysis.solvers.BisectionSolver:solve(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDD)D"
                ]
            }
        },
        "84": {
            "0": {
                "method_ids": [
                    25,
                    23,
                    15,
                    12,
                    10,
                    1,
                    16,
                    11,
                    19,
                    4
                ],
                "method_signatures": [
                    "org.apache.commons.math.optimization.direct.DirectSearchOptimizer:setConvergenceChecker(Lorg/apache/commons/math/optimization/RealConvergenceChecker;)V",
                    "org.apache.commons.math.optimization.RealPointValuePair:getValue()D",
                    "org.apache.commons.math.ConvergenceException:<init>(Ljava/lang/String;[Ljava/lang/Object;)V",
                    "org.apache.commons.math.optimization.direct.DirectSearchOptimizer:setStartConfiguration([D)V",
                    "org.apache.commons.math.optimization.OptimizationException:<init>(Ljava/lang/Throwable;)V",
                    "org.apache.commons.math.optimization.direct.DirectSearchOptimizer:incrementIterationsCounter()V",
                    "org.apache.commons.math.optimization.direct.DirectSearchOptimizer:optimize(Lorg/apache/commons/math/analysis/MultivariateRealFunction;Lorg/apache/commons/math/optimization/GoalType;[D)Lorg/apache/commons/math/optimization/RealPointValuePair;",
                    "org.apache.commons.math.optimization.direct.MultiDirectional:evaluateNewSimplex([Lorg/apache/commons/math/optimization/RealPointValuePair;DLjava/util/Comparator;)Lorg/apache/commons/math/optimization/RealPointValuePair;",
                    "org.apache.commons.math.optimization.direct.DirectSearchOptimizer$1:compare(Lorg/apache/commons/math/optimization/RealPointValuePair;Lorg/apache/commons/math/optimization/RealPointValuePair;)I",
                    "org.apache.commons.math.optimization.direct.MultiDirectional:<init>()V"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.math.optimization.direct.MultiDirectional:iterateSimplex(Ljava/util/Comparator;)V"
                ]
            },
            "1": {
                "method_ids": [
                    19,
                    21,
                    10,
                    8,
                    7,
                    5,
                    12,
                    0,
                    4,
                    3
                ],
                "method_signatures": [
                    "org.apache.commons.math.optimization.RealPointValuePair:<init>([DDZ)V",
                    "org.apache.commons.math.optimization.direct.DirectSearchOptimizer:<init>()V",
                    "org.apache.commons.math.optimization.RealPointValuePair:getPoint()[D",
                    "org.apache.commons.math.optimization.direct.DirectSearchOptimizer:evaluateSimplex(Ljava/util/Comparator;)V",
                    "org.apache.commons.math.optimization.SimpleScalarValueChecker:<init>()V",
                    "org.apache.commons.math.optimization.direct.MultiDirectional:evaluateNewSimplex([Lorg/apache/commons/math/optimization/RealPointValuePair;DLjava/util/Comparator;)Lorg/apache/commons/math/optimization/RealPointValuePair;",
                    "org.apache.commons.math.optimization.RealPointValuePair:getValue()D",
                    "org.apache.commons.math.optimization.direct.DirectSearchOptimizer:incrementIterationsCounter()V",
                    "org.apache.commons.math.optimization.RealPointValuePair:getPointRef()[D",
                    "org.apache.commons.math.optimization.direct.DirectSearchOptimizer:setConvergenceChecker(Lorg/apache/commons/math/optimization/RealConvergenceChecker;)V"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.math.optimization.direct.MultiDirectional:iterateSimplex(Ljava/util/Comparator;)V"
                ]
            }
        },
        "24": {
            "0": {
                "method_ids": [
                    43,
                    12,
                    11,
                    24,
                    22,
                    21,
                    7,
                    19,
                    14,
                    18
                ],
                "method_signatures": [
                    "org.apache.commons.math3.util.FastMath$CodyWaite:<init>(DD)V",
                    "org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer:optimize(ILorg/apache/commons/math3/analysis/UnivariateFunction;Lorg/apache/commons/math3/optimization/GoalType;DD)Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;",
                    "org.apache.commons.math3.util.MathArrays:checkOrder([DLorg/apache/commons/math3/util/MathArrays$OrderDirection;ZZ)Z",
                    "org.apache.commons.math3.optimization.univariate.BrentOptimizer:<init>(DD)V",
                    "org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer:computeObjectiveValue(D)D",
                    "org.apache.commons.math3.analysis.FunctionUtils$4:<init>([Lorg/apache/commons/math3/analysis/UnivariateFunction;)V",
                    "org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer:getEvaluations()I",
                    "org.apache.commons.math3.analysis.function.Sin:value(D)D",
                    "org.apache.commons.math3.analysis.function.StepFunction:<init>([D[D)V",
                    "org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer:getGoalType()Lorg/apache/commons/math3/optimization/GoalType;"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.math3.optimization.univariate.BrentOptimizer:doOptimize()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;"
                ]
            }
        },
        "23": {
            "0": {
                "method_ids": [
                    5,
                    8,
                    26,
                    40,
                    39,
                    22,
                    9,
                    10,
                    11,
                    14
                ],
                "method_signatures": [
                    "org.apache.commons.math3.util.FastMath:polyCosine(D)D",
                    "org.apache.commons.math3.util.FastMath:cosQ(DD)D",
                    "org.apache.commons.math3.util.MathArrays:copyOf([D)[D",
                    "org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer:getMin()D",
                    "org.apache.commons.math3.util.MathArrays:checkOrder([DLorg/apache/commons/math3/util/MathArrays$OrderDirection;ZZ)Z",
                    "org.apache.commons.math3.optimization.univariate.BrentOptimizer:<init>(DDLorg/apache/commons/math3/optimization/ConvergenceChecker;)V",
                    "org.apache.commons.math3.optimization.univariate.BrentOptimizer:best(Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;Z)Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;",
                    "org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer:getGoalType()Lorg/apache/commons/math3/optimization/GoalType;",
                    "org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer:getConvergenceChecker()Lorg/apache/commons/math3/optimization/ConvergenceChecker;",
                    "org.apache.commons.math3.util.MathArrays:checkOrder([D)V"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.math3.optimization.univariate.BrentOptimizer:doOptimize()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;"
                ]
            }
        },
        "4": {
            "0": {
                "method_ids": [
                    29,
                    0,
                    17,
                    26,
                    11,
                    23,
                    19,
                    13,
                    16,
                    18
                ],
                "method_signatures": [
                    "org.apache.commons.math3.util.FastMath:getExponent(D)I",
                    "org.apache.commons.math3.util.FastMath:sinQ(DD)D",
                    "org.apache.commons.math3.geometry.euclidean.twod.SubLine:<init>(Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;)V",
                    "org.apache.commons.math3.util.FastMath:atan2(DD)D",
                    "org.apache.commons.math3.geometry.euclidean.oned.Vector1D:<init>(D)V",
                    "org.apache.commons.math3.util.FastMath:polySine(D)D",
                    "org.apache.commons.math3.geometry.euclidean.twod.Line:<init>(Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;)V",
                    "org.apache.commons.math3.geometry.partitioning.BSPTree:<init>(Lorg/apache/commons/math3/geometry/partitioning/SubHyperplane;Lorg/apache/commons/math3/geometry/partitioning/BSPTree;Lorg/apache/commons/math3/geometry/partitioning/BSPTree;Ljava/lang/Object;)V",
                    "org.apache.commons.math3.geometry.euclidean.oned.OrientedPoint:<init>(Lorg/apache/commons/math3/geometry/euclidean/oned/Vector1D;Z)V",
                    "org.apache.commons.math3.geometry.partitioning.AbstractSubHyperplane:getHyperplane()Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.math3.geometry.euclidean.threed.SubLine:intersection(Lorg/apache/commons/math3/geometry/euclidean/threed/SubLine;Z)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;",
                    "org.apache.commons.math3.geometry.euclidean.twod.SubLine:intersection(Lorg/apache/commons/math3/geometry/euclidean/twod/SubLine;Z)Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;"
                ]
            },
            "1": {
                "method_ids": [
                    3,
                    25,
                    14,
                    20,
                    12,
                    28,
                    4,
                    1,
                    0,
                    5
                ],
                "method_signatures": [
                    "org.apache.commons.math3.geometry.euclidean.threed.SubLine:intersection(Lorg/apache/commons/math3/geometry/euclidean/threed/SubLine;Z)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;",
                    "org.apache.commons.math3.geometry.euclidean.threed.Vector3D:subtract(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;",
                    "org.apache.commons.math3.geometry.euclidean.threed.SubLine:buildIntervalSet(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)Lorg/apache/commons/math3/geometry/euclidean/oned/IntervalsSet;",
                    "org.apache.commons.math3.geometry.euclidean.threed.Line:contains(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)Z",
                    "org.apache.commons.math3.geometry.euclidean.threed.Line:distance(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)D",
                    "org.apache.commons.math3.geometry.partitioning.AbstractSubHyperplane:<init>(Lorg/apache/commons/math3/geometry/partitioning/Hyperplane;Lorg/apache/commons/math3/geometry/partitioning/Region;)V",
                    "org.apache.commons.math3.geometry.euclidean.threed.Vector3D:getNormSq()D",
                    "org.apache.commons.math3.util.MathArrays:linearCombination(DDDD)D",
                    "org.apache.commons.math3.geometry.euclidean.threed.SubLine:<init>(Lorg/apache/commons/math3/geometry/euclidean/threed/Line;Lorg/apache/commons/math3/geometry/euclidean/oned/IntervalsSet;)V",
                    "org.apache.commons.math3.geometry.euclidean.threed.SubLine:<init>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.math3.geometry.euclidean.threed.SubLine:intersection(Lorg/apache/commons/math3/geometry/euclidean/threed/SubLine;Z)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;",
                    "org.apache.commons.math3.geometry.euclidean.twod.SubLine:intersection(Lorg/apache/commons/math3/geometry/euclidean/twod/SubLine;Z)Lorg/apache/commons/math3/geometry/euclidean/twod/Vector2D;"
                ]
            }
        },
        "15": {
            "0": {
                "method_ids": [
                    6,
                    5,
                    15,
                    0,
                    1,
                    4,
                    3,
                    2,
                    10,
                    12
                ],
                "method_signatures": [
                    "org.apache.commons.math3.util.FastMath:pow(DD)D",
                    "org.apache.commons.math3.dfp.Dfp:<init>(Lorg/apache/commons/math3/dfp/DfpField;Ljava/lang/String;)V",
                    "org.apache.commons.math3.dfp.Dfp:round(I)I",
                    "org.apache.commons.math3.util.FastMath:exp(DD[D)D",
                    "org.apache.commons.math3.dfp.DfpField:getRoundingMode()Lorg/apache/commons/math3/dfp/DfpField$RoundingMode;",
                    "org.apache.commons.math3.random.BitsStreamGenerator:clear()V",
                    "org.apache.commons.math3.random.BitsStreamGenerator:<init>()V",
                    "org.apache.commons.math3.util.FastMath:max(II)I",
                    "org.apache.commons.math3.random.MersenneTwister:setSeed([I)V",
                    "org.apache.commons.math3.dfp.DfpField:<init>(IZ)V"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.math3.util.FastMath:pow(DD)D"
                ]
            }
        },
        "3": {
            "0": {
                "method_ids": [
                    0
                ],
                "method_signatures": [
                    "org.apache.commons.math3.util.MathArrays:linearCombination([D[D)D"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.math3.util.MathArrays:linearCombination([D[D)D"
                ]
            }
        },
        "85": {
            "0": {
                "method_ids": [
                    10,
                    9,
                    3,
                    13,
                    4,
                    18,
                    12,
                    19,
                    25,
                    1
                ],
                "method_signatures": [
                    "org.apache.commons.math.distribution.AbstractContinuousDistribution:inverseCumulativeProbability(D)D",
                    "org.apache.commons.math.MathException:<init>(Ljava/lang/Throwable;)V",
                    "org.apache.commons.math.ConvergenceException:<init>(Ljava/lang/String;[Ljava/lang/Object;)V",
                    "org.apache.commons.math.distribution.NormalDistributionImpl:getDomainLowerBound(D)D",
                    "org.apache.commons.math.distribution.NormalDistributionImpl:cumulativeProbability(D)D",
                    "org.apache.commons.math.MathException:<init>(Ljava/lang/String;[Ljava/lang/Object;)V",
                    "org.apache.commons.math.MathException:getLocalizedMessage()Ljava/lang/String;",
                    "org.apache.commons.math.distribution.NormalDistributionImpl:getDomainUpperBound(D)D",
                    "org.apache.commons.math.distribution.NormalDistributionImpl:getInitialDomain(D)D",
                    "org.apache.commons.math.distribution.NormalDistributionImpl:setMean(D)V"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils:bracket(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDI)[D"
                ]
            }
        },
        "71": {
            "0": {
                "method_ids": [
                    48,
                    53,
                    51,
                    52,
                    54,
                    0,
                    1,
                    2,
                    3,
                    4
                ],
                "method_signatures": [
                    "org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator:getOrder()I",
                    "org.apache.commons.math.ode.events.EventState:evaluateStep(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z",
                    "org.apache.commons.math.ode.events.EventState:getEventTime()D",
                    "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator:setMaxGrowth(D)V",
                    "org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator:setInitialStepSize(D)V",
                    "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator:integrate(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;D[DD[D)D",
                    "org.apache.commons.math.ode.sampling.AbstractStepInterpolator:setInterpolatedTime(D)V",
                    "org.apache.commons.math.ode.AbstractIntegrator:setMaxEvaluations(I)V",
                    "org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator:estimateError([[D[D[DD)D",
                    "org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl:verifyInterval(DD)V"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.math.ode.nonstiff.RungeKuttaIntegrator:integrate(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;D[DD[D)D",
                    "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator:integrate(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;D[DD[D)D"
                ]
            },
            "1": {
                "method_ids": [
                    50,
                    53,
                    51,
                    7,
                    27,
                    39,
                    32,
                    19,
                    6,
                    4
                ],
                "method_signatures": [
                    "org.apache.commons.math.ode.events.EventState:reinitializeBegin(D[D)V",
                    "org.apache.commons.math.ode.nonstiff.RungeKuttaIntegrator:integrate(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;D[DD[D)D",
                    "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegrator:<init>(D)V",
                    "org.apache.commons.math.ode.events.CombinedEventsManager:reset(D[D)Z",
                    "org.apache.commons.math.ode.AbstractIntegrator:resetEvaluations()V",
                    "org.apache.commons.math.ode.AbstractIntegrator:requiresDenseOutput()Z",
                    "org.apache.commons.math.ode.AbstractIntegrator$EndTimeChecker:eventOccurred(D[DZ)I",
                    "org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl:verifyInterval(DD)V",
                    "org.apache.commons.math.ConvergingAlgorithmImpl:setAbsoluteAccuracy(D)V",
                    "org.apache.commons.math.ConvergingAlgorithmImpl:setMaximalIterationCount(I)V"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.math.ode.nonstiff.RungeKuttaIntegrator:integrate(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;D[DD[D)D",
                    "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator:integrate(Lorg/apache/commons/math/ode/FirstOrderDifferentialEquations;D[DD[D)D"
                ]
            }
        },
        "76": {
            "0": {
                "method_ids": [
                    63,
                    51,
                    56,
                    12,
                    15,
                    6,
                    18,
                    2,
                    1,
                    4
                ],
                "method_signatures": [
                    "org.apache.commons.math.linear.Array2DRowRealMatrix:getColumnDimension()I",
                    "org.apache.commons.math.linear.EigenDecompositionImpl:progressiveQuotientDifferenceWithShift([D[DD)V",
                    "org.apache.commons.math.linear.Array2DRowRealMatrix:addToEntry(IID)V",
                    "org.apache.commons.math.linear.EigenDecompositionImpl:decompose()V",
                    "org.apache.commons.math.linear.MatrixUtils:checkMultiplicationCompatible(Lorg/apache/commons/math/linear/AnyMatrix;Lorg/apache/commons/math/linear/AnyMatrix;)V",
                    "org.apache.commons.math.linear.SingularValueDecompositionImpl:getS()Lorg/apache/commons/math/linear/RealMatrix;",
                    "org.apache.commons.math.linear.EigenDecompositionImpl:computeSplits()Ljava/util/List;",
                    "org.apache.commons.math.linear.BiDiagonalTransformer:transformToUpperBiDiagonal()V",
                    "org.apache.commons.math.linear.MatrixUtils:checkSubMatrixIndex(Lorg/apache/commons/math/linear/AnyMatrix;IIII)V",
                    "org.apache.commons.math.linear.EigenDecompositionImpl:<init>([D[DD)V"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.math.linear.SingularValueDecompositionImpl:getU()Lorg/apache/commons/math/linear/RealMatrix;",
                    "org.apache.commons.math.linear.SingularValueDecompositionImpl:getV()Lorg/apache/commons/math/linear/RealMatrix;"
                ]
            },
            "1": {
                "method_ids": [
                    54,
                    9,
                    41,
                    52,
                    56,
                    11,
                    8,
                    51,
                    2
                ],
                "method_signatures": [
                    "org.apache.commons.math.linear.SingularValueDecompositionImpl:getU()Lorg/apache/commons/math/linear/RealMatrix;",
                    "org.apache.commons.math.linear.SingularValueDecompositionImpl:getSingularValues()[D",
                    "org.apache.commons.math.linear.SingularValueDecompositionImpl:getVT()Lorg/apache/commons/math/linear/RealMatrix;",
                    "org.apache.commons.math.linear.Array2DRowRealMatrix:multiply(Lorg/apache/commons/math/linear/Array2DRowRealMatrix;)Lorg/apache/commons/math/linear/Array2DRowRealMatrix;",
                    "org.apache.commons.math.linear.Array2DRowRealMatrix:getData()[[D",
                    "org.apache.commons.math.linear.BiDiagonalTransformer:getU()Lorg/apache/commons/math/linear/RealMatrix;",
                    "org.apache.commons.math.linear.BiDiagonalTransformer:transformToUpperBiDiagonal()V",
                    "org.apache.commons.math.linear.MatrixUtils:createRealDiagonalMatrix([D)Lorg/apache/commons/math/linear/RealMatrix;",
                    "org.apache.commons.math.linear.Array2DRowRealMatrix:getColumnDimension()I"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.math.linear.SingularValueDecompositionImpl:getU()Lorg/apache/commons/math/linear/RealMatrix;",
                    "org.apache.commons.math.linear.SingularValueDecompositionImpl:getV()Lorg/apache/commons/math/linear/RealMatrix;"
                ]
            }
        },
        "82": {
            "0": {
                "method_ids": [
                    61,
                    58,
                    54,
                    50,
                    56,
                    41,
                    17,
                    14,
                    7,
                    22
                ],
                "method_signatures": [
                    "org.apache.commons.math.linear.Array2DRowRealMatrix:copyIn([[D)V",
                    "org.apache.commons.math.optimization.linear.AbstractLinearOptimizer:setMaxIterations(I)V",
                    "org.apache.commons.math.optimization.linear.SimplexTableau:divideRow(ID)V",
                    "org.apache.commons.math.optimization.linear.SimplexTableau:getBasicRowForSolution(I)Ljava/lang/Integer;",
                    "org.apache.commons.math.optimization.linear.SimplexTableau:getEntry(II)D",
                    "org.apache.commons.math.optimization.linear.AbstractLinearOptimizer:optimize(Lorg/apache/commons/math/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math/optimization/GoalType;Z)Lorg/apache/commons/math/optimization/RealPointValuePair;",
                    "org.apache.commons.math.optimization.linear.SimplexSolver:<init>(D)V",
                    "org.apache.commons.math.linear.ArrayRealVector:checkVectorDimensions(I)V",
                    "org.apache.commons.math.optimization.linear.SimplexTableau:getNormalizedConstraints()Ljava/util/List;",
                    "org.apache.commons.math.optimization.linear.SimplexTableau:getBasicRow(IZ)Ljava/lang/Integer;"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.math.optimization.linear.SimplexSolver:getPivotRow(ILorg/apache/commons/math/optimization/linear/SimplexTableau;)Ljava/lang/Integer;"
                ]
            }
        },
        "49": {
            "0": {
                "method_ids": [
                    10,
                    7,
                    6,
                    11,
                    3,
                    4,
                    1,
                    0,
                    2,
                    5
                ],
                "method_signatures": [
                    "org.apache.commons.math.util.OpenIntToDoubleHashMap:iterator()Lorg/apache/commons/math/util/OpenIntToDoubleHashMap$Iterator;",
                    "org.apache.commons.math.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector;",
                    "org.apache.commons.math.linear.OpenMapRealVector:setEntry(ID)V",
                    "org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator:advance()V",
                    "org.apache.commons.math.util.OpenIntToDoubleHashMap:get(I)D",
                    "org.apache.commons.math.util.OpenIntToDoubleHashMap:containsKey(II)Z",
                    "org.apache.commons.math.linear.AbstractRealVector:checkIndex(I)V",
                    "org.apache.commons.math.linear.AbstractRealVector:checkVectorDimensions(I)V",
                    "org.apache.commons.math.util.OpenIntToDoubleHashMap:<init>(D)V",
                    "org.apache.commons.math.util.OpenIntToDoubleHashMap:hashOf(I)I"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.math.linear.OpenMapRealVector:ebeDivide(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector;",
                    "org.apache.commons.math.linear.OpenMapRealVector:ebeDivide([D)Lorg/apache/commons/math/linear/OpenMapRealVector;",
                    "org.apache.commons.math.linear.OpenMapRealVector:ebeMultiply(Lorg/apache/commons/math/linear/RealVector;)Lorg/apache/commons/math/linear/OpenMapRealVector;",
                    "org.apache.commons.math.linear.OpenMapRealVector:ebeMultiply([D)Lorg/apache/commons/math/linear/OpenMapRealVector;"
                ]
            }
        },
        "40": {
            "0": {
                "method_ids": [
                    28,
                    9,
                    13,
                    38,
                    16,
                    1,
                    20,
                    39,
                    26,
                    4
                ],
                "method_signatures": [
                    "org.apache.commons.math.exception.MathIllegalStateException:<init>()V",
                    "org.apache.commons.math.exception.MaxCountExceededException:<init>(Lorg/apache/commons/math/exception/util/Localizable;Ljava/lang/Number;[Ljava/lang/Object;)V",
                    "org.apache.commons.math.util.Incrementor$1:trigger(I)V",
                    "org.apache.commons.math.exception.util.ExceptionContext:<init>(Ljava/lang/Throwable;)V",
                    "org.apache.commons.math.util.MathUtils:checkNotNull(Ljava/lang/Object;)V",
                    "org.apache.commons.math.exception.MaxCountExceededException:<init>(Ljava/lang/Number;)V",
                    "org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver:getStartValue()D",
                    "org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver:computeObjectiveValue(D)D",
                    "org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver:solve(ILorg/apache/commons/math/analysis/UnivariateFunction;DDDLorg/apache/commons/math/analysis/solvers/AllowedSolution;)D",
                    "org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils:verifyInterval(DD)V"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.math.analysis.solvers.BracketingNthOrderBrentSolver:doSolve()D"
                ]
            }
        },
        "47": {
            "0": {
                "method_ids": [
                    4,
                    5,
                    2,
                    0,
                    3,
                    1
                ],
                "method_signatures": [
                    "org.apache.commons.math.complex.Complex:<init>(DD)V",
                    "org.apache.commons.math.complex.Complex:equals(Ljava/lang/Object;)Z",
                    "org.apache.commons.math.complex.Complex:toString()Ljava/lang/String;",
                    "org.apache.commons.math.complex.Complex:getReal()D",
                    "org.apache.commons.math.complex.Complex:getImaginary()D",
                    "org.apache.commons.math.util.MathUtils:checkNotNull(Ljava/lang/Object;)V"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.math.complex.Complex:<init>(DD)V",
                    "org.apache.commons.math.complex.Complex:divide(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;",
                    "org.apache.commons.math.complex.Complex:divide(D)Lorg/apache/commons/math/complex/Complex;"
                ]
            },
            "1": {
                "method_ids": [
                    3,
                    2,
                    1,
                    17,
                    7,
                    4,
                    14,
                    12,
                    11,
                    8
                ],
                "method_signatures": [
                    "org.apache.commons.math.complex.Complex:atan()Lorg/apache/commons/math/complex/Complex;",
                    "org.apache.commons.math.complex.Complex:log()Lorg/apache/commons/math/complex/Complex;",
                    "org.apache.commons.math.util.FastMath:sqrt(D)D",
                    "org.apache.commons.math.complex.Complex:isInfinite()Z",
                    "org.apache.commons.math.complex.Complex:abs()D",
                    "org.apache.commons.math.complex.Complex:multiply(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;",
                    "org.apache.commons.math.complex.Complex:divide(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;",
                    "org.apache.commons.math.util.FastMath:log(D[D)D",
                    "org.apache.commons.math.util.MathUtils:checkNotNull(Ljava/lang/Object;)V",
                    "org.apache.commons.math.complex.Complex:getImaginary()D"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.math.complex.Complex:<init>(DD)V",
                    "org.apache.commons.math.complex.Complex:divide(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;",
                    "org.apache.commons.math.complex.Complex:divide(D)Lorg/apache/commons/math/complex/Complex;"
                ]
            }
        },
        "78": {
            "0": {
                "method_ids": [
                    1,
                    0,
                    26,
                    16,
                    25,
                    2,
                    12,
                    4,
                    3,
                    11
                ],
                "method_signatures": [
                    "org.apache.commons.math.ode.events.EventState:evaluateStep(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z",
                    "org.apache.commons.math.ode.events.EventState:getEventTime()D",
                    "org.apache.commons.math.ode.events.EventState:stepAccepted(D[D)V",
                    "org.apache.commons.math.ode.sampling.AbstractStepInterpolator:getCurrentTime()D",
                    "org.apache.commons.math.ode.events.EventState$1:value(D)D",
                    "org.apache.commons.math.analysis.solvers.BrentSolver:solve(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D",
                    "org.apache.commons.math.ode.sampling.AbstractStepInterpolator:getInterpolatedState()[D",
                    "org.apache.commons.math.ode.sampling.AbstractStepInterpolator:shift()V",
                    "org.apache.commons.math.analysis.solvers.BrentSolver:<init>()V",
                    "org.apache.commons.math.ode.sampling.AbstractStepInterpolator:setInterpolatedTime(D)V"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.math.ode.events.EventState:evaluateStep(Lorg/apache/commons/math/ode/sampling/StepInterpolator;)Z"
                ]
            }
        },
        "2": {
            "0": {
                "method_ids": [
                    7,
                    8,
                    4,
                    23,
                    10,
                    12,
                    24,
                    6,
                    5,
                    14
                ],
                "method_signatures": [
                    "org.apache.commons.math3.distribution.AbstractIntegerDistribution:sample()I",
                    "org.apache.commons.math3.distribution.AbstractIntegerDistribution:inverseCumulativeProbability(D)I",
                    "org.apache.commons.math3.distribution.HypergeometricDistribution:getSupportUpperBound()I",
                    "org.apache.commons.math3.distribution.HypergeometricDistribution:getSupportLowerBound()I",
                    "org.apache.commons.math3.distribution.HypergeometricDistribution:calculateNumericalVariance()D",
                    "org.apache.commons.math3.random.AbstractWell:setSeed([I)V",
                    "org.apache.commons.math3.random.RandomDataImpl:<init>()V",
                    "org.apache.commons.math3.distribution.HypergeometricDistribution:getPopulationSize()I",
                    "org.apache.commons.math3.distribution.AbstractIntegerDistribution:<init>(Lorg/apache/commons/math3/random/RandomGenerator;)V",
                    "org.apache.commons.math3.distribution.HypergeometricDistribution:<init>(III)V"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.math3.distribution.HypergeometricDistribution:getNumericalMean()D"
                ]
            }
        },
        "13": {
            "0": {
                "method_ids": [
                    64,
                    16,
                    59,
                    62,
                    55,
                    5,
                    4,
                    58,
                    24
                ],
                "method_signatures": [
                    "org.apache.commons.math3.linear.DiagonalMatrix:getData()[[D",
                    "org.apache.commons.math3.linear.TriDiagonalTransformer:getQ()Lorg/apache/commons/math3/linear/RealMatrix;",
                    "org.apache.commons.math3.linear.EigenDecomposition:<init>(Lorg/apache/commons/math3/linear/RealMatrix;)V",
                    "org.apache.commons.math3.util.Incrementor:resetCount()V",
                    "org.apache.commons.math3.optimization.fitting.PolynomialFitter:fit([D)[D",
                    "org.apache.commons.math3.optimization.fitting.CurveFitter:fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D",
                    "org.apache.commons.math3.optimization.fitting.CurveFitter:<init>(Lorg/apache/commons/math3/optimization/DifferentiableMultivariateVectorOptimizer;)V",
                    "org.apache.commons.math3.linear.DiagonalMatrix:<init>([D)V",
                    "org.apache.commons.math3.linear.TriDiagonalTransformer:getMainDiagonalRef()[D"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer:squareRoot(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;"
                ]
            }
        },
        "5": {
            "0": {
                "method_ids": [
                    3,
                    1,
                    0,
                    2
                ],
                "method_signatures": [
                    "org.apache.commons.math3.complex.Complex:reciprocal()Lorg/apache/commons/math3/complex/Complex;",
                    "org.apache.commons.math3.complex.Complex:equals(Ljava/lang/Object;)Z",
                    "org.apache.commons.math3.complex.Complex:toString()Ljava/lang/String;",
                    "org.apache.commons.math3.complex.Complex:<init>(DD)V"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.math3.complex.Complex:reciprocal()Lorg/apache/commons/math3/complex/Complex;"
                ]
            }
        },
        "14": {
            "0": {
                "method_ids": [
                    37,
                    43,
                    1,
                    12,
                    11,
                    6,
                    25,
                    32,
                    16,
                    10
                ],
                "method_signatures": [
                    "org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunction()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunction;",
                    "org.apache.commons.math3.analysis.polynomials.PolynomialFunction:evaluate([DD)D",
                    "org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction$1:<init>(Lorg/apache/commons/math3/fitting/CurveFitter$TheoreticalValuesFunction;)V",
                    "org.apache.commons.math3.fitting.PolynomialFitter:fit([D)[D",
                    "org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer:<init>(DDDDD)V",
                    "org.apache.commons.math3.fitting.CurveFitter:fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D",
                    "org.apache.commons.math3.fitting.CurveFitter$TheoreticalValuesFunction:getModelFunctionJacobian()Lorg/apache/commons/math3/optim/nonlinear/vector/ModelFunctionJacobian;",
                    "org.apache.commons.math3.optim.BaseMultivariateOptimizer:<init>(Lorg/apache/commons/math3/optim/ConvergenceChecker;)V",
                    "org.apache.commons.math3.fitting.WeightedObservedPoint:getY()D",
                    "org.apache.commons.math3.optim.nonlinear.vector.Target:<init>([D)V"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.math3.optim.nonlinear.vector.Weight:<init>([D)V",
                    "org.apache.commons.math3.optim.nonlinear.vector.jacobian.AbstractLeastSquaresOptimizer:squareRoot(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;"
                ]
            }
        },
        "22": {
            "0": {
                "method_ids": [
                    5,
                    2,
                    1,
                    0,
                    3,
                    4,
                    12,
                    11,
                    10,
                    6
                ],
                "method_signatures": [
                    "org.apache.commons.math3.distribution.FDistribution:isSupportLowerBoundInclusive()Z",
                    "org.apache.commons.math3.distribution.FDistribution:getSupportLowerBound()D",
                    "org.apache.commons.math3.random.RandomDataImpl:<init>()V",
                    "org.apache.commons.math3.special.Beta:logBeta(DDDI)D",
                    "org.apache.commons.math3.special.Gamma:logGamma(D)D",
                    "org.apache.commons.math3.special.Beta:logBeta(DD)D",
                    "org.apache.commons.math3.distribution.FDistribution:density(D)D",
                    "org.apache.commons.math3.distribution.FDistribution:<init>(DD)V",
                    "org.apache.commons.math3.random.BitsStreamGenerator:clear()V",
                    "org.apache.commons.math3.random.AbstractWell:<init>(IIII[I)V"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.math3.distribution.UniformRealDistribution:isSupportUpperBoundInclusive()Z",
                    "org.apache.commons.math3.distribution.FDistribution:isSupportLowerBoundInclusive()Z"
                ]
            },
            "1": {
                "method_ids": [
                    2,
                    1,
                    3,
                    5,
                    4,
                    8,
                    7,
                    11,
                    6,
                    9
                ],
                "method_signatures": [
                    "org.apache.commons.math3.distribution.UniformRealDistribution:isSupportUpperBoundInclusive()Z",
                    "org.apache.commons.math3.distribution.UniformRealDistribution:getSupportUpperBound()D",
                    "org.apache.commons.math3.distribution.UniformRealDistribution:<init>(DD)V",
                    "org.apache.commons.math3.distribution.AbstractRealDistribution:<init>(Lorg/apache/commons/math3/random/RandomGenerator;)V",
                    "org.apache.commons.math3.random.BitsStreamGenerator:clear()V",
                    "org.apache.commons.math3.distribution.UniformRealDistribution:density(D)D",
                    "org.apache.commons.math3.random.RandomDataImpl:<init>()V",
                    "org.apache.commons.math3.random.AbstractWell:setSeed(J)V",
                    "org.apache.commons.math3.random.BitsStreamGenerator:<init>()V",
                    "org.apache.commons.math3.random.AbstractWell:<init>(IIII)V"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.math3.distribution.UniformRealDistribution:isSupportUpperBoundInclusive()Z",
                    "org.apache.commons.math3.distribution.FDistribution:isSupportLowerBoundInclusive()Z"
                ]
            }
        },
        "25": {
            "0": {
                "method_ids": [
                    14,
                    1,
                    7,
                    13,
                    2,
                    3,
                    4,
                    11,
                    5,
                    6
                ],
                "method_signatures": [
                    "org.apache.commons.math3.optimization.fitting.HarmonicFitter$ParameterGuesser:<init>([Lorg/apache/commons/math3/optimization/fitting/WeightedObservedPoint;)V",
                    "org.apache.commons.math3.util.FastMath:cos(D)D",
                    "org.apache.commons.math3.util.FastMath:cosQ(DD)D",
                    "org.apache.commons.math3.optimization.fitting.WeightedObservedPoint:<init>(DDD)V",
                    "org.apache.commons.math3.optimization.fitting.HarmonicFitter$ParameterGuesser:guessAOmega()V",
                    "org.apache.commons.math3.util.FastMath:sin(D)D",
                    "org.apache.commons.math3.util.FastMath:sqrt(D)D",
                    "org.apache.commons.math3.util.FastMath:atan2(DD)D",
                    "org.apache.commons.math3.util.FastMath:sinQ(DD)D",
                    "org.apache.commons.math3.optimization.fitting.WeightedObservedPoint:getY()D"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.math3.optimization.fitting.HarmonicFitter$ParameterGuesser:guessAOmega()V"
                ]
            }
        }
    }
}