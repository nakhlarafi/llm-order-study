{
    "bug_id": 43,
    "test_id": 3,
    "test_name": "org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.testOverrideGeoMeanWithMathClass",
    "test_body": null,
    "stack_trace": "",
    "covered_methods": [
        {
            "method_signature": "org.apache.commons.math.util.FastMath:sqrt(D)D",
            "method_body": "public static double sqrt(final double a) {\nreturn Math.sqrt(a);\n}",
            "method_id": 0
        },
        {
            "method_signature": "org.apache.commons.math.util.FastMath:log(D)D",
            "method_body": "public static double log(final double x) {\nreturn log(x, null);\n}",
            "method_id": 1
        },
        {
            "method_signature": "org.apache.commons.math.util.FastMath:log(D[D)D",
            "method_body": "private static double log(final double x, final double[] hiPrec) {\nif (x==0) { // Handle special case of +0/-0\n}",
            "method_id": 2
        },
        {
            "method_signature": "org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic:test([DIIZ)Z",
            "method_body": "protected boolean test(final double[] values, final int begin, final int length, final boolean allowEmpty){\nif (values == null) {\n}",
            "method_id": 3
        },
        {
            "method_signature": "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic:evaluate([D)D",
            "method_body": "public double evaluate(final double[] values) {\nif (values == null) {\n}",
            "method_id": 4
        },
        {
            "method_signature": "org.apache.commons.math.stat.descriptive.summary.Sum:<init>()V",
            "method_body": "public Sum() {\n}",
            "method_id": 5
        },
        {
            "method_signature": "org.apache.commons.math.stat.descriptive.summary.Sum:increment(D)V",
            "method_body": "public void increment(final double d) {\nvalue += d;\n}",
            "method_id": 6
        },
        {
            "method_signature": "org.apache.commons.math.stat.descriptive.summary.SumOfSquares:<init>()V",
            "method_body": "public SumOfSquares() {\n}",
            "method_id": 7
        },
        {
            "method_signature": "org.apache.commons.math.stat.descriptive.summary.SumOfSquares:increment(D)V",
            "method_body": "public void increment(final double d) {\nvalue += d * d;\n}",
            "method_id": 8
        },
        {
            "method_signature": "org.apache.commons.math.stat.descriptive.summary.SumOfLogs:<init>()V",
            "method_body": "public SumOfLogs() {\n}",
            "method_id": 9
        },
        {
            "method_signature": "org.apache.commons.math.stat.descriptive.summary.SumOfLogs:increment(D)V",
            "method_body": "public void increment(final double d) {\nvalue += FastMath.log(d);\n}",
            "method_id": 10
        },
        {
            "method_signature": "org.apache.commons.math.stat.descriptive.rank.Min:<init>()V",
            "method_body": "public Min() {\n}",
            "method_id": 11
        },
        {
            "method_signature": "org.apache.commons.math.stat.descriptive.rank.Min:increment(D)V",
            "method_body": "public void increment(final double d) {\nif (d < value || Double.isNaN(value)) {\n}",
            "method_id": 12
        },
        {
            "method_signature": "org.apache.commons.math.stat.descriptive.rank.Max:<init>()V",
            "method_body": "public Max() {\n}",
            "method_id": 13
        },
        {
            "method_signature": "org.apache.commons.math.stat.descriptive.rank.Max:increment(D)V",
            "method_body": "public void increment(final double d) {\nif (d > value || Double.isNaN(value)) {\n}",
            "method_id": 14
        },
        {
            "method_signature": "org.apache.commons.math.stat.descriptive.moment.Mean:<init>(Lorg/apache/commons/math/stat/descriptive/moment/FirstMoment;)V",
            "method_body": "public Mean(final FirstMoment m1) {\n}",
            "method_id": 15
        },
        {
            "method_signature": "org.apache.commons.math.stat.descriptive.moment.FirstMoment:<init>()V",
            "method_body": "public FirstMoment() {\n}",
            "method_id": 16
        },
        {
            "method_signature": "org.apache.commons.math.stat.descriptive.moment.FirstMoment:increment(D)V",
            "method_body": "public void increment(final double d) {\nif (n == 0) {\n}",
            "method_id": 17
        },
        {
            "method_signature": "org.apache.commons.math.stat.descriptive.moment.Variance:<init>(Lorg/apache/commons/math/stat/descriptive/moment/SecondMoment;)V",
            "method_body": "public Variance(final SecondMoment m2) {\n}",
            "method_id": 18
        },
        {
            "method_signature": "org.apache.commons.math.stat.descriptive.moment.SecondMoment:<init>()V",
            "method_body": "public SecondMoment() {\nsuper();\n}",
            "method_id": 19
        },
        {
            "method_signature": "org.apache.commons.math.stat.descriptive.moment.SecondMoment:increment(D)V",
            "method_body": "public void increment(final double d) {\nif (n < 1) {\n}",
            "method_id": 20
        },
        {
            "method_signature": "org.apache.commons.math.stat.descriptive.moment.GeometricMean:<init>(Lorg/apache/commons/math/stat/descriptive/summary/SumOfLogs;)V",
            "method_body": "public GeometricMean(SumOfLogs sumOfLogs) {\n}",
            "method_id": 21
        },
        {
            "method_signature": "org.apache.commons.math.stat.descriptive.SummaryStatistics:addValue(D)V",
            "method_body": "public void addValue(double value) {\nsumImpl.increment(value);\n}",
            "method_id": 22
        },
        {
            "method_signature": "org.apache.commons.math.stat.descriptive.SummaryStatistics:checkEmpty()V",
            "method_body": "private void checkEmpty() {\nif (n > 0) {\n}",
            "method_id": 23
        },
        {
            "method_signature": "org.apache.commons.math.util.FastMath:exp(D)D",
            "method_body": "public static double exp(double x) {\nreturn exp(x, 0.0, null);\n}",
            "method_id": 24
        },
        {
            "method_signature": "org.apache.commons.math.util.FastMath:exp(DD[D)D",
            "method_body": "private static double exp(double x, double extra, double[] hiPrec) {\nif (x < 0.0) {\n}",
            "method_id": 25
        },
        {
            "method_signature": "org.apache.commons.math.stat.descriptive.summary.SumOfLogs:getN()J",
            "method_body": "public long getN() {\nreturn n;\n}",
            "method_id": 26
        },
        {
            "method_signature": "org.apache.commons.math.stat.descriptive.summary.SumOfLogs:evaluate([DII)D",
            "method_body": "public double evaluate(final double[] values, final int begin, final int length) {\ndouble sumLog = Double.NaN;\n}",
            "method_id": 27
        },
        {
            "method_signature": "org.apache.commons.math.stat.descriptive.moment.GeometricMean:<init>()V",
            "method_body": "public GeometricMean() {\n}",
            "method_id": 28
        },
        {
            "method_signature": "org.apache.commons.math.stat.descriptive.moment.GeometricMean:getResult()D",
            "method_body": "public double getResult() {\nif (sumOfLogs.getN() > 0) {\n}",
            "method_id": 29
        },
        {
            "method_signature": "org.apache.commons.math.stat.descriptive.moment.GeometricMean:evaluate([DII)D",
            "method_body": "public double evaluate(\nreturn FastMath.exp(\n}",
            "method_id": 30
        },
        {
            "method_signature": "org.apache.commons.math.stat.descriptive.SummaryStatistics:getGeometricMean()D",
            "method_body": "public double getGeometricMean() {\nreturn geoMeanImpl.getResult();\n}",
            "method_id": 31
        },
        {
            "method_signature": "org.apache.commons.math.stat.descriptive.SummaryStatistics:setGeoMeanImpl(Lorg/apache/commons/math/stat/descriptive/StorelessUnivariateStatistic;)V",
            "method_body": "public void setGeoMeanImpl(StorelessUnivariateStatistic geoMeanImpl) {\ncheckEmpty();\n}",
            "method_id": 32
        }
    ]
}