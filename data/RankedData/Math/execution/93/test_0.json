{
    "bug_id": 93,
    "test_id": 0,
    "test_name": "org.apache.commons.math.util.MathUtilsTest.testFactorial",
    "test_body": "234: public void testFactorial() {\n235: for (int i = 1; i < 21; i++) {\n236: assertEquals(i + \"! \", factorial(i), MathUtils.factorial(i));\n237: assertEquals(i + \"! \", (double)factorial(i), MathUtils.factorialDouble(i), Double.MIN_VALUE);\n238: assertEquals(i + \"! \", Math.log((double)factorial(i)), MathUtils.factorialLog(i), 10E-12);\n239: }\n240: 241: assertEquals(\"0\", 1, MathUtils.factorial(0));\n242: assertEquals(\"0\", 1.0d, MathUtils.factorialDouble(0), 1E-14);\n243: assertEquals(\"0\", 0.0d, MathUtils.factorialLog(0), 1E-14);\n244: }\n",
    "stack_trace": "",
    "covered_methods": [
        {
            "method_signature": "org.apache.commons.math.util.MathUtils:factorial(I)J",
            "method_body": "public static long factorial(final int n) {\nlong result = Math.round(factorialDouble(n));\n}",
            "method_id": 0
        },
        {
            "method_signature": "org.apache.commons.math.util.MathUtils:factorialDouble(I)D",
            "method_body": "public static double factorialDouble(final int n) {\nif (n < 0) {\n}",
            "method_id": 1
        },
        {
            "method_signature": "org.apache.commons.math.util.MathUtils:factorialLog(I)D",
            "method_body": "public static double factorialLog(final int n) {\nif (n < 0) {\n}",
            "method_id": 2
        }
    ]
}