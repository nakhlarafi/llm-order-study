{
    "bug_id": 89,
    "test_id": 0,
    "test_name": "org.apache.commons.math.stat.FrequencyTest.testAddNonComparable",
    "test_body": "193: public void testAddNonComparable(){\n194: try {\n195: f.addValue(new Object()); // This was previously OK\n196: fail(\"Expected IllegalArgumentException\");\n197: } catch (IllegalArgumentException expected) {\n198: }\n199: f.clear();\n200: f.addValue(1);\n201: try {\n202: f.addValue(new Object());\n203: fail(\"Expected IllegalArgumentException\");\n204: } catch (IllegalArgumentException expected) {\n205: }\n206: }\n",
    "stack_trace": "",
    "covered_methods": [
        {
            "method_signature": "org.apache.commons.math.stat.Frequency:<init>()V",
            "method_body": "public Frequency() {\n}",
            "method_id": 0
        },
        {
            "method_signature": "org.apache.commons.math.stat.Frequency:addValue(Ljava/lang/Object;)V",
            "method_body": "public void addValue(Object v) {\naddValue((Comparable<?>) v);\n}",
            "method_id": 1
        }
    ]
}