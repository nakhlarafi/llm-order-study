{
    "bug_id": 94,
    "test_id": 0,
    "test_name": "org.apache.commons.math.util.MathUtilsTest.testGcd",
    "test_body": "273: public void testGcd() {\n274: int a = 30;\n275: int b = 50;\n276: int c = 77;\n277: 278: assertEquals(0, MathUtils.gcd(0, 0));\n279: 280: assertEquals(b, MathUtils.gcd(0, b));\n281: assertEquals(a, MathUtils.gcd(a, 0));\n282: assertEquals(b, MathUtils.gcd(0, -b));\n283: assertEquals(a, MathUtils.gcd(-a, 0));\n284: 285: assertEquals(10, MathUtils.gcd(a, b));\n286: assertEquals(10, MathUtils.gcd(-a, b));\n287: assertEquals(10, MathUtils.gcd(a, -b));\n288: assertEquals(10, MathUtils.gcd(-a, -b));\n289: 290: assertEquals(1, MathUtils.gcd(a, c));\n291: assertEquals(1, MathUtils.gcd(-a, c));\n292: assertEquals(1, MathUtils.gcd(a, -c));\n293: assertEquals(1, MathUtils.gcd(-a, -c));\n294: 295: assertEquals(3 * (1<<15), MathUtils.gcd(3 * (1<<20), 9 * (1<<15)));\n296: 297: }\n",
    "stack_trace": "junit.framework.AssertionFailedError: expected:<98304> but was:<3440640>\nat junit.framework.Assert.fail(Assert.java:57)\nat junit.framework.Assert.failNotEquals(Assert.java:329)\nat junit.framework.Assert.assertEquals(Assert.java:78)\nat junit.framework.Assert.assertEquals(Assert.java:234)\nat junit.framework.Assert.assertEquals(Assert.java:241)\nat junit.framework.TestCase.assertEquals(TestCase.java:409)\nat org.apache.commons.math.util.MathUtilsTest.testGcd(MathUtilsTest.java:295)",
    "covered_methods": [
        {
            "method_signature": "org.apache.commons.math.util.MathUtils:gcd(II)I",
            "method_body": "public static int gcd(int u, int v) {\nif (u * v == 0) {\nreturn (Math.abs(u) + Math.abs(v));\nif (u > 0) {\nu = -u;\nif (v > 0) {\nv = -v;\nint k = 0;\nwhile ((u & 1) == 0 && (v & 1) == 0 && k < 31) { // while u and v are\nu /= 2;\nv /= 2;\nk++; // cast out twos.\nif (k == 31) {\nint t = ((u & 1) == 1) ? v : -(u / 2)/* B3 */;\nwhile ((t & 1) == 0) { // while t is even..\nt /= 2; // cast out twos\nif (t > 0) {\nu = -t;\nv = t;\nt = (v - u) / 2;\n} while (t != 0);\nreturn -u * (1 << k); // gcd is u*2^k\n}",
            "method_id": 0
        }
    ]
}