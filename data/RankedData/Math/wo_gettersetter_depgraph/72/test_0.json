{
    "bug_id": 72,
    "test_id": 0,
    "test_name": "org.apache.commons.math.analysis.solvers.BrentSolverTest.testRootEndpoints",
    "test_body": "305: public void testRootEndpoints() throws Exception {\n306: UnivariateRealFunction f = new SinFunction();\n307: UnivariateRealSolver solver = new BrentSolver();\n308: 309: // endpoint is root\n310: double result = solver.solve(f, Math.PI, 4);\n311: assertEquals(Math.PI, result, solver.getAbsoluteAccuracy());\n312: 313: result = solver.solve(f, 3, Math.PI);\n314: assertEquals(Math.PI, result, solver.getAbsoluteAccuracy());\n315: 316: result = solver.solve(f, Math.PI, 4, 3.5);\n317: assertEquals(Math.PI, result, solver.getAbsoluteAccuracy());\n318: 319: result = solver.solve(f, 3, Math.PI, 3.07);\n320: assertEquals(Math.PI, result, solver.getAbsoluteAccuracy());\n321: 322: }\n",
    "stack_trace": "junit.framework.AssertionFailedError: expected:<3.141592653589793> but was:<1.2246467991473532E-16>\nat junit.framework.Assert.fail(Assert.java:57)\nat junit.framework.Assert.failNotEquals(Assert.java:329)\nat junit.framework.Assert.assertEquals(Assert.java:120)\nat junit.framework.Assert.assertEquals(Assert.java:129)\nat junit.framework.TestCase.assertEquals(TestCase.java:288)\nat org.apache.commons.math.analysis.solvers.BrentSolverTest.testRootEndpoints(BrentSolverTest.java:317)",
    "covered_methods": [
        {
            "method_signature": "org.apache.commons.math.analysis.solvers.BrentSolver:solve(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDD)D",
            "method_body": "public double solve(final UnivariateRealFunction f,\nclearResult();\nverifySequence(min, initial, max);\ndouble yInitial = f.value(initial);\nif (Math.abs(yInitial) <= functionValueAccuracy) {\ndouble yMin = f.value(min);\nif (Math.abs(yMin) <= functionValueAccuracy) {\nsetResult(yMin, 0);\nreturn result;\n}",
            "method_id": 0
        },
        {
            "method_signature": "org.apache.commons.math.analysis.solvers.BrentSolver:solve(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D",
            "method_body": "public double solve(final UnivariateRealFunction f,\nclearResult();\nverifyInterval(min, max);\ndouble ret = Double.NaN;\ndouble yMin = f.value(min);\ndouble yMax = f.value(max);\ndouble sign = yMin * yMax;\nif (sign > 0) {\nif (Math.abs(yMin) <= functionValueAccuracy) {\n} else if (Math.abs(yMax) <= functionValueAccuracy) {\nsetResult(max, 0);\nret = max;\n} else if (sign < 0){\nret = solve(f, min, yMin, max, yMax, min, yMin);\nreturn ret;\n}",
            "method_id": 1
        },
        {
            "method_signature": "org.apache.commons.math.analysis.solvers.BrentSolver:solve(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDDDDD)D",
            "method_body": "private double solve(final UnivariateRealFunction f,\ndouble delta = x1 - x0;\ndouble oldDelta = delta;\nint i = 0;\nwhile (i < maximalIterationCount) {\nif (Math.abs(y2) < Math.abs(y1)) {\nx0 = x1;\nx1 = x2;\nx2 = x0;\ny0 = y1;\ny1 = y2;\ny2 = y0;\nif (Math.abs(y1) <= functionValueAccuracy) {\nsetResult(x1, i);\nreturn result;\n}",
            "method_id": 2
        },
        {
            "method_signature": "org.apache.commons.math.analysis.solvers.BrentSolver:<init>()V",
            "method_body": "public BrentSolver() {\nsuper(100, 1E-6);\n}",
            "method_id": 3
        },
        {
            "method_signature": "org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl:verifySequence(DDD)V",
            "method_body": "protected void verifySequence(final double lower, final double initial, final double upper) {\nif (!isSequence(lower, initial, upper)) {\n}",
            "method_id": 4
        },
        {
            "method_signature": "org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl:clearResult()V",
            "method_body": "protected final void clearResult() {\nthis.iterationCount = 0;\nthis.resultComputed = false;\n}",
            "method_id": 5
        },
        {
            "method_signature": "org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl:setResult(DI)V",
            "method_body": "protected final void setResult(final double newResult, final int iterationCount) {\nthis.result         = newResult;\nthis.iterationCount = iterationCount;\nthis.resultComputed = true;\n}",
            "method_id": 6
        },
        {
            "method_signature": "org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl:verifyInterval(DD)V",
            "method_body": "protected void verifyInterval(final double lower, final double upper) {\nif (lower >= upper) {\n}",
            "method_id": 7
        },
        {
            "method_signature": "org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl:<init>(ID)V",
            "method_body": "protected UnivariateRealSolverImpl(final int defaultMaximalIterationCount,\nsuper(defaultMaximalIterationCount, defaultAbsoluteAccuracy);\nthis.defaultFunctionValueAccuracy = 1.0e-15;\nthis.functionValueAccuracy = defaultFunctionValueAccuracy;\n}",
            "method_id": 8
        },
        {
            "method_signature": "org.apache.commons.math.ConvergingAlgorithmImpl:<init>(ID)V",
            "method_body": "protected ConvergingAlgorithmImpl(final int defaultMaximalIterationCount,\nfinal double defaultAbsoluteAccuracy) {\nthis.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;\nthis.defaultRelativeAccuracy = 1.0e-14;\nthis.absoluteAccuracy = defaultAbsoluteAccuracy;\nthis.relativeAccuracy = defaultRelativeAccuracy;\nthis.defaultMaximalIterationCount = defaultMaximalIterationCount;\nthis.maximalIterationCount = defaultMaximalIterationCount;\nthis.iterationCount = 0;\n}",
            "method_id": 9
        }
    ]
}