{
    "bug_id": 37,
    "test_id": 1,
    "test_name": "org.apache.commons.math.complex.ComplexTest.testTanh",
    "test_body": "1032: public void testTanh() {\n1033: Complex z = new Complex(3, 4);\n1034: Complex expected = new Complex(1.00071, 0.00490826);\n1035: TestUtils.assertEquals(expected, z.tanh(), 1.0e-5);\n1036: /* Check that no overflow occurs (MATH-722) */\n1037: Complex actual = new Complex(1E10, 3.0).tanh();\n1038: expected = new Complex(1, 0);\n1039: TestUtils.assertEquals(expected, actual, 1.0e-5);\n1040: actual = new Complex(-1E10, 3.0).tanh();\n1041: expected = new Complex(-1, 0);\n1042: TestUtils.assertEquals(expected, actual, 1.0e-5);\n1043: }\n",
    "stack_trace": "",
    "covered_methods": [
        {
            "method_signature": "org.apache.commons.math.util.FastMath:exp(D)D",
            "method_body": "public static double exp(double x) {\nreturn exp(x, 0.0, null);\n}",
            "method_id": 0
        },
        {
            "method_signature": "org.apache.commons.math.util.FastMath:polySine(D)D",
            "method_body": "private static double polySine(final double x)\ndouble x2 = x*x;\n}",
            "method_id": 1
        },
        {
            "method_signature": "org.apache.commons.math.util.FastMath:polyCosine(D)D",
            "method_body": "private static double polyCosine(double x) {\ndouble x2 = x*x;\n}",
            "method_id": 2
        },
        {
            "method_signature": "org.apache.commons.math.util.FastMath:sinQ(DD)D",
            "method_body": "private static double sinQ(double xa, double xb) {\nint idx = (int) ((xa * 8.0) + 0.5);\n}",
            "method_id": 3
        },
        {
            "method_signature": "org.apache.commons.math.util.FastMath:cosQ(DD)D",
            "method_body": "private static double cosQ(double xa, double xb) {\nfinal double pi2a = 1.5707963267948966;\n}",
            "method_id": 4
        },
        {
            "method_signature": "org.apache.commons.math.util.FastMath:sin(D)D",
            "method_body": "public static double sin(double x) {\nboolean negative = false;\n}",
            "method_id": 5
        },
        {
            "method_signature": "org.apache.commons.math.util.FastMath:cos(D)D",
            "method_body": "public static double cos(double x) {\nint quadrant = 0;\n}",
            "method_id": 6
        },
        {
            "method_signature": "org.apache.commons.math.complex.Complex:<init>(DD)V",
            "method_body": "public Complex(double real, double imaginary) {\n}",
            "method_id": 7
        },
        {
            "method_signature": "org.apache.commons.math.complex.Complex:createComplex(DD)Lorg/apache/commons/math/complex/Complex;",
            "method_body": "protected Complex createComplex(double realPart,\nreturn new Complex(realPart, imaginaryPart);\n}",
            "method_id": 8
        }
    ]
}