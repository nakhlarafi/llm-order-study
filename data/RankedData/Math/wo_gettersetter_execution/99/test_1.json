{
    "bug_id": 99,
    "test_id": 1,
    "test_name": "org.apache.commons.math.util.MathUtilsTest.testGcd",
    "test_body": "407: public void testGcd() {\n408: int a = 30;\n409: int b = 50;\n410: int c = 77;\n411: 412: assertEquals(0, MathUtils.gcd(0, 0));\n413: 414: assertEquals(b, MathUtils.gcd(0, b));\n415: assertEquals(a, MathUtils.gcd(a, 0));\n416: assertEquals(b, MathUtils.gcd(0, -b));\n417: assertEquals(a, MathUtils.gcd(-a, 0));\n418: 419: assertEquals(10, MathUtils.gcd(a, b));\n420: assertEquals(10, MathUtils.gcd(-a, b));\n421: assertEquals(10, MathUtils.gcd(a, -b));\n422: assertEquals(10, MathUtils.gcd(-a, -b));\n423: 424: assertEquals(1, MathUtils.gcd(a, c));\n425: assertEquals(1, MathUtils.gcd(-a, c));\n426: assertEquals(1, MathUtils.gcd(a, -c));\n427: assertEquals(1, MathUtils.gcd(-a, -c));\n428: 429: assertEquals(3 * (1<<15), MathUtils.gcd(3 * (1<<20), 9 * (1<<15)));\n430: 431: assertEquals(Integer.MAX_VALUE, MathUtils.gcd(Integer.MAX_VALUE, 0));\n432: assertEquals(Integer.MAX_VALUE, MathUtils.gcd(-Integer.MAX_VALUE, 0));\n433: assertEquals(1<<30, MathUtils.gcd(1<<30, -Integer.MIN_VALUE));\n434: try {\n435: // gcd(Integer.MIN_VALUE, 0) > Integer.MAX_VALUE\n436: MathUtils.gcd(Integer.MIN_VALUE, 0);\n437: fail(\"expecting ArithmeticException\");\n438: } catch (ArithmeticException expected) {\n439: // expected\n440: }\n441: try {\n442: // gcd(0, Integer.MIN_VALUE) > Integer.MAX_VALUE\n443: MathUtils.gcd(0, Integer.MIN_VALUE);\n444: fail(\"expecting ArithmeticException\");\n445: } catch (ArithmeticException expected) {\n446: // expected\n447: }\n448: try {\n449: // gcd(Integer.MIN_VALUE, Integer.MIN_VALUE) > Integer.MAX_VALUE\n450: MathUtils.gcd(Integer.MIN_VALUE, Integer.MIN_VALUE);\n451: fail(\"expecting ArithmeticException\");\n452: } catch (ArithmeticException expected) {\n453: // expected\n454: }\n455: }\n",
    "stack_trace": "",
    "covered_methods": [
        {
            "method_signature": "org.apache.commons.math.util.MathUtils:gcd(II)I",
            "method_body": "public static int gcd(final int p, final int q) {\nint u = p;\n}",
            "method_id": 0
        }
    ]
}