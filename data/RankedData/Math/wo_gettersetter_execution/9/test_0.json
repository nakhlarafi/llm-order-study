{
    "bug_id": 9,
    "test_id": 0,
    "test_name": "org.apache.commons.math3.geometry.euclidean.threed.LineTest.testRevert",
    "test_body": "133: public void testRevert() {\n134: 135: // setup\n136: Line line = new Line(new Vector3D(1653345.6696423641, 6170370.041579291, 90000),\n137: new Vector3D(1650757.5050732433, 6160710.879908984, 0.9));\n138: Vector3D expected = line.getDirection().negate();\n139: 140: // action\n141: Line reverted = line.revert();\n142: 143: // verify\n144: Assert.assertArrayEquals(expected.toArray(), reverted.getDirection().toArray(), 0);\n145: 146: }\n",
    "stack_trace": "",
    "covered_methods": [
        {
            "method_signature": "org.apache.commons.math3.util.FastMath:sqrt(D)D",
            "method_body": "public static double sqrt(final double a) {\nreturn Math.sqrt(a);\n}",
            "method_id": 0
        },
        {
            "method_signature": "org.apache.commons.math3.util.MathArrays:linearCombination(DDDD)D",
            "method_body": "public static double linearCombination(final double a1, final double b1,\nfinal double ca1        = SPLIT_FACTOR * a1;\n}",
            "method_id": 1
        },
        {
            "method_signature": "org.apache.commons.math3.util.MathArrays:linearCombination(DDDDDD)D",
            "method_body": "public static double linearCombination(final double a1, final double b1,\nfinal double ca1        = SPLIT_FACTOR * a1;\n}",
            "method_id": 2
        },
        {
            "method_signature": "org.apache.commons.math3.geometry.euclidean.threed.Vector3D:<init>(DDD)V",
            "method_body": "public Vector3D(double x, double y, double z) {\n}",
            "method_id": 3
        },
        {
            "method_signature": "org.apache.commons.math3.geometry.euclidean.threed.Vector3D:<init>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V",
            "method_body": "public Vector3D(double a, Vector3D u) {\n}",
            "method_id": 4
        },
        {
            "method_signature": "org.apache.commons.math3.geometry.euclidean.threed.Vector3D:<init>(DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;DLorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V",
            "method_body": "public Vector3D(double a1, Vector3D u1, double a2, Vector3D u2) {\n}",
            "method_id": 5
        },
        {
            "method_signature": "org.apache.commons.math3.geometry.euclidean.threed.Vector3D:toArray()[D",
            "method_body": "public double[] toArray() {\nreturn new double[] { x, y, z };\n}",
            "method_id": 6
        },
        {
            "method_signature": "org.apache.commons.math3.geometry.euclidean.threed.Vector3D:subtract(Lorg/apache/commons/math3/geometry/Vector;)Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;",
            "method_body": "public Vector3D subtract(final Vector<Euclidean3D> v) {\nfinal Vector3D v3 = (Vector3D) v;\n}",
            "method_id": 7
        },
        {
            "method_signature": "org.apache.commons.math3.geometry.euclidean.threed.Vector3D:negate()Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;",
            "method_body": "public Vector3D negate() {\nreturn new Vector3D(-x, -y, -z);\n}",
            "method_id": 8
        },
        {
            "method_signature": "org.apache.commons.math3.geometry.euclidean.threed.Vector3D:dotProduct(Lorg/apache/commons/math3/geometry/Vector;)D",
            "method_body": "public double dotProduct(final Vector<Euclidean3D> v) {\nfinal Vector3D v3 = (Vector3D) v;\n}",
            "method_id": 9
        },
        {
            "method_signature": "org.apache.commons.math3.geometry.euclidean.threed.Line:<init>(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V",
            "method_body": "public Line(final Vector3D p1, final Vector3D p2) throws MathIllegalArgumentException {\n}",
            "method_id": 10
        },
        {
            "method_signature": "org.apache.commons.math3.geometry.euclidean.threed.Line:reset(Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;Lorg/apache/commons/math3/geometry/euclidean/threed/Vector3D;)V",
            "method_body": "public void reset(final Vector3D p1, final Vector3D p2) throws MathIllegalArgumentException {\nfinal Vector3D delta = p2.subtract(p1);\n}",
            "method_id": 11
        },
        {
            "method_signature": "org.apache.commons.math3.geometry.euclidean.threed.Line:revert()Lorg/apache/commons/math3/geometry/euclidean/threed/Line;",
            "method_body": "public Line revert() {\nfinal Line reverted = new Line(zero, zero.subtract(direction));\n}",
            "method_id": 12
        }
    ]
}