{
    "bug_id": 101,
    "test_id": 1,
    "test_name": "org.apache.commons.math.complex.ComplexFormatTest.testForgottenImaginaryCharacter",
    "test_body": null,
    "stack_trace": "",
    "covered_methods": [
        {
            "method_signature": "org.apache.commons.math.complex.ComplexFormat:<init>()V",
            "method_body": "public ComplexFormat() {\nthis(DEFAULT_IMAGINARY_CHARACTER, getDefaultNumberFormat());\n}",
            "method_id": 0
        },
        {
            "method_signature": "org.apache.commons.math.complex.ComplexFormat:<init>(Ljava/text/NumberFormat;)V",
            "method_body": "public ComplexFormat(NumberFormat format) {\nthis(DEFAULT_IMAGINARY_CHARACTER, format);\n}",
            "method_id": 1
        },
        {
            "method_signature": "org.apache.commons.math.complex.ComplexFormat:<init>(Ljava/lang/String;Ljava/text/NumberFormat;)V",
            "method_body": "public ComplexFormat(String imaginaryCharacter, NumberFormat format) {\nthis(imaginaryCharacter, format, (NumberFormat)format.clone());\n}",
            "method_id": 2
        },
        {
            "method_signature": "org.apache.commons.math.complex.ComplexFormat:<init>(Ljava/lang/String;Ljava/text/NumberFormat;Ljava/text/NumberFormat;)V",
            "method_body": "public ComplexFormat(String imaginaryCharacter, NumberFormat realFormat,\nsuper();\n}",
            "method_id": 3
        },
        {
            "method_signature": "org.apache.commons.math.complex.ComplexFormat:parse(Ljava/lang/String;Ljava/text/ParsePosition;)Lorg/apache/commons/math/complex/Complex;",
            "method_body": "public Complex parse(String source, ParsePosition pos) {\nint initialIndex = pos.getIndex();\n}",
            "method_id": 4
        },
        {
            "method_signature": "org.apache.commons.math.complex.ComplexFormat:parseAndIgnoreWhitespace(Ljava/lang/String;Ljava/text/ParsePosition;)V",
            "method_body": "private void parseAndIgnoreWhitespace(String source, ParsePosition pos) {\nparseNextCharacter(source, pos);\n}",
            "method_id": 5
        },
        {
            "method_signature": "org.apache.commons.math.complex.ComplexFormat:parseNextCharacter(Ljava/lang/String;Ljava/text/ParsePosition;)C",
            "method_body": "private char parseNextCharacter(String source, ParsePosition pos) {\nint index = pos.getIndex();\n}",
            "method_id": 6
        },
        {
            "method_signature": "org.apache.commons.math.complex.ComplexFormat:parseNumber(Ljava/lang/String;Ljava/text/NumberFormat;Ljava/text/ParsePosition;)Ljava/lang/Number;",
            "method_body": "private Number parseNumber(String source, NumberFormat format, ParsePosition pos) {\nint startIndex = pos.getIndex();\n}",
            "method_id": 7
        }
    ]
}