{
    "bug_id": 91,
    "test_id": 0,
    "test_name": "org.apache.commons.math.fraction.FractionTest.testCompareTo",
    "test_body": "163: public void testCompareTo() {\n164: Fraction first = new Fraction(1, 2);\n165: Fraction second = new Fraction(1, 3);\n166: Fraction third = new Fraction(1, 2);\n167: 168: assertEquals(0, first.compareTo(first));\n169: assertEquals(0, first.compareTo(third));\n170: assertEquals(1, first.compareTo(second));\n171: assertEquals(-1, second.compareTo(first));\n172: 173: // these two values are different approximations of PI\n174: // the first  one is approximately PI - 3.07e-18\n175: // the second one is approximately PI + 1.936e-17\n176: Fraction pi1 = new Fraction(1068966896, 340262731);\n177: Fraction pi2 = new Fraction( 411557987, 131002976);\n178: assertEquals(-1, pi1.compareTo(pi2));\n179: assertEquals( 1, pi2.compareTo(pi1));\n180: assertEquals(0.0, pi1.doubleValue() - pi2.doubleValue(), 1.0e-20);\n181: }\n",
    "stack_trace": "",
    "covered_methods": [
        {
            "method_signature": "org.apache.commons.math.util.MathUtils:gcd(II)I",
            "method_body": "public static int gcd(final int p, final int q) {\nint u = p;\n}",
            "method_id": 0
        },
        {
            "method_signature": "org.apache.commons.math.fraction.Fraction:<init>(II)V",
            "method_body": "public Fraction(int num, int den) {\nsuper();\n}",
            "method_id": 1
        },
        {
            "method_signature": "org.apache.commons.math.fraction.Fraction:compareTo(Lorg/apache/commons/math/fraction/Fraction;)I",
            "method_body": "public int compareTo(Fraction object) {\ndouble nOd = doubleValue();\n}",
            "method_id": 2
        },
        {
            "method_signature": "org.apache.commons.math.fraction.Fraction:doubleValue()D",
            "method_body": "public double doubleValue() {\nreturn (double)numerator / (double)denominator;\n}",
            "method_id": 3
        }
    ]
}