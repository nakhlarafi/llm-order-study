{
    "bug_id": 86,
    "test_id": 1,
    "test_name": "org.apache.commons.math.linear.CholeskyDecompositionImplTest.testMath274",
    "test_body": "82: public void testMath274() throws MathException {\n83: new CholeskyDecompositionImpl(MatrixUtils.createRealMatrix(new double[][] {\n84: { 0.40434286, -0.09376327, 0.30328980, 0.04909388 },\n85: {-0.09376327,  0.10400408, 0.07137959, 0.04762857 },\n86: { 0.30328980,  0.07137959, 0.30458776, 0.04882449 },\n87: { 0.04909388,  0.04762857, 0.04882449, 0.07543265 }\n88: 89: }));\n90: }\n",
    "stack_trace": "",
    "covered_methods": [
        {
            "method_signature": "org.apache.commons.math.linear.AbstractRealMatrix:<init>(II)V",
            "method_body": "protected AbstractRealMatrix(final int rowDimension, final int columnDimension)\nthrows IllegalArgumentException {\n}",
            "method_id": 0
        },
        {
            "method_signature": "org.apache.commons.math.linear.DenseRealMatrix:<init>([[D)V",
            "method_body": "public DenseRealMatrix(final double[][] rawData)\nthis(rawData.length, rawData[0].length, toBlocksLayout(rawData), false);\n}",
            "method_id": 1
        },
        {
            "method_signature": "org.apache.commons.math.linear.DenseRealMatrix:<init>(II[[DZ)V",
            "method_body": "public DenseRealMatrix(final int rows, final int columns,\nsuper(rows, columns);\n}",
            "method_id": 2
        },
        {
            "method_signature": "org.apache.commons.math.linear.DenseRealMatrix:toBlocksLayout([[D)[[D",
            "method_body": "public static double[][] toBlocksLayout(final double[][] rawData)\nfinal int rows         = rawData.length;\n}",
            "method_id": 3
        },
        {
            "method_signature": "org.apache.commons.math.linear.DenseRealMatrix:blockHeight(I)I",
            "method_body": "private int blockHeight(final int blockRow) {\nreturn (blockRow == blockRows - 1) ? rows - blockRow * BLOCK_SIZE : BLOCK_SIZE;\n}",
            "method_id": 4
        },
        {
            "method_signature": "org.apache.commons.math.linear.DenseRealMatrix:blockWidth(I)I",
            "method_body": "private int blockWidth(final int blockColumn) {\nreturn (blockColumn == blockColumns - 1) ? columns - blockColumn * BLOCK_SIZE : BLOCK_SIZE;\n}",
            "method_id": 5
        },
        {
            "method_signature": "org.apache.commons.math.linear.MatrixUtils:createRealMatrix([[D)Lorg/apache/commons/math/linear/RealMatrix;",
            "method_body": "public static RealMatrix createRealMatrix(double[][] data) {\nreturn new DenseRealMatrix(data);\n}",
            "method_id": 6
        },
        {
            "method_signature": "org.apache.commons.math.linear.CholeskyDecompositionImpl:<init>(Lorg/apache/commons/math/linear/RealMatrix;)V",
            "method_body": "public CholeskyDecompositionImpl(final RealMatrix matrix)\nthis(matrix, DEFAULT_RELATIVE_SYMMETRY_THRESHOLD,\n}",
            "method_id": 7
        },
        {
            "method_signature": "org.apache.commons.math.linear.CholeskyDecompositionImpl:<init>(Lorg/apache/commons/math/linear/RealMatrix;DD)V",
            "method_body": "public CholeskyDecompositionImpl(final RealMatrix matrix,\nNotSymmetricMatrixException, NotPositiveDefiniteMatrixException {\n}",
            "method_id": 8
        }
    ]
}