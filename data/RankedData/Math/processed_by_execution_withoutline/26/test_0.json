{
    "bug_id": 26,
    "test_id": 0,
    "test_name": "org.apache.commons.math3.fraction.FractionTest.testIntegerOverflow",
    "test_body": "135: public void testIntegerOverflow() {\n136: checkIntegerOverflow(0.75000000001455192);\n137: checkIntegerOverflow(1.0e10);\n138: checkIntegerOverflow(-1.0e10);\n139: checkIntegerOverflow(-43979.60679604749);\n140: }\n",
    "stack_trace": "",
    "covered_methods": [
        {
            "method_signature": "org.apache.commons.math3.util.FastMath:<clinit>()V",
            "method_body": "public static final double PI = 105414357.0 / 33554432.0 + 1.984187159361080883e-9;\nprivate static final double LN_QUICK_COEF[][] = {\n};",
            "method_id": 0
        },
        {
            "method_signature": "org.apache.commons.math3.util.FastMath:abs(I)I",
            "method_body": "public static int abs(final int x) {\nreturn (x < 0) ? -x : x;\n}",
            "method_id": 1
        },
        {
            "method_signature": "org.apache.commons.math3.util.FastMath:abs(D)D",
            "method_body": "public static double abs(double x) {\nreturn (x < 0.0) ? -x : (x == 0.0) ? 0.0 : x; // -0.0 => +0.0\n}",
            "method_id": 2
        },
        {
            "method_signature": "org.apache.commons.math3.util.FastMath:floor(D)D",
            "method_body": "public static double floor(double x) {\nif (x != x) { // NaN\n}",
            "method_id": 3
        },
        {
            "method_signature": "org.apache.commons.math3.exception.util.LocalizedFormats:<init>(Ljava/lang/String;ILjava/lang/String;)V",
            "method_body": "private LocalizedFormats(final String sourceFormat) {\n}",
            "method_id": 4
        },
        {
            "method_signature": "org.apache.commons.math3.exception.util.ExceptionContext:<init>(Ljava/lang/Throwable;)V",
            "method_body": "public ExceptionContext(final Throwable throwable) {\n}",
            "method_id": 5
        },
        {
            "method_signature": "org.apache.commons.math3.exception.util.ExceptionContext:addMessage(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V",
            "method_body": "public void addMessage(Localizable pattern,\nmsgPatterns.add(pattern);\n}",
            "method_id": 6
        },
        {
            "method_signature": "org.apache.commons.math3.exception.util.ArgUtils:flatten([Ljava/lang/Object;)[Ljava/lang/Object;",
            "method_body": "public static Object[] flatten(Object[] array) {\nfinal List<Object> list = new ArrayList<Object>();\n}",
            "method_id": 7
        },
        {
            "method_signature": "org.apache.commons.math3.exception.MathIllegalStateException:<init>(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V",
            "method_body": "public MathIllegalStateException(Localizable pattern,\nObject ... args) {\n}",
            "method_id": 8
        },
        {
            "method_signature": "org.apache.commons.math3.exception.MathIllegalStateException:<init>()V",
            "method_body": "public MathIllegalStateException() {\nthis(LocalizedFormats.ILLEGAL_STATE);\n}",
            "method_id": 9
        },
        {
            "method_signature": "org.apache.commons.math3.exception.MathIllegalStateException:getContext()Lorg/apache/commons/math3/exception/util/ExceptionContext;",
            "method_body": "public ExceptionContext getContext() {\nreturn context;\n}",
            "method_id": 10
        },
        {
            "method_signature": "org.apache.commons.math3.exception.ConvergenceException:<init>(Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V",
            "method_body": "public ConvergenceException(Localizable pattern,\nObject ... args) {\n}",
            "method_id": 11
        },
        {
            "method_signature": "org.apache.commons.math3.util.ArithmeticUtils:<clinit>()V",
            "method_body": "static final long[] FACTORIALS = new long[] {\n6402373705728000l, 121645100408832000l, 2432902008176640000l };",
            "method_id": 12
        },
        {
            "method_signature": "org.apache.commons.math3.util.ArithmeticUtils:gcd(II)I",
            "method_body": "public static int gcd(final int p, final int q) {\nint u = p;\n}",
            "method_id": 13
        },
        {
            "method_signature": "org.apache.commons.math3.fraction.Fraction:<init>(DDI)V",
            "method_body": "public Fraction(double value, double epsilon, int maxIterations)\nthis(value, epsilon, Integer.MAX_VALUE, maxIterations);\n}",
            "method_id": 14
        },
        {
            "method_signature": "org.apache.commons.math3.fraction.Fraction:<init>(DDII)V",
            "method_body": "private Fraction(double value, double epsilon, int maxDenominator, int maxIterations)\n{\n}",
            "method_id": 15
        },
        {
            "method_signature": "org.apache.commons.math3.fraction.Fraction:<init>(II)V",
            "method_body": "public Fraction(int num, int den) {\n}",
            "method_id": 16
        },
        {
            "method_signature": "org.apache.commons.math3.fraction.Fraction:<clinit>()V",
            "method_body": "public static final Fraction TWO = new Fraction(2, 1);\n}",
            "method_id": 17
        },
        {
            "method_signature": "org.apache.commons.math3.fraction.FractionConversionException:<init>(DJJ)V",
            "method_body": "public FractionConversionException(double value, long p, long q) {\nsuper(LocalizedFormats.FRACTION_CONVERSION_OVERFLOW, value, p, q);\n}",
            "method_id": 18
        }
    ]
}