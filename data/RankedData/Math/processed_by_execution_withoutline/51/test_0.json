{
    "bug_id": 51,
    "test_id": 0,
    "test_name": "org.apache.commons.math.analysis.solvers.RegulaFalsiSolverTest.testIssue631",
    "test_body": "44: public void testIssue631() {\n45: final UnivariateRealFunction f = new UnivariateRealFunction() {\n46: @Override\n47: public double value(double x) {\n48: return Math.exp(x) - Math.pow(Math.PI, 3.0);\n49: }\n50: };\n51: 52: final UnivariateRealSolver solver = new RegulaFalsiSolver();\n53: final double root = solver.solve(3624, f, 1, 10);\n54: Assert.assertEquals(3.4341896575482003, root, 1e-15);\n55: }\n",
    "stack_trace": "",
    "covered_methods": [
        {
            "method_signature": "org.apache.commons.math.util.FastMath:<clinit>()V",
            "method_body": "public static final double PI = 105414357.0 / 33554432.0 + 1.984187159361080883e-9;\nprivate static final double EXP_INT_TABLE_A[] = new double[1500];\n};",
            "method_id": 0
        },
        {
            "method_signature": "org.apache.commons.math.util.FastMath:slowexp(D[D)D",
            "method_body": "private static double slowexp(final double x, final double result[]) {\nfinal double xs[] = new double[2];\n}",
            "method_id": 1
        },
        {
            "method_signature": "org.apache.commons.math.util.FastMath:split(D[D)V",
            "method_body": "private static void split(final double d, final double split[]) {\nif (d < 8e298 && d > -8e298) {\n}",
            "method_id": 2
        },
        {
            "method_signature": "org.apache.commons.math.util.FastMath:resplit([D)V",
            "method_body": "private static void resplit(final double a[]) {\nfinal double c = a[0] + a[1];\n}",
            "method_id": 3
        },
        {
            "method_signature": "org.apache.commons.math.util.FastMath:splitMult([D[D[D)V",
            "method_body": "private static void splitMult(double a[], double b[], double ans[]) {\nans[0] = a[0] * b[0];\n}",
            "method_id": 4
        },
        {
            "method_signature": "org.apache.commons.math.util.FastMath:splitAdd([D[D[D)V",
            "method_body": "private static void splitAdd(final double a[], final double b[], final double ans[]) {\nans[0] = a[0] + b[0];\n}",
            "method_id": 5
        },
        {
            "method_signature": "org.apache.commons.math.util.FastMath:splitReciprocal([D[D)V",
            "method_body": "private static void splitReciprocal(final double in[], final double result[]) {\nfinal double b = 1.0/4194304.0;\n}",
            "method_id": 6
        },
        {
            "method_signature": "org.apache.commons.math.util.FastMath:quadMult([D[D[D)V",
            "method_body": "private static void quadMult(final double a[], final double b[], final double result[]) {\nfinal double xs[] = new double[2];\n}",
            "method_id": 7
        },
        {
            "method_signature": "org.apache.commons.math.util.FastMath:expint(I[D)D",
            "method_body": "private static double expint(int p, final double result[]) {\nfinal double xs[] = new double[2];\n}",
            "method_id": 8
        },
        {
            "method_signature": "org.apache.commons.math.util.FastMath:slowLog(D)[D",
            "method_body": "private static double[] slowLog(double xi) {\ndouble x[] = new double[2];\n}",
            "method_id": 9
        },
        {
            "method_signature": "org.apache.commons.math.util.FastMath:slowSin(D[D)D",
            "method_body": "private static double slowSin(final double x, final double result[]) {\nfinal double xs[] = new double[2];\n}",
            "method_id": 10
        },
        {
            "method_signature": "org.apache.commons.math.util.FastMath:slowCos(D[D)D",
            "method_body": "private static double slowCos(final double x, final double result[]) {\nfinal double xs[] = new double[2];\n}",
            "method_id": 11
        },
        {
            "method_signature": "org.apache.commons.math.util.FastMath:buildSinCosTables()V",
            "method_body": "private static void buildSinCosTables() {\nfinal double result[] = new double[2];\n}",
            "method_id": 12
        },
        {
            "method_signature": "org.apache.commons.math.util.FastMath:abs(D)D",
            "method_body": "public static double abs(double x) {\nreturn (x < 0.0) ? -x : (x == 0.0) ? 0.0 : x; // -0.0 => +0.0\n}",
            "method_id": 13
        },
        {
            "method_signature": "org.apache.commons.math.util.FastMath:max(DD)D",
            "method_body": "public static double max(final double a, final double b) {\nif (a > b) {\n}",
            "method_id": 14
        },
        {
            "method_signature": "org.apache.commons.math.exception.util.LocalizedFormats:<init>(Ljava/lang/String;ILjava/lang/String;)V",
            "method_body": "private LocalizedFormats(final String sourceFormat) {\n}",
            "method_id": 15
        },
        {
            "method_signature": "org.apache.commons.math.exception.util.LocalizedFormats:getLocalizedString(Ljava/util/Locale;)Ljava/lang/String;",
            "method_body": "public String getLocalizedString(final Locale locale) {\nResourceBundle bundle =\n}",
            "method_id": 16
        },
        {
            "method_signature": "org.apache.commons.math.util.MathUtils:<clinit>()V",
            "method_body": "public static final double EPSILON = 0x1.0p-53;\nprivate static final long[] FACTORIALS = new long[] {\n6402373705728000l, 121645100408832000l, 2432902008176640000l };",
            "method_id": 17
        },
        {
            "method_signature": "org.apache.commons.math.util.MathUtils:checkNotNull(Ljava/lang/Object;)V",
            "method_body": "public static void checkNotNull(Object o)\nif (o == null) {\n}",
            "method_id": 18
        },
        {
            "method_signature": "org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver:<init>(D)V",
            "method_body": "protected BaseAbstractUnivariateRealSolver(final double absoluteAccuracy) {\nthis(DEFAULT_RELATIVE_ACCURACY,\n}",
            "method_id": 19
        },
        {
            "method_signature": "org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver:<init>(DDD)V",
            "method_body": "protected BaseAbstractUnivariateRealSolver(final double relativeAccuracy,\nfinal double functionValueAccuracy) {\n}",
            "method_id": 20
        },
        {
            "method_signature": "org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver:getMin()D",
            "method_body": "public double getMin() {\nreturn searchMin;\n}",
            "method_id": 21
        },
        {
            "method_signature": "org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver:getMax()D",
            "method_body": "public double getMax() {\nreturn searchMax;\n}",
            "method_id": 22
        },
        {
            "method_signature": "org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver:getAbsoluteAccuracy()D",
            "method_body": "public double getAbsoluteAccuracy() {\nreturn absoluteAccuracy;\n}",
            "method_id": 23
        },
        {
            "method_signature": "org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver:getRelativeAccuracy()D",
            "method_body": "public double getRelativeAccuracy() {\nreturn relativeAccuracy;\n}",
            "method_id": 24
        },
        {
            "method_signature": "org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver:getFunctionValueAccuracy()D",
            "method_body": "public double getFunctionValueAccuracy() {\nreturn functionValueAccuracy;\n}",
            "method_id": 25
        },
        {
            "method_signature": "org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver:computeObjectiveValue(D)D",
            "method_body": "protected double computeObjectiveValue(double point)\nincrementEvaluationCount();\n}",
            "method_id": 26
        },
        {
            "method_signature": "org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver:setup(ILorg/apache/commons/math/analysis/UnivariateRealFunction;DDD)V",
            "method_body": "protected void setup(int maxEval,\nMathUtils.checkNotNull(f);\n}",
            "method_id": 27
        },
        {
            "method_signature": "org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver:solve(ILorg/apache/commons/math/analysis/UnivariateRealFunction;DDD)D",
            "method_body": "public double solve(int maxEval, FUNC f, double min, double max, double startValue) {\nsetup(maxEval, f, min, max, startValue);\n}",
            "method_id": 28
        },
        {
            "method_signature": "org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver:solve(ILorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D",
            "method_body": "public double solve(int maxEval, FUNC f, double min, double max) {\nreturn solve(maxEval, f, min, max, min + 0.5 * (max - min));\n}",
            "method_id": 29
        },
        {
            "method_signature": "org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver:verifyBracketing(DD)V",
            "method_body": "protected void verifyBracketing(final double lower,\nUnivariateRealSolverUtils.verifyBracketing(function, lower, upper);\n}",
            "method_id": 30
        },
        {
            "method_signature": "org.apache.commons.math.analysis.solvers.BaseAbstractUnivariateRealSolver:incrementEvaluationCount()V",
            "method_body": "protected void incrementEvaluationCount() {\nevaluations.incrementCount();\n}",
            "method_id": 31
        },
        {
            "method_signature": "org.apache.commons.math.util.Incrementor:setMaximalCount(I)V",
            "method_body": "public void setMaximalCount(int max) {\nmaximalCount = max;\n}",
            "method_id": 32
        },
        {
            "method_signature": "org.apache.commons.math.util.Incrementor:incrementCount()V",
            "method_body": "public void incrementCount() {\nif (++count > maximalCount) {\n}",
            "method_id": 33
        },
        {
            "method_signature": "org.apache.commons.math.util.Incrementor:resetCount()V",
            "method_body": "public void resetCount() {\ncount = 0;\n}",
            "method_id": 34
        },
        {
            "method_signature": "org.apache.commons.math.analysis.solvers.AbstractUnivariateRealSolver:<init>(D)V",
            "method_body": "protected AbstractUnivariateRealSolver(final double absoluteAccuracy) {\nsuper(absoluteAccuracy);\n}",
            "method_id": 35
        },
        {
            "method_signature": "org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils:isBracketing(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)Z",
            "method_body": "public static boolean isBracketing(UnivariateRealFunction function,\nif (function == null) {\n}",
            "method_id": 36
        },
        {
            "method_signature": "org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils:verifyInterval(DD)V",
            "method_body": "public static void verifyInterval(final double lower,\nif (lower >= upper) {\n}",
            "method_id": 37
        },
        {
            "method_signature": "org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils:verifyBracketing(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)V",
            "method_body": "public static void verifyBracketing(UnivariateRealFunction function,\nif (function == null) {\n}",
            "method_id": 38
        },
        {
            "method_signature": "org.apache.commons.math.exception.util.ExceptionContext:addMessage(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V",
            "method_body": "public void addMessage(Localizable pattern,\nmsgPatterns.add(pattern);\n}",
            "method_id": 39
        },
        {
            "method_signature": "org.apache.commons.math.exception.util.ExceptionContext:getLocalizedMessage()Ljava/lang/String;",
            "method_body": "public String getLocalizedMessage() {\nreturn getMessage(Locale.getDefault());\n}",
            "method_id": 40
        },
        {
            "method_signature": "org.apache.commons.math.exception.util.ExceptionContext:getMessage(Ljava/util/Locale;)Ljava/lang/String;",
            "method_body": "public String getMessage(final Locale locale) {\nreturn buildMessage(locale, \": \");\n}",
            "method_id": 41
        },
        {
            "method_signature": "org.apache.commons.math.exception.util.ExceptionContext:buildMessage(Ljava/util/Locale;Ljava/lang/String;)Ljava/lang/String;",
            "method_body": "private String buildMessage(Locale locale,\nfinal StringBuilder sb = new StringBuilder();\n}",
            "method_id": 42
        },
        {
            "method_signature": "org.apache.commons.math.exception.util.ArgUtils:flatten([Ljava/lang/Object;)[Ljava/lang/Object;",
            "method_body": "public static Object[] flatten(Object[] array) {\nfinal List<Object> list = new ArrayList<Object>();\n}",
            "method_id": 43
        },
        {
            "method_signature": "org.apache.commons.math.analysis.solvers.BaseSecantSolver:<init>(DLorg/apache/commons/math/analysis/solvers/BaseSecantSolver$Method;)V",
            "method_body": "protected BaseSecantSolver(final double absoluteAccuracy, final Method method) {\nsuper(absoluteAccuracy);\n}",
            "method_id": 44
        },
        {
            "method_signature": "org.apache.commons.math.analysis.solvers.BaseSecantSolver:solve(ILorg/apache/commons/math/analysis/UnivariateRealFunction;DDDLorg/apache/commons/math/analysis/solvers/AllowedSolution;)D",
            "method_body": "public double solve(final int maxEval, final UnivariateRealFunction f,\nthis.allowed = allowedSolution;\n}",
            "method_id": 45
        },
        {
            "method_signature": "org.apache.commons.math.analysis.solvers.BaseSecantSolver:solve(ILorg/apache/commons/math/analysis/UnivariateRealFunction;DDD)D",
            "method_body": "public double solve(final int maxEval, final UnivariateRealFunction f,\nreturn solve(maxEval, f, min, max, startValue, AllowedSolution.ANY_SIDE);\n}",
            "method_id": 46
        },
        {
            "method_signature": "org.apache.commons.math.analysis.solvers.BaseSecantSolver:doSolve()D",
            "method_body": "protected final double doSolve() {\ndouble x0 = getMin();\nswitch (allowed) {\n}",
            "method_id": 47
        },
        {
            "method_signature": "org.apache.commons.math.analysis.solvers.RegulaFalsiSolver:<init>()V",
            "method_body": "public RegulaFalsiSolver() {\nsuper(DEFAULT_ABSOLUTE_ACCURACY, Method.REGULA_FALSI);\n}",
            "method_id": 48
        },
        {
            "method_signature": "org.apache.commons.math.analysis.solvers.BaseSecantSolver$1:<clinit>()V",
            "method_body": "protected final double doSolve() {\ndouble x0 = getMin();\nswitch (allowed) {\n}",
            "method_id": 49
        },
        {
            "method_signature": "org.apache.commons.math.exception.MathIllegalStateException:<init>(Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V",
            "method_body": "public MathIllegalStateException(Localizable pattern,\nObject ... args) {\n}",
            "method_id": 50
        },
        {
            "method_signature": "org.apache.commons.math.exception.MathIllegalStateException:<init>()V",
            "method_body": "public MathIllegalStateException() {\nthis(LocalizedFormats.ILLEGAL_STATE);\n}",
            "method_id": 51
        },
        {
            "method_signature": "org.apache.commons.math.exception.MathIllegalStateException:getContext()Lorg/apache/commons/math/exception/util/ExceptionContext;",
            "method_body": "public ExceptionContext getContext() {\nreturn context;\n}",
            "method_id": 52
        },
        {
            "method_signature": "org.apache.commons.math.exception.MathIllegalStateException:getLocalizedMessage()Ljava/lang/String;",
            "method_body": "public String getLocalizedMessage() {\nreturn context.getLocalizedMessage();\n}",
            "method_id": 53
        },
        {
            "method_signature": "org.apache.commons.math.exception.MaxCountExceededException:<init>(Ljava/lang/Number;)V",
            "method_body": "public MaxCountExceededException(Number max) {\nthis(LocalizedFormats.MAX_COUNT_EXCEEDED, max);\n}",
            "method_id": 54
        },
        {
            "method_signature": "org.apache.commons.math.exception.MaxCountExceededException:<init>(Lorg/apache/commons/math/exception/util/Localizable;Ljava/lang/Number;[Ljava/lang/Object;)V",
            "method_body": "public MaxCountExceededException(Localizable specific,\nObject ... args) {\n}",
            "method_id": 55
        },
        {
            "method_signature": "org.apache.commons.math.exception.MaxCountExceededException:getMax()Ljava/lang/Number;",
            "method_body": "public Number getMax() {\nreturn max;\n}",
            "method_id": 56
        },
        {
            "method_signature": "org.apache.commons.math.exception.TooManyEvaluationsException:<init>(Ljava/lang/Number;)V",
            "method_body": "public TooManyEvaluationsException(Number max) {\nsuper(max);\n}",
            "method_id": 57
        }
    ]
}