{
    "bug_id": 36,
    "test_id": 0,
    "test_name": "org.apache.commons.math.fraction.BigFractionTest.testDoubleValueForLargeNumeratorAndDenominator",
    "test_body": "203: public void testDoubleValueForLargeNumeratorAndDenominator() {\n204: final BigInteger pow400 = BigInteger.TEN.pow(400);\n205: final BigInteger pow401 = BigInteger.TEN.pow(401);\n206: final BigInteger two = new BigInteger(\"2\");\n207: final BigFraction large = new BigFraction(pow401.add(BigInteger.ONE),\n208: pow400.multiply(two));\n209: 210: Assert.assertEquals(5, large.doubleValue(), 1e-15);\n211: }\n",
    "stack_trace": "",
    "covered_methods": [
        {
            "method_signature": "org.apache.commons.math.exception.util.LocalizedFormats:<init>(Ljava/lang/String;ILjava/lang/String;)V",
            "method_body": "private LocalizedFormats(final String sourceFormat) {\n}",
            "method_id": 0
        },
        {
            "method_signature": "org.apache.commons.math.util.MathUtils:checkNotNull(Ljava/lang/Object;Lorg/apache/commons/math/exception/util/Localizable;[Ljava/lang/Object;)V",
            "method_body": "public static void checkNotNull(Object o,\nif (o == null) {\n}",
            "method_id": 1
        },
        {
            "method_signature": "org.apache.commons.math.fraction.BigFraction:<init>(Ljava/math/BigInteger;Ljava/math/BigInteger;)V",
            "method_body": "public BigFraction(BigInteger num, BigInteger den) {\n}",
            "method_id": 2
        },
        {
            "method_signature": "org.apache.commons.math.fraction.BigFraction:<init>(I)V",
            "method_body": "public BigFraction(final int num) {\nthis(BigInteger.valueOf(num), BigInteger.ONE);\n}",
            "method_id": 3
        },
        {
            "method_signature": "org.apache.commons.math.fraction.BigFraction:<init>(II)V",
            "method_body": "public BigFraction(final int num, final int den) {\nthis(BigInteger.valueOf(num), BigInteger.valueOf(den));\n}",
            "method_id": 4
        },
        {
            "method_signature": "org.apache.commons.math.fraction.BigFraction:<clinit>()V",
            "method_body": "public static final BigFraction TWO = new BigFraction(2);\n* Create a {@link BigFraction} equivalent to the passed <tt>BigInteger</tt>, ie",
            "method_id": 5
        },
        {
            "method_signature": "org.apache.commons.math.fraction.BigFraction:doubleValue()D",
            "method_body": "public double doubleValue() {\ndouble result = numerator.doubleValue() / denominator.doubleValue();\n}",
            "method_id": 6
        }
    ]
}