{
    "bug_id": 55,
    "test_id": 0,
    "test_name": "org.apache.commons.math.geometry.Vector3DTest.testCrossProductCancellation",
    "test_body": "156: public void testCrossProductCancellation() {\n157: Vector3D v1 = new Vector3D(9070467121.0, 4535233560.0, 1);\n158: Vector3D v2 = new Vector3D(9070467123.0, 4535233561.0, 1);\n159: checkVector(Vector3D.crossProduct(v1, v2), -1, 2, 1);\n160: 161: double scale    = FastMath.scalb(1.0, 100);\n162: Vector3D big1   = new Vector3D(scale, v1);\n163: Vector3D small2 = new Vector3D(1 / scale, v2);\n164: checkVector(Vector3D.crossProduct(big1, small2), -1, 2, 1);\n165: 166: }\n",
    "stack_trace": "",
    "covered_methods": [
        {
            "method_signature": "org.apache.commons.math.util.CompositeFormat:getDefaultNumberFormat(Ljava/util/Locale;)Ljava/text/NumberFormat;",
            "method_body": "public static NumberFormat getDefaultNumberFormat(final Locale locale) {\nfinal NumberFormat nf = NumberFormat.getInstance(locale);\n}",
            "method_id": 0
        },
        {
            "method_signature": "org.apache.commons.math.geometry.Vector3D:<init>(DDD)V",
            "method_body": "public Vector3D(double x, double y, double z) {\n}",
            "method_id": 1
        },
        {
            "method_signature": "org.apache.commons.math.geometry.Vector3D:<clinit>()V",
            "method_body": "public static final Vector3D ZERO   = new Vector3D(0, 0, 0);\npublic Vector3D(double x, double y, double z) {\n}",
            "method_id": 2
        },
        {
            "method_signature": "org.apache.commons.math.geometry.Vector3D:getX()D",
            "method_body": "public double getX() {\nreturn x;\n}",
            "method_id": 3
        },
        {
            "method_signature": "org.apache.commons.math.geometry.Vector3D:getY()D",
            "method_body": "public double getY() {\nreturn y;\n}",
            "method_id": 4
        },
        {
            "method_signature": "org.apache.commons.math.geometry.Vector3D:getZ()D",
            "method_body": "public double getZ() {\nreturn z;\n}",
            "method_id": 5
        },
        {
            "method_signature": "org.apache.commons.math.geometry.Vector3D:crossProduct(Lorg/apache/commons/math/geometry/Vector3D;Lorg/apache/commons/math/geometry/Vector3D;)Lorg/apache/commons/math/geometry/Vector3D;",
            "method_body": "public static Vector3D crossProduct(final Vector3D v1, final Vector3D v2) {\nreturn new Vector3D(v1.y * v2.z - v1.z * v2.y, v1.z * v2.x - v1.x * v2.z, v1.x * v2.y - v1.y * v2.x);\n}",
            "method_id": 6
        },
        {
            "method_signature": "org.apache.commons.math.geometry.Vector3DFormat:<init>(Ljava/text/NumberFormat;)V",
            "method_body": "public Vector3DFormat(final NumberFormat format) {\nthis(DEFAULT_PREFIX, DEFAULT_SUFFIX, DEFAULT_SEPARATOR, format);\n}",
            "method_id": 7
        },
        {
            "method_signature": "org.apache.commons.math.geometry.Vector3DFormat:<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/text/NumberFormat;)V",
            "method_body": "public Vector3DFormat(final String prefix, final String suffix,\nfinal String separator, final NumberFormat format) {\n}",
            "method_id": 8
        },
        {
            "method_signature": "org.apache.commons.math.geometry.Vector3DFormat:getInstance()Lorg/apache/commons/math/geometry/Vector3DFormat;",
            "method_body": "public static Vector3DFormat getInstance() {\nreturn getInstance(Locale.getDefault());\n}",
            "method_id": 9
        },
        {
            "method_signature": "org.apache.commons.math.geometry.Vector3DFormat:getInstance(Ljava/util/Locale;)Lorg/apache/commons/math/geometry/Vector3DFormat;",
            "method_body": "public static Vector3DFormat getInstance(final Locale locale) {\nreturn new Vector3DFormat(CompositeFormat.getDefaultNumberFormat(locale));\n}",
            "method_id": 10
        }
    ]
}