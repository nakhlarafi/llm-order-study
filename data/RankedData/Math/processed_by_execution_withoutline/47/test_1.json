{
    "bug_id": 47,
    "test_id": 1,
    "test_name": "org.apache.commons.math.complex.ComplexTest.testDivideZero",
    "test_body": "229: public void testDivideZero() {\n230: Complex x = new Complex(3.0, 4.0);\n231: Complex z = x.divide(Complex.ZERO);\n232: Assert.assertEquals(z, Complex.INF);\n233: }\n",
    "stack_trace": "",
    "covered_methods": [
        {
            "method_signature": "org.apache.commons.math.util.MathUtils:<clinit>()V",
            "method_body": "public static final double EPSILON = 0x1.0p-53;\nprivate static final long[] FACTORIALS = new long[] {\n6402373705728000l, 121645100408832000l, 2432902008176640000l };",
            "method_id": 0
        },
        {
            "method_signature": "org.apache.commons.math.util.MathUtils:checkNotNull(Ljava/lang/Object;)V",
            "method_body": "public static void checkNotNull(Object o)\nif (o == null) {\n}",
            "method_id": 1
        },
        {
            "method_signature": "org.apache.commons.math.complex.Complex:<init>(DD)V",
            "method_body": "public Complex(double real, double imaginary) {\n}",
            "method_id": 2
        },
        {
            "method_signature": "org.apache.commons.math.complex.Complex:<clinit>()V",
            "method_body": "public static final Complex I = new Complex(0.0, 1.0);\n}",
            "method_id": 3
        },
        {
            "method_signature": "org.apache.commons.math.complex.Complex:divide(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;",
            "method_body": "public Complex divide(Complex divisor)\nMathUtils.checkNotNull(divisor);\n}",
            "method_id": 4
        },
        {
            "method_signature": "org.apache.commons.math.complex.Complex:getImaginary()D",
            "method_body": "public double getImaginary() {\nreturn imaginary;\n}",
            "method_id": 5
        },
        {
            "method_signature": "org.apache.commons.math.complex.Complex:getReal()D",
            "method_body": "public double getReal() {\nreturn real;\n}",
            "method_id": 6
        },
        {
            "method_signature": "org.apache.commons.math.complex.Complex:toString()Ljava/lang/String;",
            "method_body": "public String toString() {\nreturn \"(\" + real + \", \" + imaginary + \")\";\n}",
            "method_id": 7
        },
        {
            "method_signature": "org.apache.commons.math.complex.Complex:equals(Ljava/lang/Object;)Z",
            "method_body": "public boolean equals(Object other) {\nif (this == other) {\n}",
            "method_id": 8
        }
    ]
}