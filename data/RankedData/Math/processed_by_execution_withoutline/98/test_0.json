{
    "bug_id": 98,
    "test_id": 0,
    "test_name": "org.apache.commons.math.linear.BigMatrixImplTest.testMath209",
    "test_body": "440: public void testMath209() {\n441: BigMatrix a = new BigMatrixImpl(new BigDecimal[][] {\n442: { new BigDecimal(1), new BigDecimal(2) },\n443: { new BigDecimal(3), new BigDecimal(4) },\n444: { new BigDecimal(5), new BigDecimal(6) }\n445: }, false);\n446: BigDecimal[] b = a.operate(new BigDecimal[] { new BigDecimal(1), new BigDecimal(1) });\n447: assertEquals(a.getRowDimension(), b.length);\n448: assertEquals( 3.0, b[0].doubleValue(), 1.0e-12);\n449: assertEquals( 7.0, b[1].doubleValue(), 1.0e-12);\n450: assertEquals(11.0, b[2].doubleValue(), 1.0e-12);\n451: }\n",
    "stack_trace": "",
    "covered_methods": [
        {
            "method_signature": "org.apache.commons.math.linear.BigMatrixImpl:<init>([[Ljava/math/BigDecimal;Z)V",
            "method_body": "public BigMatrixImpl(BigDecimal[][] d, boolean copyArray) {\n}",
            "method_id": 0
        },
        {
            "method_signature": "org.apache.commons.math.linear.BigMatrixImpl:<clinit>()V",
            "method_body": "private static final long serialVersionUID = -1011428905656140431L;\nprivate static final BigDecimal TOO_SMALL = new BigDecimal(10E-12);\n}",
            "method_id": 1
        },
        {
            "method_signature": "org.apache.commons.math.linear.BigMatrixImpl:getRowDimension()I",
            "method_body": "public int getRowDimension() {\nreturn data.length;\n}",
            "method_id": 2
        },
        {
            "method_signature": "org.apache.commons.math.linear.BigMatrixImpl:getColumnDimension()I",
            "method_body": "public int getColumnDimension() {\nreturn data[0].length;\n}",
            "method_id": 3
        },
        {
            "method_signature": "org.apache.commons.math.linear.BigMatrixImpl:operate([Ljava/math/BigDecimal;)[Ljava/math/BigDecimal;",
            "method_body": "public BigDecimal[] operate(BigDecimal[] v) throws IllegalArgumentException {\nif (v.length != this.getColumnDimension()) {\n}",
            "method_id": 4
        }
    ]
}