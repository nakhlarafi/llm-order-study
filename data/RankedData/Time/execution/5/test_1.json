{
    "bug_id": 5,
    "test_id": 1,
    "test_name": "org.joda.time.TestPeriod_Basics.testNormalizedStandard_periodType_monthsWeeks",
    "test_body": "1551: public void testNormalizedStandard_periodType_monthsWeeks() {\n1552: PeriodType type = PeriodType.forFields(new DurationFieldType[]{\n1553: DurationFieldType.months(),\n1554: DurationFieldType.weeks(),\n1555: DurationFieldType.days()});\n1556: Period test = new Period(2, 4, 6, 0, 0, 0, 0, 0);\n1557: Period result = test.normalizedStandard(type);\n1558: assertEquals(new Period(2, 4, 6, 0, 0, 0, 0, 0), test);\n1559: assertEquals(new Period(0, 28, 6, 0, 0, 0, 0, 0, type), result);\n1560: }\n",
    "stack_trace": "",
    "covered_methods": [
        {
            "method_signature": "org.joda.time.DateTimeZone:getDefault()Lorg/joda/time/DateTimeZone;",
            "method_body": "public static DateTimeZone getDefault() {\nDateTimeZone zone = cDefault;\n}",
            "method_id": 0
        },
        {
            "method_signature": "org.joda.time.DateTimeZone:setDefault(Lorg/joda/time/DateTimeZone;)V",
            "method_body": "public static void setDefault(DateTimeZone zone) throws SecurityException {\nSecurityManager sm = System.getSecurityManager();\n}",
            "method_id": 1
        },
        {
            "method_signature": "org.joda.time.DateTimeUtils:setCurrentMillisSystem()V",
            "method_body": "public static final void setCurrentMillisSystem() throws SecurityException {\ncheckPermission();\n}",
            "method_id": 2
        },
        {
            "method_signature": "org.joda.time.DateTimeUtils:setCurrentMillisFixed(J)V",
            "method_body": "public static final void setCurrentMillisFixed(long fixedMillis) throws SecurityException {\ncheckPermission();\n}",
            "method_id": 3
        },
        {
            "method_signature": "org.joda.time.DateTimeUtils:checkPermission()V",
            "method_body": "private static void checkPermission() throws SecurityException {\nSecurityManager sm = System.getSecurityManager();\n}",
            "method_id": 4
        },
        {
            "method_signature": "org.joda.time.DateTimeUtils:getChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology;",
            "method_body": "public static final Chronology getChronology(Chronology chrono) {\nif (chrono == null) {\n}",
            "method_id": 5
        },
        {
            "method_signature": "org.joda.time.DateTimeUtils:getPeriodType(Lorg/joda/time/PeriodType;)Lorg/joda/time/PeriodType;",
            "method_body": "public static final PeriodType getPeriodType(PeriodType type) {\nif (type == null) {\n}",
            "method_id": 6
        },
        {
            "method_signature": "org.joda.time.DateTimeUtils$FixedMillisProvider:<init>(J)V",
            "method_body": "FixedMillisProvider(long fixedMillis) {\n}",
            "method_id": 7
        },
        {
            "method_signature": "org.joda.time.chrono.ISOChronology:getInstanceUTC()Lorg/joda/time/chrono/ISOChronology;",
            "method_body": "public static ISOChronology getInstanceUTC() {\nreturn INSTANCE_UTC;\n}",
            "method_id": 8
        },
        {
            "method_signature": "org.joda.time.DurationFieldType:millis()Lorg/joda/time/DurationFieldType;",
            "method_body": "public static DurationFieldType millis() {\nreturn MILLIS_TYPE;\n}",
            "method_id": 9
        },
        {
            "method_signature": "org.joda.time.DurationFieldType:seconds()Lorg/joda/time/DurationFieldType;",
            "method_body": "public static DurationFieldType seconds() {\nreturn SECONDS_TYPE;\n}",
            "method_id": 10
        },
        {
            "method_signature": "org.joda.time.DurationFieldType:minutes()Lorg/joda/time/DurationFieldType;",
            "method_body": "public static DurationFieldType minutes() {\nreturn MINUTES_TYPE;\n}",
            "method_id": 11
        },
        {
            "method_signature": "org.joda.time.DurationFieldType:hours()Lorg/joda/time/DurationFieldType;",
            "method_body": "public static DurationFieldType hours() {\nreturn HOURS_TYPE;\n}",
            "method_id": 12
        },
        {
            "method_signature": "org.joda.time.DurationFieldType:days()Lorg/joda/time/DurationFieldType;",
            "method_body": "public static DurationFieldType days() {\nreturn DAYS_TYPE;\n}",
            "method_id": 13
        },
        {
            "method_signature": "org.joda.time.DurationFieldType:weeks()Lorg/joda/time/DurationFieldType;",
            "method_body": "public static DurationFieldType weeks() {\nreturn WEEKS_TYPE;\n}",
            "method_id": 14
        },
        {
            "method_signature": "org.joda.time.DurationFieldType:months()Lorg/joda/time/DurationFieldType;",
            "method_body": "public static DurationFieldType months() {\nreturn MONTHS_TYPE;\n}",
            "method_id": 15
        },
        {
            "method_signature": "org.joda.time.DurationFieldType:years()Lorg/joda/time/DurationFieldType;",
            "method_body": "public static DurationFieldType years() {\nreturn YEARS_TYPE;\n}",
            "method_id": 16
        },
        {
            "method_signature": "org.joda.time.field.FieldUtils:safeAdd(II)I",
            "method_body": "public static int safeAdd(int val1, int val2) {\nint sum = val1 + val2;\n}",
            "method_id": 17
        },
        {
            "method_signature": "org.joda.time.PeriodType:standard()Lorg/joda/time/PeriodType;",
            "method_body": "public static PeriodType standard() {\nPeriodType type = cStandard;\n}",
            "method_id": 18
        },
        {
            "method_signature": "org.joda.time.PeriodType:months()Lorg/joda/time/PeriodType;",
            "method_body": "public static PeriodType months() {\nPeriodType type = cMonths;\n}",
            "method_id": 19
        },
        {
            "method_signature": "org.joda.time.PeriodType:size()I",
            "method_body": "public int size() {\nreturn iTypes.length;\n}",
            "method_id": 20
        },
        {
            "method_signature": "org.joda.time.PeriodType:indexOf(Lorg/joda/time/DurationFieldType;)I",
            "method_body": "public int indexOf(DurationFieldType type) {\nfor (int i = 0, isize = size(); i < isize; i++) {\n}",
            "method_id": 21
        },
        {
            "method_signature": "org.joda.time.PeriodType:getIndexedField(Lorg/joda/time/ReadablePeriod;I)I",
            "method_body": "int getIndexedField(ReadablePeriod period, int index) {\nint realIndex = iIndices[index];\n}",
            "method_id": 22
        },
        {
            "method_signature": "org.joda.time.PeriodType:setIndexedField(Lorg/joda/time/ReadablePeriod;I[II)Z",
            "method_body": "boolean setIndexedField(ReadablePeriod period, int index, int[] values, int newValue) {\nint realIndex = iIndices[index];\n}",
            "method_id": 23
        },
        {
            "method_signature": "org.joda.time.base.AbstractPeriod:<init>()V",
            "method_body": "protected AbstractPeriod() {\nsuper();\n}",
            "method_id": 24
        },
        {
            "method_signature": "org.joda.time.base.AbstractPeriod:size()I",
            "method_body": "public int size() {\nreturn getPeriodType().size();\n}",
            "method_id": 25
        },
        {
            "method_signature": "org.joda.time.base.AbstractPeriod:getValues()[I",
            "method_body": "public int[] getValues() {\nint[] result = new int[size()];\n}",
            "method_id": 26
        },
        {
            "method_signature": "org.joda.time.base.AbstractPeriod:indexOf(Lorg/joda/time/DurationFieldType;)I",
            "method_body": "public int indexOf(DurationFieldType type) {\nreturn getPeriodType().indexOf(type);\n}",
            "method_id": 27
        },
        {
            "method_signature": "org.joda.time.base.BasePeriod:<init>(IIIIIIIILorg/joda/time/PeriodType;)V",
            "method_body": "protected BasePeriod(int years, int months, int weeks, int days,\nsuper();\n}",
            "method_id": 28
        },
        {
            "method_signature": "org.joda.time.base.BasePeriod:<init>(JLorg/joda/time/PeriodType;Lorg/joda/time/Chronology;)V",
            "method_body": "protected BasePeriod(long duration, PeriodType type, Chronology chrono) {\nsuper();\n}",
            "method_id": 29
        },
        {
            "method_signature": "org.joda.time.base.BasePeriod:checkPeriodType(Lorg/joda/time/PeriodType;)Lorg/joda/time/PeriodType;",
            "method_body": "protected PeriodType checkPeriodType(PeriodType type) {\nreturn DateTimeUtils.getPeriodType(type);\n}",
            "method_id": 30
        },
        {
            "method_signature": "org.joda.time.base.BasePeriod:getPeriodType()Lorg/joda/time/PeriodType;",
            "method_body": "public PeriodType getPeriodType() {\nreturn iType;\n}",
            "method_id": 31
        },
        {
            "method_signature": "org.joda.time.base.BasePeriod:getValue(I)I",
            "method_body": "public int getValue(int index) {\nreturn iValues[index];\n}",
            "method_id": 32
        },
        {
            "method_signature": "org.joda.time.base.BasePeriod:checkAndUpdate(Lorg/joda/time/DurationFieldType;[II)V",
            "method_body": "private void checkAndUpdate(DurationFieldType type, int[] values, int newValue) {\nint index = indexOf(type);\n}",
            "method_id": 33
        },
        {
            "method_signature": "org.joda.time.base.BasePeriod:setPeriodInternal(IIIIIIII)[I",
            "method_body": "private int[] setPeriodInternal(int years, int months, int weeks, int days,\nint[] newValues = new int[size()];\n}",
            "method_id": 34
        },
        {
            "method_signature": "org.joda.time.Period:<init>(IIIIIIII)V",
            "method_body": "public Period(int years, int months, int weeks, int days,\nsuper(years, months, weeks, days, hours, minutes, seconds, millis, PeriodType.standard());\n}",
            "method_id": 35
        },
        {
            "method_signature": "org.joda.time.Period:<init>(JLorg/joda/time/PeriodType;Lorg/joda/time/Chronology;)V",
            "method_body": "public Period(long duration, PeriodType type, Chronology chronology) {\nsuper(duration, type, chronology);\n}",
            "method_id": 36
        },
        {
            "method_signature": "org.joda.time.Period:getYears()I",
            "method_body": "public int getYears() {\nreturn getPeriodType().getIndexedField(this, PeriodType.YEAR_INDEX);\n}",
            "method_id": 37
        },
        {
            "method_signature": "org.joda.time.Period:getMonths()I",
            "method_body": "public int getMonths() {\nreturn getPeriodType().getIndexedField(this, PeriodType.MONTH_INDEX);\n}",
            "method_id": 38
        },
        {
            "method_signature": "org.joda.time.Period:getWeeks()I",
            "method_body": "public int getWeeks() {\nreturn getPeriodType().getIndexedField(this, PeriodType.WEEK_INDEX);\n}",
            "method_id": 39
        },
        {
            "method_signature": "org.joda.time.Period:getDays()I",
            "method_body": "public int getDays() {\nreturn getPeriodType().getIndexedField(this, PeriodType.DAY_INDEX);\n}",
            "method_id": 40
        },
        {
            "method_signature": "org.joda.time.Period:getHours()I",
            "method_body": "public int getHours() {\nreturn getPeriodType().getIndexedField(this, PeriodType.HOUR_INDEX);\n}",
            "method_id": 41
        },
        {
            "method_signature": "org.joda.time.Period:getMinutes()I",
            "method_body": "public int getMinutes() {\nreturn getPeriodType().getIndexedField(this, PeriodType.MINUTE_INDEX);\n}",
            "method_id": 42
        },
        {
            "method_signature": "org.joda.time.Period:getSeconds()I",
            "method_body": "public int getSeconds() {\nreturn getPeriodType().getIndexedField(this, PeriodType.SECOND_INDEX);\n}",
            "method_id": 43
        },
        {
            "method_signature": "org.joda.time.Period:getMillis()I",
            "method_body": "public int getMillis() {\nreturn getPeriodType().getIndexedField(this, PeriodType.MILLI_INDEX);\n}",
            "method_id": 44
        },
        {
            "method_signature": "org.joda.time.Period:withYears(I)Lorg/joda/time/Period;",
            "method_body": "public Period withYears(int years) {\nint[] values = getValues();  // cloned\n}",
            "method_id": 45
        },
        {
            "method_signature": "org.joda.time.Period:normalizedStandard(Lorg/joda/time/PeriodType;)Lorg/joda/time/Period;",
            "method_body": "public Period normalizedStandard(PeriodType type) {\ntype = DateTimeUtils.getPeriodType(type);\n}",
            "method_id": 46
        }
    ]
}