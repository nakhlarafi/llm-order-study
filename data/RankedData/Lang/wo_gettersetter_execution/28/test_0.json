{
    "bug_id": 28,
    "test_id": 0,
    "test_name": "org.apache.commons.lang3.text.translate.NumericEntityUnescaperTest.testSupplementaryUnescaping",
    "test_body": "27: public void testSupplementaryUnescaping() {\n28: NumericEntityUnescaper neu = new NumericEntityUnescaper();\n29: String input = \"&#68642;\";\n30: String expected = \"\\uD803\\uDC22\";\n31: 32: String result = neu.translate(input);\n33: assertEquals(\"Failed to unescape numeric entities supplementary characters\", expected, result);\n34: }\n",
    "stack_trace": "",
    "covered_methods": [
        {
            "method_signature": "org.apache.commons.lang3.text.translate.CharSequenceTranslator:translate(Ljava/lang/CharSequence;)Ljava/lang/String;",
            "method_body": "public abstract int translate(CharSequence input, int index, Writer out) throws IOException;\nif (input == null) {\n}",
            "method_id": 0
        },
        {
            "method_signature": "org.apache.commons.lang3.text.translate.CharSequenceTranslator:translate(Ljava/lang/CharSequence;Ljava/io/Writer;)V",
            "method_body": "public final void translate(CharSequence input, Writer out) throws IOException {\nif (out == null) {\n}",
            "method_id": 1
        },
        {
            "method_signature": "org.apache.commons.lang3.text.translate.NumericEntityUnescaper:translate(Ljava/lang/CharSequence;ILjava/io/Writer;)I",
            "method_body": "public int translate(CharSequence input, int index, Writer out) throws IOException {\nif(input.charAt(index) == '&' && input.charAt(index + 1) == '#') {\n}",
            "method_id": 2
        }
    ]
}