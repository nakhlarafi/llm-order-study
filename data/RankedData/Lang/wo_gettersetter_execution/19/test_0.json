{
    "bug_id": 19,
    "test_id": 0,
    "test_name": "org.apache.commons.lang3.text.translate.NumericEntityUnescaperTest.testOutOfBounds",
    "test_body": "37: public void testOutOfBounds() {\n38: NumericEntityUnescaper neu = new NumericEntityUnescaper();\n39: 40: assertEquals(\"Failed to ignore when last character is &\", \"Test &\", neu.translate(\"Test &\"));\n41: assertEquals(\"Failed to ignore when last character is &\", \"Test &#\", neu.translate(\"Test &#\"));\n42: assertEquals(\"Failed to ignore when last character is &\", \"Test &#x\", neu.translate(\"Test &#x\"));\n43: assertEquals(\"Failed to ignore when last character is &\", \"Test &#X\", neu.translate(\"Test &#X\"));\n44: }\n",
    "stack_trace": "",
    "covered_methods": [
        {
            "method_signature": "org.apache.commons.lang3.text.translate.CharSequenceTranslator:translate(Ljava/lang/CharSequence;)Ljava/lang/String;",
            "method_body": "public abstract int translate(CharSequence input, int index, Writer out) throws IOException;\nif (input == null) {\n}",
            "method_id": 0
        },
        {
            "method_signature": "org.apache.commons.lang3.text.translate.CharSequenceTranslator:translate(Ljava/lang/CharSequence;Ljava/io/Writer;)V",
            "method_body": "public final void translate(CharSequence input, Writer out) throws IOException {\nif (out == null) {\n}",
            "method_id": 1
        },
        {
            "method_signature": "org.apache.commons.lang3.text.translate.NumericEntityUnescaper:translate(Ljava/lang/CharSequence;ILjava/io/Writer;)I",
            "method_body": "public int translate(CharSequence input, int index, Writer out) throws IOException {\nint seqEnd = input.length();\n}",
            "method_id": 2
        }
    ]
}