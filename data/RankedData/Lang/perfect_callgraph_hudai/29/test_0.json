{
    "bug_id": 29,
    "test_id": 0,
    "test_name": "org.apache.commons.lang3.SystemUtilsTest.testJavaVersionAsInt",
    "test_body": "public void testJavaVersionAsInt() {\nassertEquals(0, SystemUtils.toJavaVersionInt(null));\nassertEquals(0, SystemUtils.toJavaVersionInt(\"\"));\nassertEquals(0, SystemUtils.toJavaVersionInt(\"0\"));\nassertEquals(110, SystemUtils.toJavaVersionInt(\"1.1\"));\nassertEquals(120, SystemUtils.toJavaVersionInt(\"1.2\"));\nassertEquals(130, SystemUtils.toJavaVersionInt(\"1.3.0\"));\nassertEquals(131, SystemUtils.toJavaVersionInt(\"1.3.1\"));\nassertEquals(140, SystemUtils.toJavaVersionInt(\"1.4.0\"));\nassertEquals(141, SystemUtils.toJavaVersionInt(\"1.4.1\"));\nassertEquals(142, SystemUtils.toJavaVersionInt(\"1.4.2\"));\nassertEquals(150, SystemUtils.toJavaVersionInt(\"1.5.0\"));\nassertEquals(160, SystemUtils.toJavaVersionInt(\"1.6.0\"));\nassertEquals(131, SystemUtils.toJavaVersionInt(\"JavaVM-1.3.1\"));\nassertEquals(131, SystemUtils.toJavaVersionInt(\"1.3.1 subset\"));\n// This used to return 0f in [lang] version 2.5:\nassertEquals(130, SystemUtils.toJavaVersionInt(\"XXX-1.3.x\"));\n}\n",
    "stack_trace": "junit.framework.AssertionFailedError: expected:<0> but was:<0.0>\nat junit.framework.Assert.fail(Assert.java:57)\nat junit.framework.Assert.failNotEquals(Assert.java:329)\nat junit.framework.Assert.assertEquals(Assert.java:78)\nat junit.framework.Assert.assertEquals(Assert.java:86)\nat junit.framework.TestCase.assertEquals(TestCase.java:253)\nat org.apache.commons.lang3.SystemUtilsTest.testJavaVersionAsInt(SystemUtilsTest.java:210)",
    "covered_methods": [
        {
            "method_signature": "org.apache.commons.lang3.SystemUtils:toJavaVersionInt(Ljava/lang/String;)F",
            "method_body": "static float toJavaVersionInt(String version) {\nreturn toVersionInt(toJavaVersionIntArray(version, JAVA_VERSION_TRIM_SIZE));\n}",
            "method_id": 0
        },
        {
            "method_signature": "org.apache.commons.lang3.SystemUtils:toJavaVersionIntArray(Ljava/lang/String;I)[I",
            "method_body": "private static int[] toJavaVersionIntArray(String version, int limit) {\nif (version == null) {\nreturn ArrayUtils.EMPTY_INT_ARRAY;\n}",
            "method_id": 1
        },
        {
            "method_signature": "org.apache.commons.lang3.SystemUtils:toVersionInt([I)I",
            "method_body": "private static int toVersionInt(int[] javaVersions) {\nif (javaVersions == null) {\nint intVersion = 0;\nint len = javaVersions.length;\nif (len >= 1) {\nif (len >= 2) {\nif (len >= 3) {\nreturn intVersion;\n}",
            "method_id": 2
        }
    ]
}