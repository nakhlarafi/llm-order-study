{
    "bug_id": 46,
    "test_id": 0,
    "test_name": "org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash",
    "test_body": "103: public void testEscapeJavaWithSlash() {\n104: final String input = \"String with a slash (/) in it\";\n105: 106: final String expected = input;\n107: final String actual = StringEscapeUtils.escapeJava(input);\n108: 109: /**\n110: * In 2.4 StringEscapeUtils.escapeJava(String) escapes '/' characters, which are not a valid character to escape\n111: * in a Java string.\n112: */\n113: assertEquals(expected, actual);\n114: }\n",
    "stack_trace": "",
    "covered_methods": [
        {
            "method_signature": "org.apache.commons.lang.StringEscapeUtils:escapeJava(Ljava/lang/String;)Ljava/lang/String;",
            "method_body": "public static String escapeJava(String str) {\nreturn escapeJavaStyleString(str, false);\n}",
            "method_id": 0
        },
        {
            "method_signature": "org.apache.commons.lang.StringEscapeUtils:escapeJavaStyleString(Ljava/lang/String;Z)Ljava/lang/String;",
            "method_body": "private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {\nif (str == null) {\n}",
            "method_id": 1
        },
        {
            "method_signature": "org.apache.commons.lang.StringEscapeUtils:escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V",
            "method_body": "private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {\nif (out == null) {\n}",
            "method_id": 2
        }
    ]
}