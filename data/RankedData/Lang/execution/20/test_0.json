{
    "bug_id": 20,
    "test_id": 0,
    "test_name": "org.apache.commons.lang3.StringUtilsTest.testJoin_Objectarray",
    "test_body": "184: public void testJoin_Objectarray() {\n185: //        assertEquals(null, StringUtils.join(null)); // generates warning\n186: assertEquals(null, StringUtils.join((Object[]) null)); // equivalent explicit cast\n187: // test additional varargs calls\n188: assertEquals(\"\", StringUtils.join()); // empty array\n189: assertEquals(\"\", StringUtils.join((Object) null)); // => new Object[]{null}\n190: 191: assertEquals(\"\", StringUtils.join(EMPTY_ARRAY_LIST));\n192: assertEquals(\"\", StringUtils.join(NULL_ARRAY_LIST));\n193: assertEquals(\"null\", StringUtils.join(NULL_TO_STRING_LIST));\n194: assertEquals(\"abc\", StringUtils.join(new String[] {\"a\", \"b\", \"c\"}));\n195: assertEquals(\"a\", StringUtils.join(new String[] {null, \"a\", \"\"}));\n196: assertEquals(\"foo\", StringUtils.join(MIXED_ARRAY_LIST));\n197: assertEquals(\"foo2\", StringUtils.join(MIXED_TYPE_LIST));\n198: }\n",
    "stack_trace": "",
    "covered_methods": [
        {
            "method_signature": "org.apache.commons.lang3.StringUtils:join([Ljava/lang/Object;)Ljava/lang/String;",
            "method_body": "public static <T> String join(T... elements) {\nreturn join(elements, null);\n}",
            "method_id": 0
        },
        {
            "method_signature": "org.apache.commons.lang3.StringUtils:join([Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;",
            "method_body": "public static String join(Object[] array, String separator) {\nif (array == null) {\n}",
            "method_id": 1
        },
        {
            "method_signature": "org.apache.commons.lang3.StringUtils:join([Ljava/lang/Object;Ljava/lang/String;II)Ljava/lang/String;",
            "method_body": "public static String join(Object[] array, String separator, int startIndex, int endIndex) {\nif (array == null) {\n}",
            "method_id": 2
        }
    ]
}