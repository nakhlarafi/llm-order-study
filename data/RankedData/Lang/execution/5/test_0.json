{
    "bug_id": 5,
    "test_id": 0,
    "test_name": "org.apache.commons.lang3.LocaleUtilsTest.testLang865",
    "test_body": "504: public void testLang865() {\n505: assertValidToLocale(\"_GB\", \"\", \"GB\", \"\");\n506: assertValidToLocale(\"_GB_P\", \"\", \"GB\", \"P\");\n507: assertValidToLocale(\"_GB_POSIX\", \"\", \"GB\", \"POSIX\");\n508: try {\n509: LocaleUtils.toLocale(\"_G\");\n510: fail(\"Must be at least 3 chars if starts with underscore\");\n511: } catch (final IllegalArgumentException iae) {\n512: }\n513: try {\n514: LocaleUtils.toLocale(\"_Gb\");\n515: fail(\"Must be uppercase if starts with underscore\");\n516: } catch (final IllegalArgumentException iae) {\n517: }\n518: try {\n519: LocaleUtils.toLocale(\"_gB\");\n520: fail(\"Must be uppercase if starts with underscore\");\n521: } catch (final IllegalArgumentException iae) {\n522: }\n523: try {\n524: LocaleUtils.toLocale(\"_1B\");\n525: fail(\"Must be letter if starts with underscore\");\n526: } catch (final IllegalArgumentException iae) {\n527: }\n528: try {\n529: LocaleUtils.toLocale(\"_G1\");\n530: fail(\"Must be letter if starts with underscore\");\n531: } catch (final IllegalArgumentException iae) {\n532: }\n533: try {\n534: LocaleUtils.toLocale(\"_GB_\");\n535: fail(\"Must be at least 5 chars if starts with underscore\");\n536: } catch (final IllegalArgumentException iae) {\n537: }\n538: try {\n539: LocaleUtils.toLocale(\"_GBAP\");\n540: fail(\"Must have underscore after the country if starts with underscore and is at least 5 chars\");\n541: } catch (final IllegalArgumentException iae) {\n542: }\n543: }\n",
    "stack_trace": "",
    "covered_methods": [
        {
            "method_signature": "org.apache.commons.lang3.LocaleUtils:toLocale(Ljava/lang/String;)Ljava/util/Locale;",
            "method_body": "public static Locale toLocale(final String str) {\nif (str == null) {\n}",
            "method_id": 0
        }
    ]
}