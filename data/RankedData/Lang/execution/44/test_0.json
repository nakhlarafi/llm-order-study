{
    "bug_id": 44,
    "test_id": 0,
    "test_name": "org.apache.commons.lang.NumberUtilsTest.testLang457",
    "test_body": "524: public void testLang457() {\n525: String[] badInputs = new String[] { \"l\", \"L\", \"f\", \"F\", \"junk\", \"bobL\"};\n526: for(int i=0; i<badInputs.length; i++) {\n527: try {\n528: NumberUtils.createNumber(badInputs[i]);\n529: fail(\"NumberFormatException was expected for \" + badInputs[i]);\n530: } catch (NumberFormatException e) {\n531: return; // expected\n532: }\n533: }\n534: }\n",
    "stack_trace": "",
    "covered_methods": [
        {
            "method_signature": "org.apache.commons.lang.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;",
            "method_body": "public static Number createNumber(String val) throws NumberFormatException {\nif (val == null) {\n}",
            "method_id": 0
        },
        {
            "method_signature": "org.apache.commons.lang.NumberUtils:isAllZeros(Ljava/lang/String;)Z",
            "method_body": "private static boolean isAllZeros(String s) {\nif (s == null) {\n}",
            "method_id": 1
        }
    ]
}