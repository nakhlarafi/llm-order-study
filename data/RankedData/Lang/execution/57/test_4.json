{
    "bug_id": 57,
    "test_id": 4,
    "test_name": "org.apache.commons.lang.LocaleUtilsTest.testToLocale_2Part",
    "test_body": "197: public void testToLocale_2Part() {\n198: assertValidToLocale(\"us_EN\", \"us\", \"EN\");\n199: //valid though doesnt exist\n200: assertValidToLocale(\"us_ZH\", \"us\", \"ZH\");\n201: 202: try {\n203: LocaleUtils.toLocale(\"us-EN\");\n204: fail(\"Should fail as not underscore\");\n205: } catch (IllegalArgumentException iae) {}\n206: try {\n207: LocaleUtils.toLocale(\"us_En\");\n208: fail(\"Should fail second part not uppercase\");\n209: } catch (IllegalArgumentException iae) {}\n210: try {\n211: LocaleUtils.toLocale(\"us_en\");\n212: fail(\"Should fail second part not uppercase\");\n213: } catch (IllegalArgumentException iae) {}\n214: try {\n215: LocaleUtils.toLocale(\"us_eN\");\n216: fail(\"Should fail second part not uppercase\");\n217: } catch (IllegalArgumentException iae) {}\n218: try {\n219: LocaleUtils.toLocale(\"uS_EN\");\n220: fail(\"Should fail first part not lowercase\");\n221: } catch (IllegalArgumentException iae) {}\n222: try {\n223: LocaleUtils.toLocale(\"us_E3\");\n224: fail(\"Should fail second part not uppercase\");\n225: } catch (IllegalArgumentException iae) {}\n226: }        \n",
    "stack_trace": "",
    "covered_methods": [
        {
            "method_signature": "org.apache.commons.lang.LocaleUtils:isAvailableLocale(Ljava/util/Locale;)Z",
            "method_body": "public static boolean isAvailableLocale(Locale locale) {\nreturn cAvailableLocaleSet.contains(locale);\n}",
            "method_id": 0
        }
    ]
}