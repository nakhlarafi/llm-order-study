{
    "bug_id": 10,
    "test_id": 1,
    "test_name": "org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLANG_831",
    "test_body": null,
    "stack_trace": "",
    "covered_methods": [
        {
            "method_signature": "org.apache.commons.lang3.time.FastDateParser:<init>(Ljava/lang/String;Ljava/util/TimeZone;Ljava/util/Locale;)V",
            "method_body": "protected FastDateParser(String pattern, TimeZone timeZone, Locale locale) {\n}",
            "method_id": 0
        },
        {
            "method_signature": "org.apache.commons.lang3.time.FastDateParser:init()V",
            "method_body": "private void init() {\nthisYear= Calendar.getInstance(timeZone, locale).get(Calendar.YEAR);\n}",
            "method_id": 1
        },
        {
            "method_signature": "org.apache.commons.lang3.time.FastDateParser:parse(Ljava/lang/String;)Ljava/util/Date;",
            "method_body": "public Date parse(String source) throws ParseException {\nDate date= parse(source, new ParsePosition(0));\n}",
            "method_id": 2
        },
        {
            "method_signature": "org.apache.commons.lang3.time.FastDateParser:parse(Ljava/lang/String;Ljava/text/ParsePosition;)Ljava/util/Date;",
            "method_body": "public Date parse(String source, ParsePosition pos) {\nint offset= pos.getIndex();\n}",
            "method_id": 3
        },
        {
            "method_signature": "org.apache.commons.lang3.time.FastDateParser:escapeRegex(Ljava/lang/StringBuilder;Ljava/lang/String;Z)Ljava/lang/StringBuilder;",
            "method_body": "private static StringBuilder escapeRegex(StringBuilder regex, String value, boolean unquote) {\nboolean wasWhite= false;\n}",
            "method_id": 4
        },
        {
            "method_signature": "org.apache.commons.lang3.time.FastDateParser:getDisplayNames(I)[Lorg/apache/commons/lang3/time/FastDateParser$KeyValue;",
            "method_body": "KeyValue[] getDisplayNames(int field) {\nInteger fieldInt = Integer.valueOf(field);\n}",
            "method_id": 5
        },
        {
            "method_signature": "org.apache.commons.lang3.time.FastDateParser:createKeyValues([Ljava/lang/String;[Ljava/lang/String;)[Lorg/apache/commons/lang3/time/FastDateParser$KeyValue;",
            "method_body": "private static KeyValue[] createKeyValues(String[] longValues, String[] shortValues) {\nKeyValue[] fieldKeyValues= new KeyValue[count(longValues)+count(shortValues)];\n}",
            "method_id": 6
        },
        {
            "method_signature": "org.apache.commons.lang3.time.FastDateParser:count([Ljava/lang/String;)I",
            "method_body": "private static int count(String[] values) {\nint count= 0;\n}",
            "method_id": 7
        },
        {
            "method_signature": "org.apache.commons.lang3.time.FastDateParser:copy([Lorg/apache/commons/lang3/time/FastDateParser$KeyValue;I[Ljava/lang/String;)I",
            "method_body": "private static int copy(KeyValue[] fieldKeyValues, int offset, String[] values) {\nif(values!=null) {\n}",
            "method_id": 8
        },
        {
            "method_signature": "org.apache.commons.lang3.time.FastDateParser:isNextNumber()Z",
            "method_body": "boolean isNextNumber() {\nreturn nextStrategy!=null && nextStrategy.isNumber();\n}",
            "method_id": 9
        },
        {
            "method_signature": "org.apache.commons.lang3.time.FastDateParser:getStrategy(Ljava/lang/String;)Lorg/apache/commons/lang3/time/FastDateParser$Strategy;",
            "method_body": "boolean isNumber();\nswitch(formatField.charAt(0)) {\n}",
            "method_id": 10
        },
        {
            "method_signature": "org.apache.commons.lang3.time.FastDateParser$1:compare(Lorg/apache/commons/lang3/time/FastDateParser$KeyValue;Lorg/apache/commons/lang3/time/FastDateParser$KeyValue;)I",
            "method_body": "public int compare(KeyValue left, KeyValue right) {\nreturn left.key.compareToIgnoreCase(right.key);\n}",
            "method_id": 11
        },
        {
            "method_signature": "org.apache.commons.lang3.time.FastDateParser$NumberStrategy:addRegex(Lorg/apache/commons/lang3/time/FastDateParser;Ljava/lang/StringBuilder;)Z",
            "method_body": "public boolean addRegex(FastDateParser parser, StringBuilder regex) {\nif(parser.isNextNumber()) {\n}",
            "method_id": 12
        },
        {
            "method_signature": "org.apache.commons.lang3.time.FastDateParser$NumberStrategy:setCalendar(Lorg/apache/commons/lang3/time/FastDateParser;Ljava/util/Calendar;Ljava/lang/String;)V",
            "method_body": "public void setCalendar(FastDateParser parser, Calendar cal, String value) {\ncal.set(field, modify(Integer.parseInt(value)));\n}",
            "method_id": 13
        },
        {
            "method_signature": "org.apache.commons.lang3.time.FastDateParser$TextStrategy:addRegex(Lorg/apache/commons/lang3/time/FastDateParser;Ljava/lang/StringBuilder;)Z",
            "method_body": "public boolean addRegex(FastDateParser parser, StringBuilder regex) {\nregex.append('(');\n}",
            "method_id": 14
        },
        {
            "method_signature": "org.apache.commons.lang3.time.FastDateParser$TextStrategy:setCalendar(Lorg/apache/commons/lang3/time/FastDateParser;Ljava/util/Calendar;Ljava/lang/String;)V",
            "method_body": "public void setCalendar(FastDateParser parser, Calendar cal, String value) {\nKeyValue[] textKeyValues= parser.getDisplayNames(field);\n}",
            "method_id": 15
        },
        {
            "method_signature": "org.apache.commons.lang3.time.FastDateParser$3:modify(I)I",
            "method_body": "public int modify(int iValue) {\nreturn iValue-1;\n}",
            "method_id": 16
        },
        {
            "method_signature": "org.apache.commons.lang3.time.FastDateParser$CopyQuotedStrategy:<init>(Ljava/lang/String;)V",
            "method_body": "CopyQuotedStrategy(String formatField) {\n}",
            "method_id": 17
        },
        {
            "method_signature": "org.apache.commons.lang3.time.FastDateParser$CopyQuotedStrategy:isNumber()Z",
            "method_body": "public boolean isNumber() {\nchar c= formatField.charAt(0);\n}",
            "method_id": 18
        },
        {
            "method_signature": "org.apache.commons.lang3.time.FastDateParser$CopyQuotedStrategy:addRegex(Lorg/apache/commons/lang3/time/FastDateParser;Ljava/lang/StringBuilder;)Z",
            "method_body": "public boolean addRegex(FastDateParser parser, StringBuilder regex) {\nescapeRegex(regex, formatField, true);\n}",
            "method_id": 19
        },
        {
            "method_signature": "org.apache.commons.lang3.time.FastDateParser$KeyValue:<init>(Ljava/lang/String;I)V",
            "method_body": "public KeyValue(String key, int value) {\n}",
            "method_id": 20
        }
    ]
}