{
    "bug_id": 30,
    "test_id": 9,
    "test_name": "org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsNone_CharArrayWithBadSupplementaryChars",
    "test_body": "304: public void testContainsNone_CharArrayWithBadSupplementaryChars() {\n305: // Test edge case: 1/2 of a (broken) supplementary char\n306: assertEquals(true, StringUtils.containsNone(CharUSuppCharHigh, CharU20001.toCharArray()));\n307: assertEquals(-1, CharUSuppCharLow.indexOf(CharU20001));\n308: assertEquals(true, StringUtils.containsNone(CharUSuppCharLow, CharU20001.toCharArray()));\n309: assertEquals(-1, CharU20001.indexOf(CharUSuppCharHigh));\n310: assertEquals(true, StringUtils.containsNone(CharU20001, CharUSuppCharHigh.toCharArray()));\n311: assertEquals(0, CharU20001.indexOf(CharUSuppCharLow));\n312: assertEquals(false, StringUtils.containsNone(CharU20001, CharUSuppCharLow.toCharArray()));\n313: }\n",
    "stack_trace": "",
    "covered_methods": [
        {
            "method_signature": "org.apache.commons.lang3.StringUtils:containsNone(Ljava/lang/CharSequence;[C)Z",
            "method_body": "public static boolean containsNone(CharSequence cs, char[] searchChars) {\nif (cs == null || searchChars == null) {\n}",
            "method_id": 0
        }
    ]
}