{
    "bug_id": 12,
    "test_id": 1,
    "test_name": "org.apache.commons.lang3.RandomStringUtilsTest.testExceptions",
    "test_body": "133: public void testExceptions() {\n134: final char[] DUMMY = new char[]{'a'}; // valid char array\n135: try {\n136: RandomStringUtils.random(-1);\n137: fail();\n138: } catch (IllegalArgumentException ex) {}\n139: try {\n140: RandomStringUtils.random(-1, true, true);\n141: fail();\n142: } catch (IllegalArgumentException ex) {}\n143: try {\n144: RandomStringUtils.random(-1, DUMMY);\n145: fail();\n146: } catch (IllegalArgumentException ex) {}\n147: try {\n148: RandomStringUtils.random(1, new char[0]); // must not provide empty array => IAE\n149: fail();\n150: } catch (IllegalArgumentException ex) {}\n151: try {\n152: RandomStringUtils.random(-1, \"\");\n153: fail();\n154: } catch (IllegalArgumentException ex) {}\n155: try {\n156: RandomStringUtils.random(-1, (String)null);\n157: fail();\n158: } catch (IllegalArgumentException ex) {}\n159: try {\n160: RandomStringUtils.random(-1, 'a', 'z', false, false);\n161: fail();\n162: } catch (IllegalArgumentException ex) {}\n163: try {\n164: RandomStringUtils.random(-1, 'a', 'z', false, false, DUMMY);\n165: fail();\n166: } catch (IllegalArgumentException ex) {}\n167: try {\n168: RandomStringUtils.random(-1, 'a', 'z', false, false, DUMMY, new Random());\n169: fail();\n170: } catch (IllegalArgumentException ex) {}\n171: }\n",
    "stack_trace": "",
    "covered_methods": [
        {
            "method_signature": "org.apache.commons.lang3.RandomStringUtils:random(IIIZZ[CLjava/util/Random;)Ljava/lang/String;",
            "method_body": "public static String random(int count, int start, int end, boolean letters, boolean numbers,\nif (count == 0) {\n}",
            "method_id": 0
        }
    ]
}