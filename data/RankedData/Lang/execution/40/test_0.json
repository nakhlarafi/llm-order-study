{
    "bug_id": 40,
    "test_id": 0,
    "test_name": "org.apache.commons.lang.StringUtilsEqualsIndexOfTest.testContainsIgnoreCase_LocaleIndependence",
    "test_body": "316: public void testContainsIgnoreCase_LocaleIndependence() {\n317: Locale orig = Locale.getDefault();\n318: 319: Locale[] locales = { Locale.ENGLISH, new Locale(\"tr\"), Locale.getDefault() };\n320: 321: String[][] tdata = { \n322: { \"i\", \"I\" },\n323: { \"I\", \"i\" },\n324: { \"\\u03C2\", \"\\u03C3\" },\n325: { \"\\u03A3\", \"\\u03C2\" },\n326: { \"\\u03A3\", \"\\u03C3\" },\n327: };\n328: 329: String[][] fdata = { \n330: { \"\\u00DF\", \"SS\" },\n331: };\n332: 333: try {\n334: for (int i = 0; i < locales.length; i++) {\n335: Locale.setDefault(locales[i]);\n336: for (int j = 0; j < tdata.length; j++) {\n337: assertTrue(Locale.getDefault() + \": \" + j + \" \" + tdata[j][0] + \" \" + tdata[j][1], StringUtils\n338: .containsIgnoreCase(tdata[j][0], tdata[j][1]));\n339: }\n340: for (int j = 0; j < fdata.length; j++) {\n341: assertFalse(Locale.getDefault() + \": \" + j + \" \" + fdata[j][0] + \" \" + fdata[j][1], StringUtils\n342: .containsIgnoreCase(fdata[j][0], fdata[j][1]));\n343: }\n344: }\n345: } finally {\n346: Locale.setDefault(orig);\n347: }\n348: }\n",
    "stack_trace": "",
    "covered_methods": [
        {
            "method_signature": "org.apache.commons.lang.StringUtils:contains(Ljava/lang/String;Ljava/lang/String;)Z",
            "method_body": "public static boolean contains(String str, String searchStr) {\nif (str == null || searchStr == null) {\n}",
            "method_id": 0
        },
        {
            "method_signature": "org.apache.commons.lang.StringUtils:containsIgnoreCase(Ljava/lang/String;Ljava/lang/String;)Z",
            "method_body": "public static boolean containsIgnoreCase(String str, String searchStr) {\nif (str == null || searchStr == null) {\n}",
            "method_id": 1
        }
    ]
}