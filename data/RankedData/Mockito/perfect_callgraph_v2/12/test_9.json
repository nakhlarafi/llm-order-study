{
    "bug_id": 12,
    "test_id": 9,
    "test_name": "org.mockito.internal.util.reflection.GenericMasterTest.shouldDealWithNestedGenerics",
    "test_body": "37: public void shouldDealWithNestedGenerics() throws Exception {\n38: assertEquals(Set.class, m.getGenericType(field(\"nested\")));\n39: assertEquals(Set.class, m.getGenericType(field(\"multiNested\")));\n40: }\n",
    "stack_trace": "java.lang.ClassCastException: sun.reflect.generics.reflectiveObjects.ParameterizedTypeImpl cannot be cast to java.lang.Class\nat org.mockito.internal.util.reflection.GenericMaster.getGenericType(GenericMaster.java:20)\nat org.mockito.internal.util.reflection.GenericMasterTest.shouldDealWithNestedGenerics(GenericMasterTest.java:38)",
    "covered_methods": [
        {
            "method_signature": "org.mockito.internal.util.reflection.GenericMaster:getGenericType(Ljava/lang/reflect/Field;)Ljava/lang/Class;",
            "method_body": "public Class getGenericType(Field field) {\nType generic = field.getGenericType();\nif (generic != null && generic instanceof ParameterizedType) {\nType actual = ((ParameterizedType) generic).getActualTypeArguments()[0];\nreturn (Class) actual;\nreturn Object.class;\n}",
            "method_id": 0
        }
    ]
}