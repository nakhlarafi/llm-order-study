{
    "bug_id": 32,
    "test_id": 0,
    "test_name": "org.mockitousage.bugs.SpyShouldHaveNiceNameTest.shouldPrintNiceName",
    "test_body": "23: public void shouldPrintNiceName() {\n24: //when\n25: veryCoolSpy.add(1);\n26: 27: try {\n28: verify(veryCoolSpy).add(2);\n29: fail();\n30: } catch(AssertionError e) {\n31: Assertions.assertThat(e.getMessage()).contains(\"veryCoolSpy\");\n32: }\n33: }\n",
    "stack_trace": "",
    "covered_methods": [
        {
            "method_signature": "org.mockito.MockitoAnnotations:initMocks(Ljava/lang/Object;)V",
            "method_body": "public static void initMocks(Object testClass) {\nif (testClass == null) {\n}",
            "method_id": 0
        },
        {
            "method_signature": "org.mockito.MockitoAnnotations:scan(Ljava/lang/Object;Ljava/lang/Class;)V",
            "method_body": "static void scan(Object testClass, Class<?> clazz) {\nAnnotationEngine annotationEngine = new GlobalConfiguration().getAnnotationEngine();\n}",
            "method_id": 1
        },
        {
            "method_signature": "org.mockito.MockitoAnnotations:processAnnotationDeprecatedWay(Lorg/mockito/configuration/AnnotationEngine;Ljava/lang/Object;Ljava/lang/reflect/Field;)V",
            "method_body": "static void processAnnotationDeprecatedWay(AnnotationEngine annotationEngine, Object testClass, Field field) {\nboolean alreadyAssigned = false;\n}",
            "method_id": 2
        },
        {
            "method_signature": "org.mockito.internal.configuration.GlobalConfiguration:<init>()V",
            "method_body": "public GlobalConfiguration() {\n}",
            "method_id": 3
        },
        {
            "method_signature": "org.mockito.internal.configuration.GlobalConfiguration:validate()V",
            "method_body": "public static void validate() {\nnew GlobalConfiguration();\n}",
            "method_id": 4
        },
        {
            "method_signature": "org.mockito.internal.configuration.GlobalConfiguration:cleansStackTrace()Z",
            "method_body": "public boolean cleansStackTrace() {\nreturn globalConfiguration.get().cleansStackTrace();\n}",
            "method_id": 5
        },
        {
            "method_signature": "org.mockito.internal.configuration.InjectingAnnotationEngine:createMockFor(Ljava/lang/annotation/Annotation;Ljava/lang/reflect/Field;)Ljava/lang/Object;",
            "method_body": "public Object createMockFor(Annotation annotation, Field field) {\nreturn delegate.createMockFor(annotation, field);\n}",
            "method_id": 6
        },
        {
            "method_signature": "org.mockito.internal.configuration.InjectingAnnotationEngine:process(Ljava/lang/Class;Ljava/lang/Object;)V",
            "method_body": "public void process(Class<?> context, Object testClass) {\ndelegate.process(context, testClass);\n}",
            "method_id": 7
        },
        {
            "method_signature": "org.mockito.internal.configuration.DefaultAnnotationEngine:createMockFor(Ljava/lang/annotation/Annotation;Ljava/lang/reflect/Field;)Ljava/lang/Object;",
            "method_body": "public Object createMockFor(Annotation annotation, Field field) {\nif (annotation instanceof Mock) {\n}",
            "method_id": 8
        },
        {
            "method_signature": "org.mockito.internal.configuration.DefaultAnnotationEngine:process(Ljava/lang/Class;Ljava/lang/Object;)V",
            "method_body": "public void process(Class<?> clazz, Object testClass) {\nField[] fields = clazz.getDeclaredFields();\n}",
            "method_id": 9
        },
        {
            "method_signature": "org.mockito.internal.configuration.SpyAnnotationEngine:process(Ljava/lang/Class;Ljava/lang/Object;)V",
            "method_body": "public void process(Class<?> context, Object testClass) {\nField[] fields = context.getDeclaredFields();\n}",
            "method_id": 10
        },
        {
            "method_signature": "org.mockito.internal.configuration.SpyAnnotationEngine:assertNoAnnotations(Ljava/lang/Class;Ljava/lang/reflect/Field;[Ljava/lang/Class;)V",
            "method_body": "void assertNoAnnotations(Class annotation, Field field, Class ... undesiredAnnotations) {\nfor (Class u : undesiredAnnotations) {\n}",
            "method_id": 11
        },
        {
            "method_signature": "org.mockito.internal.progress.ThreadSafeMockingProgress:threadSafely()Lorg/mockito/internal/progress/MockingProgress;",
            "method_body": "static MockingProgress threadSafely() {\nif (mockingProgress.get() == null) {\n}",
            "method_id": 12
        },
        {
            "method_signature": "org.mockito.internal.progress.ThreadSafeMockingProgress:reportOngoingStubbing(Lorg/mockito/internal/progress/IOngoingStubbing;)V",
            "method_body": "public void reportOngoingStubbing(IOngoingStubbing iOngoingStubbing) {\nthreadSafely().reportOngoingStubbing(iOngoingStubbing);\n}",
            "method_id": 13
        },
        {
            "method_signature": "org.mockito.internal.progress.ThreadSafeMockingProgress:verificationStarted(Lorg/mockito/verification/VerificationMode;)V",
            "method_body": "public void verificationStarted(VerificationMode verify) {\nthreadSafely().verificationStarted(verify);\n}",
            "method_id": 14
        },
        {
            "method_signature": "org.mockito.internal.progress.ThreadSafeMockingProgress:pullVerificationMode()Lorg/mockito/verification/VerificationMode;",
            "method_body": "public VerificationMode pullVerificationMode() {\nreturn threadSafely().pullVerificationMode();\n}",
            "method_id": 15
        },
        {
            "method_signature": "org.mockito.internal.progress.ThreadSafeMockingProgress:validateState()V",
            "method_body": "public void validateState() {\nthreadSafely().validateState();\n}",
            "method_id": 16
        },
        {
            "method_signature": "org.mockito.internal.progress.ThreadSafeMockingProgress:mockingStarted(Ljava/lang/Object;Ljava/lang/Class;Lorg/mockito/MockSettings;)V",
            "method_body": "public void mockingStarted(Object mock, Class classToMock, MockSettings mockSettings) {\nthreadSafely().mockingStarted(mock, classToMock, mockSettings);\n}",
            "method_id": 17
        },
        {
            "method_signature": "org.mockito.internal.progress.MockingProgressImpl:reportOngoingStubbing(Lorg/mockito/internal/progress/IOngoingStubbing;)V",
            "method_body": "public void reportOngoingStubbing(IOngoingStubbing iOngoingStubbing) {\nthis.iOngoingStubbing = iOngoingStubbing;\n}",
            "method_id": 18
        },
        {
            "method_signature": "org.mockito.internal.progress.MockingProgressImpl:verificationStarted(Lorg/mockito/verification/VerificationMode;)V",
            "method_body": "public void verificationStarted(VerificationMode verify) {\nvalidateState();\n}",
            "method_id": 19
        },
        {
            "method_signature": "org.mockito.internal.progress.MockingProgressImpl:resetOngoingStubbing()V",
            "method_body": "public void resetOngoingStubbing() {\niOngoingStubbing = null;\n}",
            "method_id": 20
        },
        {
            "method_signature": "org.mockito.internal.progress.MockingProgressImpl:pullVerificationMode()Lorg/mockito/verification/VerificationMode;",
            "method_body": "public VerificationMode pullVerificationMode() {\nif (verificationMode == null) {\n}",
            "method_id": 21
        },
        {
            "method_signature": "org.mockito.internal.progress.MockingProgressImpl:validateState()V",
            "method_body": "public void validateState() {\nGlobalConfiguration.validate();\n}",
            "method_id": 22
        },
        {
            "method_signature": "org.mockito.internal.progress.MockingProgressImpl:mockingStarted(Ljava/lang/Object;Ljava/lang/Class;Lorg/mockito/MockSettings;)V",
            "method_body": "public void mockingStarted(Object mock, Class classToMock, MockSettings mockSettings) {\nif (listener != null && listener instanceof MockingStartedListener) {\n}",
            "method_id": 23
        },
        {
            "method_signature": "org.mockito.exceptions.Reporter:argumentsAreDifferent(Ljava/lang/String;Ljava/lang/String;Lorg/mockito/internal/debugging/Location;)V",
            "method_body": "public void argumentsAreDifferent(String wanted, String actual, Location actualLocation) {\nString message = join(\"Argument(s) are different! Wanted:\",\n}",
            "method_id": 24
        },
        {
            "method_signature": "org.mockito.internal.progress.ArgumentMatcherStorageImpl:pullMatchers()Ljava/util/List;",
            "method_body": "public List<Matcher> pullMatchers() {\nif (matcherStack.isEmpty()) {\n}",
            "method_id": 25
        },
        {
            "method_signature": "org.mockito.internal.progress.ArgumentMatcherStorageImpl:validateState()V",
            "method_body": "public void validateState() {\nif (!matcherStack.isEmpty()) {\n}",
            "method_id": 26
        },
        {
            "method_signature": "org.mockito.internal.MockitoCore:mock(Ljava/lang/Class;Lorg/mockito/MockSettings;)Ljava/lang/Object;",
            "method_body": "public <T> T mock(Class<T> classToMock, MockSettings mockSettings) {\nT mock = mockUtil.createMock(classToMock, (MockSettingsImpl) mockSettings);\n}",
            "method_id": 27
        },
        {
            "method_signature": "org.mockito.internal.MockitoCore:verify(Ljava/lang/Object;Lorg/mockito/verification/VerificationMode;)Ljava/lang/Object;",
            "method_body": "public <T> T verify(T mock, VerificationMode mode) {\nif (mock == null) {\n}",
            "method_id": 28
        },
        {
            "method_signature": "org.mockito.internal.util.MockUtil:<init>(Lorg/mockito/internal/util/MockCreationValidator;)V",
            "method_body": "public MockUtil(MockCreationValidator creationValidator) {\n}",
            "method_id": 29
        },
        {
            "method_signature": "org.mockito.internal.util.MockUtil:<init>()V",
            "method_body": "public MockUtil() {\nthis(new MockCreationValidator());\n}",
            "method_id": 30
        },
        {
            "method_signature": "org.mockito.internal.util.MockUtil:createMock(Ljava/lang/Class;Lorg/mockito/internal/creation/MockSettingsImpl;)Ljava/lang/Object;",
            "method_body": "public <T> T createMock(Class<T> classToMock, MockSettingsImpl settings) {\ncreationValidator.validateType(classToMock);\n}",
            "method_id": 31
        },
        {
            "method_signature": "org.mockito.internal.util.MockCreationValidator:validateType(Ljava/lang/Class;)V",
            "method_body": "public void validateType(Class classToMock) {\nif (!isTypeMockable(classToMock)) {\n}",
            "method_id": 32
        },
        {
            "method_signature": "org.mockito.internal.util.MockCreationValidator:validateExtraInterfaces(Ljava/lang/Class;[Ljava/lang/Class;)V",
            "method_body": "public void validateExtraInterfaces(Class classToMock, Class ... extraInterfaces) {\nif (extraInterfaces == null) {\n}",
            "method_id": 33
        },
        {
            "method_signature": "org.mockito.internal.util.MockCreationValidator:validateMockedType(Ljava/lang/Class;Ljava/lang/Object;)V",
            "method_body": "public void validateMockedType(Class classToMock, Object spiedInstance) {\nif (classToMock == null || spiedInstance == null) {\n}",
            "method_id": 34
        },
        {
            "method_signature": "org.mockito.internal.stubbing.answers.CallsRealMethods:answer(Lorg/mockito/invocation/InvocationOnMock;)Ljava/lang/Object;",
            "method_body": "public Object answer(InvocationOnMock invocation) throws Throwable {\nreturn invocation.callRealMethod();\n}",
            "method_id": 35
        },
        {
            "method_signature": "org.mockito.Mockito:spy(Ljava/lang/Object;)Ljava/lang/Object;",
            "method_body": "public static <T> T spy(T object) {\nreturn MOCKITO_CORE.mock((Class<T>) object.getClass(), withSettings()\n}",
            "method_id": 36
        },
        {
            "method_signature": "org.mockito.Mockito:verify(Ljava/lang/Object;)Ljava/lang/Object;",
            "method_body": "public static <T> T verify(T mock) {\nreturn MOCKITO_CORE.verify(mock, times(1));\n}",
            "method_id": 37
        },
        {
            "method_signature": "org.mockito.Mockito:times(I)Lorg/mockito/verification/VerificationMode;",
            "method_body": "public static VerificationMode times(int wantedNumberOfInvocations) {\nreturn VerificationModeFactory.times(wantedNumberOfInvocations);\n}",
            "method_id": 38
        },
        {
            "method_signature": "org.mockito.Mockito:withSettings()Lorg/mockito/MockSettings;",
            "method_body": "public static MockSettings withSettings() {\nreturn new MockSettingsImpl().defaultAnswer(RETURNS_DEFAULTS);\n}",
            "method_id": 39
        },
        {
            "method_signature": "org.mockito.internal.creation.MockSettingsImpl:spiedInstance(Ljava/lang/Object;)Lorg/mockito/MockSettings;",
            "method_body": "public MockSettings spiedInstance(Object spiedInstance) {\nthis.spiedInstance = spiedInstance;\n}",
            "method_id": 40
        },
        {
            "method_signature": "org.mockito.internal.creation.MockSettingsImpl:defaultAnswer(Lorg/mockito/stubbing/Answer;)Lorg/mockito/MockSettings;",
            "method_body": "public MockSettings defaultAnswer(Answer defaultAnswer) {\nthis.defaultAnswer = defaultAnswer;\n}",
            "method_id": 41
        },
        {
            "method_signature": "org.mockito.internal.creation.MockSettingsImpl:initiateMockName(Ljava/lang/Class;)V",
            "method_body": "public void initiateMockName(Class classToMock) {\nmockName = new MockName(name, classToMock);\n}",
            "method_id": 42
        },
        {
            "method_signature": "org.mockito.internal.creation.jmock.ClassImposterizer:canImposterise(Ljava/lang/Class;)Z",
            "method_body": "public boolean canImposterise(Class<?> type) {\nreturn !type.isPrimitive() && !Modifier.isFinal(type.getModifiers());\n}",
            "method_id": 43
        },
        {
            "method_signature": "org.mockito.internal.creation.jmock.ClassImposterizer:imposterise(Lorg/mockito/cglib/proxy/MethodInterceptor;Ljava/lang/Class;[Ljava/lang/Class;)Ljava/lang/Object;",
            "method_body": "public <T> T imposterise(final MethodInterceptor interceptor, Class<T> mockedType, Class<?>... ancillaryTypes) {\nsetConstructorsAccessible(mockedType, true);\n}",
            "method_id": 44
        },
        {
            "method_signature": "org.mockito.internal.creation.jmock.ClassImposterizer:createProxyClass(Ljava/lang/Class;[Ljava/lang/Class;)Ljava/lang/Class;",
            "method_body": "private Class<?> createProxyClass(Class<?> mockedType, Class<?>...interfaces) {\nif (mockedType == Object.class) {\n}\n}",
            "method_id": 45
        },
        {
            "method_signature": "org.mockito.internal.creation.jmock.ClassImposterizer:createProxy(Ljava/lang/Class;Lorg/mockito/cglib/proxy/MethodInterceptor;)Ljava/lang/Object;",
            "method_body": "private Object createProxy(Class<?> proxyClass, final MethodInterceptor interceptor) {\nFactory proxy = (Factory) objenesis.newInstance(proxyClass);\n}",
            "method_id": 46
        },
        {
            "method_signature": "org.mockito.internal.util.MockName:<init>(Ljava/lang/String;Ljava/lang/Class;)V",
            "method_body": "public MockName(String mockName, Class classToMock) {\n}",
            "method_id": 47
        },
        {
            "method_signature": "org.mockito.internal.util.MockName:toInstanceName(Ljava/lang/Class;)Ljava/lang/String;",
            "method_body": "private static String toInstanceName(Class<?> clazz) {\nString className = clazz.getSimpleName();\n}",
            "method_id": 48
        },
        {
            "method_signature": "org.mockito.internal.util.MockName:toString()Ljava/lang/String;",
            "method_body": "public String toString() {\nreturn mockName;\n}",
            "method_id": 49
        },
        {
            "method_signature": "org.mockito.internal.MockHandler:<init>(Lorg/mockito/internal/creation/MockSettingsImpl;)V",
            "method_body": "public MockHandler(MockSettingsImpl mockSettings) {\n}",
            "method_id": 50
        },
        {
            "method_signature": "org.mockito.internal.MockHandler:handle(Lorg/mockito/internal/invocation/Invocation;)Ljava/lang/Object;",
            "method_body": "public Object handle(Invocation invocation) throws Throwable {\nif (invocationContainerImpl.hasAnswersForStubbing()) {\n}",
            "method_id": 51
        },
        {
            "method_signature": "org.mockito.internal.invocation.MatchersBinder:bindMatchers(Lorg/mockito/internal/progress/ArgumentMatcherStorage;Lorg/mockito/internal/invocation/Invocation;)Lorg/mockito/internal/invocation/InvocationMatcher;",
            "method_body": "public InvocationMatcher bindMatchers(ArgumentMatcherStorage argumentMatcherStorage, Invocation invocation) {\nList<Matcher> lastMatchers = argumentMatcherStorage.pullMatchers();\n}",
            "method_id": 52
        },
        {
            "method_signature": "org.mockito.internal.invocation.MatchersBinder:validateMatchers(Lorg/mockito/internal/invocation/Invocation;Ljava/util/List;)V",
            "method_body": "private void validateMatchers(Invocation invocation, List<Matcher> matchers) {\nif (!matchers.isEmpty()) {\n}",
            "method_id": 53
        },
        {
            "method_signature": "org.mockito.internal.stubbing.InvocationContainerImpl:<init>(Lorg/mockito/internal/progress/MockingProgress;)V",
            "method_body": "public InvocationContainerImpl(MockingProgress mockingProgress) {\n}",
            "method_id": 54
        },
        {
            "method_signature": "org.mockito.internal.stubbing.InvocationContainerImpl:resetInvocationForPotentialStubbing(Lorg/mockito/internal/invocation/InvocationMatcher;)V",
            "method_body": "public void resetInvocationForPotentialStubbing(InvocationMatcher invocationMatcher) {\nthis.invocationForStubbing = invocationMatcher;\n}",
            "method_id": 55
        },
        {
            "method_signature": "org.mockito.internal.stubbing.InvocationContainerImpl:findAnswerFor(Lorg/mockito/internal/invocation/Invocation;)Lorg/mockito/internal/stubbing/StubbedInvocationMatcher;",
            "method_body": "public StubbedInvocationMatcher findAnswerFor(Invocation invocation) {\nsynchronized (stubbed) {\n}",
            "method_id": 56
        },
        {
            "method_signature": "org.mockito.internal.verification.RegisteredInvocations:add(Lorg/mockito/internal/invocation/Invocation;)V",
            "method_body": "public void add(Invocation invocation) {\ninvocations.add(invocation);\n}",
            "method_id": 57
        },
        {
            "method_signature": "org.mockito.internal.creation.MethodInterceptorFilter:<init>(Lorg/mockito/internal/MockitoInvocationHandler;Lorg/mockito/internal/creation/MockSettingsImpl;)V",
            "method_body": "public MethodInterceptorFilter(MockitoInvocationHandler handler, MockSettingsImpl mockSettings) {\n}",
            "method_id": 58
        },
        {
            "method_signature": "org.mockito.internal.creation.MethodInterceptorFilter:intercept(Ljava/lang/Object;Ljava/lang/reflect/Method;[Ljava/lang/Object;Lorg/mockito/cglib/proxy/MethodProxy;)Ljava/lang/Object;",
            "method_body": "public Object intercept(Object proxy, Method method, Object[] args, MethodProxy methodProxy)\nif (objectMethodsGuru.isEqualsMethod(method)) {\n}",
            "method_id": 59
        },
        {
            "method_signature": "org.mockito.internal.creation.MethodInterceptorFilter:createMockitoMethodProxy(Lorg/mockito/cglib/proxy/MethodProxy;)Lorg/mockito/internal/creation/MockitoMethodProxy;",
            "method_body": "public MockitoMethodProxy createMockitoMethodProxy(MethodProxy methodProxy) {\nif (mockSettings.isSerializable())\n}",
            "method_id": 60
        },
        {
            "method_signature": "org.mockito.internal.creation.MethodInterceptorFilter:createMockitoMethod(Ljava/lang/reflect/Method;)Lorg/mockito/internal/invocation/MockitoMethod;",
            "method_body": "public MockitoMethod createMockitoMethod(Method method) {\nif (mockSettings.isSerializable()) {\n}",
            "method_id": 61
        },
        {
            "method_signature": "org.mockito.internal.creation.cglib.CGLIBHacker:reflectOnCreateInfo(Lorg/mockito/cglib/proxy/MethodProxy;)Ljava/lang/reflect/Field;",
            "method_body": "private Field reflectOnCreateInfo(MethodProxy methodProxy) throws SecurityException, NoSuchFieldException {\nClass cglibMethodProxyClass = methodProxy.getClass();\n}",
            "method_id": 62
        },
        {
            "method_signature": "org.mockito.internal.creation.jmock.SearchingClassLoader:combineLoadersOf([Ljava/lang/Class;)Ljava/lang/ClassLoader;",
            "method_body": "public static ClassLoader combineLoadersOf(Class<?>... classes) {\nreturn combineLoadersOf(classes[0], classes);\n}",
            "method_id": 63
        },
        {
            "method_signature": "org.mockito.internal.creation.jmock.SearchingClassLoader:combineLoadersOf(Ljava/lang/Class;[Ljava/lang/Class;)Ljava/lang/ClassLoader;",
            "method_body": "private static ClassLoader combineLoadersOf(Class<?> first, Class<?>... others) {\nList<ClassLoader> loaders = new ArrayList<ClassLoader>();\n}",
            "method_id": 64
        },
        {
            "method_signature": "org.mockito.internal.creation.jmock.SearchingClassLoader:combine(Ljava/util/List;)Ljava/lang/ClassLoader;",
            "method_body": "private static ClassLoader combine(List<ClassLoader> parentLoaders) {\nClassLoader loader = parentLoaders.get(parentLoaders.size()-1);\n}",
            "method_id": 65
        },
        {
            "method_signature": "org.mockito.internal.creation.jmock.SearchingClassLoader:addIfNewElement(Ljava/util/List;Ljava/lang/ClassLoader;)V",
            "method_body": "private static void addIfNewElement(List<ClassLoader> loaders, ClassLoader c) {\nif (c != null && !loaders.contains(c)) {\n}",
            "method_id": 66
        },
        {
            "method_signature": "org.mockito.internal.util.reflection.AccessibilityChanger:safelyDisableAccess(Ljava/lang/reflect/Field;)V",
            "method_body": "public void safelyDisableAccess(Field field) {\nassert wasAccessible != null;\n}",
            "method_id": 67
        },
        {
            "method_signature": "org.mockito.internal.util.reflection.AccessibilityChanger:enableAccess(Ljava/lang/reflect/Field;)V",
            "method_body": "public void enableAccess(Field field) {\nwasAccessible = field.isAccessible();\n}",
            "method_id": 68
        },
        {
            "method_signature": "org.mockito.internal.invocation.Invocation:<init>(Ljava/lang/Object;Lorg/mockito/internal/invocation/MockitoMethod;[Ljava/lang/Object;ILorg/mockito/internal/invocation/realmethod/RealMethod;)V",
            "method_body": "public Invocation(Object mock, MockitoMethod mockitoMethod, Object[] args, int sequenceNumber, RealMethod realMethod) {\n}",
            "method_id": 69
        },
        {
            "method_signature": "org.mockito.internal.invocation.Invocation:expandVarArgs(Z[Ljava/lang/Object;)[Ljava/lang/Object;",
            "method_body": "private static Object[] expandVarArgs(final boolean isVarArgs, final Object[] args) {\nif (!isVarArgs || args[args.length - 1] != null && !args[args.length - 1].getClass().isArray()) {\n}",
            "method_id": 70
        },
        {
            "method_signature": "org.mockito.internal.invocation.Invocation:toString()Ljava/lang/String;",
            "method_body": "public String toString() {\nreturn toString(argumentsToMatchers(), new PrintSettings());\n}",
            "method_id": 71
        },
        {
            "method_signature": "org.mockito.internal.invocation.Invocation:toString(Ljava/util/List;Lorg/mockito/internal/reporting/PrintSettings;)Ljava/lang/String;",
            "method_body": "protected String toString(List<Matcher> matchers, PrintSettings printSettings) {\nMatchersPrinter matchersPrinter = new MatchersPrinter();\n}",
            "method_id": 72
        },
        {
            "method_signature": "org.mockito.internal.invocation.Invocation:qualifiedMethodName()Ljava/lang/String;",
            "method_body": "private String qualifiedMethodName() {\nreturn new MockUtil().getMockName(mock) + \".\" + method.getName();\n}",
            "method_id": 73
        },
        {
            "method_signature": "org.mockito.internal.invocation.Invocation:argumentsToMatchers()Ljava/util/List;",
            "method_body": "protected List<Matcher> argumentsToMatchers() {\nList<Matcher> matchers = new ArrayList<Matcher>(arguments.length);\n}",
            "method_id": 74
        },
        {
            "method_signature": "org.mockito.internal.invocation.Invocation:callRealMethod()Ljava/lang/Object;",
            "method_body": "public Object callRealMethod() throws Throwable {\nif (isDeclaredOnInterface()) {\n}",
            "method_id": 75
        },
        {
            "method_signature": "org.mockito.internal.invocation.Invocation:toString(Lorg/mockito/internal/reporting/PrintSettings;)Ljava/lang/String;",
            "method_body": "public String toString(PrintSettings printSettings) {\nreturn toString(argumentsToMatchers(), printSettings);\n}",
            "method_id": 76
        },
        {
            "method_signature": "org.mockito.internal.debugging.Location:<init>()V",
            "method_body": "public Location() {\nthis(new StackTraceFilter());\n}",
            "method_id": 77
        },
        {
            "method_signature": "org.mockito.internal.debugging.Location:<init>(Lorg/mockito/internal/exceptions/base/StackTraceFilter;)V",
            "method_body": "public Location(StackTraceFilter filter) {\n}",
            "method_id": 78
        },
        {
            "method_signature": "org.mockito.internal.debugging.Location:toString()Ljava/lang/String;",
            "method_body": "public String toString() {\nreturn where;\n}",
            "method_id": 79
        },
        {
            "method_signature": "org.mockito.internal.exceptions.base.StackTraceFilter:filter([Ljava/lang/StackTraceElement;Z)[Ljava/lang/StackTraceElement;",
            "method_body": "public StackTraceElement[] filter(StackTraceElement[] target, boolean keepTop) {\nList<StackTraceElement> unfilteredStackTrace = Arrays.asList(target);\n}",
            "method_id": 80
        },
        {
            "method_signature": "org.mockito.internal.invocation.InvocationsFinder:findInvocations(Ljava/util/List;Lorg/mockito/internal/invocation/InvocationMatcher;)Ljava/util/List;",
            "method_body": "public List<Invocation> findInvocations(List<Invocation> invocations, InvocationMatcher wanted) {\nreturn ListUtil.filter(invocations, new RemoveNotMatching(wanted));\n}",
            "method_id": 81
        },
        {
            "method_signature": "org.mockito.internal.invocation.InvocationsFinder:findSimilarInvocation(Ljava/util/List;Lorg/mockito/internal/invocation/InvocationMatcher;)Lorg/mockito/internal/invocation/Invocation;",
            "method_body": "public Invocation findSimilarInvocation(List<Invocation> invocations, InvocationMatcher wanted) {\nInvocation firstSimilar = null;\n}",
            "method_id": 82
        },
        {
            "method_signature": "org.mockito.internal.invocation.InvocationMatcher:<init>(Lorg/mockito/internal/invocation/Invocation;Ljava/util/List;)V",
            "method_body": "public InvocationMatcher(Invocation invocation, List<Matcher> matchers) {\n}",
            "method_id": 83
        },
        {
            "method_signature": "org.mockito.internal.invocation.InvocationMatcher:toString()Ljava/lang/String;",
            "method_body": "public String toString() {\nreturn invocation.toString(matchers, new PrintSettings());\n}",
            "method_id": 84
        },
        {
            "method_signature": "org.mockito.internal.invocation.InvocationMatcher:matches(Lorg/mockito/internal/invocation/Invocation;)Z",
            "method_body": "public boolean matches(Invocation actual) {\nreturn invocation.getMock().equals(actual.getMock())\n}",
            "method_id": 85
        },
        {
            "method_signature": "org.mockito.internal.invocation.InvocationMatcher:toString(Lorg/mockito/internal/reporting/PrintSettings;)Ljava/lang/String;",
            "method_body": "public String toString(PrintSettings printSettings) {\nreturn invocation.toString(matchers, printSettings);\n}",
            "method_id": 86
        },
        {
            "method_signature": "org.mockito.internal.matchers.Equals:<init>(Ljava/lang/Object;)V",
            "method_body": "public Equals(Object wanted) {\n}",
            "method_id": 87
        },
        {
            "method_signature": "org.mockito.internal.matchers.Equals:matches(Ljava/lang/Object;)Z",
            "method_body": "public boolean matches(Object actual) {\nreturn Equality.areEqual(this.wanted, actual);\n}",
            "method_id": 88
        },
        {
            "method_signature": "org.mockito.internal.matchers.Equals:describeTo(Lorg/hamcrest/Description;)V",
            "method_body": "public void describeTo(Description description) {\ndescription.appendText(describe(wanted));\n}",
            "method_id": 89
        },
        {
            "method_signature": "org.mockito.internal.matchers.Equals:describe(Ljava/lang/Object;)Ljava/lang/String;",
            "method_body": "public String describe(Object object) {\nString text = quoting();\n}",
            "method_id": 90
        },
        {
            "method_signature": "org.mockito.internal.matchers.Equals:quoting()Ljava/lang/String;",
            "method_body": "private String quoting() {\nif (wanted instanceof String) {\n}",
            "method_id": 91
        },
        {
            "method_signature": "org.mockito.internal.invocation.ArgumentsComparator:argumentsMatch(Lorg/mockito/internal/invocation/InvocationMatcher;Lorg/mockito/internal/invocation/Invocation;)Z",
            "method_body": "public boolean argumentsMatch(InvocationMatcher invocationMatcher, Invocation actual) {\nObject[] actualArgs = actual.getArguments();\n}",
            "method_id": 92
        },
        {
            "method_signature": "org.mockito.internal.invocation.ArgumentsComparator:argumentsMatch(Lorg/mockito/internal/invocation/InvocationMatcher;[Ljava/lang/Object;)Z",
            "method_body": "public boolean argumentsMatch(InvocationMatcher invocationMatcher, Object[] actualArgs) {\nif (actualArgs.length != invocationMatcher.getMatchers().size()) {\n}",
            "method_id": 93
        },
        {
            "method_signature": "org.mockito.internal.invocation.ArgumentsComparator:varArgsMatch(Lorg/mockito/internal/invocation/InvocationMatcher;Lorg/mockito/internal/invocation/Invocation;)Z",
            "method_body": "private boolean varArgsMatch(InvocationMatcher invocationMatcher, Invocation actual) {\nif (!actual.getMethod().isVarArgs()) {\n}",
            "method_id": 94
        },
        {
            "method_signature": "org.mockito.internal.invocation.InvocationsFinder$RemoveNotMatching:<init>(Lorg/mockito/internal/invocation/InvocationsFinder;Lorg/mockito/internal/invocation/InvocationMatcher;)V",
            "method_body": "private RemoveNotMatching(InvocationMatcher wanted) {\n}",
            "method_id": 95
        },
        {
            "method_signature": "org.mockito.internal.util.ListUtil:filter(Ljava/util/Collection;Lorg/mockito/internal/util/ListUtil$Filter;)Ljava/util/LinkedList;",
            "method_body": "public static <T> LinkedList<T> filter(Collection<T> collection, Filter<T> filter) {\nLinkedList<T> filtered = new LinkedList<T>();\n}",
            "method_id": 96
        },
        {
            "method_signature": "org.mockito.internal.reporting.PrintSettings:extraTypeInfoFor(I)Z",
            "method_body": "public boolean extraTypeInfoFor(int argumentIndex) {\nreturn withTypeInfo.contains(argumentIndex);\n}",
            "method_id": 97
        },
        {
            "method_signature": "org.mockito.internal.matchers.MatchersPrinter:applyPrintSettings(Ljava/util/List;Lorg/mockito/internal/reporting/PrintSettings;)Ljava/util/List;",
            "method_body": "private List<SelfDescribing> applyPrintSettings(List<Matcher> matchers, PrintSettings printSettings) {\nList<SelfDescribing> withPrintSettings = new LinkedList<SelfDescribing>();\n}",
            "method_id": 98
        },
        {
            "method_signature": "org.mockito.internal.creation.AbstractMockitoMethodProxy:invokeSuper(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;",
            "method_body": "public Object invokeSuper(Object target, Object[] arguments) throws Throwable {\nreturn getMethodProxy().invokeSuper(target, arguments);\n}",
            "method_id": 99
        },
        {
            "method_signature": "org.mockito.internal.creation.DelegatingMockitoMethodProxy:<init>(Lorg/mockito/cglib/proxy/MethodProxy;)V",
            "method_body": "public DelegatingMockitoMethodProxy(MethodProxy methodProxy) {\n}",
            "method_id": 100
        },
        {
            "method_signature": "org.mockito.internal.matchers.Equality:areEqual(Ljava/lang/Object;Ljava/lang/Object;)Z",
            "method_body": "public static boolean areEqual(Object o1, Object o2) {\nif (o1 == null || o2 == null) {\n}",
            "method_id": 101
        },
        {
            "method_signature": "org.mockito.internal.creation.DelegatingMethod:<init>(Ljava/lang/reflect/Method;)V",
            "method_body": "public DelegatingMethod(Method method) {\n}",
            "method_id": 102
        },
        {
            "method_signature": "org.mockito.internal.invocation.realmethod.FilteredCGLIBProxyRealMethod:<init>(Lorg/mockito/internal/creation/MockitoMethodProxy;)V",
            "method_body": "public FilteredCGLIBProxyRealMethod(MockitoMethodProxy methodProxy) {\nthis(new CGLIBProxyRealMethod(methodProxy));\n}",
            "method_id": 103
        },
        {
            "method_signature": "org.mockito.internal.invocation.realmethod.FilteredCGLIBProxyRealMethod:<init>(Lorg/mockito/internal/invocation/realmethod/RealMethod;)V",
            "method_body": "public FilteredCGLIBProxyRealMethod(RealMethod realMethod) {\n}",
            "method_id": 104
        },
        {
            "method_signature": "org.mockito.internal.invocation.realmethod.FilteredCGLIBProxyRealMethod:invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;",
            "method_body": "public Object invoke(Object target, Object[] arguments) throws Throwable {\nreturn realMethod.invoke(target, arguments);\n}",
            "method_id": 105
        },
        {
            "method_signature": "org.mockito.internal.invocation.realmethod.CGLIBProxyRealMethod:<init>(Lorg/mockito/internal/creation/MockitoMethodProxy;)V",
            "method_body": "public CGLIBProxyRealMethod(MockitoMethodProxy methodProxy) {\n}",
            "method_id": 106
        },
        {
            "method_signature": "org.mockito.internal.invocation.realmethod.CGLIBProxyRealMethod:invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;",
            "method_body": "public Object invoke(Object target, Object[] arguments) throws Throwable {\nreturn methodProxy.invokeSuper(target, arguments);\n}",
            "method_id": 107
        },
        {
            "method_signature": "org.mockito.internal.progress.SequenceNumber:next()I",
            "method_body": "public static synchronized int next() {\nreturn sequenceNumber++;\n}",
            "method_id": 108
        },
        {
            "method_signature": "org.mockito.internal.stubbing.OngoingStubbingImpl:<init>(Lorg/mockito/internal/stubbing/InvocationContainerImpl;)V",
            "method_body": "public OngoingStubbingImpl(InvocationContainerImpl invocationContainerImpl) {\n}",
            "method_id": 109
        },
        {
            "method_signature": "org.mockito.internal.util.StringJoiner:join([Ljava/lang/Object;)Ljava/lang/String;",
            "method_body": "public static String join(Object ... linesToBreak) {\nStringBuilder out = new StringBuilder(\"\\n\");\n}",
            "method_id": 110
        },
        {
            "method_signature": "org.mockito.internal.exceptions.base.ConditionalStackTraceFilter:filter(Ljava/lang/Throwable;)V",
            "method_body": "public void filter(Throwable throwable) {\nif (!config.cleansStackTrace()) {\n}",
            "method_id": 111
        },
        {
            "method_signature": "org.mockito.internal.verification.VerificationModeFactory:times(I)Lorg/mockito/internal/verification/Times;",
            "method_body": "public static Times times(int wantedNumberOfInvocations) {\nreturn new Times(wantedNumberOfInvocations);\n}",
            "method_id": 112
        },
        {
            "method_signature": "org.mockito.internal.verification.Times:<init>(I)V",
            "method_body": "public Times(int wantedNumberOfInvocations) {\n}",
            "method_id": 113
        },
        {
            "method_signature": "org.mockito.internal.verification.Times:verify(Lorg/mockito/internal/verification/api/VerificationData;)V",
            "method_body": "public void verify(VerificationData data) {\nif (wantedCount > 0) {\n}",
            "method_id": 114
        },
        {
            "method_signature": "org.mockito.internal.verification.MockAwareVerificationMode:<init>(Ljava/lang/Object;Lorg/mockito/verification/VerificationMode;)V",
            "method_body": "public MockAwareVerificationMode(Object mock, VerificationMode mode) {\n}",
            "method_id": 115
        },
        {
            "method_signature": "org.mockito.internal.verification.MockAwareVerificationMode:verify(Lorg/mockito/internal/verification/api/VerificationData;)V",
            "method_body": "public void verify(VerificationData data) {\nmode.verify(data);\n}",
            "method_id": 116
        },
        {
            "method_signature": "org.mockito.internal.debugging.Localized:<init>(Ljava/lang/Object;)V",
            "method_body": "public Localized(T object) {\n}",
            "method_id": 117
        },
        {
            "method_signature": "org.mockito.internal.verification.VerificationDataImpl:<init>(Lorg/mockito/internal/stubbing/InvocationContainer;Lorg/mockito/internal/invocation/InvocationMatcher;)V",
            "method_body": "public VerificationDataImpl(InvocationContainer invocations, InvocationMatcher wanted) {\n}",
            "method_id": 118
        },
        {
            "method_signature": "org.mockito.internal.verification.VerificationDataImpl:assertWantedIsVerifiable()V",
            "method_body": "void assertWantedIsVerifiable() {\nif (wanted == null) {\n}",
            "method_id": 119
        },
        {
            "method_signature": "org.mockito.internal.verification.checkers.MissingInvocationChecker:<init>()V",
            "method_body": "public MissingInvocationChecker() {\nthis(new InvocationsFinder(), new Reporter());\n}",
            "method_id": 120
        },
        {
            "method_signature": "org.mockito.internal.verification.checkers.MissingInvocationChecker:<init>(Lorg/mockito/internal/invocation/InvocationsFinder;Lorg/mockito/exceptions/Reporter;)V",
            "method_body": "MissingInvocationChecker(InvocationsFinder finder, Reporter reporter) {\n}",
            "method_id": 121
        },
        {
            "method_signature": "org.mockito.internal.verification.checkers.MissingInvocationChecker:check(Ljava/util/List;Lorg/mockito/internal/invocation/InvocationMatcher;)V",
            "method_body": "public void check(List<Invocation> invocations, InvocationMatcher wanted) {\nList<Invocation> actualInvocations = finder.findInvocations(invocations, wanted);\n}",
            "method_id": 122
        },
        {
            "method_signature": "org.mockito.internal.util.reflection.LenientCopyTool:copyToMock(Ljava/lang/Object;Ljava/lang/Object;)V",
            "method_body": "public <T> void copyToMock(T from, T mock) {\ncopy(from, mock, from.getClass(), mock.getClass().getSuperclass());\n}",
            "method_id": 123
        },
        {
            "method_signature": "org.mockito.internal.util.reflection.LenientCopyTool:copy(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/Class;)V",
            "method_body": "private <T> void copy(T from, T to, Class fromClazz, Class toClass) {\nwhile (fromClazz != Object.class) {\n}",
            "method_id": 124
        },
        {
            "method_signature": "org.mockito.internal.util.reflection.LenientCopyTool:copyValues(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Class;)V",
            "method_body": "private <T> void copyValues(T from, T mock, Class classFrom) {\nField[] fields = classFrom.getDeclaredFields();\n}",
            "method_id": 125
        },
        {
            "method_signature": "org.mockito.internal.util.reflection.FieldCopier:copyValue(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/reflect/Field;)V",
            "method_body": "public <T> void copyValue(T from, T to, Field field) throws IllegalAccessException {\nObject value = field.get(from);\n}",
            "method_id": 126
        },
        {
            "method_signature": "org.mockito.internal.verification.argumentmatching.ArgumentMatchingTool:safelyMatches(Lorg/hamcrest/Matcher;Ljava/lang/Object;)Z",
            "method_body": "private boolean safelyMatches(Matcher m, Object arg) {\nreturn m.matches(arg);\n}",
            "method_id": 127
        },
        {
            "method_signature": "org.mockito.internal.verification.argumentmatching.ArgumentMatchingTool:toStringEquals(Lorg/hamcrest/Matcher;Ljava/lang/Object;)Z",
            "method_body": "private boolean toStringEquals(Matcher m, Object arg) {\nreturn StringDescription.toString(m).equals(arg == null? \"null\" : arg.toString());\n}",
            "method_id": 128
        },
        {
            "method_signature": "org.mockito.internal.reporting.SmartPrinter:<init>(Lorg/mockito/internal/reporting/PrintingFriendlyInvocation;Lorg/mockito/internal/reporting/PrintingFriendlyInvocation;[Ljava/lang/Integer;)V",
            "method_body": "public SmartPrinter(PrintingFriendlyInvocation wanted, PrintingFriendlyInvocation actual, Integer ... indexesOfMatchersToBeDescribedWithExtraTypeInfo) {\n}",
            "method_id": 129
        },
        {
            "method_signature": "org.mockito.exceptions.verification.junit.JUnitTool:createArgumentsAreDifferentException(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/AssertionError;",
            "method_body": "public static AssertionError createArgumentsAreDifferentException(String message, String wanted, String actual)  {\nClass<?> clazz = Class.forName(\"org.mockito.exceptions.verification.junit.ArgumentsAreDifferent\");\n}",
            "method_id": 130
        },
        {
            "method_signature": "org.mockito.exceptions.verification.junit.ArgumentsAreDifferent:<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V",
            "method_body": "public ArgumentsAreDifferent(String message, String wanted, String actual) {\nsuper(message, wanted, actual);\n}",
            "method_id": 131
        }
    ]
}